STM32F41x register Word generation reference file for Mecrisp-Stellaris Forth by Matthias Koch.
Uses registers.xsl and your config.xml file.
Do not load this file, just copy and paste what you need into your source file.
Written by Terry Porter "terry@tjporter.com.au" 2016. Released under the GPL V2

      
      
################################### RNG ###################################
RNG_CR (read-write)
$00000000 CONSTANT RESET_RNG_CR 
 %1  3 lshift RNG_CR bis!        \ RNG_IE	Bit 3	 Width 1
 %1  2 lshift RNG_CR bis!        \ RNG_RNGEN	Bit 2	 Width 1
\ RNG_CR Register BitField Fetch Words  
: RNG_IE@ RNG_CR @ %1  3 lshift and 3 rshift ; 
: RNG_RNGEN@ RNG_CR @ %1  2 lshift and 2 rshift ; 

RNG_SR ()
$00000000 CONSTANT RESET_RNG_SR 
 %1  6 lshift RNG_SR bis!        \ RNG_SEIS	Bit 6	 Width 1
 %1  5 lshift RNG_SR bis!        \ RNG_CEIS	Bit 5	 Width 1
 %1  2 lshift RNG_SR bis!        \ RNG_SECS	Bit 2	 Width 1
 %1  1 lshift RNG_SR bis!        \ RNG_CECS	Bit 1	 Width 1
 %1  0 lshift RNG_SR bis!        \ RNG_DRDY	Bit 0	 Width 1
\ RNG_SR Register BitField Fetch Words  
: RNG_SEIS@ RNG_SR @ %1  6 lshift and 6 rshift ; 
: RNG_CEIS@ RNG_SR @ %1  5 lshift and 5 rshift ; 
: RNG_SECS@ RNG_SR @ %1  2 lshift and 2 rshift ; 
: RNG_CECS@ RNG_SR @ %1  1 lshift and 1 rshift ; 
: RNG_DRDY@ RNG_SR @ %1  0 lshift and 0 rshift ; 

RNG_DR (read-only)
$00000000 CONSTANT RESET_RNG_DR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RNG_DR bis!        \ RNG_RNDATA	Bit 0	 Width 32
\ RNG_DR Register BitField Fetch Words  
: RNG_RNDATA@ RNG_DR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### HASH ###################################
HASH_CR ()
$00000000 CONSTANT RESET_HASH_CR 
 %1  16 lshift HASH_CR bis!        \ HASH_LKEY	Bit 16	 Width 1
 %1  12 lshift HASH_CR bis!        \ HASH_DINNE	Bit 12	 Width 1
 %xxxx  8 lshift HASH_CR bis!        \ HASH_NBW	Bit 8	 Width 4
 %1  7 lshift HASH_CR bis!        \ HASH_ALGO	Bit 7	 Width 1
 %1  6 lshift HASH_CR bis!        \ HASH_MODE	Bit 6	 Width 1
 %xx  4 lshift HASH_CR bis!        \ HASH_DATATYPE	Bit 4	 Width 2
 %1  3 lshift HASH_CR bis!        \ HASH_DMAE	Bit 3	 Width 1
 %1  2 lshift HASH_CR bis!        \ HASH_INIT	Bit 2	 Width 1
\ HASH_CR Register BitField Fetch Words  
: HASH_LKEY@ HASH_CR @ %1  16 lshift and 16 rshift ; 
: HASH_DINNE@ HASH_CR @ %1  12 lshift and 12 rshift ; 
: HASH_NBW@ HASH_CR @ %1111  8 lshift and 8 rshift ; 
: HASH_ALGO@ HASH_CR @ %1  7 lshift and 7 rshift ; 
: HASH_MODE@ HASH_CR @ %1  6 lshift and 6 rshift ; 
: HASH_DATATYPE@ HASH_CR @ %11  4 lshift and 4 rshift ; 
: HASH_DMAE@ HASH_CR @ %1  3 lshift and 3 rshift ; 
: HASH_INIT@ HASH_CR @ %1  2 lshift and 2 rshift ; 

HASH_DIN (read-write)
$00000000 CONSTANT RESET_HASH_DIN 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_DIN bis!        \ HASH_DATAIN	Bit 0	 Width 32
\ HASH_DIN Register BitField Fetch Words  
: HASH_DATAIN@ HASH_DIN @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_STR ()
$00000000 CONSTANT RESET_HASH_STR 
 %1  8 lshift HASH_STR bis!        \ HASH_DCAL	Bit 8	 Width 1
 %xxxxx  0 lshift HASH_STR bis!        \ HASH_NBLW	Bit 0	 Width 5
\ HASH_STR Register BitField Fetch Words  
: HASH_DCAL@ HASH_STR @ %1  8 lshift and 8 rshift ; 
: HASH_NBLW@ HASH_STR @ %11111  0 lshift and 0 rshift ; 

HASH_HR0 (read-only)
$00000000 CONSTANT RESET_HASH_HR0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_HR0 bis!        \ HASH_H0	Bit 0	 Width 32
\ HASH_HR0 Register BitField Fetch Words  
: HASH_H0@ HASH_HR0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_HR1 (read-only)
$00000000 CONSTANT RESET_HASH_HR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_HR1 bis!        \ HASH_H1	Bit 0	 Width 32
\ HASH_HR1 Register BitField Fetch Words  
: HASH_H1@ HASH_HR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_HR2 (read-only)
$00000000 CONSTANT RESET_HASH_HR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_HR2 bis!        \ HASH_H2	Bit 0	 Width 32
\ HASH_HR2 Register BitField Fetch Words  
: HASH_H2@ HASH_HR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_HR3 (read-only)
$00000000 CONSTANT RESET_HASH_HR3 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_HR3 bis!        \ HASH_H3	Bit 0	 Width 32
\ HASH_HR3 Register BitField Fetch Words  
: HASH_H3@ HASH_HR3 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_HR4 (read-only)
$00000000 CONSTANT RESET_HASH_HR4 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_HR4 bis!        \ HASH_H4	Bit 0	 Width 32
\ HASH_HR4 Register BitField Fetch Words  
: HASH_H4@ HASH_HR4 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_IMR (read-write)
$00000000 CONSTANT RESET_HASH_IMR 
 %1  1 lshift HASH_IMR bis!        \ HASH_DCIE	Bit 1	 Width 1
 %1  0 lshift HASH_IMR bis!        \ HASH_DINIE	Bit 0	 Width 1
\ HASH_IMR Register BitField Fetch Words  
: HASH_DCIE@ HASH_IMR @ %1  1 lshift and 1 rshift ; 
: HASH_DINIE@ HASH_IMR @ %1  0 lshift and 0 rshift ; 

HASH_SR ()
$00000001 CONSTANT RESET_HASH_SR 
 %1  3 lshift HASH_SR bis!        \ HASH_BUSY	Bit 3	 Width 1
 %1  2 lshift HASH_SR bis!        \ HASH_DMAS	Bit 2	 Width 1
 %1  1 lshift HASH_SR bis!        \ HASH_DCIS	Bit 1	 Width 1
 %1  0 lshift HASH_SR bis!        \ HASH_DINIS	Bit 0	 Width 1
\ HASH_SR Register BitField Fetch Words  
: HASH_BUSY@ HASH_SR @ %1  3 lshift and 3 rshift ; 
: HASH_DMAS@ HASH_SR @ %1  2 lshift and 2 rshift ; 
: HASH_DCIS@ HASH_SR @ %1  1 lshift and 1 rshift ; 
: HASH_DINIS@ HASH_SR @ %1  0 lshift and 0 rshift ; 

HASH_CSR0 (read-write)
$00000000 CONSTANT RESET_HASH_CSR0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR0 bis!        \ HASH_CSR0	Bit 0	 Width 32
\ HASH_CSR0 Register BitField Fetch Words  
: HASH_CSR0@ HASH_CSR0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR1 (read-write)
$00000000 CONSTANT RESET_HASH_CSR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR1 bis!        \ HASH_CSR1	Bit 0	 Width 32
\ HASH_CSR1 Register BitField Fetch Words  
: HASH_CSR1@ HASH_CSR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR2 (read-write)
$00000000 CONSTANT RESET_HASH_CSR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR2 bis!        \ HASH_CSR2	Bit 0	 Width 32
\ HASH_CSR2 Register BitField Fetch Words  
: HASH_CSR2@ HASH_CSR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR3 (read-write)
$00000000 CONSTANT RESET_HASH_CSR3 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR3 bis!        \ HASH_CSR3	Bit 0	 Width 32
\ HASH_CSR3 Register BitField Fetch Words  
: HASH_CSR3@ HASH_CSR3 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR4 (read-write)
$00000000 CONSTANT RESET_HASH_CSR4 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR4 bis!        \ HASH_CSR4	Bit 0	 Width 32
\ HASH_CSR4 Register BitField Fetch Words  
: HASH_CSR4@ HASH_CSR4 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR5 (read-write)
$00000000 CONSTANT RESET_HASH_CSR5 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR5 bis!        \ HASH_CSR5	Bit 0	 Width 32
\ HASH_CSR5 Register BitField Fetch Words  
: HASH_CSR5@ HASH_CSR5 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR6 (read-write)
$00000000 CONSTANT RESET_HASH_CSR6 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR6 bis!        \ HASH_CSR6	Bit 0	 Width 32
\ HASH_CSR6 Register BitField Fetch Words  
: HASH_CSR6@ HASH_CSR6 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR7 (read-write)
$00000000 CONSTANT RESET_HASH_CSR7 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR7 bis!        \ HASH_CSR7	Bit 0	 Width 32
\ HASH_CSR7 Register BitField Fetch Words  
: HASH_CSR7@ HASH_CSR7 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR8 (read-write)
$00000000 CONSTANT RESET_HASH_CSR8 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR8 bis!        \ HASH_CSR8	Bit 0	 Width 32
\ HASH_CSR8 Register BitField Fetch Words  
: HASH_CSR8@ HASH_CSR8 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR9 (read-write)
$00000000 CONSTANT RESET_HASH_CSR9 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR9 bis!        \ HASH_CSR9	Bit 0	 Width 32
\ HASH_CSR9 Register BitField Fetch Words  
: HASH_CSR9@ HASH_CSR9 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR10 (read-write)
$00000000 CONSTANT RESET_HASH_CSR10 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR10 bis!        \ HASH_CSR10	Bit 0	 Width 32
\ HASH_CSR10 Register BitField Fetch Words  
: HASH_CSR10@ HASH_CSR10 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR11 (read-write)
$00000000 CONSTANT RESET_HASH_CSR11 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR11 bis!        \ HASH_CSR11	Bit 0	 Width 32
\ HASH_CSR11 Register BitField Fetch Words  
: HASH_CSR11@ HASH_CSR11 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR12 (read-write)
$00000000 CONSTANT RESET_HASH_CSR12 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR12 bis!        \ HASH_CSR12	Bit 0	 Width 32
\ HASH_CSR12 Register BitField Fetch Words  
: HASH_CSR12@ HASH_CSR12 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR13 (read-write)
$00000000 CONSTANT RESET_HASH_CSR13 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR13 bis!        \ HASH_CSR13	Bit 0	 Width 32
\ HASH_CSR13 Register BitField Fetch Words  
: HASH_CSR13@ HASH_CSR13 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR14 (read-write)
$00000000 CONSTANT RESET_HASH_CSR14 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR14 bis!        \ HASH_CSR14	Bit 0	 Width 32
\ HASH_CSR14 Register BitField Fetch Words  
: HASH_CSR14@ HASH_CSR14 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR15 (read-write)
$00000000 CONSTANT RESET_HASH_CSR15 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR15 bis!        \ HASH_CSR15	Bit 0	 Width 32
\ HASH_CSR15 Register BitField Fetch Words  
: HASH_CSR15@ HASH_CSR15 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR16 (read-write)
$00000000 CONSTANT RESET_HASH_CSR16 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR16 bis!        \ HASH_CSR16	Bit 0	 Width 32
\ HASH_CSR16 Register BitField Fetch Words  
: HASH_CSR16@ HASH_CSR16 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR17 (read-write)
$00000000 CONSTANT RESET_HASH_CSR17 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR17 bis!        \ HASH_CSR17	Bit 0	 Width 32
\ HASH_CSR17 Register BitField Fetch Words  
: HASH_CSR17@ HASH_CSR17 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR18 (read-write)
$00000000 CONSTANT RESET_HASH_CSR18 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR18 bis!        \ HASH_CSR18	Bit 0	 Width 32
\ HASH_CSR18 Register BitField Fetch Words  
: HASH_CSR18@ HASH_CSR18 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR19 (read-write)
$00000000 CONSTANT RESET_HASH_CSR19 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR19 bis!        \ HASH_CSR19	Bit 0	 Width 32
\ HASH_CSR19 Register BitField Fetch Words  
: HASH_CSR19@ HASH_CSR19 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR20 (read-write)
$00000000 CONSTANT RESET_HASH_CSR20 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR20 bis!        \ HASH_CSR20	Bit 0	 Width 32
\ HASH_CSR20 Register BitField Fetch Words  
: HASH_CSR20@ HASH_CSR20 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR21 (read-write)
$00000000 CONSTANT RESET_HASH_CSR21 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR21 bis!        \ HASH_CSR21	Bit 0	 Width 32
\ HASH_CSR21 Register BitField Fetch Words  
: HASH_CSR21@ HASH_CSR21 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR22 (read-write)
$00000000 CONSTANT RESET_HASH_CSR22 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR22 bis!        \ HASH_CSR22	Bit 0	 Width 32
\ HASH_CSR22 Register BitField Fetch Words  
: HASH_CSR22@ HASH_CSR22 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR23 (read-write)
$00000000 CONSTANT RESET_HASH_CSR23 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR23 bis!        \ HASH_CSR23	Bit 0	 Width 32
\ HASH_CSR23 Register BitField Fetch Words  
: HASH_CSR23@ HASH_CSR23 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR24 (read-write)
$00000000 CONSTANT RESET_HASH_CSR24 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR24 bis!        \ HASH_CSR24	Bit 0	 Width 32
\ HASH_CSR24 Register BitField Fetch Words  
: HASH_CSR24@ HASH_CSR24 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR25 (read-write)
$00000000 CONSTANT RESET_HASH_CSR25 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR25 bis!        \ HASH_CSR25	Bit 0	 Width 32
\ HASH_CSR25 Register BitField Fetch Words  
: HASH_CSR25@ HASH_CSR25 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR26 (read-write)
$00000000 CONSTANT RESET_HASH_CSR26 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR26 bis!        \ HASH_CSR26	Bit 0	 Width 32
\ HASH_CSR26 Register BitField Fetch Words  
: HASH_CSR26@ HASH_CSR26 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR27 (read-write)
$00000000 CONSTANT RESET_HASH_CSR27 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR27 bis!        \ HASH_CSR27	Bit 0	 Width 32
\ HASH_CSR27 Register BitField Fetch Words  
: HASH_CSR27@ HASH_CSR27 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR28 (read-write)
$00000000 CONSTANT RESET_HASH_CSR28 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR28 bis!        \ HASH_CSR28	Bit 0	 Width 32
\ HASH_CSR28 Register BitField Fetch Words  
: HASH_CSR28@ HASH_CSR28 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR29 (read-write)
$00000000 CONSTANT RESET_HASH_CSR29 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR29 bis!        \ HASH_CSR29	Bit 0	 Width 32
\ HASH_CSR29 Register BitField Fetch Words  
: HASH_CSR29@ HASH_CSR29 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR30 (read-write)
$00000000 CONSTANT RESET_HASH_CSR30 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR30 bis!        \ HASH_CSR30	Bit 0	 Width 32
\ HASH_CSR30 Register BitField Fetch Words  
: HASH_CSR30@ HASH_CSR30 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR31 (read-write)
$00000000 CONSTANT RESET_HASH_CSR31 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR31 bis!        \ HASH_CSR31	Bit 0	 Width 32
\ HASH_CSR31 Register BitField Fetch Words  
: HASH_CSR31@ HASH_CSR31 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR32 (read-write)
$00000000 CONSTANT RESET_HASH_CSR32 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR32 bis!        \ HASH_CSR32	Bit 0	 Width 32
\ HASH_CSR32 Register BitField Fetch Words  
: HASH_CSR32@ HASH_CSR32 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR33 (read-write)
$00000000 CONSTANT RESET_HASH_CSR33 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR33 bis!        \ HASH_CSR33	Bit 0	 Width 32
\ HASH_CSR33 Register BitField Fetch Words  
: HASH_CSR33@ HASH_CSR33 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR34 (read-write)
$00000000 CONSTANT RESET_HASH_CSR34 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR34 bis!        \ HASH_CSR34	Bit 0	 Width 32
\ HASH_CSR34 Register BitField Fetch Words  
: HASH_CSR34@ HASH_CSR34 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR35 (read-write)
$00000000 CONSTANT RESET_HASH_CSR35 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR35 bis!        \ HASH_CSR35	Bit 0	 Width 32
\ HASH_CSR35 Register BitField Fetch Words  
: HASH_CSR35@ HASH_CSR35 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR36 (read-write)
$00000000 CONSTANT RESET_HASH_CSR36 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR36 bis!        \ HASH_CSR36	Bit 0	 Width 32
\ HASH_CSR36 Register BitField Fetch Words  
: HASH_CSR36@ HASH_CSR36 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR37 (read-write)
$00000000 CONSTANT RESET_HASH_CSR37 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR37 bis!        \ HASH_CSR37	Bit 0	 Width 32
\ HASH_CSR37 Register BitField Fetch Words  
: HASH_CSR37@ HASH_CSR37 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR38 (read-write)
$00000000 CONSTANT RESET_HASH_CSR38 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR38 bis!        \ HASH_CSR38	Bit 0	 Width 32
\ HASH_CSR38 Register BitField Fetch Words  
: HASH_CSR38@ HASH_CSR38 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR39 (read-write)
$00000000 CONSTANT RESET_HASH_CSR39 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR39 bis!        \ HASH_CSR39	Bit 0	 Width 32
\ HASH_CSR39 Register BitField Fetch Words  
: HASH_CSR39@ HASH_CSR39 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR40 (read-write)
$00000000 CONSTANT RESET_HASH_CSR40 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR40 bis!        \ HASH_CSR40	Bit 0	 Width 32
\ HASH_CSR40 Register BitField Fetch Words  
: HASH_CSR40@ HASH_CSR40 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR41 (read-write)
$00000000 CONSTANT RESET_HASH_CSR41 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR41 bis!        \ HASH_CSR41	Bit 0	 Width 32
\ HASH_CSR41 Register BitField Fetch Words  
: HASH_CSR41@ HASH_CSR41 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR42 (read-write)
$00000000 CONSTANT RESET_HASH_CSR42 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR42 bis!        \ HASH_CSR42	Bit 0	 Width 32
\ HASH_CSR42 Register BitField Fetch Words  
: HASH_CSR42@ HASH_CSR42 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR43 (read-write)
$00000000 CONSTANT RESET_HASH_CSR43 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR43 bis!        \ HASH_CSR43	Bit 0	 Width 32
\ HASH_CSR43 Register BitField Fetch Words  
: HASH_CSR43@ HASH_CSR43 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR44 (read-write)
$00000000 CONSTANT RESET_HASH_CSR44 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR44 bis!        \ HASH_CSR44	Bit 0	 Width 32
\ HASH_CSR44 Register BitField Fetch Words  
: HASH_CSR44@ HASH_CSR44 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR45 (read-write)
$00000000 CONSTANT RESET_HASH_CSR45 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR45 bis!        \ HASH_CSR45	Bit 0	 Width 32
\ HASH_CSR45 Register BitField Fetch Words  
: HASH_CSR45@ HASH_CSR45 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR46 (read-write)
$00000000 CONSTANT RESET_HASH_CSR46 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR46 bis!        \ HASH_CSR46	Bit 0	 Width 32
\ HASH_CSR46 Register BitField Fetch Words  
: HASH_CSR46@ HASH_CSR46 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR47 (read-write)
$00000000 CONSTANT RESET_HASH_CSR47 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR47 bis!        \ HASH_CSR47	Bit 0	 Width 32
\ HASH_CSR47 Register BitField Fetch Words  
: HASH_CSR47@ HASH_CSR47 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR48 (read-write)
$00000000 CONSTANT RESET_HASH_CSR48 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR48 bis!        \ HASH_CSR48	Bit 0	 Width 32
\ HASH_CSR48 Register BitField Fetch Words  
: HASH_CSR48@ HASH_CSR48 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR49 (read-write)
$00000000 CONSTANT RESET_HASH_CSR49 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR49 bis!        \ HASH_CSR49	Bit 0	 Width 32
\ HASH_CSR49 Register BitField Fetch Words  
: HASH_CSR49@ HASH_CSR49 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

HASH_CSR50 (read-write)
$00000000 CONSTANT RESET_HASH_CSR50 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift HASH_CSR50 bis!        \ HASH_CSR50	Bit 0	 Width 32
\ HASH_CSR50 Register BitField Fetch Words  
: HASH_CSR50@ HASH_CSR50 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### CRYP ###################################
CRYP_CR ()
$00000000 CONSTANT RESET_CRYP_CR 
 %1  15 lshift CRYP_CR bis!        \ CRYP_CRYPEN	Bit 15	 Width 1
 %1  14 lshift CRYP_CR bis!        \ CRYP_FFLUSH	Bit 14	 Width 1
 %xx  8 lshift CRYP_CR bis!        \ CRYP_KEYSIZE	Bit 8	 Width 2
 %xx  6 lshift CRYP_CR bis!        \ CRYP_DATATYPE	Bit 6	 Width 2
 %xxx  3 lshift CRYP_CR bis!        \ CRYP_ALGOMODE	Bit 3	 Width 3
 %1  2 lshift CRYP_CR bis!        \ CRYP_ALGODIR	Bit 2	 Width 1
\ CRYP_CR Register BitField Fetch Words  
: CRYP_CRYPEN@ CRYP_CR @ %1  15 lshift and 15 rshift ; 
: CRYP_FFLUSH@ CRYP_CR @ %1  14 lshift and 14 rshift ; 
: CRYP_KEYSIZE@ CRYP_CR @ %11  8 lshift and 8 rshift ; 
: CRYP_DATATYPE@ CRYP_CR @ %11  6 lshift and 6 rshift ; 
: CRYP_ALGOMODE@ CRYP_CR @ %111  3 lshift and 3 rshift ; 
: CRYP_ALGODIR@ CRYP_CR @ %1  2 lshift and 2 rshift ; 

CRYP_SR (read-only)
$00000003 CONSTANT RESET_CRYP_SR 
 %1  4 lshift CRYP_SR bis!        \ CRYP_BUSY	Bit 4	 Width 1
 %1  3 lshift CRYP_SR bis!        \ CRYP_OFFU	Bit 3	 Width 1
 %1  2 lshift CRYP_SR bis!        \ CRYP_OFNE	Bit 2	 Width 1
 %1  1 lshift CRYP_SR bis!        \ CRYP_IFNF	Bit 1	 Width 1
 %1  0 lshift CRYP_SR bis!        \ CRYP_IFEM	Bit 0	 Width 1
\ CRYP_SR Register BitField Fetch Words  
: CRYP_BUSY@ CRYP_SR @ %1  4 lshift and 4 rshift ; 
: CRYP_OFFU@ CRYP_SR @ %1  3 lshift and 3 rshift ; 
: CRYP_OFNE@ CRYP_SR @ %1  2 lshift and 2 rshift ; 
: CRYP_IFNF@ CRYP_SR @ %1  1 lshift and 1 rshift ; 
: CRYP_IFEM@ CRYP_SR @ %1  0 lshift and 0 rshift ; 

CRYP_DIN (read-write)
$00000000 CONSTANT RESET_CRYP_DIN 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift CRYP_DIN bis!        \ CRYP_DATAIN	Bit 0	 Width 32
\ CRYP_DIN Register BitField Fetch Words  
: CRYP_DATAIN@ CRYP_DIN @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

CRYP_DOUT (read-only)
$00000000 CONSTANT RESET_CRYP_DOUT 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift CRYP_DOUT bis!        \ CRYP_DATAOUT	Bit 0	 Width 32
\ CRYP_DOUT Register BitField Fetch Words  
: CRYP_DATAOUT@ CRYP_DOUT @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

CRYP_DMACR (read-write)
$00000000 CONSTANT RESET_CRYP_DMACR 
 %1  1 lshift CRYP_DMACR bis!        \ CRYP_DOEN	Bit 1	 Width 1
 %1  0 lshift CRYP_DMACR bis!        \ CRYP_DIEN	Bit 0	 Width 1
\ CRYP_DMACR Register BitField Fetch Words  
: CRYP_DOEN@ CRYP_DMACR @ %1  1 lshift and 1 rshift ; 
: CRYP_DIEN@ CRYP_DMACR @ %1  0 lshift and 0 rshift ; 

CRYP_IMSCR (read-write)
$00000000 CONSTANT RESET_CRYP_IMSCR 
 %1  1 lshift CRYP_IMSCR bis!        \ CRYP_OUTIM	Bit 1	 Width 1
 %1  0 lshift CRYP_IMSCR bis!        \ CRYP_INIM	Bit 0	 Width 1
\ CRYP_IMSCR Register BitField Fetch Words  
: CRYP_OUTIM@ CRYP_IMSCR @ %1  1 lshift and 1 rshift ; 
: CRYP_INIM@ CRYP_IMSCR @ %1  0 lshift and 0 rshift ; 

CRYP_RISR (read-only)
$00000001 CONSTANT RESET_CRYP_RISR 
 %1  1 lshift CRYP_RISR bis!        \ CRYP_OUTRIS	Bit 1	 Width 1
 %1  0 lshift CRYP_RISR bis!        \ CRYP_INRIS	Bit 0	 Width 1
\ CRYP_RISR Register BitField Fetch Words  
: CRYP_OUTRIS@ CRYP_RISR @ %1  1 lshift and 1 rshift ; 
: CRYP_INRIS@ CRYP_RISR @ %1  0 lshift and 0 rshift ; 

CRYP_MISR (read-only)
$00000000 CONSTANT RESET_CRYP_MISR 
 %1  1 lshift CRYP_MISR bis!        \ CRYP_OUTMIS	Bit 1	 Width 1
 %1  0 lshift CRYP_MISR bis!        \ CRYP_INMIS	Bit 0	 Width 1
\ CRYP_MISR Register BitField Fetch Words  
: CRYP_OUTMIS@ CRYP_MISR @ %1  1 lshift and 1 rshift ; 
: CRYP_INMIS@ CRYP_MISR @ %1  0 lshift and 0 rshift ; 

CRYP_K0LR (write-only)
$00000000 CONSTANT RESET_CRYP_K0LR 
 %1  0 lshift CRYP_K0LR bis!        \ CRYP_b224	Bit 0	 Width 1
 %1  1 lshift CRYP_K0LR bis!        \ CRYP_b225	Bit 1	 Width 1
 %1  2 lshift CRYP_K0LR bis!        \ CRYP_b226	Bit 2	 Width 1
 %1  3 lshift CRYP_K0LR bis!        \ CRYP_b227	Bit 3	 Width 1
 %1  4 lshift CRYP_K0LR bis!        \ CRYP_b228	Bit 4	 Width 1
 %1  5 lshift CRYP_K0LR bis!        \ CRYP_b229	Bit 5	 Width 1
 %1  6 lshift CRYP_K0LR bis!        \ CRYP_b230	Bit 6	 Width 1
 %1  7 lshift CRYP_K0LR bis!        \ CRYP_b231	Bit 7	 Width 1
 %1  8 lshift CRYP_K0LR bis!        \ CRYP_b232	Bit 8	 Width 1
 %1  9 lshift CRYP_K0LR bis!        \ CRYP_b233	Bit 9	 Width 1
 %1  10 lshift CRYP_K0LR bis!        \ CRYP_b234	Bit 10	 Width 1
 %1  11 lshift CRYP_K0LR bis!        \ CRYP_b235	Bit 11	 Width 1
 %1  12 lshift CRYP_K0LR bis!        \ CRYP_b236	Bit 12	 Width 1
 %1  13 lshift CRYP_K0LR bis!        \ CRYP_b237	Bit 13	 Width 1
 %1  14 lshift CRYP_K0LR bis!        \ CRYP_b238	Bit 14	 Width 1
 %1  15 lshift CRYP_K0LR bis!        \ CRYP_b239	Bit 15	 Width 1
 %1  16 lshift CRYP_K0LR bis!        \ CRYP_b240	Bit 16	 Width 1
 %1  17 lshift CRYP_K0LR bis!        \ CRYP_b241	Bit 17	 Width 1
 %1  18 lshift CRYP_K0LR bis!        \ CRYP_b242	Bit 18	 Width 1
 %1  19 lshift CRYP_K0LR bis!        \ CRYP_b243	Bit 19	 Width 1
 %1  20 lshift CRYP_K0LR bis!        \ CRYP_b244	Bit 20	 Width 1
 %1  21 lshift CRYP_K0LR bis!        \ CRYP_b245	Bit 21	 Width 1
 %1  22 lshift CRYP_K0LR bis!        \ CRYP_b246	Bit 22	 Width 1
 %1  23 lshift CRYP_K0LR bis!        \ CRYP_b247	Bit 23	 Width 1
 %1  24 lshift CRYP_K0LR bis!        \ CRYP_b248	Bit 24	 Width 1
 %1  25 lshift CRYP_K0LR bis!        \ CRYP_b249	Bit 25	 Width 1
 %1  26 lshift CRYP_K0LR bis!        \ CRYP_b250	Bit 26	 Width 1
 %1  27 lshift CRYP_K0LR bis!        \ CRYP_b251	Bit 27	 Width 1
 %1  28 lshift CRYP_K0LR bis!        \ CRYP_b252	Bit 28	 Width 1
 %1  29 lshift CRYP_K0LR bis!        \ CRYP_b253	Bit 29	 Width 1
 %1  30 lshift CRYP_K0LR bis!        \ CRYP_b254	Bit 30	 Width 1
 %1  31 lshift CRYP_K0LR bis!        \ CRYP_b255	Bit 31	 Width 1
\ CRYP_K0LR Register BitField Fetch Words  
: CRYP_b224@ CRYP_K0LR @ %1  0 lshift and 0 rshift ; 
: CRYP_b225@ CRYP_K0LR @ %1  1 lshift and 1 rshift ; 
: CRYP_b226@ CRYP_K0LR @ %1  2 lshift and 2 rshift ; 
: CRYP_b227@ CRYP_K0LR @ %1  3 lshift and 3 rshift ; 
: CRYP_b228@ CRYP_K0LR @ %1  4 lshift and 4 rshift ; 
: CRYP_b229@ CRYP_K0LR @ %1  5 lshift and 5 rshift ; 
: CRYP_b230@ CRYP_K0LR @ %1  6 lshift and 6 rshift ; 
: CRYP_b231@ CRYP_K0LR @ %1  7 lshift and 7 rshift ; 
: CRYP_b232@ CRYP_K0LR @ %1  8 lshift and 8 rshift ; 
: CRYP_b233@ CRYP_K0LR @ %1  9 lshift and 9 rshift ; 
: CRYP_b234@ CRYP_K0LR @ %1  10 lshift and 10 rshift ; 
: CRYP_b235@ CRYP_K0LR @ %1  11 lshift and 11 rshift ; 
: CRYP_b236@ CRYP_K0LR @ %1  12 lshift and 12 rshift ; 
: CRYP_b237@ CRYP_K0LR @ %1  13 lshift and 13 rshift ; 
: CRYP_b238@ CRYP_K0LR @ %1  14 lshift and 14 rshift ; 
: CRYP_b239@ CRYP_K0LR @ %1  15 lshift and 15 rshift ; 
: CRYP_b240@ CRYP_K0LR @ %1  16 lshift and 16 rshift ; 
: CRYP_b241@ CRYP_K0LR @ %1  17 lshift and 17 rshift ; 
: CRYP_b242@ CRYP_K0LR @ %1  18 lshift and 18 rshift ; 
: CRYP_b243@ CRYP_K0LR @ %1  19 lshift and 19 rshift ; 
: CRYP_b244@ CRYP_K0LR @ %1  20 lshift and 20 rshift ; 
: CRYP_b245@ CRYP_K0LR @ %1  21 lshift and 21 rshift ; 
: CRYP_b246@ CRYP_K0LR @ %1  22 lshift and 22 rshift ; 
: CRYP_b247@ CRYP_K0LR @ %1  23 lshift and 23 rshift ; 
: CRYP_b248@ CRYP_K0LR @ %1  24 lshift and 24 rshift ; 
: CRYP_b249@ CRYP_K0LR @ %1  25 lshift and 25 rshift ; 
: CRYP_b250@ CRYP_K0LR @ %1  26 lshift and 26 rshift ; 
: CRYP_b251@ CRYP_K0LR @ %1  27 lshift and 27 rshift ; 
: CRYP_b252@ CRYP_K0LR @ %1  28 lshift and 28 rshift ; 
: CRYP_b253@ CRYP_K0LR @ %1  29 lshift and 29 rshift ; 
: CRYP_b254@ CRYP_K0LR @ %1  30 lshift and 30 rshift ; 
: CRYP_b255@ CRYP_K0LR @ %1  31 lshift and 31 rshift ; 

CRYP_K0RR (write-only)
$00000000 CONSTANT RESET_CRYP_K0RR 
 %1  0 lshift CRYP_K0RR bis!        \ CRYP_b192	Bit 0	 Width 1
 %1  1 lshift CRYP_K0RR bis!        \ CRYP_b193	Bit 1	 Width 1
 %1  2 lshift CRYP_K0RR bis!        \ CRYP_b194	Bit 2	 Width 1
 %1  3 lshift CRYP_K0RR bis!        \ CRYP_b195	Bit 3	 Width 1
 %1  4 lshift CRYP_K0RR bis!        \ CRYP_b196	Bit 4	 Width 1
 %1  5 lshift CRYP_K0RR bis!        \ CRYP_b197	Bit 5	 Width 1
 %1  6 lshift CRYP_K0RR bis!        \ CRYP_b198	Bit 6	 Width 1
 %1  7 lshift CRYP_K0RR bis!        \ CRYP_b199	Bit 7	 Width 1
 %1  8 lshift CRYP_K0RR bis!        \ CRYP_b200	Bit 8	 Width 1
 %1  9 lshift CRYP_K0RR bis!        \ CRYP_b201	Bit 9	 Width 1
 %1  10 lshift CRYP_K0RR bis!        \ CRYP_b202	Bit 10	 Width 1
 %1  11 lshift CRYP_K0RR bis!        \ CRYP_b203	Bit 11	 Width 1
 %1  12 lshift CRYP_K0RR bis!        \ CRYP_b204	Bit 12	 Width 1
 %1  13 lshift CRYP_K0RR bis!        \ CRYP_b205	Bit 13	 Width 1
 %1  14 lshift CRYP_K0RR bis!        \ CRYP_b206	Bit 14	 Width 1
 %1  15 lshift CRYP_K0RR bis!        \ CRYP_b207	Bit 15	 Width 1
 %1  16 lshift CRYP_K0RR bis!        \ CRYP_b208	Bit 16	 Width 1
 %1  17 lshift CRYP_K0RR bis!        \ CRYP_b209	Bit 17	 Width 1
 %1  18 lshift CRYP_K0RR bis!        \ CRYP_b210	Bit 18	 Width 1
 %1  19 lshift CRYP_K0RR bis!        \ CRYP_b211	Bit 19	 Width 1
 %1  20 lshift CRYP_K0RR bis!        \ CRYP_b212	Bit 20	 Width 1
 %1  21 lshift CRYP_K0RR bis!        \ CRYP_b213	Bit 21	 Width 1
 %1  22 lshift CRYP_K0RR bis!        \ CRYP_b214	Bit 22	 Width 1
 %1  23 lshift CRYP_K0RR bis!        \ CRYP_b215	Bit 23	 Width 1
 %1  24 lshift CRYP_K0RR bis!        \ CRYP_b216	Bit 24	 Width 1
 %1  25 lshift CRYP_K0RR bis!        \ CRYP_b217	Bit 25	 Width 1
 %1  26 lshift CRYP_K0RR bis!        \ CRYP_b218	Bit 26	 Width 1
 %1  27 lshift CRYP_K0RR bis!        \ CRYP_b219	Bit 27	 Width 1
 %1  28 lshift CRYP_K0RR bis!        \ CRYP_b220	Bit 28	 Width 1
 %1  29 lshift CRYP_K0RR bis!        \ CRYP_b221	Bit 29	 Width 1
 %1  30 lshift CRYP_K0RR bis!        \ CRYP_b222	Bit 30	 Width 1
 %1  31 lshift CRYP_K0RR bis!        \ CRYP_b223	Bit 31	 Width 1
\ CRYP_K0RR Register BitField Fetch Words  
: CRYP_b192@ CRYP_K0RR @ %1  0 lshift and 0 rshift ; 
: CRYP_b193@ CRYP_K0RR @ %1  1 lshift and 1 rshift ; 
: CRYP_b194@ CRYP_K0RR @ %1  2 lshift and 2 rshift ; 
: CRYP_b195@ CRYP_K0RR @ %1  3 lshift and 3 rshift ; 
: CRYP_b196@ CRYP_K0RR @ %1  4 lshift and 4 rshift ; 
: CRYP_b197@ CRYP_K0RR @ %1  5 lshift and 5 rshift ; 
: CRYP_b198@ CRYP_K0RR @ %1  6 lshift and 6 rshift ; 
: CRYP_b199@ CRYP_K0RR @ %1  7 lshift and 7 rshift ; 
: CRYP_b200@ CRYP_K0RR @ %1  8 lshift and 8 rshift ; 
: CRYP_b201@ CRYP_K0RR @ %1  9 lshift and 9 rshift ; 
: CRYP_b202@ CRYP_K0RR @ %1  10 lshift and 10 rshift ; 
: CRYP_b203@ CRYP_K0RR @ %1  11 lshift and 11 rshift ; 
: CRYP_b204@ CRYP_K0RR @ %1  12 lshift and 12 rshift ; 
: CRYP_b205@ CRYP_K0RR @ %1  13 lshift and 13 rshift ; 
: CRYP_b206@ CRYP_K0RR @ %1  14 lshift and 14 rshift ; 
: CRYP_b207@ CRYP_K0RR @ %1  15 lshift and 15 rshift ; 
: CRYP_b208@ CRYP_K0RR @ %1  16 lshift and 16 rshift ; 
: CRYP_b209@ CRYP_K0RR @ %1  17 lshift and 17 rshift ; 
: CRYP_b210@ CRYP_K0RR @ %1  18 lshift and 18 rshift ; 
: CRYP_b211@ CRYP_K0RR @ %1  19 lshift and 19 rshift ; 
: CRYP_b212@ CRYP_K0RR @ %1  20 lshift and 20 rshift ; 
: CRYP_b213@ CRYP_K0RR @ %1  21 lshift and 21 rshift ; 
: CRYP_b214@ CRYP_K0RR @ %1  22 lshift and 22 rshift ; 
: CRYP_b215@ CRYP_K0RR @ %1  23 lshift and 23 rshift ; 
: CRYP_b216@ CRYP_K0RR @ %1  24 lshift and 24 rshift ; 
: CRYP_b217@ CRYP_K0RR @ %1  25 lshift and 25 rshift ; 
: CRYP_b218@ CRYP_K0RR @ %1  26 lshift and 26 rshift ; 
: CRYP_b219@ CRYP_K0RR @ %1  27 lshift and 27 rshift ; 
: CRYP_b220@ CRYP_K0RR @ %1  28 lshift and 28 rshift ; 
: CRYP_b221@ CRYP_K0RR @ %1  29 lshift and 29 rshift ; 
: CRYP_b222@ CRYP_K0RR @ %1  30 lshift and 30 rshift ; 
: CRYP_b223@ CRYP_K0RR @ %1  31 lshift and 31 rshift ; 

CRYP_K1LR (write-only)
$00000000 CONSTANT RESET_CRYP_K1LR 
 %1  0 lshift CRYP_K1LR bis!        \ CRYP_b160	Bit 0	 Width 1
 %1  1 lshift CRYP_K1LR bis!        \ CRYP_b161	Bit 1	 Width 1
 %1  2 lshift CRYP_K1LR bis!        \ CRYP_b162	Bit 2	 Width 1
 %1  3 lshift CRYP_K1LR bis!        \ CRYP_b163	Bit 3	 Width 1
 %1  4 lshift CRYP_K1LR bis!        \ CRYP_b164	Bit 4	 Width 1
 %1  5 lshift CRYP_K1LR bis!        \ CRYP_b165	Bit 5	 Width 1
 %1  6 lshift CRYP_K1LR bis!        \ CRYP_b166	Bit 6	 Width 1
 %1  7 lshift CRYP_K1LR bis!        \ CRYP_b167	Bit 7	 Width 1
 %1  8 lshift CRYP_K1LR bis!        \ CRYP_b168	Bit 8	 Width 1
 %1  9 lshift CRYP_K1LR bis!        \ CRYP_b169	Bit 9	 Width 1
 %1  10 lshift CRYP_K1LR bis!        \ CRYP_b170	Bit 10	 Width 1
 %1  11 lshift CRYP_K1LR bis!        \ CRYP_b171	Bit 11	 Width 1
 %1  12 lshift CRYP_K1LR bis!        \ CRYP_b172	Bit 12	 Width 1
 %1  13 lshift CRYP_K1LR bis!        \ CRYP_b173	Bit 13	 Width 1
 %1  14 lshift CRYP_K1LR bis!        \ CRYP_b174	Bit 14	 Width 1
 %1  15 lshift CRYP_K1LR bis!        \ CRYP_b175	Bit 15	 Width 1
 %1  16 lshift CRYP_K1LR bis!        \ CRYP_b176	Bit 16	 Width 1
 %1  17 lshift CRYP_K1LR bis!        \ CRYP_b177	Bit 17	 Width 1
 %1  18 lshift CRYP_K1LR bis!        \ CRYP_b178	Bit 18	 Width 1
 %1  19 lshift CRYP_K1LR bis!        \ CRYP_b179	Bit 19	 Width 1
 %1  20 lshift CRYP_K1LR bis!        \ CRYP_b180	Bit 20	 Width 1
 %1  21 lshift CRYP_K1LR bis!        \ CRYP_b181	Bit 21	 Width 1
 %1  22 lshift CRYP_K1LR bis!        \ CRYP_b182	Bit 22	 Width 1
 %1  23 lshift CRYP_K1LR bis!        \ CRYP_b183	Bit 23	 Width 1
 %1  24 lshift CRYP_K1LR bis!        \ CRYP_b184	Bit 24	 Width 1
 %1  25 lshift CRYP_K1LR bis!        \ CRYP_b185	Bit 25	 Width 1
 %1  26 lshift CRYP_K1LR bis!        \ CRYP_b186	Bit 26	 Width 1
 %1  27 lshift CRYP_K1LR bis!        \ CRYP_b187	Bit 27	 Width 1
 %1  28 lshift CRYP_K1LR bis!        \ CRYP_b188	Bit 28	 Width 1
 %1  29 lshift CRYP_K1LR bis!        \ CRYP_b189	Bit 29	 Width 1
 %1  30 lshift CRYP_K1LR bis!        \ CRYP_b190	Bit 30	 Width 1
 %1  31 lshift CRYP_K1LR bis!        \ CRYP_b191	Bit 31	 Width 1
\ CRYP_K1LR Register BitField Fetch Words  
: CRYP_b160@ CRYP_K1LR @ %1  0 lshift and 0 rshift ; 
: CRYP_b161@ CRYP_K1LR @ %1  1 lshift and 1 rshift ; 
: CRYP_b162@ CRYP_K1LR @ %1  2 lshift and 2 rshift ; 
: CRYP_b163@ CRYP_K1LR @ %1  3 lshift and 3 rshift ; 
: CRYP_b164@ CRYP_K1LR @ %1  4 lshift and 4 rshift ; 
: CRYP_b165@ CRYP_K1LR @ %1  5 lshift and 5 rshift ; 
: CRYP_b166@ CRYP_K1LR @ %1  6 lshift and 6 rshift ; 
: CRYP_b167@ CRYP_K1LR @ %1  7 lshift and 7 rshift ; 
: CRYP_b168@ CRYP_K1LR @ %1  8 lshift and 8 rshift ; 
: CRYP_b169@ CRYP_K1LR @ %1  9 lshift and 9 rshift ; 
: CRYP_b170@ CRYP_K1LR @ %1  10 lshift and 10 rshift ; 
: CRYP_b171@ CRYP_K1LR @ %1  11 lshift and 11 rshift ; 
: CRYP_b172@ CRYP_K1LR @ %1  12 lshift and 12 rshift ; 
: CRYP_b173@ CRYP_K1LR @ %1  13 lshift and 13 rshift ; 
: CRYP_b174@ CRYP_K1LR @ %1  14 lshift and 14 rshift ; 
: CRYP_b175@ CRYP_K1LR @ %1  15 lshift and 15 rshift ; 
: CRYP_b176@ CRYP_K1LR @ %1  16 lshift and 16 rshift ; 
: CRYP_b177@ CRYP_K1LR @ %1  17 lshift and 17 rshift ; 
: CRYP_b178@ CRYP_K1LR @ %1  18 lshift and 18 rshift ; 
: CRYP_b179@ CRYP_K1LR @ %1  19 lshift and 19 rshift ; 
: CRYP_b180@ CRYP_K1LR @ %1  20 lshift and 20 rshift ; 
: CRYP_b181@ CRYP_K1LR @ %1  21 lshift and 21 rshift ; 
: CRYP_b182@ CRYP_K1LR @ %1  22 lshift and 22 rshift ; 
: CRYP_b183@ CRYP_K1LR @ %1  23 lshift and 23 rshift ; 
: CRYP_b184@ CRYP_K1LR @ %1  24 lshift and 24 rshift ; 
: CRYP_b185@ CRYP_K1LR @ %1  25 lshift and 25 rshift ; 
: CRYP_b186@ CRYP_K1LR @ %1  26 lshift and 26 rshift ; 
: CRYP_b187@ CRYP_K1LR @ %1  27 lshift and 27 rshift ; 
: CRYP_b188@ CRYP_K1LR @ %1  28 lshift and 28 rshift ; 
: CRYP_b189@ CRYP_K1LR @ %1  29 lshift and 29 rshift ; 
: CRYP_b190@ CRYP_K1LR @ %1  30 lshift and 30 rshift ; 
: CRYP_b191@ CRYP_K1LR @ %1  31 lshift and 31 rshift ; 

CRYP_K1RR (write-only)
$00000000 CONSTANT RESET_CRYP_K1RR 
 %1  0 lshift CRYP_K1RR bis!        \ CRYP_b128	Bit 0	 Width 1
 %1  1 lshift CRYP_K1RR bis!        \ CRYP_b129	Bit 1	 Width 1
 %1  2 lshift CRYP_K1RR bis!        \ CRYP_b130	Bit 2	 Width 1
 %1  3 lshift CRYP_K1RR bis!        \ CRYP_b131	Bit 3	 Width 1
 %1  4 lshift CRYP_K1RR bis!        \ CRYP_b132	Bit 4	 Width 1
 %1  5 lshift CRYP_K1RR bis!        \ CRYP_b133	Bit 5	 Width 1
 %1  6 lshift CRYP_K1RR bis!        \ CRYP_b134	Bit 6	 Width 1
 %1  7 lshift CRYP_K1RR bis!        \ CRYP_b135	Bit 7	 Width 1
 %1  8 lshift CRYP_K1RR bis!        \ CRYP_b136	Bit 8	 Width 1
 %1  9 lshift CRYP_K1RR bis!        \ CRYP_b137	Bit 9	 Width 1
 %1  10 lshift CRYP_K1RR bis!        \ CRYP_b138	Bit 10	 Width 1
 %1  11 lshift CRYP_K1RR bis!        \ CRYP_b139	Bit 11	 Width 1
 %1  12 lshift CRYP_K1RR bis!        \ CRYP_b140	Bit 12	 Width 1
 %1  13 lshift CRYP_K1RR bis!        \ CRYP_b141	Bit 13	 Width 1
 %1  14 lshift CRYP_K1RR bis!        \ CRYP_b142	Bit 14	 Width 1
 %1  15 lshift CRYP_K1RR bis!        \ CRYP_b143	Bit 15	 Width 1
 %1  16 lshift CRYP_K1RR bis!        \ CRYP_b144	Bit 16	 Width 1
 %1  17 lshift CRYP_K1RR bis!        \ CRYP_b145	Bit 17	 Width 1
 %1  18 lshift CRYP_K1RR bis!        \ CRYP_b146	Bit 18	 Width 1
 %1  19 lshift CRYP_K1RR bis!        \ CRYP_b147	Bit 19	 Width 1
 %1  20 lshift CRYP_K1RR bis!        \ CRYP_b148	Bit 20	 Width 1
 %1  21 lshift CRYP_K1RR bis!        \ CRYP_b149	Bit 21	 Width 1
 %1  22 lshift CRYP_K1RR bis!        \ CRYP_b150	Bit 22	 Width 1
 %1  23 lshift CRYP_K1RR bis!        \ CRYP_b151	Bit 23	 Width 1
 %1  24 lshift CRYP_K1RR bis!        \ CRYP_b152	Bit 24	 Width 1
 %1  25 lshift CRYP_K1RR bis!        \ CRYP_b153	Bit 25	 Width 1
 %1  26 lshift CRYP_K1RR bis!        \ CRYP_b154	Bit 26	 Width 1
 %1  27 lshift CRYP_K1RR bis!        \ CRYP_b155	Bit 27	 Width 1
 %1  28 lshift CRYP_K1RR bis!        \ CRYP_b156	Bit 28	 Width 1
 %1  29 lshift CRYP_K1RR bis!        \ CRYP_b157	Bit 29	 Width 1
 %1  30 lshift CRYP_K1RR bis!        \ CRYP_b158	Bit 30	 Width 1
 %1  31 lshift CRYP_K1RR bis!        \ CRYP_b159	Bit 31	 Width 1
\ CRYP_K1RR Register BitField Fetch Words  
: CRYP_b128@ CRYP_K1RR @ %1  0 lshift and 0 rshift ; 
: CRYP_b129@ CRYP_K1RR @ %1  1 lshift and 1 rshift ; 
: CRYP_b130@ CRYP_K1RR @ %1  2 lshift and 2 rshift ; 
: CRYP_b131@ CRYP_K1RR @ %1  3 lshift and 3 rshift ; 
: CRYP_b132@ CRYP_K1RR @ %1  4 lshift and 4 rshift ; 
: CRYP_b133@ CRYP_K1RR @ %1  5 lshift and 5 rshift ; 
: CRYP_b134@ CRYP_K1RR @ %1  6 lshift and 6 rshift ; 
: CRYP_b135@ CRYP_K1RR @ %1  7 lshift and 7 rshift ; 
: CRYP_b136@ CRYP_K1RR @ %1  8 lshift and 8 rshift ; 
: CRYP_b137@ CRYP_K1RR @ %1  9 lshift and 9 rshift ; 
: CRYP_b138@ CRYP_K1RR @ %1  10 lshift and 10 rshift ; 
: CRYP_b139@ CRYP_K1RR @ %1  11 lshift and 11 rshift ; 
: CRYP_b140@ CRYP_K1RR @ %1  12 lshift and 12 rshift ; 
: CRYP_b141@ CRYP_K1RR @ %1  13 lshift and 13 rshift ; 
: CRYP_b142@ CRYP_K1RR @ %1  14 lshift and 14 rshift ; 
: CRYP_b143@ CRYP_K1RR @ %1  15 lshift and 15 rshift ; 
: CRYP_b144@ CRYP_K1RR @ %1  16 lshift and 16 rshift ; 
: CRYP_b145@ CRYP_K1RR @ %1  17 lshift and 17 rshift ; 
: CRYP_b146@ CRYP_K1RR @ %1  18 lshift and 18 rshift ; 
: CRYP_b147@ CRYP_K1RR @ %1  19 lshift and 19 rshift ; 
: CRYP_b148@ CRYP_K1RR @ %1  20 lshift and 20 rshift ; 
: CRYP_b149@ CRYP_K1RR @ %1  21 lshift and 21 rshift ; 
: CRYP_b150@ CRYP_K1RR @ %1  22 lshift and 22 rshift ; 
: CRYP_b151@ CRYP_K1RR @ %1  23 lshift and 23 rshift ; 
: CRYP_b152@ CRYP_K1RR @ %1  24 lshift and 24 rshift ; 
: CRYP_b153@ CRYP_K1RR @ %1  25 lshift and 25 rshift ; 
: CRYP_b154@ CRYP_K1RR @ %1  26 lshift and 26 rshift ; 
: CRYP_b155@ CRYP_K1RR @ %1  27 lshift and 27 rshift ; 
: CRYP_b156@ CRYP_K1RR @ %1  28 lshift and 28 rshift ; 
: CRYP_b157@ CRYP_K1RR @ %1  29 lshift and 29 rshift ; 
: CRYP_b158@ CRYP_K1RR @ %1  30 lshift and 30 rshift ; 
: CRYP_b159@ CRYP_K1RR @ %1  31 lshift and 31 rshift ; 

CRYP_K2LR (write-only)
$00000000 CONSTANT RESET_CRYP_K2LR 
 %1  0 lshift CRYP_K2LR bis!        \ CRYP_b96	Bit 0	 Width 1
 %1  1 lshift CRYP_K2LR bis!        \ CRYP_b97	Bit 1	 Width 1
 %1  2 lshift CRYP_K2LR bis!        \ CRYP_b98	Bit 2	 Width 1
 %1  3 lshift CRYP_K2LR bis!        \ CRYP_b99	Bit 3	 Width 1
 %1  4 lshift CRYP_K2LR bis!        \ CRYP_b100	Bit 4	 Width 1
 %1  5 lshift CRYP_K2LR bis!        \ CRYP_b101	Bit 5	 Width 1
 %1  6 lshift CRYP_K2LR bis!        \ CRYP_b102	Bit 6	 Width 1
 %1  7 lshift CRYP_K2LR bis!        \ CRYP_b103	Bit 7	 Width 1
 %1  8 lshift CRYP_K2LR bis!        \ CRYP_b104	Bit 8	 Width 1
 %1  9 lshift CRYP_K2LR bis!        \ CRYP_b105	Bit 9	 Width 1
 %1  10 lshift CRYP_K2LR bis!        \ CRYP_b106	Bit 10	 Width 1
 %1  11 lshift CRYP_K2LR bis!        \ CRYP_b107	Bit 11	 Width 1
 %1  12 lshift CRYP_K2LR bis!        \ CRYP_b108	Bit 12	 Width 1
 %1  13 lshift CRYP_K2LR bis!        \ CRYP_b109	Bit 13	 Width 1
 %1  14 lshift CRYP_K2LR bis!        \ CRYP_b110	Bit 14	 Width 1
 %1  15 lshift CRYP_K2LR bis!        \ CRYP_b111	Bit 15	 Width 1
 %1  16 lshift CRYP_K2LR bis!        \ CRYP_b112	Bit 16	 Width 1
 %1  17 lshift CRYP_K2LR bis!        \ CRYP_b113	Bit 17	 Width 1
 %1  18 lshift CRYP_K2LR bis!        \ CRYP_b114	Bit 18	 Width 1
 %1  19 lshift CRYP_K2LR bis!        \ CRYP_b115	Bit 19	 Width 1
 %1  20 lshift CRYP_K2LR bis!        \ CRYP_b116	Bit 20	 Width 1
 %1  21 lshift CRYP_K2LR bis!        \ CRYP_b117	Bit 21	 Width 1
 %1  22 lshift CRYP_K2LR bis!        \ CRYP_b118	Bit 22	 Width 1
 %1  23 lshift CRYP_K2LR bis!        \ CRYP_b119	Bit 23	 Width 1
 %1  24 lshift CRYP_K2LR bis!        \ CRYP_b120	Bit 24	 Width 1
 %1  25 lshift CRYP_K2LR bis!        \ CRYP_b121	Bit 25	 Width 1
 %1  26 lshift CRYP_K2LR bis!        \ CRYP_b122	Bit 26	 Width 1
 %1  27 lshift CRYP_K2LR bis!        \ CRYP_b123	Bit 27	 Width 1
 %1  28 lshift CRYP_K2LR bis!        \ CRYP_b124	Bit 28	 Width 1
 %1  29 lshift CRYP_K2LR bis!        \ CRYP_b125	Bit 29	 Width 1
 %1  30 lshift CRYP_K2LR bis!        \ CRYP_b126	Bit 30	 Width 1
 %1  31 lshift CRYP_K2LR bis!        \ CRYP_b127	Bit 31	 Width 1
\ CRYP_K2LR Register BitField Fetch Words  
: CRYP_b96@ CRYP_K2LR @ %1  0 lshift and 0 rshift ; 
: CRYP_b97@ CRYP_K2LR @ %1  1 lshift and 1 rshift ; 
: CRYP_b98@ CRYP_K2LR @ %1  2 lshift and 2 rshift ; 
: CRYP_b99@ CRYP_K2LR @ %1  3 lshift and 3 rshift ; 
: CRYP_b100@ CRYP_K2LR @ %1  4 lshift and 4 rshift ; 
: CRYP_b101@ CRYP_K2LR @ %1  5 lshift and 5 rshift ; 
: CRYP_b102@ CRYP_K2LR @ %1  6 lshift and 6 rshift ; 
: CRYP_b103@ CRYP_K2LR @ %1  7 lshift and 7 rshift ; 
: CRYP_b104@ CRYP_K2LR @ %1  8 lshift and 8 rshift ; 
: CRYP_b105@ CRYP_K2LR @ %1  9 lshift and 9 rshift ; 
: CRYP_b106@ CRYP_K2LR @ %1  10 lshift and 10 rshift ; 
: CRYP_b107@ CRYP_K2LR @ %1  11 lshift and 11 rshift ; 
: CRYP_b108@ CRYP_K2LR @ %1  12 lshift and 12 rshift ; 
: CRYP_b109@ CRYP_K2LR @ %1  13 lshift and 13 rshift ; 
: CRYP_b110@ CRYP_K2LR @ %1  14 lshift and 14 rshift ; 
: CRYP_b111@ CRYP_K2LR @ %1  15 lshift and 15 rshift ; 
: CRYP_b112@ CRYP_K2LR @ %1  16 lshift and 16 rshift ; 
: CRYP_b113@ CRYP_K2LR @ %1  17 lshift and 17 rshift ; 
: CRYP_b114@ CRYP_K2LR @ %1  18 lshift and 18 rshift ; 
: CRYP_b115@ CRYP_K2LR @ %1  19 lshift and 19 rshift ; 
: CRYP_b116@ CRYP_K2LR @ %1  20 lshift and 20 rshift ; 
: CRYP_b117@ CRYP_K2LR @ %1  21 lshift and 21 rshift ; 
: CRYP_b118@ CRYP_K2LR @ %1  22 lshift and 22 rshift ; 
: CRYP_b119@ CRYP_K2LR @ %1  23 lshift and 23 rshift ; 
: CRYP_b120@ CRYP_K2LR @ %1  24 lshift and 24 rshift ; 
: CRYP_b121@ CRYP_K2LR @ %1  25 lshift and 25 rshift ; 
: CRYP_b122@ CRYP_K2LR @ %1  26 lshift and 26 rshift ; 
: CRYP_b123@ CRYP_K2LR @ %1  27 lshift and 27 rshift ; 
: CRYP_b124@ CRYP_K2LR @ %1  28 lshift and 28 rshift ; 
: CRYP_b125@ CRYP_K2LR @ %1  29 lshift and 29 rshift ; 
: CRYP_b126@ CRYP_K2LR @ %1  30 lshift and 30 rshift ; 
: CRYP_b127@ CRYP_K2LR @ %1  31 lshift and 31 rshift ; 

CRYP_K2RR (write-only)
$00000000 CONSTANT RESET_CRYP_K2RR 
 %1  0 lshift CRYP_K2RR bis!        \ CRYP_b64	Bit 0	 Width 1
 %1  1 lshift CRYP_K2RR bis!        \ CRYP_b65	Bit 1	 Width 1
 %1  2 lshift CRYP_K2RR bis!        \ CRYP_b66	Bit 2	 Width 1
 %1  3 lshift CRYP_K2RR bis!        \ CRYP_b67	Bit 3	 Width 1
 %1  4 lshift CRYP_K2RR bis!        \ CRYP_b68	Bit 4	 Width 1
 %1  5 lshift CRYP_K2RR bis!        \ CRYP_b69	Bit 5	 Width 1
 %1  6 lshift CRYP_K2RR bis!        \ CRYP_b70	Bit 6	 Width 1
 %1  7 lshift CRYP_K2RR bis!        \ CRYP_b71	Bit 7	 Width 1
 %1  8 lshift CRYP_K2RR bis!        \ CRYP_b72	Bit 8	 Width 1
 %1  9 lshift CRYP_K2RR bis!        \ CRYP_b73	Bit 9	 Width 1
 %1  10 lshift CRYP_K2RR bis!        \ CRYP_b74	Bit 10	 Width 1
 %1  11 lshift CRYP_K2RR bis!        \ CRYP_b75	Bit 11	 Width 1
 %1  12 lshift CRYP_K2RR bis!        \ CRYP_b76	Bit 12	 Width 1
 %1  13 lshift CRYP_K2RR bis!        \ CRYP_b77	Bit 13	 Width 1
 %1  14 lshift CRYP_K2RR bis!        \ CRYP_b78	Bit 14	 Width 1
 %1  15 lshift CRYP_K2RR bis!        \ CRYP_b79	Bit 15	 Width 1
 %1  16 lshift CRYP_K2RR bis!        \ CRYP_b80	Bit 16	 Width 1
 %1  17 lshift CRYP_K2RR bis!        \ CRYP_b81	Bit 17	 Width 1
 %1  18 lshift CRYP_K2RR bis!        \ CRYP_b82	Bit 18	 Width 1
 %1  19 lshift CRYP_K2RR bis!        \ CRYP_b83	Bit 19	 Width 1
 %1  20 lshift CRYP_K2RR bis!        \ CRYP_b84	Bit 20	 Width 1
 %1  21 lshift CRYP_K2RR bis!        \ CRYP_b85	Bit 21	 Width 1
 %1  22 lshift CRYP_K2RR bis!        \ CRYP_b86	Bit 22	 Width 1
 %1  23 lshift CRYP_K2RR bis!        \ CRYP_b87	Bit 23	 Width 1
 %1  24 lshift CRYP_K2RR bis!        \ CRYP_b88	Bit 24	 Width 1
 %1  25 lshift CRYP_K2RR bis!        \ CRYP_b89	Bit 25	 Width 1
 %1  26 lshift CRYP_K2RR bis!        \ CRYP_b90	Bit 26	 Width 1
 %1  27 lshift CRYP_K2RR bis!        \ CRYP_b91	Bit 27	 Width 1
 %1  28 lshift CRYP_K2RR bis!        \ CRYP_b92	Bit 28	 Width 1
 %1  29 lshift CRYP_K2RR bis!        \ CRYP_b93	Bit 29	 Width 1
 %1  30 lshift CRYP_K2RR bis!        \ CRYP_b94	Bit 30	 Width 1
 %1  31 lshift CRYP_K2RR bis!        \ CRYP_b95	Bit 31	 Width 1
\ CRYP_K2RR Register BitField Fetch Words  
: CRYP_b64@ CRYP_K2RR @ %1  0 lshift and 0 rshift ; 
: CRYP_b65@ CRYP_K2RR @ %1  1 lshift and 1 rshift ; 
: CRYP_b66@ CRYP_K2RR @ %1  2 lshift and 2 rshift ; 
: CRYP_b67@ CRYP_K2RR @ %1  3 lshift and 3 rshift ; 
: CRYP_b68@ CRYP_K2RR @ %1  4 lshift and 4 rshift ; 
: CRYP_b69@ CRYP_K2RR @ %1  5 lshift and 5 rshift ; 
: CRYP_b70@ CRYP_K2RR @ %1  6 lshift and 6 rshift ; 
: CRYP_b71@ CRYP_K2RR @ %1  7 lshift and 7 rshift ; 
: CRYP_b72@ CRYP_K2RR @ %1  8 lshift and 8 rshift ; 
: CRYP_b73@ CRYP_K2RR @ %1  9 lshift and 9 rshift ; 
: CRYP_b74@ CRYP_K2RR @ %1  10 lshift and 10 rshift ; 
: CRYP_b75@ CRYP_K2RR @ %1  11 lshift and 11 rshift ; 
: CRYP_b76@ CRYP_K2RR @ %1  12 lshift and 12 rshift ; 
: CRYP_b77@ CRYP_K2RR @ %1  13 lshift and 13 rshift ; 
: CRYP_b78@ CRYP_K2RR @ %1  14 lshift and 14 rshift ; 
: CRYP_b79@ CRYP_K2RR @ %1  15 lshift and 15 rshift ; 
: CRYP_b80@ CRYP_K2RR @ %1  16 lshift and 16 rshift ; 
: CRYP_b81@ CRYP_K2RR @ %1  17 lshift and 17 rshift ; 
: CRYP_b82@ CRYP_K2RR @ %1  18 lshift and 18 rshift ; 
: CRYP_b83@ CRYP_K2RR @ %1  19 lshift and 19 rshift ; 
: CRYP_b84@ CRYP_K2RR @ %1  20 lshift and 20 rshift ; 
: CRYP_b85@ CRYP_K2RR @ %1  21 lshift and 21 rshift ; 
: CRYP_b86@ CRYP_K2RR @ %1  22 lshift and 22 rshift ; 
: CRYP_b87@ CRYP_K2RR @ %1  23 lshift and 23 rshift ; 
: CRYP_b88@ CRYP_K2RR @ %1  24 lshift and 24 rshift ; 
: CRYP_b89@ CRYP_K2RR @ %1  25 lshift and 25 rshift ; 
: CRYP_b90@ CRYP_K2RR @ %1  26 lshift and 26 rshift ; 
: CRYP_b91@ CRYP_K2RR @ %1  27 lshift and 27 rshift ; 
: CRYP_b92@ CRYP_K2RR @ %1  28 lshift and 28 rshift ; 
: CRYP_b93@ CRYP_K2RR @ %1  29 lshift and 29 rshift ; 
: CRYP_b94@ CRYP_K2RR @ %1  30 lshift and 30 rshift ; 
: CRYP_b95@ CRYP_K2RR @ %1  31 lshift and 31 rshift ; 

CRYP_K3LR (write-only)
$00000000 CONSTANT RESET_CRYP_K3LR 
 %1  0 lshift CRYP_K3LR bis!        \ CRYP_b32	Bit 0	 Width 1
 %1  1 lshift CRYP_K3LR bis!        \ CRYP_b33	Bit 1	 Width 1
 %1  2 lshift CRYP_K3LR bis!        \ CRYP_b34	Bit 2	 Width 1
 %1  3 lshift CRYP_K3LR bis!        \ CRYP_b35	Bit 3	 Width 1
 %1  4 lshift CRYP_K3LR bis!        \ CRYP_b36	Bit 4	 Width 1
 %1  5 lshift CRYP_K3LR bis!        \ CRYP_b37	Bit 5	 Width 1
 %1  6 lshift CRYP_K3LR bis!        \ CRYP_b38	Bit 6	 Width 1
 %1  7 lshift CRYP_K3LR bis!        \ CRYP_b39	Bit 7	 Width 1
 %1  8 lshift CRYP_K3LR bis!        \ CRYP_b40	Bit 8	 Width 1
 %1  9 lshift CRYP_K3LR bis!        \ CRYP_b41	Bit 9	 Width 1
 %1  10 lshift CRYP_K3LR bis!        \ CRYP_b42	Bit 10	 Width 1
 %1  11 lshift CRYP_K3LR bis!        \ CRYP_b43	Bit 11	 Width 1
 %1  12 lshift CRYP_K3LR bis!        \ CRYP_b44	Bit 12	 Width 1
 %1  13 lshift CRYP_K3LR bis!        \ CRYP_b45	Bit 13	 Width 1
 %1  14 lshift CRYP_K3LR bis!        \ CRYP_b46	Bit 14	 Width 1
 %1  15 lshift CRYP_K3LR bis!        \ CRYP_b47	Bit 15	 Width 1
 %1  16 lshift CRYP_K3LR bis!        \ CRYP_b48	Bit 16	 Width 1
 %1  17 lshift CRYP_K3LR bis!        \ CRYP_b49	Bit 17	 Width 1
 %1  18 lshift CRYP_K3LR bis!        \ CRYP_b50	Bit 18	 Width 1
 %1  19 lshift CRYP_K3LR bis!        \ CRYP_b51	Bit 19	 Width 1
 %1  20 lshift CRYP_K3LR bis!        \ CRYP_b52	Bit 20	 Width 1
 %1  21 lshift CRYP_K3LR bis!        \ CRYP_b53	Bit 21	 Width 1
 %1  22 lshift CRYP_K3LR bis!        \ CRYP_b54	Bit 22	 Width 1
 %1  23 lshift CRYP_K3LR bis!        \ CRYP_b55	Bit 23	 Width 1
 %1  24 lshift CRYP_K3LR bis!        \ CRYP_b56	Bit 24	 Width 1
 %1  25 lshift CRYP_K3LR bis!        \ CRYP_b57	Bit 25	 Width 1
 %1  26 lshift CRYP_K3LR bis!        \ CRYP_b58	Bit 26	 Width 1
 %1  27 lshift CRYP_K3LR bis!        \ CRYP_b59	Bit 27	 Width 1
 %1  28 lshift CRYP_K3LR bis!        \ CRYP_b60	Bit 28	 Width 1
 %1  29 lshift CRYP_K3LR bis!        \ CRYP_b61	Bit 29	 Width 1
 %1  30 lshift CRYP_K3LR bis!        \ CRYP_b62	Bit 30	 Width 1
 %1  31 lshift CRYP_K3LR bis!        \ CRYP_b63	Bit 31	 Width 1
\ CRYP_K3LR Register BitField Fetch Words  
: CRYP_b32@ CRYP_K3LR @ %1  0 lshift and 0 rshift ; 
: CRYP_b33@ CRYP_K3LR @ %1  1 lshift and 1 rshift ; 
: CRYP_b34@ CRYP_K3LR @ %1  2 lshift and 2 rshift ; 
: CRYP_b35@ CRYP_K3LR @ %1  3 lshift and 3 rshift ; 
: CRYP_b36@ CRYP_K3LR @ %1  4 lshift and 4 rshift ; 
: CRYP_b37@ CRYP_K3LR @ %1  5 lshift and 5 rshift ; 
: CRYP_b38@ CRYP_K3LR @ %1  6 lshift and 6 rshift ; 
: CRYP_b39@ CRYP_K3LR @ %1  7 lshift and 7 rshift ; 
: CRYP_b40@ CRYP_K3LR @ %1  8 lshift and 8 rshift ; 
: CRYP_b41@ CRYP_K3LR @ %1  9 lshift and 9 rshift ; 
: CRYP_b42@ CRYP_K3LR @ %1  10 lshift and 10 rshift ; 
: CRYP_b43@ CRYP_K3LR @ %1  11 lshift and 11 rshift ; 
: CRYP_b44@ CRYP_K3LR @ %1  12 lshift and 12 rshift ; 
: CRYP_b45@ CRYP_K3LR @ %1  13 lshift and 13 rshift ; 
: CRYP_b46@ CRYP_K3LR @ %1  14 lshift and 14 rshift ; 
: CRYP_b47@ CRYP_K3LR @ %1  15 lshift and 15 rshift ; 
: CRYP_b48@ CRYP_K3LR @ %1  16 lshift and 16 rshift ; 
: CRYP_b49@ CRYP_K3LR @ %1  17 lshift and 17 rshift ; 
: CRYP_b50@ CRYP_K3LR @ %1  18 lshift and 18 rshift ; 
: CRYP_b51@ CRYP_K3LR @ %1  19 lshift and 19 rshift ; 
: CRYP_b52@ CRYP_K3LR @ %1  20 lshift and 20 rshift ; 
: CRYP_b53@ CRYP_K3LR @ %1  21 lshift and 21 rshift ; 
: CRYP_b54@ CRYP_K3LR @ %1  22 lshift and 22 rshift ; 
: CRYP_b55@ CRYP_K3LR @ %1  23 lshift and 23 rshift ; 
: CRYP_b56@ CRYP_K3LR @ %1  24 lshift and 24 rshift ; 
: CRYP_b57@ CRYP_K3LR @ %1  25 lshift and 25 rshift ; 
: CRYP_b58@ CRYP_K3LR @ %1  26 lshift and 26 rshift ; 
: CRYP_b59@ CRYP_K3LR @ %1  27 lshift and 27 rshift ; 
: CRYP_b60@ CRYP_K3LR @ %1  28 lshift and 28 rshift ; 
: CRYP_b61@ CRYP_K3LR @ %1  29 lshift and 29 rshift ; 
: CRYP_b62@ CRYP_K3LR @ %1  30 lshift and 30 rshift ; 
: CRYP_b63@ CRYP_K3LR @ %1  31 lshift and 31 rshift ; 

CRYP_K3RR (write-only)
$00000000 CONSTANT RESET_CRYP_K3RR 
 %1  0 lshift CRYP_K3RR bis!        \ CRYP_b0	Bit 0	 Width 1
 %1  1 lshift CRYP_K3RR bis!        \ CRYP_b1	Bit 1	 Width 1
 %1  2 lshift CRYP_K3RR bis!        \ CRYP_b2	Bit 2	 Width 1
 %1  3 lshift CRYP_K3RR bis!        \ CRYP_b3	Bit 3	 Width 1
 %1  4 lshift CRYP_K3RR bis!        \ CRYP_b4	Bit 4	 Width 1
 %1  5 lshift CRYP_K3RR bis!        \ CRYP_b5	Bit 5	 Width 1
 %1  6 lshift CRYP_K3RR bis!        \ CRYP_b6	Bit 6	 Width 1
 %1  7 lshift CRYP_K3RR bis!        \ CRYP_b7	Bit 7	 Width 1
 %1  8 lshift CRYP_K3RR bis!        \ CRYP_b8	Bit 8	 Width 1
 %1  9 lshift CRYP_K3RR bis!        \ CRYP_b9	Bit 9	 Width 1
 %1  10 lshift CRYP_K3RR bis!        \ CRYP_b10	Bit 10	 Width 1
 %1  11 lshift CRYP_K3RR bis!        \ CRYP_b11	Bit 11	 Width 1
 %1  12 lshift CRYP_K3RR bis!        \ CRYP_b12	Bit 12	 Width 1
 %1  13 lshift CRYP_K3RR bis!        \ CRYP_b13	Bit 13	 Width 1
 %1  14 lshift CRYP_K3RR bis!        \ CRYP_b14	Bit 14	 Width 1
 %1  15 lshift CRYP_K3RR bis!        \ CRYP_b15	Bit 15	 Width 1
 %1  16 lshift CRYP_K3RR bis!        \ CRYP_b16	Bit 16	 Width 1
 %1  17 lshift CRYP_K3RR bis!        \ CRYP_b17	Bit 17	 Width 1
 %1  18 lshift CRYP_K3RR bis!        \ CRYP_b18	Bit 18	 Width 1
 %1  19 lshift CRYP_K3RR bis!        \ CRYP_b19	Bit 19	 Width 1
 %1  20 lshift CRYP_K3RR bis!        \ CRYP_b20	Bit 20	 Width 1
 %1  21 lshift CRYP_K3RR bis!        \ CRYP_b21	Bit 21	 Width 1
 %1  22 lshift CRYP_K3RR bis!        \ CRYP_b22	Bit 22	 Width 1
 %1  23 lshift CRYP_K3RR bis!        \ CRYP_b23	Bit 23	 Width 1
 %1  24 lshift CRYP_K3RR bis!        \ CRYP_b24	Bit 24	 Width 1
 %1  25 lshift CRYP_K3RR bis!        \ CRYP_b25	Bit 25	 Width 1
 %1  26 lshift CRYP_K3RR bis!        \ CRYP_b26	Bit 26	 Width 1
 %1  27 lshift CRYP_K3RR bis!        \ CRYP_b27	Bit 27	 Width 1
 %1  28 lshift CRYP_K3RR bis!        \ CRYP_b28	Bit 28	 Width 1
 %1  29 lshift CRYP_K3RR bis!        \ CRYP_b29	Bit 29	 Width 1
 %1  30 lshift CRYP_K3RR bis!        \ CRYP_b30	Bit 30	 Width 1
 %1  31 lshift CRYP_K3RR bis!        \ CRYP_b31	Bit 31	 Width 1
\ CRYP_K3RR Register BitField Fetch Words  
: CRYP_b0@ CRYP_K3RR @ %1  0 lshift and 0 rshift ; 
: CRYP_b1@ CRYP_K3RR @ %1  1 lshift and 1 rshift ; 
: CRYP_b2@ CRYP_K3RR @ %1  2 lshift and 2 rshift ; 
: CRYP_b3@ CRYP_K3RR @ %1  3 lshift and 3 rshift ; 
: CRYP_b4@ CRYP_K3RR @ %1  4 lshift and 4 rshift ; 
: CRYP_b5@ CRYP_K3RR @ %1  5 lshift and 5 rshift ; 
: CRYP_b6@ CRYP_K3RR @ %1  6 lshift and 6 rshift ; 
: CRYP_b7@ CRYP_K3RR @ %1  7 lshift and 7 rshift ; 
: CRYP_b8@ CRYP_K3RR @ %1  8 lshift and 8 rshift ; 
: CRYP_b9@ CRYP_K3RR @ %1  9 lshift and 9 rshift ; 
: CRYP_b10@ CRYP_K3RR @ %1  10 lshift and 10 rshift ; 
: CRYP_b11@ CRYP_K3RR @ %1  11 lshift and 11 rshift ; 
: CRYP_b12@ CRYP_K3RR @ %1  12 lshift and 12 rshift ; 
: CRYP_b13@ CRYP_K3RR @ %1  13 lshift and 13 rshift ; 
: CRYP_b14@ CRYP_K3RR @ %1  14 lshift and 14 rshift ; 
: CRYP_b15@ CRYP_K3RR @ %1  15 lshift and 15 rshift ; 
: CRYP_b16@ CRYP_K3RR @ %1  16 lshift and 16 rshift ; 
: CRYP_b17@ CRYP_K3RR @ %1  17 lshift and 17 rshift ; 
: CRYP_b18@ CRYP_K3RR @ %1  18 lshift and 18 rshift ; 
: CRYP_b19@ CRYP_K3RR @ %1  19 lshift and 19 rshift ; 
: CRYP_b20@ CRYP_K3RR @ %1  20 lshift and 20 rshift ; 
: CRYP_b21@ CRYP_K3RR @ %1  21 lshift and 21 rshift ; 
: CRYP_b22@ CRYP_K3RR @ %1  22 lshift and 22 rshift ; 
: CRYP_b23@ CRYP_K3RR @ %1  23 lshift and 23 rshift ; 
: CRYP_b24@ CRYP_K3RR @ %1  24 lshift and 24 rshift ; 
: CRYP_b25@ CRYP_K3RR @ %1  25 lshift and 25 rshift ; 
: CRYP_b26@ CRYP_K3RR @ %1  26 lshift and 26 rshift ; 
: CRYP_b27@ CRYP_K3RR @ %1  27 lshift and 27 rshift ; 
: CRYP_b28@ CRYP_K3RR @ %1  28 lshift and 28 rshift ; 
: CRYP_b29@ CRYP_K3RR @ %1  29 lshift and 29 rshift ; 
: CRYP_b30@ CRYP_K3RR @ %1  30 lshift and 30 rshift ; 
: CRYP_b31@ CRYP_K3RR @ %1  31 lshift and 31 rshift ; 

CRYP_IV0LR (read-write)
$00000000 CONSTANT RESET_CRYP_IV0LR 
 %1  0 lshift CRYP_IV0LR bis!        \ CRYP_IV31	Bit 0	 Width 1
 %1  1 lshift CRYP_IV0LR bis!        \ CRYP_IV30	Bit 1	 Width 1
 %1  2 lshift CRYP_IV0LR bis!        \ CRYP_IV29	Bit 2	 Width 1
 %1  3 lshift CRYP_IV0LR bis!        \ CRYP_IV28	Bit 3	 Width 1
 %1  4 lshift CRYP_IV0LR bis!        \ CRYP_IV27	Bit 4	 Width 1
 %1  5 lshift CRYP_IV0LR bis!        \ CRYP_IV26	Bit 5	 Width 1
 %1  6 lshift CRYP_IV0LR bis!        \ CRYP_IV25	Bit 6	 Width 1
 %1  7 lshift CRYP_IV0LR bis!        \ CRYP_IV24	Bit 7	 Width 1
 %1  8 lshift CRYP_IV0LR bis!        \ CRYP_IV23	Bit 8	 Width 1
 %1  9 lshift CRYP_IV0LR bis!        \ CRYP_IV22	Bit 9	 Width 1
 %1  10 lshift CRYP_IV0LR bis!        \ CRYP_IV21	Bit 10	 Width 1
 %1  11 lshift CRYP_IV0LR bis!        \ CRYP_IV20	Bit 11	 Width 1
 %1  12 lshift CRYP_IV0LR bis!        \ CRYP_IV19	Bit 12	 Width 1
 %1  13 lshift CRYP_IV0LR bis!        \ CRYP_IV18	Bit 13	 Width 1
 %1  14 lshift CRYP_IV0LR bis!        \ CRYP_IV17	Bit 14	 Width 1
 %1  15 lshift CRYP_IV0LR bis!        \ CRYP_IV16	Bit 15	 Width 1
 %1  16 lshift CRYP_IV0LR bis!        \ CRYP_IV15	Bit 16	 Width 1
 %1  17 lshift CRYP_IV0LR bis!        \ CRYP_IV14	Bit 17	 Width 1
 %1  18 lshift CRYP_IV0LR bis!        \ CRYP_IV13	Bit 18	 Width 1
 %1  19 lshift CRYP_IV0LR bis!        \ CRYP_IV12	Bit 19	 Width 1
 %1  20 lshift CRYP_IV0LR bis!        \ CRYP_IV11	Bit 20	 Width 1
 %1  21 lshift CRYP_IV0LR bis!        \ CRYP_IV10	Bit 21	 Width 1
 %1  22 lshift CRYP_IV0LR bis!        \ CRYP_IV9	Bit 22	 Width 1
 %1  23 lshift CRYP_IV0LR bis!        \ CRYP_IV8	Bit 23	 Width 1
 %1  24 lshift CRYP_IV0LR bis!        \ CRYP_IV7	Bit 24	 Width 1
 %1  25 lshift CRYP_IV0LR bis!        \ CRYP_IV6	Bit 25	 Width 1
 %1  26 lshift CRYP_IV0LR bis!        \ CRYP_IV5	Bit 26	 Width 1
 %1  27 lshift CRYP_IV0LR bis!        \ CRYP_IV4	Bit 27	 Width 1
 %1  28 lshift CRYP_IV0LR bis!        \ CRYP_IV3	Bit 28	 Width 1
 %1  29 lshift CRYP_IV0LR bis!        \ CRYP_IV2	Bit 29	 Width 1
 %1  30 lshift CRYP_IV0LR bis!        \ CRYP_IV1	Bit 30	 Width 1
 %1  31 lshift CRYP_IV0LR bis!        \ CRYP_IV0	Bit 31	 Width 1
\ CRYP_IV0LR Register BitField Fetch Words  
: CRYP_IV31@ CRYP_IV0LR @ %1  0 lshift and 0 rshift ; 
: CRYP_IV30@ CRYP_IV0LR @ %1  1 lshift and 1 rshift ; 
: CRYP_IV29@ CRYP_IV0LR @ %1  2 lshift and 2 rshift ; 
: CRYP_IV28@ CRYP_IV0LR @ %1  3 lshift and 3 rshift ; 
: CRYP_IV27@ CRYP_IV0LR @ %1  4 lshift and 4 rshift ; 
: CRYP_IV26@ CRYP_IV0LR @ %1  5 lshift and 5 rshift ; 
: CRYP_IV25@ CRYP_IV0LR @ %1  6 lshift and 6 rshift ; 
: CRYP_IV24@ CRYP_IV0LR @ %1  7 lshift and 7 rshift ; 
: CRYP_IV23@ CRYP_IV0LR @ %1  8 lshift and 8 rshift ; 
: CRYP_IV22@ CRYP_IV0LR @ %1  9 lshift and 9 rshift ; 
: CRYP_IV21@ CRYP_IV0LR @ %1  10 lshift and 10 rshift ; 
: CRYP_IV20@ CRYP_IV0LR @ %1  11 lshift and 11 rshift ; 
: CRYP_IV19@ CRYP_IV0LR @ %1  12 lshift and 12 rshift ; 
: CRYP_IV18@ CRYP_IV0LR @ %1  13 lshift and 13 rshift ; 
: CRYP_IV17@ CRYP_IV0LR @ %1  14 lshift and 14 rshift ; 
: CRYP_IV16@ CRYP_IV0LR @ %1  15 lshift and 15 rshift ; 
: CRYP_IV15@ CRYP_IV0LR @ %1  16 lshift and 16 rshift ; 
: CRYP_IV14@ CRYP_IV0LR @ %1  17 lshift and 17 rshift ; 
: CRYP_IV13@ CRYP_IV0LR @ %1  18 lshift and 18 rshift ; 
: CRYP_IV12@ CRYP_IV0LR @ %1  19 lshift and 19 rshift ; 
: CRYP_IV11@ CRYP_IV0LR @ %1  20 lshift and 20 rshift ; 
: CRYP_IV10@ CRYP_IV0LR @ %1  21 lshift and 21 rshift ; 
: CRYP_IV9@ CRYP_IV0LR @ %1  22 lshift and 22 rshift ; 
: CRYP_IV8@ CRYP_IV0LR @ %1  23 lshift and 23 rshift ; 
: CRYP_IV7@ CRYP_IV0LR @ %1  24 lshift and 24 rshift ; 
: CRYP_IV6@ CRYP_IV0LR @ %1  25 lshift and 25 rshift ; 
: CRYP_IV5@ CRYP_IV0LR @ %1  26 lshift and 26 rshift ; 
: CRYP_IV4@ CRYP_IV0LR @ %1  27 lshift and 27 rshift ; 
: CRYP_IV3@ CRYP_IV0LR @ %1  28 lshift and 28 rshift ; 
: CRYP_IV2@ CRYP_IV0LR @ %1  29 lshift and 29 rshift ; 
: CRYP_IV1@ CRYP_IV0LR @ %1  30 lshift and 30 rshift ; 
: CRYP_IV0@ CRYP_IV0LR @ %1  31 lshift and 31 rshift ; 

CRYP_IV0RR (read-write)
$00000000 CONSTANT RESET_CRYP_IV0RR 
 %1  0 lshift CRYP_IV0RR bis!        \ CRYP_IV63	Bit 0	 Width 1
 %1  1 lshift CRYP_IV0RR bis!        \ CRYP_IV62	Bit 1	 Width 1
 %1  2 lshift CRYP_IV0RR bis!        \ CRYP_IV61	Bit 2	 Width 1
 %1  3 lshift CRYP_IV0RR bis!        \ CRYP_IV60	Bit 3	 Width 1
 %1  4 lshift CRYP_IV0RR bis!        \ CRYP_IV59	Bit 4	 Width 1
 %1  5 lshift CRYP_IV0RR bis!        \ CRYP_IV58	Bit 5	 Width 1
 %1  6 lshift CRYP_IV0RR bis!        \ CRYP_IV57	Bit 6	 Width 1
 %1  7 lshift CRYP_IV0RR bis!        \ CRYP_IV56	Bit 7	 Width 1
 %1  8 lshift CRYP_IV0RR bis!        \ CRYP_IV55	Bit 8	 Width 1
 %1  9 lshift CRYP_IV0RR bis!        \ CRYP_IV54	Bit 9	 Width 1
 %1  10 lshift CRYP_IV0RR bis!        \ CRYP_IV53	Bit 10	 Width 1
 %1  11 lshift CRYP_IV0RR bis!        \ CRYP_IV52	Bit 11	 Width 1
 %1  12 lshift CRYP_IV0RR bis!        \ CRYP_IV51	Bit 12	 Width 1
 %1  13 lshift CRYP_IV0RR bis!        \ CRYP_IV50	Bit 13	 Width 1
 %1  14 lshift CRYP_IV0RR bis!        \ CRYP_IV49	Bit 14	 Width 1
 %1  15 lshift CRYP_IV0RR bis!        \ CRYP_IV48	Bit 15	 Width 1
 %1  16 lshift CRYP_IV0RR bis!        \ CRYP_IV47	Bit 16	 Width 1
 %1  17 lshift CRYP_IV0RR bis!        \ CRYP_IV46	Bit 17	 Width 1
 %1  18 lshift CRYP_IV0RR bis!        \ CRYP_IV45	Bit 18	 Width 1
 %1  19 lshift CRYP_IV0RR bis!        \ CRYP_IV44	Bit 19	 Width 1
 %1  20 lshift CRYP_IV0RR bis!        \ CRYP_IV43	Bit 20	 Width 1
 %1  21 lshift CRYP_IV0RR bis!        \ CRYP_IV42	Bit 21	 Width 1
 %1  22 lshift CRYP_IV0RR bis!        \ CRYP_IV41	Bit 22	 Width 1
 %1  23 lshift CRYP_IV0RR bis!        \ CRYP_IV40	Bit 23	 Width 1
 %1  24 lshift CRYP_IV0RR bis!        \ CRYP_IV39	Bit 24	 Width 1
 %1  25 lshift CRYP_IV0RR bis!        \ CRYP_IV38	Bit 25	 Width 1
 %1  26 lshift CRYP_IV0RR bis!        \ CRYP_IV37	Bit 26	 Width 1
 %1  27 lshift CRYP_IV0RR bis!        \ CRYP_IV36	Bit 27	 Width 1
 %1  28 lshift CRYP_IV0RR bis!        \ CRYP_IV35	Bit 28	 Width 1
 %1  29 lshift CRYP_IV0RR bis!        \ CRYP_IV34	Bit 29	 Width 1
 %1  30 lshift CRYP_IV0RR bis!        \ CRYP_IV33	Bit 30	 Width 1
 %1  31 lshift CRYP_IV0RR bis!        \ CRYP_IV32	Bit 31	 Width 1
\ CRYP_IV0RR Register BitField Fetch Words  
: CRYP_IV63@ CRYP_IV0RR @ %1  0 lshift and 0 rshift ; 
: CRYP_IV62@ CRYP_IV0RR @ %1  1 lshift and 1 rshift ; 
: CRYP_IV61@ CRYP_IV0RR @ %1  2 lshift and 2 rshift ; 
: CRYP_IV60@ CRYP_IV0RR @ %1  3 lshift and 3 rshift ; 
: CRYP_IV59@ CRYP_IV0RR @ %1  4 lshift and 4 rshift ; 
: CRYP_IV58@ CRYP_IV0RR @ %1  5 lshift and 5 rshift ; 
: CRYP_IV57@ CRYP_IV0RR @ %1  6 lshift and 6 rshift ; 
: CRYP_IV56@ CRYP_IV0RR @ %1  7 lshift and 7 rshift ; 
: CRYP_IV55@ CRYP_IV0RR @ %1  8 lshift and 8 rshift ; 
: CRYP_IV54@ CRYP_IV0RR @ %1  9 lshift and 9 rshift ; 
: CRYP_IV53@ CRYP_IV0RR @ %1  10 lshift and 10 rshift ; 
: CRYP_IV52@ CRYP_IV0RR @ %1  11 lshift and 11 rshift ; 
: CRYP_IV51@ CRYP_IV0RR @ %1  12 lshift and 12 rshift ; 
: CRYP_IV50@ CRYP_IV0RR @ %1  13 lshift and 13 rshift ; 
: CRYP_IV49@ CRYP_IV0RR @ %1  14 lshift and 14 rshift ; 
: CRYP_IV48@ CRYP_IV0RR @ %1  15 lshift and 15 rshift ; 
: CRYP_IV47@ CRYP_IV0RR @ %1  16 lshift and 16 rshift ; 
: CRYP_IV46@ CRYP_IV0RR @ %1  17 lshift and 17 rshift ; 
: CRYP_IV45@ CRYP_IV0RR @ %1  18 lshift and 18 rshift ; 
: CRYP_IV44@ CRYP_IV0RR @ %1  19 lshift and 19 rshift ; 
: CRYP_IV43@ CRYP_IV0RR @ %1  20 lshift and 20 rshift ; 
: CRYP_IV42@ CRYP_IV0RR @ %1  21 lshift and 21 rshift ; 
: CRYP_IV41@ CRYP_IV0RR @ %1  22 lshift and 22 rshift ; 
: CRYP_IV40@ CRYP_IV0RR @ %1  23 lshift and 23 rshift ; 
: CRYP_IV39@ CRYP_IV0RR @ %1  24 lshift and 24 rshift ; 
: CRYP_IV38@ CRYP_IV0RR @ %1  25 lshift and 25 rshift ; 
: CRYP_IV37@ CRYP_IV0RR @ %1  26 lshift and 26 rshift ; 
: CRYP_IV36@ CRYP_IV0RR @ %1  27 lshift and 27 rshift ; 
: CRYP_IV35@ CRYP_IV0RR @ %1  28 lshift and 28 rshift ; 
: CRYP_IV34@ CRYP_IV0RR @ %1  29 lshift and 29 rshift ; 
: CRYP_IV33@ CRYP_IV0RR @ %1  30 lshift and 30 rshift ; 
: CRYP_IV32@ CRYP_IV0RR @ %1  31 lshift and 31 rshift ; 

CRYP_IV1LR (read-write)
$00000000 CONSTANT RESET_CRYP_IV1LR 
 %1  0 lshift CRYP_IV1LR bis!        \ CRYP_IV95	Bit 0	 Width 1
 %1  1 lshift CRYP_IV1LR bis!        \ CRYP_IV94	Bit 1	 Width 1
 %1  2 lshift CRYP_IV1LR bis!        \ CRYP_IV93	Bit 2	 Width 1
 %1  3 lshift CRYP_IV1LR bis!        \ CRYP_IV92	Bit 3	 Width 1
 %1  4 lshift CRYP_IV1LR bis!        \ CRYP_IV91	Bit 4	 Width 1
 %1  5 lshift CRYP_IV1LR bis!        \ CRYP_IV90	Bit 5	 Width 1
 %1  6 lshift CRYP_IV1LR bis!        \ CRYP_IV89	Bit 6	 Width 1
 %1  7 lshift CRYP_IV1LR bis!        \ CRYP_IV88	Bit 7	 Width 1
 %1  8 lshift CRYP_IV1LR bis!        \ CRYP_IV87	Bit 8	 Width 1
 %1  9 lshift CRYP_IV1LR bis!        \ CRYP_IV86	Bit 9	 Width 1
 %1  10 lshift CRYP_IV1LR bis!        \ CRYP_IV85	Bit 10	 Width 1
 %1  11 lshift CRYP_IV1LR bis!        \ CRYP_IV84	Bit 11	 Width 1
 %1  12 lshift CRYP_IV1LR bis!        \ CRYP_IV83	Bit 12	 Width 1
 %1  13 lshift CRYP_IV1LR bis!        \ CRYP_IV82	Bit 13	 Width 1
 %1  14 lshift CRYP_IV1LR bis!        \ CRYP_IV81	Bit 14	 Width 1
 %1  15 lshift CRYP_IV1LR bis!        \ CRYP_IV80	Bit 15	 Width 1
 %1  16 lshift CRYP_IV1LR bis!        \ CRYP_IV79	Bit 16	 Width 1
 %1  17 lshift CRYP_IV1LR bis!        \ CRYP_IV78	Bit 17	 Width 1
 %1  18 lshift CRYP_IV1LR bis!        \ CRYP_IV77	Bit 18	 Width 1
 %1  19 lshift CRYP_IV1LR bis!        \ CRYP_IV76	Bit 19	 Width 1
 %1  20 lshift CRYP_IV1LR bis!        \ CRYP_IV75	Bit 20	 Width 1
 %1  21 lshift CRYP_IV1LR bis!        \ CRYP_IV74	Bit 21	 Width 1
 %1  22 lshift CRYP_IV1LR bis!        \ CRYP_IV73	Bit 22	 Width 1
 %1  23 lshift CRYP_IV1LR bis!        \ CRYP_IV72	Bit 23	 Width 1
 %1  24 lshift CRYP_IV1LR bis!        \ CRYP_IV71	Bit 24	 Width 1
 %1  25 lshift CRYP_IV1LR bis!        \ CRYP_IV70	Bit 25	 Width 1
 %1  26 lshift CRYP_IV1LR bis!        \ CRYP_IV69	Bit 26	 Width 1
 %1  27 lshift CRYP_IV1LR bis!        \ CRYP_IV68	Bit 27	 Width 1
 %1  28 lshift CRYP_IV1LR bis!        \ CRYP_IV67	Bit 28	 Width 1
 %1  29 lshift CRYP_IV1LR bis!        \ CRYP_IV66	Bit 29	 Width 1
 %1  30 lshift CRYP_IV1LR bis!        \ CRYP_IV65	Bit 30	 Width 1
 %1  31 lshift CRYP_IV1LR bis!        \ CRYP_IV64	Bit 31	 Width 1
\ CRYP_IV1LR Register BitField Fetch Words  
: CRYP_IV95@ CRYP_IV1LR @ %1  0 lshift and 0 rshift ; 
: CRYP_IV94@ CRYP_IV1LR @ %1  1 lshift and 1 rshift ; 
: CRYP_IV93@ CRYP_IV1LR @ %1  2 lshift and 2 rshift ; 
: CRYP_IV92@ CRYP_IV1LR @ %1  3 lshift and 3 rshift ; 
: CRYP_IV91@ CRYP_IV1LR @ %1  4 lshift and 4 rshift ; 
: CRYP_IV90@ CRYP_IV1LR @ %1  5 lshift and 5 rshift ; 
: CRYP_IV89@ CRYP_IV1LR @ %1  6 lshift and 6 rshift ; 
: CRYP_IV88@ CRYP_IV1LR @ %1  7 lshift and 7 rshift ; 
: CRYP_IV87@ CRYP_IV1LR @ %1  8 lshift and 8 rshift ; 
: CRYP_IV86@ CRYP_IV1LR @ %1  9 lshift and 9 rshift ; 
: CRYP_IV85@ CRYP_IV1LR @ %1  10 lshift and 10 rshift ; 
: CRYP_IV84@ CRYP_IV1LR @ %1  11 lshift and 11 rshift ; 
: CRYP_IV83@ CRYP_IV1LR @ %1  12 lshift and 12 rshift ; 
: CRYP_IV82@ CRYP_IV1LR @ %1  13 lshift and 13 rshift ; 
: CRYP_IV81@ CRYP_IV1LR @ %1  14 lshift and 14 rshift ; 
: CRYP_IV80@ CRYP_IV1LR @ %1  15 lshift and 15 rshift ; 
: CRYP_IV79@ CRYP_IV1LR @ %1  16 lshift and 16 rshift ; 
: CRYP_IV78@ CRYP_IV1LR @ %1  17 lshift and 17 rshift ; 
: CRYP_IV77@ CRYP_IV1LR @ %1  18 lshift and 18 rshift ; 
: CRYP_IV76@ CRYP_IV1LR @ %1  19 lshift and 19 rshift ; 
: CRYP_IV75@ CRYP_IV1LR @ %1  20 lshift and 20 rshift ; 
: CRYP_IV74@ CRYP_IV1LR @ %1  21 lshift and 21 rshift ; 
: CRYP_IV73@ CRYP_IV1LR @ %1  22 lshift and 22 rshift ; 
: CRYP_IV72@ CRYP_IV1LR @ %1  23 lshift and 23 rshift ; 
: CRYP_IV71@ CRYP_IV1LR @ %1  24 lshift and 24 rshift ; 
: CRYP_IV70@ CRYP_IV1LR @ %1  25 lshift and 25 rshift ; 
: CRYP_IV69@ CRYP_IV1LR @ %1  26 lshift and 26 rshift ; 
: CRYP_IV68@ CRYP_IV1LR @ %1  27 lshift and 27 rshift ; 
: CRYP_IV67@ CRYP_IV1LR @ %1  28 lshift and 28 rshift ; 
: CRYP_IV66@ CRYP_IV1LR @ %1  29 lshift and 29 rshift ; 
: CRYP_IV65@ CRYP_IV1LR @ %1  30 lshift and 30 rshift ; 
: CRYP_IV64@ CRYP_IV1LR @ %1  31 lshift and 31 rshift ; 

CRYP_IV1RR (read-write)
$00000000 CONSTANT RESET_CRYP_IV1RR 
 %1  0 lshift CRYP_IV1RR bis!        \ CRYP_IV127	Bit 0	 Width 1
 %1  1 lshift CRYP_IV1RR bis!        \ CRYP_IV126	Bit 1	 Width 1
 %1  2 lshift CRYP_IV1RR bis!        \ CRYP_IV125	Bit 2	 Width 1
 %1  3 lshift CRYP_IV1RR bis!        \ CRYP_IV124	Bit 3	 Width 1
 %1  4 lshift CRYP_IV1RR bis!        \ CRYP_IV123	Bit 4	 Width 1
 %1  5 lshift CRYP_IV1RR bis!        \ CRYP_IV122	Bit 5	 Width 1
 %1  6 lshift CRYP_IV1RR bis!        \ CRYP_IV121	Bit 6	 Width 1
 %1  7 lshift CRYP_IV1RR bis!        \ CRYP_IV120	Bit 7	 Width 1
 %1  8 lshift CRYP_IV1RR bis!        \ CRYP_IV119	Bit 8	 Width 1
 %1  9 lshift CRYP_IV1RR bis!        \ CRYP_IV118	Bit 9	 Width 1
 %1  10 lshift CRYP_IV1RR bis!        \ CRYP_IV117	Bit 10	 Width 1
 %1  11 lshift CRYP_IV1RR bis!        \ CRYP_IV116	Bit 11	 Width 1
 %1  12 lshift CRYP_IV1RR bis!        \ CRYP_IV115	Bit 12	 Width 1
 %1  13 lshift CRYP_IV1RR bis!        \ CRYP_IV114	Bit 13	 Width 1
 %1  14 lshift CRYP_IV1RR bis!        \ CRYP_IV113	Bit 14	 Width 1
 %1  15 lshift CRYP_IV1RR bis!        \ CRYP_IV112	Bit 15	 Width 1
 %1  16 lshift CRYP_IV1RR bis!        \ CRYP_IV111	Bit 16	 Width 1
 %1  17 lshift CRYP_IV1RR bis!        \ CRYP_IV110	Bit 17	 Width 1
 %1  18 lshift CRYP_IV1RR bis!        \ CRYP_IV109	Bit 18	 Width 1
 %1  19 lshift CRYP_IV1RR bis!        \ CRYP_IV108	Bit 19	 Width 1
 %1  20 lshift CRYP_IV1RR bis!        \ CRYP_IV107	Bit 20	 Width 1
 %1  21 lshift CRYP_IV1RR bis!        \ CRYP_IV106	Bit 21	 Width 1
 %1  22 lshift CRYP_IV1RR bis!        \ CRYP_IV105	Bit 22	 Width 1
 %1  23 lshift CRYP_IV1RR bis!        \ CRYP_IV104	Bit 23	 Width 1
 %1  24 lshift CRYP_IV1RR bis!        \ CRYP_IV103	Bit 24	 Width 1
 %1  25 lshift CRYP_IV1RR bis!        \ CRYP_IV102	Bit 25	 Width 1
 %1  26 lshift CRYP_IV1RR bis!        \ CRYP_IV101	Bit 26	 Width 1
 %1  27 lshift CRYP_IV1RR bis!        \ CRYP_IV100	Bit 27	 Width 1
 %1  28 lshift CRYP_IV1RR bis!        \ CRYP_IV99	Bit 28	 Width 1
 %1  29 lshift CRYP_IV1RR bis!        \ CRYP_IV98	Bit 29	 Width 1
 %1  30 lshift CRYP_IV1RR bis!        \ CRYP_IV97	Bit 30	 Width 1
 %1  31 lshift CRYP_IV1RR bis!        \ CRYP_IV96	Bit 31	 Width 1
\ CRYP_IV1RR Register BitField Fetch Words  
: CRYP_IV127@ CRYP_IV1RR @ %1  0 lshift and 0 rshift ; 
: CRYP_IV126@ CRYP_IV1RR @ %1  1 lshift and 1 rshift ; 
: CRYP_IV125@ CRYP_IV1RR @ %1  2 lshift and 2 rshift ; 
: CRYP_IV124@ CRYP_IV1RR @ %1  3 lshift and 3 rshift ; 
: CRYP_IV123@ CRYP_IV1RR @ %1  4 lshift and 4 rshift ; 
: CRYP_IV122@ CRYP_IV1RR @ %1  5 lshift and 5 rshift ; 
: CRYP_IV121@ CRYP_IV1RR @ %1  6 lshift and 6 rshift ; 
: CRYP_IV120@ CRYP_IV1RR @ %1  7 lshift and 7 rshift ; 
: CRYP_IV119@ CRYP_IV1RR @ %1  8 lshift and 8 rshift ; 
: CRYP_IV118@ CRYP_IV1RR @ %1  9 lshift and 9 rshift ; 
: CRYP_IV117@ CRYP_IV1RR @ %1  10 lshift and 10 rshift ; 
: CRYP_IV116@ CRYP_IV1RR @ %1  11 lshift and 11 rshift ; 
: CRYP_IV115@ CRYP_IV1RR @ %1  12 lshift and 12 rshift ; 
: CRYP_IV114@ CRYP_IV1RR @ %1  13 lshift and 13 rshift ; 
: CRYP_IV113@ CRYP_IV1RR @ %1  14 lshift and 14 rshift ; 
: CRYP_IV112@ CRYP_IV1RR @ %1  15 lshift and 15 rshift ; 
: CRYP_IV111@ CRYP_IV1RR @ %1  16 lshift and 16 rshift ; 
: CRYP_IV110@ CRYP_IV1RR @ %1  17 lshift and 17 rshift ; 
: CRYP_IV109@ CRYP_IV1RR @ %1  18 lshift and 18 rshift ; 
: CRYP_IV108@ CRYP_IV1RR @ %1  19 lshift and 19 rshift ; 
: CRYP_IV107@ CRYP_IV1RR @ %1  20 lshift and 20 rshift ; 
: CRYP_IV106@ CRYP_IV1RR @ %1  21 lshift and 21 rshift ; 
: CRYP_IV105@ CRYP_IV1RR @ %1  22 lshift and 22 rshift ; 
: CRYP_IV104@ CRYP_IV1RR @ %1  23 lshift and 23 rshift ; 
: CRYP_IV103@ CRYP_IV1RR @ %1  24 lshift and 24 rshift ; 
: CRYP_IV102@ CRYP_IV1RR @ %1  25 lshift and 25 rshift ; 
: CRYP_IV101@ CRYP_IV1RR @ %1  26 lshift and 26 rshift ; 
: CRYP_IV100@ CRYP_IV1RR @ %1  27 lshift and 27 rshift ; 
: CRYP_IV99@ CRYP_IV1RR @ %1  28 lshift and 28 rshift ; 
: CRYP_IV98@ CRYP_IV1RR @ %1  29 lshift and 29 rshift ; 
: CRYP_IV97@ CRYP_IV1RR @ %1  30 lshift and 30 rshift ; 
: CRYP_IV96@ CRYP_IV1RR @ %1  31 lshift and 31 rshift ; 

                    
################################### DCMI ###################################
DCMI_CR (read-write)
$0000 CONSTANT RESET_DCMI_CR 
 %1  14 lshift DCMI_CR bis!        \ DCMI_ENABLE	Bit 14	 Width 1
 %xx  10 lshift DCMI_CR bis!        \ DCMI_EDM	Bit 10	 Width 2
 %xx  8 lshift DCMI_CR bis!        \ DCMI_FCRC	Bit 8	 Width 2
 %1  7 lshift DCMI_CR bis!        \ DCMI_VSPOL	Bit 7	 Width 1
 %1  6 lshift DCMI_CR bis!        \ DCMI_HSPOL	Bit 6	 Width 1
 %1  5 lshift DCMI_CR bis!        \ DCMI_PCKPOL	Bit 5	 Width 1
 %1  4 lshift DCMI_CR bis!        \ DCMI_ESS	Bit 4	 Width 1
 %1  3 lshift DCMI_CR bis!        \ DCMI_JPEG	Bit 3	 Width 1
 %1  2 lshift DCMI_CR bis!        \ DCMI_CROP	Bit 2	 Width 1
 %1  1 lshift DCMI_CR bis!        \ DCMI_CM	Bit 1	 Width 1
 %1  0 lshift DCMI_CR bis!        \ DCMI_CAPTURE	Bit 0	 Width 1
\ DCMI_CR Register BitField Fetch Words  
: DCMI_ENABLE@ DCMI_CR @ %1  14 lshift and 14 rshift ; 
: DCMI_EDM@ DCMI_CR @ %11  10 lshift and 10 rshift ; 
: DCMI_FCRC@ DCMI_CR @ %11  8 lshift and 8 rshift ; 
: DCMI_VSPOL@ DCMI_CR @ %1  7 lshift and 7 rshift ; 
: DCMI_HSPOL@ DCMI_CR @ %1  6 lshift and 6 rshift ; 
: DCMI_PCKPOL@ DCMI_CR @ %1  5 lshift and 5 rshift ; 
: DCMI_ESS@ DCMI_CR @ %1  4 lshift and 4 rshift ; 
: DCMI_JPEG@ DCMI_CR @ %1  3 lshift and 3 rshift ; 
: DCMI_CROP@ DCMI_CR @ %1  2 lshift and 2 rshift ; 
: DCMI_CM@ DCMI_CR @ %1  1 lshift and 1 rshift ; 
: DCMI_CAPTURE@ DCMI_CR @ %1  0 lshift and 0 rshift ; 

DCMI_SR (read-only)
$0000 CONSTANT RESET_DCMI_SR 
 %1  2 lshift DCMI_SR bis!        \ DCMI_FNE	Bit 2	 Width 1
 %1  1 lshift DCMI_SR bis!        \ DCMI_VSYNC	Bit 1	 Width 1
 %1  0 lshift DCMI_SR bis!        \ DCMI_HSYNC	Bit 0	 Width 1
\ DCMI_SR Register BitField Fetch Words  
: DCMI_FNE@ DCMI_SR @ %1  2 lshift and 2 rshift ; 
: DCMI_VSYNC@ DCMI_SR @ %1  1 lshift and 1 rshift ; 
: DCMI_HSYNC@ DCMI_SR @ %1  0 lshift and 0 rshift ; 

DCMI_RIS (read-only)
$0000 CONSTANT RESET_DCMI_RIS 
 %1  4 lshift DCMI_RIS bis!        \ DCMI_LINE_RIS	Bit 4	 Width 1
 %1  3 lshift DCMI_RIS bis!        \ DCMI_VSYNC_RIS	Bit 3	 Width 1
 %1  2 lshift DCMI_RIS bis!        \ DCMI_ERR_RIS	Bit 2	 Width 1
 %1  1 lshift DCMI_RIS bis!        \ DCMI_OVR_RIS	Bit 1	 Width 1
 %1  0 lshift DCMI_RIS bis!        \ DCMI_FRAME_RIS	Bit 0	 Width 1
\ DCMI_RIS Register BitField Fetch Words  
: DCMI_LINE_RIS@ DCMI_RIS @ %1  4 lshift and 4 rshift ; 
: DCMI_VSYNC_RIS@ DCMI_RIS @ %1  3 lshift and 3 rshift ; 
: DCMI_ERR_RIS@ DCMI_RIS @ %1  2 lshift and 2 rshift ; 
: DCMI_OVR_RIS@ DCMI_RIS @ %1  1 lshift and 1 rshift ; 
: DCMI_FRAME_RIS@ DCMI_RIS @ %1  0 lshift and 0 rshift ; 

DCMI_IER (read-write)
$0000 CONSTANT RESET_DCMI_IER 
 %1  4 lshift DCMI_IER bis!        \ DCMI_LINE_IE	Bit 4	 Width 1
 %1  3 lshift DCMI_IER bis!        \ DCMI_VSYNC_IE	Bit 3	 Width 1
 %1  2 lshift DCMI_IER bis!        \ DCMI_ERR_IE	Bit 2	 Width 1
 %1  1 lshift DCMI_IER bis!        \ DCMI_OVR_IE	Bit 1	 Width 1
 %1  0 lshift DCMI_IER bis!        \ DCMI_FRAME_IE	Bit 0	 Width 1
\ DCMI_IER Register BitField Fetch Words  
: DCMI_LINE_IE@ DCMI_IER @ %1  4 lshift and 4 rshift ; 
: DCMI_VSYNC_IE@ DCMI_IER @ %1  3 lshift and 3 rshift ; 
: DCMI_ERR_IE@ DCMI_IER @ %1  2 lshift and 2 rshift ; 
: DCMI_OVR_IE@ DCMI_IER @ %1  1 lshift and 1 rshift ; 
: DCMI_FRAME_IE@ DCMI_IER @ %1  0 lshift and 0 rshift ; 

DCMI_MIS (read-only)
$0000 CONSTANT RESET_DCMI_MIS 
 %1  4 lshift DCMI_MIS bis!        \ DCMI_LINE_MIS	Bit 4	 Width 1
 %1  3 lshift DCMI_MIS bis!        \ DCMI_VSYNC_MIS	Bit 3	 Width 1
 %1  2 lshift DCMI_MIS bis!        \ DCMI_ERR_MIS	Bit 2	 Width 1
 %1  1 lshift DCMI_MIS bis!        \ DCMI_OVR_MIS	Bit 1	 Width 1
 %1  0 lshift DCMI_MIS bis!        \ DCMI_FRAME_MIS	Bit 0	 Width 1
\ DCMI_MIS Register BitField Fetch Words  
: DCMI_LINE_MIS@ DCMI_MIS @ %1  4 lshift and 4 rshift ; 
: DCMI_VSYNC_MIS@ DCMI_MIS @ %1  3 lshift and 3 rshift ; 
: DCMI_ERR_MIS@ DCMI_MIS @ %1  2 lshift and 2 rshift ; 
: DCMI_OVR_MIS@ DCMI_MIS @ %1  1 lshift and 1 rshift ; 
: DCMI_FRAME_MIS@ DCMI_MIS @ %1  0 lshift and 0 rshift ; 

DCMI_ICR (write-only)
$0000 CONSTANT RESET_DCMI_ICR 
 %1  4 lshift DCMI_ICR bis!        \ DCMI_LINE_ISC	Bit 4	 Width 1
 %1  3 lshift DCMI_ICR bis!        \ DCMI_VSYNC_ISC	Bit 3	 Width 1
 %1  2 lshift DCMI_ICR bis!        \ DCMI_ERR_ISC	Bit 2	 Width 1
 %1  1 lshift DCMI_ICR bis!        \ DCMI_OVR_ISC	Bit 1	 Width 1
 %1  0 lshift DCMI_ICR bis!        \ DCMI_FRAME_ISC	Bit 0	 Width 1
\ DCMI_ICR Register BitField Fetch Words  
: DCMI_LINE_ISC@ DCMI_ICR @ %1  4 lshift and 4 rshift ; 
: DCMI_VSYNC_ISC@ DCMI_ICR @ %1  3 lshift and 3 rshift ; 
: DCMI_ERR_ISC@ DCMI_ICR @ %1  2 lshift and 2 rshift ; 
: DCMI_OVR_ISC@ DCMI_ICR @ %1  1 lshift and 1 rshift ; 
: DCMI_FRAME_ISC@ DCMI_ICR @ %1  0 lshift and 0 rshift ; 

DCMI_ESCR (read-write)
$0000 CONSTANT RESET_DCMI_ESCR 
 %xxxxxxxx  24 lshift DCMI_ESCR bis!        \ DCMI_FEC	Bit 24	 Width 8
 %xxxxxxxx  16 lshift DCMI_ESCR bis!        \ DCMI_LEC	Bit 16	 Width 8
 %xxxxxxxx  8 lshift DCMI_ESCR bis!        \ DCMI_LSC	Bit 8	 Width 8
 %xxxxxxxx  0 lshift DCMI_ESCR bis!        \ DCMI_FSC	Bit 0	 Width 8
\ DCMI_ESCR Register BitField Fetch Words  
: DCMI_FEC@ DCMI_ESCR @ %11111111  24 lshift and 24 rshift ; 
: DCMI_LEC@ DCMI_ESCR @ %11111111  16 lshift and 16 rshift ; 
: DCMI_LSC@ DCMI_ESCR @ %11111111  8 lshift and 8 rshift ; 
: DCMI_FSC@ DCMI_ESCR @ %11111111  0 lshift and 0 rshift ; 

DCMI_ESUR (read-write)
$0000 CONSTANT RESET_DCMI_ESUR 
 %xxxxxxxx  24 lshift DCMI_ESUR bis!        \ DCMI_FEU	Bit 24	 Width 8
 %xxxxxxxx  16 lshift DCMI_ESUR bis!        \ DCMI_LEU	Bit 16	 Width 8
 %xxxxxxxx  8 lshift DCMI_ESUR bis!        \ DCMI_LSU	Bit 8	 Width 8
 %xxxxxxxx  0 lshift DCMI_ESUR bis!        \ DCMI_FSU	Bit 0	 Width 8
\ DCMI_ESUR Register BitField Fetch Words  
: DCMI_FEU@ DCMI_ESUR @ %11111111  24 lshift and 24 rshift ; 
: DCMI_LEU@ DCMI_ESUR @ %11111111  16 lshift and 16 rshift ; 
: DCMI_LSU@ DCMI_ESUR @ %11111111  8 lshift and 8 rshift ; 
: DCMI_FSU@ DCMI_ESUR @ %11111111  0 lshift and 0 rshift ; 

DCMI_CWSTRT (read-write)
$0000 CONSTANT RESET_DCMI_CWSTRT 
 % 16 lshift DCMI_CWSTRT bis!        \ DCMI_VST	Bit 16	 Width 13
 %xxxxxxxxxxxxxx  0 lshift DCMI_CWSTRT bis!        \ DCMI_HOFFCNT	Bit 0	 Width 14
\ DCMI_CWSTRT Register BitField Fetch Words  
: DCMI_VST@ DCMI_CWSTRT @ % 16 lshift and 16 rshift ; 
: DCMI_HOFFCNT@ DCMI_CWSTRT @ %11111111111111  0 lshift and 0 rshift ; 

DCMI_CWSIZE (read-write)
$0000 CONSTANT RESET_DCMI_CWSIZE 
 %xxxxxxxxxxxxxx  16 lshift DCMI_CWSIZE bis!        \ DCMI_VLINE	Bit 16	 Width 14
 %xxxxxxxxxxxxxx  0 lshift DCMI_CWSIZE bis!        \ DCMI_CAPCNT	Bit 0	 Width 14
\ DCMI_CWSIZE Register BitField Fetch Words  
: DCMI_VLINE@ DCMI_CWSIZE @ %11111111111111  16 lshift and 16 rshift ; 
: DCMI_CAPCNT@ DCMI_CWSIZE @ %11111111111111  0 lshift and 0 rshift ; 

DCMI_DR (read-only)
$0000 CONSTANT RESET_DCMI_DR 
 %xxxxxxxx  24 lshift DCMI_DR bis!        \ DCMI_Byte3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift DCMI_DR bis!        \ DCMI_Byte2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift DCMI_DR bis!        \ DCMI_Byte1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift DCMI_DR bis!        \ DCMI_Byte0	Bit 0	 Width 8
\ DCMI_DR Register BitField Fetch Words  
: DCMI_Byte3@ DCMI_DR @ %11111111  24 lshift and 24 rshift ; 
: DCMI_Byte2@ DCMI_DR @ %11111111  16 lshift and 16 rshift ; 
: DCMI_Byte1@ DCMI_DR @ %11111111  8 lshift and 8 rshift ; 
: DCMI_Byte0@ DCMI_DR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### FSMC ###################################
FSMC_BCR1 (read-write)
$000030D0 CONSTANT RESET_FSMC_BCR1 
 %1  19 lshift FSMC_BCR1 bis!        \ FSMC_CBURSTRW	Bit 19	 Width 1
 %1  15 lshift FSMC_BCR1 bis!        \ FSMC_ASYNCWAIT	Bit 15	 Width 1
 %1  14 lshift FSMC_BCR1 bis!        \ FSMC_EXTMOD	Bit 14	 Width 1
 %1  13 lshift FSMC_BCR1 bis!        \ FSMC_WAITEN	Bit 13	 Width 1
 %1  12 lshift FSMC_BCR1 bis!        \ FSMC_WREN	Bit 12	 Width 1
 %1  11 lshift FSMC_BCR1 bis!        \ FSMC_WAITCFG	Bit 11	 Width 1
 %1  9 lshift FSMC_BCR1 bis!        \ FSMC_WAITPOL	Bit 9	 Width 1
 %1  8 lshift FSMC_BCR1 bis!        \ FSMC_BURSTEN	Bit 8	 Width 1
 %1  6 lshift FSMC_BCR1 bis!        \ FSMC_FACCEN	Bit 6	 Width 1
 %xx  4 lshift FSMC_BCR1 bis!        \ FSMC_MWID	Bit 4	 Width 2
 %xx  2 lshift FSMC_BCR1 bis!        \ FSMC_MTYP	Bit 2	 Width 2
 %1  1 lshift FSMC_BCR1 bis!        \ FSMC_MUXEN	Bit 1	 Width 1
 %1  0 lshift FSMC_BCR1 bis!        \ FSMC_MBKEN	Bit 0	 Width 1
\ FSMC_BCR1 Register BitField Fetch Words  
: FSMC_CBURSTRW@ FSMC_BCR1 @ %1  19 lshift and 19 rshift ; 
: FSMC_ASYNCWAIT@ FSMC_BCR1 @ %1  15 lshift and 15 rshift ; 
: FSMC_EXTMOD@ FSMC_BCR1 @ %1  14 lshift and 14 rshift ; 
: FSMC_WAITEN@ FSMC_BCR1 @ %1  13 lshift and 13 rshift ; 
: FSMC_WREN@ FSMC_BCR1 @ %1  12 lshift and 12 rshift ; 
: FSMC_WAITCFG@ FSMC_BCR1 @ %1  11 lshift and 11 rshift ; 
: FSMC_WAITPOL@ FSMC_BCR1 @ %1  9 lshift and 9 rshift ; 
: FSMC_BURSTEN@ FSMC_BCR1 @ %1  8 lshift and 8 rshift ; 
: FSMC_FACCEN@ FSMC_BCR1 @ %1  6 lshift and 6 rshift ; 
: FSMC_MWID@ FSMC_BCR1 @ %11  4 lshift and 4 rshift ; 
: FSMC_MTYP@ FSMC_BCR1 @ %11  2 lshift and 2 rshift ; 
: FSMC_MUXEN@ FSMC_BCR1 @ %1  1 lshift and 1 rshift ; 
: FSMC_MBKEN@ FSMC_BCR1 @ %1  0 lshift and 0 rshift ; 

FSMC_BTR1 (read-write)
$FFFFFFFF CONSTANT RESET_FSMC_BTR1 
 %xx  28 lshift FSMC_BTR1 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BTR1 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BTR1 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxx  16 lshift FSMC_BTR1 bis!        \ FSMC_BUSTURN	Bit 16	 Width 4
 %xxxxxxxx  8 lshift FSMC_BTR1 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BTR1 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BTR1 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BTR1 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BTR1 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BTR1 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BTR1 @ %1111  20 lshift and 20 rshift ; 
: FSMC_BUSTURN@ FSMC_BTR1 @ %1111  16 lshift and 16 rshift ; 
: FSMC_DATAST@ FSMC_BTR1 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BTR1 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BTR1 @ %1111  0 lshift and 0 rshift ; 

FSMC_BCR2 (read-write)
$000030D0 CONSTANT RESET_FSMC_BCR2 
 %1  19 lshift FSMC_BCR2 bis!        \ FSMC_CBURSTRW	Bit 19	 Width 1
 %1  15 lshift FSMC_BCR2 bis!        \ FSMC_ASYNCWAIT	Bit 15	 Width 1
 %1  14 lshift FSMC_BCR2 bis!        \ FSMC_EXTMOD	Bit 14	 Width 1
 %1  13 lshift FSMC_BCR2 bis!        \ FSMC_WAITEN	Bit 13	 Width 1
 %1  12 lshift FSMC_BCR2 bis!        \ FSMC_WREN	Bit 12	 Width 1
 %1  11 lshift FSMC_BCR2 bis!        \ FSMC_WAITCFG	Bit 11	 Width 1
 %1  10 lshift FSMC_BCR2 bis!        \ FSMC_WRAPMOD	Bit 10	 Width 1
 %1  9 lshift FSMC_BCR2 bis!        \ FSMC_WAITPOL	Bit 9	 Width 1
 %1  8 lshift FSMC_BCR2 bis!        \ FSMC_BURSTEN	Bit 8	 Width 1
 %1  6 lshift FSMC_BCR2 bis!        \ FSMC_FACCEN	Bit 6	 Width 1
 %xx  4 lshift FSMC_BCR2 bis!        \ FSMC_MWID	Bit 4	 Width 2
 %xx  2 lshift FSMC_BCR2 bis!        \ FSMC_MTYP	Bit 2	 Width 2
 %1  1 lshift FSMC_BCR2 bis!        \ FSMC_MUXEN	Bit 1	 Width 1
 %1  0 lshift FSMC_BCR2 bis!        \ FSMC_MBKEN	Bit 0	 Width 1
\ FSMC_BCR2 Register BitField Fetch Words  
: FSMC_CBURSTRW@ FSMC_BCR2 @ %1  19 lshift and 19 rshift ; 
: FSMC_ASYNCWAIT@ FSMC_BCR2 @ %1  15 lshift and 15 rshift ; 
: FSMC_EXTMOD@ FSMC_BCR2 @ %1  14 lshift and 14 rshift ; 
: FSMC_WAITEN@ FSMC_BCR2 @ %1  13 lshift and 13 rshift ; 
: FSMC_WREN@ FSMC_BCR2 @ %1  12 lshift and 12 rshift ; 
: FSMC_WAITCFG@ FSMC_BCR2 @ %1  11 lshift and 11 rshift ; 
: FSMC_WRAPMOD@ FSMC_BCR2 @ %1  10 lshift and 10 rshift ; 
: FSMC_WAITPOL@ FSMC_BCR2 @ %1  9 lshift and 9 rshift ; 
: FSMC_BURSTEN@ FSMC_BCR2 @ %1  8 lshift and 8 rshift ; 
: FSMC_FACCEN@ FSMC_BCR2 @ %1  6 lshift and 6 rshift ; 
: FSMC_MWID@ FSMC_BCR2 @ %11  4 lshift and 4 rshift ; 
: FSMC_MTYP@ FSMC_BCR2 @ %11  2 lshift and 2 rshift ; 
: FSMC_MUXEN@ FSMC_BCR2 @ %1  1 lshift and 1 rshift ; 
: FSMC_MBKEN@ FSMC_BCR2 @ %1  0 lshift and 0 rshift ; 

FSMC_BTR2 (read-write)
$FFFFFFFF CONSTANT RESET_FSMC_BTR2 
 %xx  28 lshift FSMC_BTR2 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BTR2 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BTR2 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxx  16 lshift FSMC_BTR2 bis!        \ FSMC_BUSTURN	Bit 16	 Width 4
 %xxxxxxxx  8 lshift FSMC_BTR2 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BTR2 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BTR2 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BTR2 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BTR2 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BTR2 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BTR2 @ %1111  20 lshift and 20 rshift ; 
: FSMC_BUSTURN@ FSMC_BTR2 @ %1111  16 lshift and 16 rshift ; 
: FSMC_DATAST@ FSMC_BTR2 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BTR2 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BTR2 @ %1111  0 lshift and 0 rshift ; 

FSMC_BCR3 (read-write)
$000030D0 CONSTANT RESET_FSMC_BCR3 
 %1  19 lshift FSMC_BCR3 bis!        \ FSMC_CBURSTRW	Bit 19	 Width 1
 %1  15 lshift FSMC_BCR3 bis!        \ FSMC_ASYNCWAIT	Bit 15	 Width 1
 %1  14 lshift FSMC_BCR3 bis!        \ FSMC_EXTMOD	Bit 14	 Width 1
 %1  13 lshift FSMC_BCR3 bis!        \ FSMC_WAITEN	Bit 13	 Width 1
 %1  12 lshift FSMC_BCR3 bis!        \ FSMC_WREN	Bit 12	 Width 1
 %1  11 lshift FSMC_BCR3 bis!        \ FSMC_WAITCFG	Bit 11	 Width 1
 %1  10 lshift FSMC_BCR3 bis!        \ FSMC_WRAPMOD	Bit 10	 Width 1
 %1  9 lshift FSMC_BCR3 bis!        \ FSMC_WAITPOL	Bit 9	 Width 1
 %1  8 lshift FSMC_BCR3 bis!        \ FSMC_BURSTEN	Bit 8	 Width 1
 %1  6 lshift FSMC_BCR3 bis!        \ FSMC_FACCEN	Bit 6	 Width 1
 %xx  4 lshift FSMC_BCR3 bis!        \ FSMC_MWID	Bit 4	 Width 2
 %xx  2 lshift FSMC_BCR3 bis!        \ FSMC_MTYP	Bit 2	 Width 2
 %1  1 lshift FSMC_BCR3 bis!        \ FSMC_MUXEN	Bit 1	 Width 1
 %1  0 lshift FSMC_BCR3 bis!        \ FSMC_MBKEN	Bit 0	 Width 1
\ FSMC_BCR3 Register BitField Fetch Words  
: FSMC_CBURSTRW@ FSMC_BCR3 @ %1  19 lshift and 19 rshift ; 
: FSMC_ASYNCWAIT@ FSMC_BCR3 @ %1  15 lshift and 15 rshift ; 
: FSMC_EXTMOD@ FSMC_BCR3 @ %1  14 lshift and 14 rshift ; 
: FSMC_WAITEN@ FSMC_BCR3 @ %1  13 lshift and 13 rshift ; 
: FSMC_WREN@ FSMC_BCR3 @ %1  12 lshift and 12 rshift ; 
: FSMC_WAITCFG@ FSMC_BCR3 @ %1  11 lshift and 11 rshift ; 
: FSMC_WRAPMOD@ FSMC_BCR3 @ %1  10 lshift and 10 rshift ; 
: FSMC_WAITPOL@ FSMC_BCR3 @ %1  9 lshift and 9 rshift ; 
: FSMC_BURSTEN@ FSMC_BCR3 @ %1  8 lshift and 8 rshift ; 
: FSMC_FACCEN@ FSMC_BCR3 @ %1  6 lshift and 6 rshift ; 
: FSMC_MWID@ FSMC_BCR3 @ %11  4 lshift and 4 rshift ; 
: FSMC_MTYP@ FSMC_BCR3 @ %11  2 lshift and 2 rshift ; 
: FSMC_MUXEN@ FSMC_BCR3 @ %1  1 lshift and 1 rshift ; 
: FSMC_MBKEN@ FSMC_BCR3 @ %1  0 lshift and 0 rshift ; 

FSMC_BTR3 (read-write)
$FFFFFFFF CONSTANT RESET_FSMC_BTR3 
 %xx  28 lshift FSMC_BTR3 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BTR3 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BTR3 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxx  16 lshift FSMC_BTR3 bis!        \ FSMC_BUSTURN	Bit 16	 Width 4
 %xxxxxxxx  8 lshift FSMC_BTR3 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BTR3 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BTR3 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BTR3 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BTR3 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BTR3 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BTR3 @ %1111  20 lshift and 20 rshift ; 
: FSMC_BUSTURN@ FSMC_BTR3 @ %1111  16 lshift and 16 rshift ; 
: FSMC_DATAST@ FSMC_BTR3 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BTR3 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BTR3 @ %1111  0 lshift and 0 rshift ; 

FSMC_BCR4 (read-write)
$000030D0 CONSTANT RESET_FSMC_BCR4 
 %1  19 lshift FSMC_BCR4 bis!        \ FSMC_CBURSTRW	Bit 19	 Width 1
 %1  15 lshift FSMC_BCR4 bis!        \ FSMC_ASYNCWAIT	Bit 15	 Width 1
 %1  14 lshift FSMC_BCR4 bis!        \ FSMC_EXTMOD	Bit 14	 Width 1
 %1  13 lshift FSMC_BCR4 bis!        \ FSMC_WAITEN	Bit 13	 Width 1
 %1  12 lshift FSMC_BCR4 bis!        \ FSMC_WREN	Bit 12	 Width 1
 %1  11 lshift FSMC_BCR4 bis!        \ FSMC_WAITCFG	Bit 11	 Width 1
 %1  10 lshift FSMC_BCR4 bis!        \ FSMC_WRAPMOD	Bit 10	 Width 1
 %1  9 lshift FSMC_BCR4 bis!        \ FSMC_WAITPOL	Bit 9	 Width 1
 %1  8 lshift FSMC_BCR4 bis!        \ FSMC_BURSTEN	Bit 8	 Width 1
 %1  6 lshift FSMC_BCR4 bis!        \ FSMC_FACCEN	Bit 6	 Width 1
 %xx  4 lshift FSMC_BCR4 bis!        \ FSMC_MWID	Bit 4	 Width 2
 %xx  2 lshift FSMC_BCR4 bis!        \ FSMC_MTYP	Bit 2	 Width 2
 %1  1 lshift FSMC_BCR4 bis!        \ FSMC_MUXEN	Bit 1	 Width 1
 %1  0 lshift FSMC_BCR4 bis!        \ FSMC_MBKEN	Bit 0	 Width 1
\ FSMC_BCR4 Register BitField Fetch Words  
: FSMC_CBURSTRW@ FSMC_BCR4 @ %1  19 lshift and 19 rshift ; 
: FSMC_ASYNCWAIT@ FSMC_BCR4 @ %1  15 lshift and 15 rshift ; 
: FSMC_EXTMOD@ FSMC_BCR4 @ %1  14 lshift and 14 rshift ; 
: FSMC_WAITEN@ FSMC_BCR4 @ %1  13 lshift and 13 rshift ; 
: FSMC_WREN@ FSMC_BCR4 @ %1  12 lshift and 12 rshift ; 
: FSMC_WAITCFG@ FSMC_BCR4 @ %1  11 lshift and 11 rshift ; 
: FSMC_WRAPMOD@ FSMC_BCR4 @ %1  10 lshift and 10 rshift ; 
: FSMC_WAITPOL@ FSMC_BCR4 @ %1  9 lshift and 9 rshift ; 
: FSMC_BURSTEN@ FSMC_BCR4 @ %1  8 lshift and 8 rshift ; 
: FSMC_FACCEN@ FSMC_BCR4 @ %1  6 lshift and 6 rshift ; 
: FSMC_MWID@ FSMC_BCR4 @ %11  4 lshift and 4 rshift ; 
: FSMC_MTYP@ FSMC_BCR4 @ %11  2 lshift and 2 rshift ; 
: FSMC_MUXEN@ FSMC_BCR4 @ %1  1 lshift and 1 rshift ; 
: FSMC_MBKEN@ FSMC_BCR4 @ %1  0 lshift and 0 rshift ; 

FSMC_BTR4 (read-write)
$FFFFFFFF CONSTANT RESET_FSMC_BTR4 
 %xx  28 lshift FSMC_BTR4 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BTR4 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BTR4 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxx  16 lshift FSMC_BTR4 bis!        \ FSMC_BUSTURN	Bit 16	 Width 4
 %xxxxxxxx  8 lshift FSMC_BTR4 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BTR4 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BTR4 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BTR4 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BTR4 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BTR4 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BTR4 @ %1111  20 lshift and 20 rshift ; 
: FSMC_BUSTURN@ FSMC_BTR4 @ %1111  16 lshift and 16 rshift ; 
: FSMC_DATAST@ FSMC_BTR4 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BTR4 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BTR4 @ %1111  0 lshift and 0 rshift ; 

FSMC_PCR2 (read-write)
$00000018 CONSTANT RESET_FSMC_PCR2 
 %xxx  17 lshift FSMC_PCR2 bis!        \ FSMC_ECCPS	Bit 17	 Width 3
 %xxxx  13 lshift FSMC_PCR2 bis!        \ FSMC_TAR	Bit 13	 Width 4
 %xxxx  9 lshift FSMC_PCR2 bis!        \ FSMC_TCLR	Bit 9	 Width 4
 %1  6 lshift FSMC_PCR2 bis!        \ FSMC_ECCEN	Bit 6	 Width 1
 %xx  4 lshift FSMC_PCR2 bis!        \ FSMC_PWID	Bit 4	 Width 2
 %1  3 lshift FSMC_PCR2 bis!        \ FSMC_PTYP	Bit 3	 Width 1
 %1  2 lshift FSMC_PCR2 bis!        \ FSMC_PBKEN	Bit 2	 Width 1
 %1  1 lshift FSMC_PCR2 bis!        \ FSMC_PWAITEN	Bit 1	 Width 1
\ FSMC_PCR2 Register BitField Fetch Words  
: FSMC_ECCPS@ FSMC_PCR2 @ %111  17 lshift and 17 rshift ; 
: FSMC_TAR@ FSMC_PCR2 @ %1111  13 lshift and 13 rshift ; 
: FSMC_TCLR@ FSMC_PCR2 @ %1111  9 lshift and 9 rshift ; 
: FSMC_ECCEN@ FSMC_PCR2 @ %1  6 lshift and 6 rshift ; 
: FSMC_PWID@ FSMC_PCR2 @ %11  4 lshift and 4 rshift ; 
: FSMC_PTYP@ FSMC_PCR2 @ %1  3 lshift and 3 rshift ; 
: FSMC_PBKEN@ FSMC_PCR2 @ %1  2 lshift and 2 rshift ; 
: FSMC_PWAITEN@ FSMC_PCR2 @ %1  1 lshift and 1 rshift ; 

FSMC_SR2 ()
$00000040 CONSTANT RESET_FSMC_SR2 
 %1  6 lshift FSMC_SR2 bis!        \ FSMC_FEMPT	Bit 6	 Width 1
 %1  5 lshift FSMC_SR2 bis!        \ FSMC_IFEN	Bit 5	 Width 1
 %1  4 lshift FSMC_SR2 bis!        \ FSMC_ILEN	Bit 4	 Width 1
 %1  3 lshift FSMC_SR2 bis!        \ FSMC_IREN	Bit 3	 Width 1
 %1  2 lshift FSMC_SR2 bis!        \ FSMC_IFS	Bit 2	 Width 1
 %1  1 lshift FSMC_SR2 bis!        \ FSMC_ILS	Bit 1	 Width 1
 %1  0 lshift FSMC_SR2 bis!        \ FSMC_IRS	Bit 0	 Width 1
\ FSMC_SR2 Register BitField Fetch Words  
: FSMC_FEMPT@ FSMC_SR2 @ %1  6 lshift and 6 rshift ; 
: FSMC_IFEN@ FSMC_SR2 @ %1  5 lshift and 5 rshift ; 
: FSMC_ILEN@ FSMC_SR2 @ %1  4 lshift and 4 rshift ; 
: FSMC_IREN@ FSMC_SR2 @ %1  3 lshift and 3 rshift ; 
: FSMC_IFS@ FSMC_SR2 @ %1  2 lshift and 2 rshift ; 
: FSMC_ILS@ FSMC_SR2 @ %1  1 lshift and 1 rshift ; 
: FSMC_IRS@ FSMC_SR2 @ %1  0 lshift and 0 rshift ; 

FSMC_PMEM2 (read-write)
$FCFCFCFC CONSTANT RESET_FSMC_PMEM2 
 %xxxxxxxx  24 lshift FSMC_PMEM2 bis!        \ FSMC_MEMHIZx	Bit 24	 Width 8
 %xxxxxxxx  16 lshift FSMC_PMEM2 bis!        \ FSMC_MEMHOLDx	Bit 16	 Width 8
 %xxxxxxxx  8 lshift FSMC_PMEM2 bis!        \ FSMC_MEMWAITx	Bit 8	 Width 8
 %xxxxxxxx  0 lshift FSMC_PMEM2 bis!        \ FSMC_MEMSETx	Bit 0	 Width 8
\ FSMC_PMEM2 Register BitField Fetch Words  
: FSMC_MEMHIZx@ FSMC_PMEM2 @ %11111111  24 lshift and 24 rshift ; 
: FSMC_MEMHOLDx@ FSMC_PMEM2 @ %11111111  16 lshift and 16 rshift ; 
: FSMC_MEMWAITx@ FSMC_PMEM2 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_MEMSETx@ FSMC_PMEM2 @ %11111111  0 lshift and 0 rshift ; 

FSMC_PATT2 (read-write)
$FCFCFCFC CONSTANT RESET_FSMC_PATT2 
 %xxxxxxxx  24 lshift FSMC_PATT2 bis!        \ FSMC_ATTHIZx	Bit 24	 Width 8
 %xxxxxxxx  16 lshift FSMC_PATT2 bis!        \ FSMC_ATTHOLDx	Bit 16	 Width 8
 %xxxxxxxx  8 lshift FSMC_PATT2 bis!        \ FSMC_ATTWAITx	Bit 8	 Width 8
 %xxxxxxxx  0 lshift FSMC_PATT2 bis!        \ FSMC_ATTSETx	Bit 0	 Width 8
\ FSMC_PATT2 Register BitField Fetch Words  
: FSMC_ATTHIZx@ FSMC_PATT2 @ %11111111  24 lshift and 24 rshift ; 
: FSMC_ATTHOLDx@ FSMC_PATT2 @ %11111111  16 lshift and 16 rshift ; 
: FSMC_ATTWAITx@ FSMC_PATT2 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ATTSETx@ FSMC_PATT2 @ %11111111  0 lshift and 0 rshift ; 

FSMC_ECCR2 (read-only)
$00000000 CONSTANT RESET_FSMC_ECCR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift FSMC_ECCR2 bis!        \ FSMC_ECCx	Bit 0	 Width 32
\ FSMC_ECCR2 Register BitField Fetch Words  
: FSMC_ECCx@ FSMC_ECCR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

FSMC_PCR3 (read-write)
$00000018 CONSTANT RESET_FSMC_PCR3 
 %xxx  17 lshift FSMC_PCR3 bis!        \ FSMC_ECCPS	Bit 17	 Width 3
 %xxxx  13 lshift FSMC_PCR3 bis!        \ FSMC_TAR	Bit 13	 Width 4
 %xxxx  9 lshift FSMC_PCR3 bis!        \ FSMC_TCLR	Bit 9	 Width 4
 %1  6 lshift FSMC_PCR3 bis!        \ FSMC_ECCEN	Bit 6	 Width 1
 %xx  4 lshift FSMC_PCR3 bis!        \ FSMC_PWID	Bit 4	 Width 2
 %1  3 lshift FSMC_PCR3 bis!        \ FSMC_PTYP	Bit 3	 Width 1
 %1  2 lshift FSMC_PCR3 bis!        \ FSMC_PBKEN	Bit 2	 Width 1
 %1  1 lshift FSMC_PCR3 bis!        \ FSMC_PWAITEN	Bit 1	 Width 1
\ FSMC_PCR3 Register BitField Fetch Words  
: FSMC_ECCPS@ FSMC_PCR3 @ %111  17 lshift and 17 rshift ; 
: FSMC_TAR@ FSMC_PCR3 @ %1111  13 lshift and 13 rshift ; 
: FSMC_TCLR@ FSMC_PCR3 @ %1111  9 lshift and 9 rshift ; 
: FSMC_ECCEN@ FSMC_PCR3 @ %1  6 lshift and 6 rshift ; 
: FSMC_PWID@ FSMC_PCR3 @ %11  4 lshift and 4 rshift ; 
: FSMC_PTYP@ FSMC_PCR3 @ %1  3 lshift and 3 rshift ; 
: FSMC_PBKEN@ FSMC_PCR3 @ %1  2 lshift and 2 rshift ; 
: FSMC_PWAITEN@ FSMC_PCR3 @ %1  1 lshift and 1 rshift ; 

FSMC_SR3 ()
$00000040 CONSTANT RESET_FSMC_SR3 
 %1  6 lshift FSMC_SR3 bis!        \ FSMC_FEMPT	Bit 6	 Width 1
 %1  5 lshift FSMC_SR3 bis!        \ FSMC_IFEN	Bit 5	 Width 1
 %1  4 lshift FSMC_SR3 bis!        \ FSMC_ILEN	Bit 4	 Width 1
 %1  3 lshift FSMC_SR3 bis!        \ FSMC_IREN	Bit 3	 Width 1
 %1  2 lshift FSMC_SR3 bis!        \ FSMC_IFS	Bit 2	 Width 1
 %1  1 lshift FSMC_SR3 bis!        \ FSMC_ILS	Bit 1	 Width 1
 %1  0 lshift FSMC_SR3 bis!        \ FSMC_IRS	Bit 0	 Width 1
\ FSMC_SR3 Register BitField Fetch Words  
: FSMC_FEMPT@ FSMC_SR3 @ %1  6 lshift and 6 rshift ; 
: FSMC_IFEN@ FSMC_SR3 @ %1  5 lshift and 5 rshift ; 
: FSMC_ILEN@ FSMC_SR3 @ %1  4 lshift and 4 rshift ; 
: FSMC_IREN@ FSMC_SR3 @ %1  3 lshift and 3 rshift ; 
: FSMC_IFS@ FSMC_SR3 @ %1  2 lshift and 2 rshift ; 
: FSMC_ILS@ FSMC_SR3 @ %1  1 lshift and 1 rshift ; 
: FSMC_IRS@ FSMC_SR3 @ %1  0 lshift and 0 rshift ; 

FSMC_PMEM3 (read-write)
$FCFCFCFC CONSTANT RESET_FSMC_PMEM3 
 %xxxxxxxx  24 lshift FSMC_PMEM3 bis!        \ FSMC_MEMHIZx	Bit 24	 Width 8
 %xxxxxxxx  16 lshift FSMC_PMEM3 bis!        \ FSMC_MEMHOLDx	Bit 16	 Width 8
 %xxxxxxxx  8 lshift FSMC_PMEM3 bis!        \ FSMC_MEMWAITx	Bit 8	 Width 8
 %xxxxxxxx  0 lshift FSMC_PMEM3 bis!        \ FSMC_MEMSETx	Bit 0	 Width 8
\ FSMC_PMEM3 Register BitField Fetch Words  
: FSMC_MEMHIZx@ FSMC_PMEM3 @ %11111111  24 lshift and 24 rshift ; 
: FSMC_MEMHOLDx@ FSMC_PMEM3 @ %11111111  16 lshift and 16 rshift ; 
: FSMC_MEMWAITx@ FSMC_PMEM3 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_MEMSETx@ FSMC_PMEM3 @ %11111111  0 lshift and 0 rshift ; 

FSMC_PATT3 (read-write)
$FCFCFCFC CONSTANT RESET_FSMC_PATT3 
 %xxxxxxxx  24 lshift FSMC_PATT3 bis!        \ FSMC_ATTHIZx	Bit 24	 Width 8
 %xxxxxxxx  16 lshift FSMC_PATT3 bis!        \ FSMC_ATTHOLDx	Bit 16	 Width 8
 %xxxxxxxx  8 lshift FSMC_PATT3 bis!        \ FSMC_ATTWAITx	Bit 8	 Width 8
 %xxxxxxxx  0 lshift FSMC_PATT3 bis!        \ FSMC_ATTSETx	Bit 0	 Width 8
\ FSMC_PATT3 Register BitField Fetch Words  
: FSMC_ATTHIZx@ FSMC_PATT3 @ %11111111  24 lshift and 24 rshift ; 
: FSMC_ATTHOLDx@ FSMC_PATT3 @ %11111111  16 lshift and 16 rshift ; 
: FSMC_ATTWAITx@ FSMC_PATT3 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ATTSETx@ FSMC_PATT3 @ %11111111  0 lshift and 0 rshift ; 

FSMC_ECCR3 (read-only)
$00000000 CONSTANT RESET_FSMC_ECCR3 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift FSMC_ECCR3 bis!        \ FSMC_ECCx	Bit 0	 Width 32
\ FSMC_ECCR3 Register BitField Fetch Words  
: FSMC_ECCx@ FSMC_ECCR3 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

FSMC_PCR4 (read-write)
$00000018 CONSTANT RESET_FSMC_PCR4 
 %xxx  17 lshift FSMC_PCR4 bis!        \ FSMC_ECCPS	Bit 17	 Width 3
 %xxxx  13 lshift FSMC_PCR4 bis!        \ FSMC_TAR	Bit 13	 Width 4
 %xxxx  9 lshift FSMC_PCR4 bis!        \ FSMC_TCLR	Bit 9	 Width 4
 %1  6 lshift FSMC_PCR4 bis!        \ FSMC_ECCEN	Bit 6	 Width 1
 %xx  4 lshift FSMC_PCR4 bis!        \ FSMC_PWID	Bit 4	 Width 2
 %1  3 lshift FSMC_PCR4 bis!        \ FSMC_PTYP	Bit 3	 Width 1
 %1  2 lshift FSMC_PCR4 bis!        \ FSMC_PBKEN	Bit 2	 Width 1
 %1  1 lshift FSMC_PCR4 bis!        \ FSMC_PWAITEN	Bit 1	 Width 1
\ FSMC_PCR4 Register BitField Fetch Words  
: FSMC_ECCPS@ FSMC_PCR4 @ %111  17 lshift and 17 rshift ; 
: FSMC_TAR@ FSMC_PCR4 @ %1111  13 lshift and 13 rshift ; 
: FSMC_TCLR@ FSMC_PCR4 @ %1111  9 lshift and 9 rshift ; 
: FSMC_ECCEN@ FSMC_PCR4 @ %1  6 lshift and 6 rshift ; 
: FSMC_PWID@ FSMC_PCR4 @ %11  4 lshift and 4 rshift ; 
: FSMC_PTYP@ FSMC_PCR4 @ %1  3 lshift and 3 rshift ; 
: FSMC_PBKEN@ FSMC_PCR4 @ %1  2 lshift and 2 rshift ; 
: FSMC_PWAITEN@ FSMC_PCR4 @ %1  1 lshift and 1 rshift ; 

FSMC_SR4 ()
$00000040 CONSTANT RESET_FSMC_SR4 
 %1  6 lshift FSMC_SR4 bis!        \ FSMC_FEMPT	Bit 6	 Width 1
 %1  5 lshift FSMC_SR4 bis!        \ FSMC_IFEN	Bit 5	 Width 1
 %1  4 lshift FSMC_SR4 bis!        \ FSMC_ILEN	Bit 4	 Width 1
 %1  3 lshift FSMC_SR4 bis!        \ FSMC_IREN	Bit 3	 Width 1
 %1  2 lshift FSMC_SR4 bis!        \ FSMC_IFS	Bit 2	 Width 1
 %1  1 lshift FSMC_SR4 bis!        \ FSMC_ILS	Bit 1	 Width 1
 %1  0 lshift FSMC_SR4 bis!        \ FSMC_IRS	Bit 0	 Width 1
\ FSMC_SR4 Register BitField Fetch Words  
: FSMC_FEMPT@ FSMC_SR4 @ %1  6 lshift and 6 rshift ; 
: FSMC_IFEN@ FSMC_SR4 @ %1  5 lshift and 5 rshift ; 
: FSMC_ILEN@ FSMC_SR4 @ %1  4 lshift and 4 rshift ; 
: FSMC_IREN@ FSMC_SR4 @ %1  3 lshift and 3 rshift ; 
: FSMC_IFS@ FSMC_SR4 @ %1  2 lshift and 2 rshift ; 
: FSMC_ILS@ FSMC_SR4 @ %1  1 lshift and 1 rshift ; 
: FSMC_IRS@ FSMC_SR4 @ %1  0 lshift and 0 rshift ; 

FSMC_PMEM4 (read-write)
$FCFCFCFC CONSTANT RESET_FSMC_PMEM4 
 %xxxxxxxx  24 lshift FSMC_PMEM4 bis!        \ FSMC_MEMHIZx	Bit 24	 Width 8
 %xxxxxxxx  16 lshift FSMC_PMEM4 bis!        \ FSMC_MEMHOLDx	Bit 16	 Width 8
 %xxxxxxxx  8 lshift FSMC_PMEM4 bis!        \ FSMC_MEMWAITx	Bit 8	 Width 8
 %xxxxxxxx  0 lshift FSMC_PMEM4 bis!        \ FSMC_MEMSETx	Bit 0	 Width 8
\ FSMC_PMEM4 Register BitField Fetch Words  
: FSMC_MEMHIZx@ FSMC_PMEM4 @ %11111111  24 lshift and 24 rshift ; 
: FSMC_MEMHOLDx@ FSMC_PMEM4 @ %11111111  16 lshift and 16 rshift ; 
: FSMC_MEMWAITx@ FSMC_PMEM4 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_MEMSETx@ FSMC_PMEM4 @ %11111111  0 lshift and 0 rshift ; 

FSMC_PATT4 (read-write)
$FCFCFCFC CONSTANT RESET_FSMC_PATT4 
 %xxxxxxxx  24 lshift FSMC_PATT4 bis!        \ FSMC_ATTHIZx	Bit 24	 Width 8
 %xxxxxxxx  16 lshift FSMC_PATT4 bis!        \ FSMC_ATTHOLDx	Bit 16	 Width 8
 %xxxxxxxx  8 lshift FSMC_PATT4 bis!        \ FSMC_ATTWAITx	Bit 8	 Width 8
 %xxxxxxxx  0 lshift FSMC_PATT4 bis!        \ FSMC_ATTSETx	Bit 0	 Width 8
\ FSMC_PATT4 Register BitField Fetch Words  
: FSMC_ATTHIZx@ FSMC_PATT4 @ %11111111  24 lshift and 24 rshift ; 
: FSMC_ATTHOLDx@ FSMC_PATT4 @ %11111111  16 lshift and 16 rshift ; 
: FSMC_ATTWAITx@ FSMC_PATT4 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ATTSETx@ FSMC_PATT4 @ %11111111  0 lshift and 0 rshift ; 

FSMC_PIO4 (read-write)
$FCFCFCFC CONSTANT RESET_FSMC_PIO4 
 %xxxxxxxx  24 lshift FSMC_PIO4 bis!        \ FSMC_IOHIZx	Bit 24	 Width 8
 %xxxxxxxx  16 lshift FSMC_PIO4 bis!        \ FSMC_IOHOLDx	Bit 16	 Width 8
 %xxxxxxxx  8 lshift FSMC_PIO4 bis!        \ FSMC_IOWAITx	Bit 8	 Width 8
 %xxxxxxxx  0 lshift FSMC_PIO4 bis!        \ FSMC_IOSETx	Bit 0	 Width 8
\ FSMC_PIO4 Register BitField Fetch Words  
: FSMC_IOHIZx@ FSMC_PIO4 @ %11111111  24 lshift and 24 rshift ; 
: FSMC_IOHOLDx@ FSMC_PIO4 @ %11111111  16 lshift and 16 rshift ; 
: FSMC_IOWAITx@ FSMC_PIO4 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_IOSETx@ FSMC_PIO4 @ %11111111  0 lshift and 0 rshift ; 

FSMC_BWTR1 (read-write)
$0FFFFFFF CONSTANT RESET_FSMC_BWTR1 
 %xx  28 lshift FSMC_BWTR1 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BWTR1 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BWTR1 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxxxxxx  8 lshift FSMC_BWTR1 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BWTR1 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BWTR1 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BWTR1 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BWTR1 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BWTR1 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BWTR1 @ %1111  20 lshift and 20 rshift ; 
: FSMC_DATAST@ FSMC_BWTR1 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BWTR1 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BWTR1 @ %1111  0 lshift and 0 rshift ; 

FSMC_BWTR2 (read-write)
$0FFFFFFF CONSTANT RESET_FSMC_BWTR2 
 %xx  28 lshift FSMC_BWTR2 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BWTR2 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BWTR2 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxxxxxx  8 lshift FSMC_BWTR2 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BWTR2 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BWTR2 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BWTR2 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BWTR2 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BWTR2 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BWTR2 @ %1111  20 lshift and 20 rshift ; 
: FSMC_DATAST@ FSMC_BWTR2 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BWTR2 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BWTR2 @ %1111  0 lshift and 0 rshift ; 

FSMC_BWTR3 (read-write)
$0FFFFFFF CONSTANT RESET_FSMC_BWTR3 
 %xx  28 lshift FSMC_BWTR3 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BWTR3 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BWTR3 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxxxxxx  8 lshift FSMC_BWTR3 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BWTR3 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BWTR3 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BWTR3 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BWTR3 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BWTR3 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BWTR3 @ %1111  20 lshift and 20 rshift ; 
: FSMC_DATAST@ FSMC_BWTR3 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BWTR3 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BWTR3 @ %1111  0 lshift and 0 rshift ; 

FSMC_BWTR4 (read-write)
$0FFFFFFF CONSTANT RESET_FSMC_BWTR4 
 %xx  28 lshift FSMC_BWTR4 bis!        \ FSMC_ACCMOD	Bit 28	 Width 2
 %xxxx  24 lshift FSMC_BWTR4 bis!        \ FSMC_DATLAT	Bit 24	 Width 4
 %xxxx  20 lshift FSMC_BWTR4 bis!        \ FSMC_CLKDIV	Bit 20	 Width 4
 %xxxxxxxx  8 lshift FSMC_BWTR4 bis!        \ FSMC_DATAST	Bit 8	 Width 8
 %xxxx  4 lshift FSMC_BWTR4 bis!        \ FSMC_ADDHLD	Bit 4	 Width 4
 %xxxx  0 lshift FSMC_BWTR4 bis!        \ FSMC_ADDSET	Bit 0	 Width 4
\ FSMC_BWTR4 Register BitField Fetch Words  
: FSMC_ACCMOD@ FSMC_BWTR4 @ %11  28 lshift and 28 rshift ; 
: FSMC_DATLAT@ FSMC_BWTR4 @ %1111  24 lshift and 24 rshift ; 
: FSMC_CLKDIV@ FSMC_BWTR4 @ %1111  20 lshift and 20 rshift ; 
: FSMC_DATAST@ FSMC_BWTR4 @ %11111111  8 lshift and 8 rshift ; 
: FSMC_ADDHLD@ FSMC_BWTR4 @ %1111  4 lshift and 4 rshift ; 
: FSMC_ADDSET@ FSMC_BWTR4 @ %1111  0 lshift and 0 rshift ; 

                    
################################### DBG ###################################
DBG_DBGMCU_IDCODE (read-only)
$10006411 CONSTANT RESET_DBG_DBGMCU_IDCODE 
 %xxxxxxxxxxxx  0 lshift DBG_DBGMCU_IDCODE bis!        \ DBG_DEV_ID	Bit 0	 Width 12
 %xxxxxxxxxxxxxxxx  16 lshift DBG_DBGMCU_IDCODE bis!        \ DBG_REV_ID	Bit 16	 Width 16
\ DBG_DBGMCU_IDCODE Register BitField Fetch Words  
: DBG_DEV_ID@ DBG_DBGMCU_IDCODE @ %11111111111  0 lshift and 0 rshift ; 
: DBG_REV_ID@ DBG_DBGMCU_IDCODE @ %1111111111111111  16 lshift and 16 rshift ; 

DBG_DBGMCU_CR (read-write)
$00000000 CONSTANT RESET_DBG_DBGMCU_CR 
 %1  0 lshift DBG_DBGMCU_CR bis!        \ DBG_DBG_SLEEP	Bit 0	 Width 1
 %1  1 lshift DBG_DBGMCU_CR bis!        \ DBG_DBG_STOP	Bit 1	 Width 1
 %1  2 lshift DBG_DBGMCU_CR bis!        \ DBG_DBG_STANDBY	Bit 2	 Width 1
 %1  5 lshift DBG_DBGMCU_CR bis!        \ DBG_TRACE_IOEN	Bit 5	 Width 1
 %xx  6 lshift DBG_DBGMCU_CR bis!        \ DBG_TRACE_MODE	Bit 6	 Width 2
\ DBG_DBGMCU_CR Register BitField Fetch Words  
: DBG_DBG_SLEEP@ DBG_DBGMCU_CR @ %1  0 lshift and 0 rshift ; 
: DBG_DBG_STOP@ DBG_DBGMCU_CR @ %1  1 lshift and 1 rshift ; 
: DBG_DBG_STANDBY@ DBG_DBGMCU_CR @ %1  2 lshift and 2 rshift ; 
: DBG_TRACE_IOEN@ DBG_DBGMCU_CR @ %1  5 lshift and 5 rshift ; 
: DBG_TRACE_MODE@ DBG_DBGMCU_CR @ %11  6 lshift and 6 rshift ; 

DBG_DBGMCU_APB1_FZ (read-write)
$00000000 CONSTANT RESET_DBG_DBGMCU_APB1_FZ 
 %1  0 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM2_STOP	Bit 0	 Width 1
 %1  1 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM3_STOP	Bit 1	 Width 1
 %1  2 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM4_STOP	Bit 2	 Width 1
 %1  3 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM5_STOP	Bit 3	 Width 1
 %1  4 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM6_STOP	Bit 4	 Width 1
 %1  5 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM7_STOP	Bit 5	 Width 1
 %1  6 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM12_STOP	Bit 6	 Width 1
 %1  7 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM13_STOP	Bit 7	 Width 1
 %1  8 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_TIM14_STOP	Bit 8	 Width 1
 %1  11 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_WWDG_STOP	Bit 11	 Width 1
 %1  12 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_IWDEG_STOP	Bit 12	 Width 1
 %1  21 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_J2C1_SMBUS_TIMEOUT	Bit 21	 Width 1
 %1  22 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_J2C2_SMBUS_TIMEOUT	Bit 22	 Width 1
 %1  23 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_J2C3SMBUS_TIMEOUT	Bit 23	 Width 1
 %1  25 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_CAN1_STOP	Bit 25	 Width 1
 %1  26 lshift DBG_DBGMCU_APB1_FZ bis!        \ DBG_DBG_CAN2_STOP	Bit 26	 Width 1
\ DBG_DBGMCU_APB1_FZ Register BitField Fetch Words  
: DBG_DBG_TIM2_STOP@ DBG_DBGMCU_APB1_FZ @ %1  0 lshift and 0 rshift ; 
: DBG_DBG_TIM3_STOP@ DBG_DBGMCU_APB1_FZ @ %1  1 lshift and 1 rshift ; 
: DBG_DBG_TIM4_STOP@ DBG_DBGMCU_APB1_FZ @ %1  2 lshift and 2 rshift ; 
: DBG_DBG_TIM5_STOP@ DBG_DBGMCU_APB1_FZ @ %1  3 lshift and 3 rshift ; 
: DBG_DBG_TIM6_STOP@ DBG_DBGMCU_APB1_FZ @ %1  4 lshift and 4 rshift ; 
: DBG_DBG_TIM7_STOP@ DBG_DBGMCU_APB1_FZ @ %1  5 lshift and 5 rshift ; 
: DBG_DBG_TIM12_STOP@ DBG_DBGMCU_APB1_FZ @ %1  6 lshift and 6 rshift ; 
: DBG_DBG_TIM13_STOP@ DBG_DBGMCU_APB1_FZ @ %1  7 lshift and 7 rshift ; 
: DBG_DBG_TIM14_STOP@ DBG_DBGMCU_APB1_FZ @ %1  8 lshift and 8 rshift ; 
: DBG_DBG_WWDG_STOP@ DBG_DBGMCU_APB1_FZ @ %1  11 lshift and 11 rshift ; 
: DBG_DBG_IWDEG_STOP@ DBG_DBGMCU_APB1_FZ @ %1  12 lshift and 12 rshift ; 
: DBG_DBG_J2C1_SMBUS_TIMEOUT@ DBG_DBGMCU_APB1_FZ @ %1  21 lshift and 21 rshift ; 
: DBG_DBG_J2C2_SMBUS_TIMEOUT@ DBG_DBGMCU_APB1_FZ @ %1  22 lshift and 22 rshift ; 
: DBG_DBG_J2C3SMBUS_TIMEOUT@ DBG_DBGMCU_APB1_FZ @ %1  23 lshift and 23 rshift ; 
: DBG_DBG_CAN1_STOP@ DBG_DBGMCU_APB1_FZ @ %1  25 lshift and 25 rshift ; 
: DBG_DBG_CAN2_STOP@ DBG_DBGMCU_APB1_FZ @ %1  26 lshift and 26 rshift ; 

DBG_DBGMCU_APB2_FZ (read-write)
$00000000 CONSTANT RESET_DBG_DBGMCU_APB2_FZ 
 %1  0 lshift DBG_DBGMCU_APB2_FZ bis!        \ DBG_DBG_TIM1_STOP	Bit 0	 Width 1
 %1  1 lshift DBG_DBGMCU_APB2_FZ bis!        \ DBG_DBG_TIM8_STOP	Bit 1	 Width 1
 %1  16 lshift DBG_DBGMCU_APB2_FZ bis!        \ DBG_DBG_TIM9_STOP	Bit 16	 Width 1
 %1  17 lshift DBG_DBGMCU_APB2_FZ bis!        \ DBG_DBG_TIM10_STOP	Bit 17	 Width 1
 %1  18 lshift DBG_DBGMCU_APB2_FZ bis!        \ DBG_DBG_TIM11_STOP	Bit 18	 Width 1
\ DBG_DBGMCU_APB2_FZ Register BitField Fetch Words  
: DBG_DBG_TIM1_STOP@ DBG_DBGMCU_APB2_FZ @ %1  0 lshift and 0 rshift ; 
: DBG_DBG_TIM8_STOP@ DBG_DBGMCU_APB2_FZ @ %1  1 lshift and 1 rshift ; 
: DBG_DBG_TIM9_STOP@ DBG_DBGMCU_APB2_FZ @ %1  16 lshift and 16 rshift ; 
: DBG_DBG_TIM10_STOP@ DBG_DBGMCU_APB2_FZ @ %1  17 lshift and 17 rshift ; 
: DBG_DBG_TIM11_STOP@ DBG_DBGMCU_APB2_FZ @ %1  18 lshift and 18 rshift ; 

                    
################################### DMA2 ###################################
DMA2_LISR (read-only)
$00000000 CONSTANT RESET_DMA2_LISR 
 %1  27 lshift DMA2_LISR bis!        \ DMA2_TCIF3	Bit 27	 Width 1
 %1  26 lshift DMA2_LISR bis!        \ DMA2_HTIF3	Bit 26	 Width 1
 %1  25 lshift DMA2_LISR bis!        \ DMA2_TEIF3	Bit 25	 Width 1
 %1  24 lshift DMA2_LISR bis!        \ DMA2_DMEIF3	Bit 24	 Width 1
 %1  22 lshift DMA2_LISR bis!        \ DMA2_FEIF3	Bit 22	 Width 1
 %1  21 lshift DMA2_LISR bis!        \ DMA2_TCIF2	Bit 21	 Width 1
 %1  20 lshift DMA2_LISR bis!        \ DMA2_HTIF2	Bit 20	 Width 1
 %1  19 lshift DMA2_LISR bis!        \ DMA2_TEIF2	Bit 19	 Width 1
 %1  18 lshift DMA2_LISR bis!        \ DMA2_DMEIF2	Bit 18	 Width 1
 %1  16 lshift DMA2_LISR bis!        \ DMA2_FEIF2	Bit 16	 Width 1
 %1  11 lshift DMA2_LISR bis!        \ DMA2_TCIF1	Bit 11	 Width 1
 %1  10 lshift DMA2_LISR bis!        \ DMA2_HTIF1	Bit 10	 Width 1
 %1  9 lshift DMA2_LISR bis!        \ DMA2_TEIF1	Bit 9	 Width 1
 %1  8 lshift DMA2_LISR bis!        \ DMA2_DMEIF1	Bit 8	 Width 1
 %1  6 lshift DMA2_LISR bis!        \ DMA2_FEIF1	Bit 6	 Width 1
 %1  5 lshift DMA2_LISR bis!        \ DMA2_TCIF0	Bit 5	 Width 1
 %1  4 lshift DMA2_LISR bis!        \ DMA2_HTIF0	Bit 4	 Width 1
 %1  3 lshift DMA2_LISR bis!        \ DMA2_TEIF0	Bit 3	 Width 1
 %1  2 lshift DMA2_LISR bis!        \ DMA2_DMEIF0	Bit 2	 Width 1
 %1  0 lshift DMA2_LISR bis!        \ DMA2_FEIF0	Bit 0	 Width 1
\ DMA2_LISR Register BitField Fetch Words  
: DMA2_TCIF3@ DMA2_LISR @ %1  27 lshift and 27 rshift ; 
: DMA2_HTIF3@ DMA2_LISR @ %1  26 lshift and 26 rshift ; 
: DMA2_TEIF3@ DMA2_LISR @ %1  25 lshift and 25 rshift ; 
: DMA2_DMEIF3@ DMA2_LISR @ %1  24 lshift and 24 rshift ; 
: DMA2_FEIF3@ DMA2_LISR @ %1  22 lshift and 22 rshift ; 
: DMA2_TCIF2@ DMA2_LISR @ %1  21 lshift and 21 rshift ; 
: DMA2_HTIF2@ DMA2_LISR @ %1  20 lshift and 20 rshift ; 
: DMA2_TEIF2@ DMA2_LISR @ %1  19 lshift and 19 rshift ; 
: DMA2_DMEIF2@ DMA2_LISR @ %1  18 lshift and 18 rshift ; 
: DMA2_FEIF2@ DMA2_LISR @ %1  16 lshift and 16 rshift ; 
: DMA2_TCIF1@ DMA2_LISR @ %1  11 lshift and 11 rshift ; 
: DMA2_HTIF1@ DMA2_LISR @ %1  10 lshift and 10 rshift ; 
: DMA2_TEIF1@ DMA2_LISR @ %1  9 lshift and 9 rshift ; 
: DMA2_DMEIF1@ DMA2_LISR @ %1  8 lshift and 8 rshift ; 
: DMA2_FEIF1@ DMA2_LISR @ %1  6 lshift and 6 rshift ; 
: DMA2_TCIF0@ DMA2_LISR @ %1  5 lshift and 5 rshift ; 
: DMA2_HTIF0@ DMA2_LISR @ %1  4 lshift and 4 rshift ; 
: DMA2_TEIF0@ DMA2_LISR @ %1  3 lshift and 3 rshift ; 
: DMA2_DMEIF0@ DMA2_LISR @ %1  2 lshift and 2 rshift ; 
: DMA2_FEIF0@ DMA2_LISR @ %1  0 lshift and 0 rshift ; 

DMA2_HISR (read-only)
$00000000 CONSTANT RESET_DMA2_HISR 
 %1  27 lshift DMA2_HISR bis!        \ DMA2_TCIF7	Bit 27	 Width 1
 %1  26 lshift DMA2_HISR bis!        \ DMA2_HTIF7	Bit 26	 Width 1
 %1  25 lshift DMA2_HISR bis!        \ DMA2_TEIF7	Bit 25	 Width 1
 %1  24 lshift DMA2_HISR bis!        \ DMA2_DMEIF7	Bit 24	 Width 1
 %1  22 lshift DMA2_HISR bis!        \ DMA2_FEIF7	Bit 22	 Width 1
 %1  21 lshift DMA2_HISR bis!        \ DMA2_TCIF6	Bit 21	 Width 1
 %1  20 lshift DMA2_HISR bis!        \ DMA2_HTIF6	Bit 20	 Width 1
 %1  19 lshift DMA2_HISR bis!        \ DMA2_TEIF6	Bit 19	 Width 1
 %1  18 lshift DMA2_HISR bis!        \ DMA2_DMEIF6	Bit 18	 Width 1
 %1  16 lshift DMA2_HISR bis!        \ DMA2_FEIF6	Bit 16	 Width 1
 %1  11 lshift DMA2_HISR bis!        \ DMA2_TCIF5	Bit 11	 Width 1
 %1  10 lshift DMA2_HISR bis!        \ DMA2_HTIF5	Bit 10	 Width 1
 %1  9 lshift DMA2_HISR bis!        \ DMA2_TEIF5	Bit 9	 Width 1
 %1  8 lshift DMA2_HISR bis!        \ DMA2_DMEIF5	Bit 8	 Width 1
 %1  6 lshift DMA2_HISR bis!        \ DMA2_FEIF5	Bit 6	 Width 1
 %1  5 lshift DMA2_HISR bis!        \ DMA2_TCIF4	Bit 5	 Width 1
 %1  4 lshift DMA2_HISR bis!        \ DMA2_HTIF4	Bit 4	 Width 1
 %1  3 lshift DMA2_HISR bis!        \ DMA2_TEIF4	Bit 3	 Width 1
 %1  2 lshift DMA2_HISR bis!        \ DMA2_DMEIF4	Bit 2	 Width 1
 %1  0 lshift DMA2_HISR bis!        \ DMA2_FEIF4	Bit 0	 Width 1
\ DMA2_HISR Register BitField Fetch Words  
: DMA2_TCIF7@ DMA2_HISR @ %1  27 lshift and 27 rshift ; 
: DMA2_HTIF7@ DMA2_HISR @ %1  26 lshift and 26 rshift ; 
: DMA2_TEIF7@ DMA2_HISR @ %1  25 lshift and 25 rshift ; 
: DMA2_DMEIF7@ DMA2_HISR @ %1  24 lshift and 24 rshift ; 
: DMA2_FEIF7@ DMA2_HISR @ %1  22 lshift and 22 rshift ; 
: DMA2_TCIF6@ DMA2_HISR @ %1  21 lshift and 21 rshift ; 
: DMA2_HTIF6@ DMA2_HISR @ %1  20 lshift and 20 rshift ; 
: DMA2_TEIF6@ DMA2_HISR @ %1  19 lshift and 19 rshift ; 
: DMA2_DMEIF6@ DMA2_HISR @ %1  18 lshift and 18 rshift ; 
: DMA2_FEIF6@ DMA2_HISR @ %1  16 lshift and 16 rshift ; 
: DMA2_TCIF5@ DMA2_HISR @ %1  11 lshift and 11 rshift ; 
: DMA2_HTIF5@ DMA2_HISR @ %1  10 lshift and 10 rshift ; 
: DMA2_TEIF5@ DMA2_HISR @ %1  9 lshift and 9 rshift ; 
: DMA2_DMEIF5@ DMA2_HISR @ %1  8 lshift and 8 rshift ; 
: DMA2_FEIF5@ DMA2_HISR @ %1  6 lshift and 6 rshift ; 
: DMA2_TCIF4@ DMA2_HISR @ %1  5 lshift and 5 rshift ; 
: DMA2_HTIF4@ DMA2_HISR @ %1  4 lshift and 4 rshift ; 
: DMA2_TEIF4@ DMA2_HISR @ %1  3 lshift and 3 rshift ; 
: DMA2_DMEIF4@ DMA2_HISR @ %1  2 lshift and 2 rshift ; 
: DMA2_FEIF4@ DMA2_HISR @ %1  0 lshift and 0 rshift ; 

DMA2_LIFCR (read-write)
$00000000 CONSTANT RESET_DMA2_LIFCR 
 %1  27 lshift DMA2_LIFCR bis!        \ DMA2_CTCIF3	Bit 27	 Width 1
 %1  26 lshift DMA2_LIFCR bis!        \ DMA2_CHTIF3	Bit 26	 Width 1
 %1  25 lshift DMA2_LIFCR bis!        \ DMA2_CTEIF3	Bit 25	 Width 1
 %1  24 lshift DMA2_LIFCR bis!        \ DMA2_CDMEIF3	Bit 24	 Width 1
 %1  22 lshift DMA2_LIFCR bis!        \ DMA2_CFEIF3	Bit 22	 Width 1
 %1  21 lshift DMA2_LIFCR bis!        \ DMA2_CTCIF2	Bit 21	 Width 1
 %1  20 lshift DMA2_LIFCR bis!        \ DMA2_CHTIF2	Bit 20	 Width 1
 %1  19 lshift DMA2_LIFCR bis!        \ DMA2_CTEIF2	Bit 19	 Width 1
 %1  18 lshift DMA2_LIFCR bis!        \ DMA2_CDMEIF2	Bit 18	 Width 1
 %1  16 lshift DMA2_LIFCR bis!        \ DMA2_CFEIF2	Bit 16	 Width 1
 %1  11 lshift DMA2_LIFCR bis!        \ DMA2_CTCIF1	Bit 11	 Width 1
 %1  10 lshift DMA2_LIFCR bis!        \ DMA2_CHTIF1	Bit 10	 Width 1
 %1  9 lshift DMA2_LIFCR bis!        \ DMA2_CTEIF1	Bit 9	 Width 1
 %1  8 lshift DMA2_LIFCR bis!        \ DMA2_CDMEIF1	Bit 8	 Width 1
 %1  6 lshift DMA2_LIFCR bis!        \ DMA2_CFEIF1	Bit 6	 Width 1
 %1  5 lshift DMA2_LIFCR bis!        \ DMA2_CTCIF0	Bit 5	 Width 1
 %1  4 lshift DMA2_LIFCR bis!        \ DMA2_CHTIF0	Bit 4	 Width 1
 %1  3 lshift DMA2_LIFCR bis!        \ DMA2_CTEIF0	Bit 3	 Width 1
 %1  2 lshift DMA2_LIFCR bis!        \ DMA2_CDMEIF0	Bit 2	 Width 1
 %1  0 lshift DMA2_LIFCR bis!        \ DMA2_CFEIF0	Bit 0	 Width 1
\ DMA2_LIFCR Register BitField Fetch Words  
: DMA2_CTCIF3@ DMA2_LIFCR @ %1  27 lshift and 27 rshift ; 
: DMA2_CHTIF3@ DMA2_LIFCR @ %1  26 lshift and 26 rshift ; 
: DMA2_CTEIF3@ DMA2_LIFCR @ %1  25 lshift and 25 rshift ; 
: DMA2_CDMEIF3@ DMA2_LIFCR @ %1  24 lshift and 24 rshift ; 
: DMA2_CFEIF3@ DMA2_LIFCR @ %1  22 lshift and 22 rshift ; 
: DMA2_CTCIF2@ DMA2_LIFCR @ %1  21 lshift and 21 rshift ; 
: DMA2_CHTIF2@ DMA2_LIFCR @ %1  20 lshift and 20 rshift ; 
: DMA2_CTEIF2@ DMA2_LIFCR @ %1  19 lshift and 19 rshift ; 
: DMA2_CDMEIF2@ DMA2_LIFCR @ %1  18 lshift and 18 rshift ; 
: DMA2_CFEIF2@ DMA2_LIFCR @ %1  16 lshift and 16 rshift ; 
: DMA2_CTCIF1@ DMA2_LIFCR @ %1  11 lshift and 11 rshift ; 
: DMA2_CHTIF1@ DMA2_LIFCR @ %1  10 lshift and 10 rshift ; 
: DMA2_CTEIF1@ DMA2_LIFCR @ %1  9 lshift and 9 rshift ; 
: DMA2_CDMEIF1@ DMA2_LIFCR @ %1  8 lshift and 8 rshift ; 
: DMA2_CFEIF1@ DMA2_LIFCR @ %1  6 lshift and 6 rshift ; 
: DMA2_CTCIF0@ DMA2_LIFCR @ %1  5 lshift and 5 rshift ; 
: DMA2_CHTIF0@ DMA2_LIFCR @ %1  4 lshift and 4 rshift ; 
: DMA2_CTEIF0@ DMA2_LIFCR @ %1  3 lshift and 3 rshift ; 
: DMA2_CDMEIF0@ DMA2_LIFCR @ %1  2 lshift and 2 rshift ; 
: DMA2_CFEIF0@ DMA2_LIFCR @ %1  0 lshift and 0 rshift ; 

DMA2_HIFCR (read-write)
$00000000 CONSTANT RESET_DMA2_HIFCR 
 %1  27 lshift DMA2_HIFCR bis!        \ DMA2_CTCIF7	Bit 27	 Width 1
 %1  26 lshift DMA2_HIFCR bis!        \ DMA2_CHTIF7	Bit 26	 Width 1
 %1  25 lshift DMA2_HIFCR bis!        \ DMA2_CTEIF7	Bit 25	 Width 1
 %1  24 lshift DMA2_HIFCR bis!        \ DMA2_CDMEIF7	Bit 24	 Width 1
 %1  22 lshift DMA2_HIFCR bis!        \ DMA2_CFEIF7	Bit 22	 Width 1
 %1  21 lshift DMA2_HIFCR bis!        \ DMA2_CTCIF6	Bit 21	 Width 1
 %1  20 lshift DMA2_HIFCR bis!        \ DMA2_CHTIF6	Bit 20	 Width 1
 %1  19 lshift DMA2_HIFCR bis!        \ DMA2_CTEIF6	Bit 19	 Width 1
 %1  18 lshift DMA2_HIFCR bis!        \ DMA2_CDMEIF6	Bit 18	 Width 1
 %1  16 lshift DMA2_HIFCR bis!        \ DMA2_CFEIF6	Bit 16	 Width 1
 %1  11 lshift DMA2_HIFCR bis!        \ DMA2_CTCIF5	Bit 11	 Width 1
 %1  10 lshift DMA2_HIFCR bis!        \ DMA2_CHTIF5	Bit 10	 Width 1
 %1  9 lshift DMA2_HIFCR bis!        \ DMA2_CTEIF5	Bit 9	 Width 1
 %1  8 lshift DMA2_HIFCR bis!        \ DMA2_CDMEIF5	Bit 8	 Width 1
 %1  6 lshift DMA2_HIFCR bis!        \ DMA2_CFEIF5	Bit 6	 Width 1
 %1  5 lshift DMA2_HIFCR bis!        \ DMA2_CTCIF4	Bit 5	 Width 1
 %1  4 lshift DMA2_HIFCR bis!        \ DMA2_CHTIF4	Bit 4	 Width 1
 %1  3 lshift DMA2_HIFCR bis!        \ DMA2_CTEIF4	Bit 3	 Width 1
 %1  2 lshift DMA2_HIFCR bis!        \ DMA2_CDMEIF4	Bit 2	 Width 1
 %1  0 lshift DMA2_HIFCR bis!        \ DMA2_CFEIF4	Bit 0	 Width 1
\ DMA2_HIFCR Register BitField Fetch Words  
: DMA2_CTCIF7@ DMA2_HIFCR @ %1  27 lshift and 27 rshift ; 
: DMA2_CHTIF7@ DMA2_HIFCR @ %1  26 lshift and 26 rshift ; 
: DMA2_CTEIF7@ DMA2_HIFCR @ %1  25 lshift and 25 rshift ; 
: DMA2_CDMEIF7@ DMA2_HIFCR @ %1  24 lshift and 24 rshift ; 
: DMA2_CFEIF7@ DMA2_HIFCR @ %1  22 lshift and 22 rshift ; 
: DMA2_CTCIF6@ DMA2_HIFCR @ %1  21 lshift and 21 rshift ; 
: DMA2_CHTIF6@ DMA2_HIFCR @ %1  20 lshift and 20 rshift ; 
: DMA2_CTEIF6@ DMA2_HIFCR @ %1  19 lshift and 19 rshift ; 
: DMA2_CDMEIF6@ DMA2_HIFCR @ %1  18 lshift and 18 rshift ; 
: DMA2_CFEIF6@ DMA2_HIFCR @ %1  16 lshift and 16 rshift ; 
: DMA2_CTCIF5@ DMA2_HIFCR @ %1  11 lshift and 11 rshift ; 
: DMA2_CHTIF5@ DMA2_HIFCR @ %1  10 lshift and 10 rshift ; 
: DMA2_CTEIF5@ DMA2_HIFCR @ %1  9 lshift and 9 rshift ; 
: DMA2_CDMEIF5@ DMA2_HIFCR @ %1  8 lshift and 8 rshift ; 
: DMA2_CFEIF5@ DMA2_HIFCR @ %1  6 lshift and 6 rshift ; 
: DMA2_CTCIF4@ DMA2_HIFCR @ %1  5 lshift and 5 rshift ; 
: DMA2_CHTIF4@ DMA2_HIFCR @ %1  4 lshift and 4 rshift ; 
: DMA2_CTEIF4@ DMA2_HIFCR @ %1  3 lshift and 3 rshift ; 
: DMA2_CDMEIF4@ DMA2_HIFCR @ %1  2 lshift and 2 rshift ; 
: DMA2_CFEIF4@ DMA2_HIFCR @ %1  0 lshift and 0 rshift ; 

DMA2_S0CR (read-write)
$00000000 CONSTANT RESET_DMA2_S0CR 
 %xxx  25 lshift DMA2_S0CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S0CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S0CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  19 lshift DMA2_S0CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S0CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S0CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S0CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S0CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S0CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S0CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S0CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S0CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S0CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S0CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S0CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S0CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S0CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S0CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S0CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S0CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S0CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S0CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S0CR @ %11  21 lshift and 21 rshift ; 
: DMA2_CT@ DMA2_S0CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S0CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S0CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S0CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S0CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S0CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S0CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S0CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S0CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S0CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S0CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S0CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S0CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S0CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S0CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S0CR @ %1  0 lshift and 0 rshift ; 

DMA2_S0NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S0NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S0NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S0NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S0NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S0PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S0PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S0PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S0PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S0PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S0M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S0M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S0M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S0M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S0M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S0M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S0M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S0M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S0M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S0M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S0FCR ()
$00000021 CONSTANT RESET_DMA2_S0FCR 
 %1  7 lshift DMA2_S0FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S0FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S0FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S0FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S0FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S0FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S0FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S0FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S0FCR @ %11  0 lshift and 0 rshift ; 

DMA2_S1CR (read-write)
$00000000 CONSTANT RESET_DMA2_S1CR 
 %xxx  25 lshift DMA2_S1CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S1CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S1CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA2_S1CR bis!        \ DMA2_ACK	Bit 20	 Width 1
 %1  19 lshift DMA2_S1CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S1CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S1CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S1CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S1CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S1CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S1CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S1CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S1CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S1CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S1CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S1CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S1CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S1CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S1CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S1CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S1CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S1CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S1CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S1CR @ %11  21 lshift and 21 rshift ; 
: DMA2_ACK@ DMA2_S1CR @ %1  20 lshift and 20 rshift ; 
: DMA2_CT@ DMA2_S1CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S1CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S1CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S1CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S1CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S1CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S1CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S1CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S1CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S1CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S1CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S1CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S1CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S1CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S1CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S1CR @ %1  0 lshift and 0 rshift ; 

DMA2_S1NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S1NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S1NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S1NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S1NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S1PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S1PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S1PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S1PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S1PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S1M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S1M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S1M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S1M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S1M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S1M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S1M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S1M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S1M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S1M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S1FCR ()
$00000021 CONSTANT RESET_DMA2_S1FCR 
 %1  7 lshift DMA2_S1FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S1FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S1FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S1FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S1FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S1FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S1FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S1FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S1FCR @ %11  0 lshift and 0 rshift ; 

DMA2_S2CR (read-write)
$00000000 CONSTANT RESET_DMA2_S2CR 
 %xxx  25 lshift DMA2_S2CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S2CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S2CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA2_S2CR bis!        \ DMA2_ACK	Bit 20	 Width 1
 %1  19 lshift DMA2_S2CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S2CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S2CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S2CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S2CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S2CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S2CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S2CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S2CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S2CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S2CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S2CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S2CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S2CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S2CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S2CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S2CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S2CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S2CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S2CR @ %11  21 lshift and 21 rshift ; 
: DMA2_ACK@ DMA2_S2CR @ %1  20 lshift and 20 rshift ; 
: DMA2_CT@ DMA2_S2CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S2CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S2CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S2CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S2CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S2CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S2CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S2CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S2CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S2CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S2CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S2CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S2CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S2CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S2CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S2CR @ %1  0 lshift and 0 rshift ; 

DMA2_S2NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S2NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S2NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S2NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S2NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S2PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S2PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S2PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S2PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S2PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S2M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S2M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S2M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S2M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S2M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S2M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S2M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S2M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S2M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S2M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S2FCR ()
$00000021 CONSTANT RESET_DMA2_S2FCR 
 %1  7 lshift DMA2_S2FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S2FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S2FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S2FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S2FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S2FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S2FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S2FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S2FCR @ %11  0 lshift and 0 rshift ; 

DMA2_S3CR (read-write)
$00000000 CONSTANT RESET_DMA2_S3CR 
 %xxx  25 lshift DMA2_S3CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S3CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S3CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA2_S3CR bis!        \ DMA2_ACK	Bit 20	 Width 1
 %1  19 lshift DMA2_S3CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S3CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S3CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S3CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S3CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S3CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S3CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S3CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S3CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S3CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S3CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S3CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S3CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S3CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S3CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S3CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S3CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S3CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S3CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S3CR @ %11  21 lshift and 21 rshift ; 
: DMA2_ACK@ DMA2_S3CR @ %1  20 lshift and 20 rshift ; 
: DMA2_CT@ DMA2_S3CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S3CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S3CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S3CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S3CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S3CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S3CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S3CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S3CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S3CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S3CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S3CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S3CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S3CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S3CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S3CR @ %1  0 lshift and 0 rshift ; 

DMA2_S3NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S3NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S3NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S3NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S3NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S3PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S3PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S3PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S3PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S3PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S3M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S3M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S3M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S3M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S3M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S3M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S3M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S3M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S3M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S3M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S3FCR ()
$00000021 CONSTANT RESET_DMA2_S3FCR 
 %1  7 lshift DMA2_S3FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S3FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S3FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S3FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S3FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S3FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S3FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S3FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S3FCR @ %11  0 lshift and 0 rshift ; 

DMA2_S4CR (read-write)
$00000000 CONSTANT RESET_DMA2_S4CR 
 %xxx  25 lshift DMA2_S4CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S4CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S4CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA2_S4CR bis!        \ DMA2_ACK	Bit 20	 Width 1
 %1  19 lshift DMA2_S4CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S4CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S4CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S4CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S4CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S4CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S4CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S4CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S4CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S4CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S4CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S4CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S4CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S4CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S4CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S4CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S4CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S4CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S4CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S4CR @ %11  21 lshift and 21 rshift ; 
: DMA2_ACK@ DMA2_S4CR @ %1  20 lshift and 20 rshift ; 
: DMA2_CT@ DMA2_S4CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S4CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S4CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S4CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S4CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S4CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S4CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S4CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S4CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S4CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S4CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S4CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S4CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S4CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S4CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S4CR @ %1  0 lshift and 0 rshift ; 

DMA2_S4NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S4NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S4NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S4NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S4NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S4PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S4PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S4PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S4PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S4PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S4M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S4M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S4M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S4M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S4M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S4M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S4M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S4M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S4M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S4M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S4FCR ()
$00000021 CONSTANT RESET_DMA2_S4FCR 
 %1  7 lshift DMA2_S4FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S4FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S4FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S4FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S4FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S4FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S4FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S4FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S4FCR @ %11  0 lshift and 0 rshift ; 

DMA2_S5CR (read-write)
$00000000 CONSTANT RESET_DMA2_S5CR 
 %xxx  25 lshift DMA2_S5CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S5CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S5CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA2_S5CR bis!        \ DMA2_ACK	Bit 20	 Width 1
 %1  19 lshift DMA2_S5CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S5CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S5CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S5CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S5CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S5CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S5CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S5CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S5CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S5CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S5CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S5CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S5CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S5CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S5CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S5CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S5CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S5CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S5CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S5CR @ %11  21 lshift and 21 rshift ; 
: DMA2_ACK@ DMA2_S5CR @ %1  20 lshift and 20 rshift ; 
: DMA2_CT@ DMA2_S5CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S5CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S5CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S5CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S5CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S5CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S5CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S5CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S5CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S5CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S5CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S5CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S5CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S5CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S5CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S5CR @ %1  0 lshift and 0 rshift ; 

DMA2_S5NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S5NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S5NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S5NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S5NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S5PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S5PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S5PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S5PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S5PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S5M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S5M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S5M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S5M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S5M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S5M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S5M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S5M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S5M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S5M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S5FCR ()
$00000021 CONSTANT RESET_DMA2_S5FCR 
 %1  7 lshift DMA2_S5FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S5FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S5FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S5FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S5FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S5FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S5FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S5FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S5FCR @ %11  0 lshift and 0 rshift ; 

DMA2_S6CR (read-write)
$00000000 CONSTANT RESET_DMA2_S6CR 
 %xxx  25 lshift DMA2_S6CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S6CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S6CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA2_S6CR bis!        \ DMA2_ACK	Bit 20	 Width 1
 %1  19 lshift DMA2_S6CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S6CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S6CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S6CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S6CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S6CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S6CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S6CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S6CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S6CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S6CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S6CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S6CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S6CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S6CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S6CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S6CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S6CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S6CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S6CR @ %11  21 lshift and 21 rshift ; 
: DMA2_ACK@ DMA2_S6CR @ %1  20 lshift and 20 rshift ; 
: DMA2_CT@ DMA2_S6CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S6CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S6CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S6CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S6CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S6CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S6CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S6CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S6CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S6CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S6CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S6CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S6CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S6CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S6CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S6CR @ %1  0 lshift and 0 rshift ; 

DMA2_S6NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S6NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S6NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S6NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S6NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S6PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S6PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S6PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S6PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S6PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S6M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S6M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S6M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S6M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S6M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S6M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S6M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S6M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S6M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S6M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S6FCR ()
$00000021 CONSTANT RESET_DMA2_S6FCR 
 %1  7 lshift DMA2_S6FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S6FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S6FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S6FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S6FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S6FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S6FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S6FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S6FCR @ %11  0 lshift and 0 rshift ; 

DMA2_S7CR (read-write)
$00000000 CONSTANT RESET_DMA2_S7CR 
 %xxx  25 lshift DMA2_S7CR bis!        \ DMA2_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA2_S7CR bis!        \ DMA2_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA2_S7CR bis!        \ DMA2_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA2_S7CR bis!        \ DMA2_ACK	Bit 20	 Width 1
 %1  19 lshift DMA2_S7CR bis!        \ DMA2_CT	Bit 19	 Width 1
 %1  18 lshift DMA2_S7CR bis!        \ DMA2_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA2_S7CR bis!        \ DMA2_PL	Bit 16	 Width 2
 %1  15 lshift DMA2_S7CR bis!        \ DMA2_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA2_S7CR bis!        \ DMA2_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA2_S7CR bis!        \ DMA2_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA2_S7CR bis!        \ DMA2_MINC	Bit 10	 Width 1
 %1  9 lshift DMA2_S7CR bis!        \ DMA2_PINC	Bit 9	 Width 1
 %1  8 lshift DMA2_S7CR bis!        \ DMA2_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA2_S7CR bis!        \ DMA2_DIR	Bit 6	 Width 2
 %1  5 lshift DMA2_S7CR bis!        \ DMA2_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA2_S7CR bis!        \ DMA2_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA2_S7CR bis!        \ DMA2_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA2_S7CR bis!        \ DMA2_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA2_S7CR bis!        \ DMA2_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA2_S7CR bis!        \ DMA2_EN	Bit 0	 Width 1
\ DMA2_S7CR Register BitField Fetch Words  
: DMA2_CHSEL@ DMA2_S7CR @ %111  25 lshift and 25 rshift ; 
: DMA2_MBURST@ DMA2_S7CR @ %11  23 lshift and 23 rshift ; 
: DMA2_PBURST@ DMA2_S7CR @ %11  21 lshift and 21 rshift ; 
: DMA2_ACK@ DMA2_S7CR @ %1  20 lshift and 20 rshift ; 
: DMA2_CT@ DMA2_S7CR @ %1  19 lshift and 19 rshift ; 
: DMA2_DBM@ DMA2_S7CR @ %1  18 lshift and 18 rshift ; 
: DMA2_PL@ DMA2_S7CR @ %11  16 lshift and 16 rshift ; 
: DMA2_PINCOS@ DMA2_S7CR @ %1  15 lshift and 15 rshift ; 
: DMA2_MSIZE@ DMA2_S7CR @ %11  13 lshift and 13 rshift ; 
: DMA2_PSIZE@ DMA2_S7CR @ %11  11 lshift and 11 rshift ; 
: DMA2_MINC@ DMA2_S7CR @ %1  10 lshift and 10 rshift ; 
: DMA2_PINC@ DMA2_S7CR @ %1  9 lshift and 9 rshift ; 
: DMA2_CIRC@ DMA2_S7CR @ %1  8 lshift and 8 rshift ; 
: DMA2_DIR@ DMA2_S7CR @ %11  6 lshift and 6 rshift ; 
: DMA2_PFCTRL@ DMA2_S7CR @ %1  5 lshift and 5 rshift ; 
: DMA2_TCIE@ DMA2_S7CR @ %1  4 lshift and 4 rshift ; 
: DMA2_HTIE@ DMA2_S7CR @ %1  3 lshift and 3 rshift ; 
: DMA2_TEIE@ DMA2_S7CR @ %1  2 lshift and 2 rshift ; 
: DMA2_DMEIE@ DMA2_S7CR @ %1  1 lshift and 1 rshift ; 
: DMA2_EN@ DMA2_S7CR @ %1  0 lshift and 0 rshift ; 

DMA2_S7NDTR (read-write)
$00000000 CONSTANT RESET_DMA2_S7NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA2_S7NDTR bis!        \ DMA2_NDT	Bit 0	 Width 16
\ DMA2_S7NDTR Register BitField Fetch Words  
: DMA2_NDT@ DMA2_S7NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA2_S7PAR (read-write)
$00000000 CONSTANT RESET_DMA2_S7PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S7PAR bis!        \ DMA2_PA	Bit 0	 Width 32
\ DMA2_S7PAR Register BitField Fetch Words  
: DMA2_PA@ DMA2_S7PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S7M0AR (read-write)
$00000000 CONSTANT RESET_DMA2_S7M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S7M0AR bis!        \ DMA2_M0A	Bit 0	 Width 32
\ DMA2_S7M0AR Register BitField Fetch Words  
: DMA2_M0A@ DMA2_S7M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S7M1AR (read-write)
$00000000 CONSTANT RESET_DMA2_S7M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA2_S7M1AR bis!        \ DMA2_M1A	Bit 0	 Width 32
\ DMA2_S7M1AR Register BitField Fetch Words  
: DMA2_M1A@ DMA2_S7M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA2_S7FCR ()
$00000021 CONSTANT RESET_DMA2_S7FCR 
 %1  7 lshift DMA2_S7FCR bis!        \ DMA2_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA2_S7FCR bis!        \ DMA2_FS	Bit 3	 Width 3
 %1  2 lshift DMA2_S7FCR bis!        \ DMA2_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA2_S7FCR bis!        \ DMA2_FTH	Bit 0	 Width 2
\ DMA2_S7FCR Register BitField Fetch Words  
: DMA2_FEIE@ DMA2_S7FCR @ %1  7 lshift and 7 rshift ; 
: DMA2_FS@ DMA2_S7FCR @ %111  3 lshift and 3 rshift ; 
: DMA2_DMDIS@ DMA2_S7FCR @ %1  2 lshift and 2 rshift ; 
: DMA2_FTH@ DMA2_S7FCR @ %11  0 lshift and 0 rshift ; 

                    
################################### DMA1 ###################################
DMA1_LISR (read-only)
$00000000 CONSTANT RESET_DMA1_LISR 
 %1  27 lshift DMA1_LISR bis!        \ DMA1_TCIF3	Bit 27	 Width 1
 %1  26 lshift DMA1_LISR bis!        \ DMA1_HTIF3	Bit 26	 Width 1
 %1  25 lshift DMA1_LISR bis!        \ DMA1_TEIF3	Bit 25	 Width 1
 %1  24 lshift DMA1_LISR bis!        \ DMA1_DMEIF3	Bit 24	 Width 1
 %1  22 lshift DMA1_LISR bis!        \ DMA1_FEIF3	Bit 22	 Width 1
 %1  21 lshift DMA1_LISR bis!        \ DMA1_TCIF2	Bit 21	 Width 1
 %1  20 lshift DMA1_LISR bis!        \ DMA1_HTIF2	Bit 20	 Width 1
 %1  19 lshift DMA1_LISR bis!        \ DMA1_TEIF2	Bit 19	 Width 1
 %1  18 lshift DMA1_LISR bis!        \ DMA1_DMEIF2	Bit 18	 Width 1
 %1  16 lshift DMA1_LISR bis!        \ DMA1_FEIF2	Bit 16	 Width 1
 %1  11 lshift DMA1_LISR bis!        \ DMA1_TCIF1	Bit 11	 Width 1
 %1  10 lshift DMA1_LISR bis!        \ DMA1_HTIF1	Bit 10	 Width 1
 %1  9 lshift DMA1_LISR bis!        \ DMA1_TEIF1	Bit 9	 Width 1
 %1  8 lshift DMA1_LISR bis!        \ DMA1_DMEIF1	Bit 8	 Width 1
 %1  6 lshift DMA1_LISR bis!        \ DMA1_FEIF1	Bit 6	 Width 1
 %1  5 lshift DMA1_LISR bis!        \ DMA1_TCIF0	Bit 5	 Width 1
 %1  4 lshift DMA1_LISR bis!        \ DMA1_HTIF0	Bit 4	 Width 1
 %1  3 lshift DMA1_LISR bis!        \ DMA1_TEIF0	Bit 3	 Width 1
 %1  2 lshift DMA1_LISR bis!        \ DMA1_DMEIF0	Bit 2	 Width 1
 %1  0 lshift DMA1_LISR bis!        \ DMA1_FEIF0	Bit 0	 Width 1
\ DMA1_LISR Register BitField Fetch Words  
: DMA1_TCIF3@ DMA1_LISR @ %1  27 lshift and 27 rshift ; 
: DMA1_HTIF3@ DMA1_LISR @ %1  26 lshift and 26 rshift ; 
: DMA1_TEIF3@ DMA1_LISR @ %1  25 lshift and 25 rshift ; 
: DMA1_DMEIF3@ DMA1_LISR @ %1  24 lshift and 24 rshift ; 
: DMA1_FEIF3@ DMA1_LISR @ %1  22 lshift and 22 rshift ; 
: DMA1_TCIF2@ DMA1_LISR @ %1  21 lshift and 21 rshift ; 
: DMA1_HTIF2@ DMA1_LISR @ %1  20 lshift and 20 rshift ; 
: DMA1_TEIF2@ DMA1_LISR @ %1  19 lshift and 19 rshift ; 
: DMA1_DMEIF2@ DMA1_LISR @ %1  18 lshift and 18 rshift ; 
: DMA1_FEIF2@ DMA1_LISR @ %1  16 lshift and 16 rshift ; 
: DMA1_TCIF1@ DMA1_LISR @ %1  11 lshift and 11 rshift ; 
: DMA1_HTIF1@ DMA1_LISR @ %1  10 lshift and 10 rshift ; 
: DMA1_TEIF1@ DMA1_LISR @ %1  9 lshift and 9 rshift ; 
: DMA1_DMEIF1@ DMA1_LISR @ %1  8 lshift and 8 rshift ; 
: DMA1_FEIF1@ DMA1_LISR @ %1  6 lshift and 6 rshift ; 
: DMA1_TCIF0@ DMA1_LISR @ %1  5 lshift and 5 rshift ; 
: DMA1_HTIF0@ DMA1_LISR @ %1  4 lshift and 4 rshift ; 
: DMA1_TEIF0@ DMA1_LISR @ %1  3 lshift and 3 rshift ; 
: DMA1_DMEIF0@ DMA1_LISR @ %1  2 lshift and 2 rshift ; 
: DMA1_FEIF0@ DMA1_LISR @ %1  0 lshift and 0 rshift ; 

DMA1_HISR (read-only)
$00000000 CONSTANT RESET_DMA1_HISR 
 %1  27 lshift DMA1_HISR bis!        \ DMA1_TCIF7	Bit 27	 Width 1
 %1  26 lshift DMA1_HISR bis!        \ DMA1_HTIF7	Bit 26	 Width 1
 %1  25 lshift DMA1_HISR bis!        \ DMA1_TEIF7	Bit 25	 Width 1
 %1  24 lshift DMA1_HISR bis!        \ DMA1_DMEIF7	Bit 24	 Width 1
 %1  22 lshift DMA1_HISR bis!        \ DMA1_FEIF7	Bit 22	 Width 1
 %1  21 lshift DMA1_HISR bis!        \ DMA1_TCIF6	Bit 21	 Width 1
 %1  20 lshift DMA1_HISR bis!        \ DMA1_HTIF6	Bit 20	 Width 1
 %1  19 lshift DMA1_HISR bis!        \ DMA1_TEIF6	Bit 19	 Width 1
 %1  18 lshift DMA1_HISR bis!        \ DMA1_DMEIF6	Bit 18	 Width 1
 %1  16 lshift DMA1_HISR bis!        \ DMA1_FEIF6	Bit 16	 Width 1
 %1  11 lshift DMA1_HISR bis!        \ DMA1_TCIF5	Bit 11	 Width 1
 %1  10 lshift DMA1_HISR bis!        \ DMA1_HTIF5	Bit 10	 Width 1
 %1  9 lshift DMA1_HISR bis!        \ DMA1_TEIF5	Bit 9	 Width 1
 %1  8 lshift DMA1_HISR bis!        \ DMA1_DMEIF5	Bit 8	 Width 1
 %1  6 lshift DMA1_HISR bis!        \ DMA1_FEIF5	Bit 6	 Width 1
 %1  5 lshift DMA1_HISR bis!        \ DMA1_TCIF4	Bit 5	 Width 1
 %1  4 lshift DMA1_HISR bis!        \ DMA1_HTIF4	Bit 4	 Width 1
 %1  3 lshift DMA1_HISR bis!        \ DMA1_TEIF4	Bit 3	 Width 1
 %1  2 lshift DMA1_HISR bis!        \ DMA1_DMEIF4	Bit 2	 Width 1
 %1  0 lshift DMA1_HISR bis!        \ DMA1_FEIF4	Bit 0	 Width 1
\ DMA1_HISR Register BitField Fetch Words  
: DMA1_TCIF7@ DMA1_HISR @ %1  27 lshift and 27 rshift ; 
: DMA1_HTIF7@ DMA1_HISR @ %1  26 lshift and 26 rshift ; 
: DMA1_TEIF7@ DMA1_HISR @ %1  25 lshift and 25 rshift ; 
: DMA1_DMEIF7@ DMA1_HISR @ %1  24 lshift and 24 rshift ; 
: DMA1_FEIF7@ DMA1_HISR @ %1  22 lshift and 22 rshift ; 
: DMA1_TCIF6@ DMA1_HISR @ %1  21 lshift and 21 rshift ; 
: DMA1_HTIF6@ DMA1_HISR @ %1  20 lshift and 20 rshift ; 
: DMA1_TEIF6@ DMA1_HISR @ %1  19 lshift and 19 rshift ; 
: DMA1_DMEIF6@ DMA1_HISR @ %1  18 lshift and 18 rshift ; 
: DMA1_FEIF6@ DMA1_HISR @ %1  16 lshift and 16 rshift ; 
: DMA1_TCIF5@ DMA1_HISR @ %1  11 lshift and 11 rshift ; 
: DMA1_HTIF5@ DMA1_HISR @ %1  10 lshift and 10 rshift ; 
: DMA1_TEIF5@ DMA1_HISR @ %1  9 lshift and 9 rshift ; 
: DMA1_DMEIF5@ DMA1_HISR @ %1  8 lshift and 8 rshift ; 
: DMA1_FEIF5@ DMA1_HISR @ %1  6 lshift and 6 rshift ; 
: DMA1_TCIF4@ DMA1_HISR @ %1  5 lshift and 5 rshift ; 
: DMA1_HTIF4@ DMA1_HISR @ %1  4 lshift and 4 rshift ; 
: DMA1_TEIF4@ DMA1_HISR @ %1  3 lshift and 3 rshift ; 
: DMA1_DMEIF4@ DMA1_HISR @ %1  2 lshift and 2 rshift ; 
: DMA1_FEIF4@ DMA1_HISR @ %1  0 lshift and 0 rshift ; 

DMA1_LIFCR (read-write)
$00000000 CONSTANT RESET_DMA1_LIFCR 
 %1  27 lshift DMA1_LIFCR bis!        \ DMA1_CTCIF3	Bit 27	 Width 1
 %1  26 lshift DMA1_LIFCR bis!        \ DMA1_CHTIF3	Bit 26	 Width 1
 %1  25 lshift DMA1_LIFCR bis!        \ DMA1_CTEIF3	Bit 25	 Width 1
 %1  24 lshift DMA1_LIFCR bis!        \ DMA1_CDMEIF3	Bit 24	 Width 1
 %1  22 lshift DMA1_LIFCR bis!        \ DMA1_CFEIF3	Bit 22	 Width 1
 %1  21 lshift DMA1_LIFCR bis!        \ DMA1_CTCIF2	Bit 21	 Width 1
 %1  20 lshift DMA1_LIFCR bis!        \ DMA1_CHTIF2	Bit 20	 Width 1
 %1  19 lshift DMA1_LIFCR bis!        \ DMA1_CTEIF2	Bit 19	 Width 1
 %1  18 lshift DMA1_LIFCR bis!        \ DMA1_CDMEIF2	Bit 18	 Width 1
 %1  16 lshift DMA1_LIFCR bis!        \ DMA1_CFEIF2	Bit 16	 Width 1
 %1  11 lshift DMA1_LIFCR bis!        \ DMA1_CTCIF1	Bit 11	 Width 1
 %1  10 lshift DMA1_LIFCR bis!        \ DMA1_CHTIF1	Bit 10	 Width 1
 %1  9 lshift DMA1_LIFCR bis!        \ DMA1_CTEIF1	Bit 9	 Width 1
 %1  8 lshift DMA1_LIFCR bis!        \ DMA1_CDMEIF1	Bit 8	 Width 1
 %1  6 lshift DMA1_LIFCR bis!        \ DMA1_CFEIF1	Bit 6	 Width 1
 %1  5 lshift DMA1_LIFCR bis!        \ DMA1_CTCIF0	Bit 5	 Width 1
 %1  4 lshift DMA1_LIFCR bis!        \ DMA1_CHTIF0	Bit 4	 Width 1
 %1  3 lshift DMA1_LIFCR bis!        \ DMA1_CTEIF0	Bit 3	 Width 1
 %1  2 lshift DMA1_LIFCR bis!        \ DMA1_CDMEIF0	Bit 2	 Width 1
 %1  0 lshift DMA1_LIFCR bis!        \ DMA1_CFEIF0	Bit 0	 Width 1
\ DMA1_LIFCR Register BitField Fetch Words  
: DMA1_CTCIF3@ DMA1_LIFCR @ %1  27 lshift and 27 rshift ; 
: DMA1_CHTIF3@ DMA1_LIFCR @ %1  26 lshift and 26 rshift ; 
: DMA1_CTEIF3@ DMA1_LIFCR @ %1  25 lshift and 25 rshift ; 
: DMA1_CDMEIF3@ DMA1_LIFCR @ %1  24 lshift and 24 rshift ; 
: DMA1_CFEIF3@ DMA1_LIFCR @ %1  22 lshift and 22 rshift ; 
: DMA1_CTCIF2@ DMA1_LIFCR @ %1  21 lshift and 21 rshift ; 
: DMA1_CHTIF2@ DMA1_LIFCR @ %1  20 lshift and 20 rshift ; 
: DMA1_CTEIF2@ DMA1_LIFCR @ %1  19 lshift and 19 rshift ; 
: DMA1_CDMEIF2@ DMA1_LIFCR @ %1  18 lshift and 18 rshift ; 
: DMA1_CFEIF2@ DMA1_LIFCR @ %1  16 lshift and 16 rshift ; 
: DMA1_CTCIF1@ DMA1_LIFCR @ %1  11 lshift and 11 rshift ; 
: DMA1_CHTIF1@ DMA1_LIFCR @ %1  10 lshift and 10 rshift ; 
: DMA1_CTEIF1@ DMA1_LIFCR @ %1  9 lshift and 9 rshift ; 
: DMA1_CDMEIF1@ DMA1_LIFCR @ %1  8 lshift and 8 rshift ; 
: DMA1_CFEIF1@ DMA1_LIFCR @ %1  6 lshift and 6 rshift ; 
: DMA1_CTCIF0@ DMA1_LIFCR @ %1  5 lshift and 5 rshift ; 
: DMA1_CHTIF0@ DMA1_LIFCR @ %1  4 lshift and 4 rshift ; 
: DMA1_CTEIF0@ DMA1_LIFCR @ %1  3 lshift and 3 rshift ; 
: DMA1_CDMEIF0@ DMA1_LIFCR @ %1  2 lshift and 2 rshift ; 
: DMA1_CFEIF0@ DMA1_LIFCR @ %1  0 lshift and 0 rshift ; 

DMA1_HIFCR (read-write)
$00000000 CONSTANT RESET_DMA1_HIFCR 
 %1  27 lshift DMA1_HIFCR bis!        \ DMA1_CTCIF7	Bit 27	 Width 1
 %1  26 lshift DMA1_HIFCR bis!        \ DMA1_CHTIF7	Bit 26	 Width 1
 %1  25 lshift DMA1_HIFCR bis!        \ DMA1_CTEIF7	Bit 25	 Width 1
 %1  24 lshift DMA1_HIFCR bis!        \ DMA1_CDMEIF7	Bit 24	 Width 1
 %1  22 lshift DMA1_HIFCR bis!        \ DMA1_CFEIF7	Bit 22	 Width 1
 %1  21 lshift DMA1_HIFCR bis!        \ DMA1_CTCIF6	Bit 21	 Width 1
 %1  20 lshift DMA1_HIFCR bis!        \ DMA1_CHTIF6	Bit 20	 Width 1
 %1  19 lshift DMA1_HIFCR bis!        \ DMA1_CTEIF6	Bit 19	 Width 1
 %1  18 lshift DMA1_HIFCR bis!        \ DMA1_CDMEIF6	Bit 18	 Width 1
 %1  16 lshift DMA1_HIFCR bis!        \ DMA1_CFEIF6	Bit 16	 Width 1
 %1  11 lshift DMA1_HIFCR bis!        \ DMA1_CTCIF5	Bit 11	 Width 1
 %1  10 lshift DMA1_HIFCR bis!        \ DMA1_CHTIF5	Bit 10	 Width 1
 %1  9 lshift DMA1_HIFCR bis!        \ DMA1_CTEIF5	Bit 9	 Width 1
 %1  8 lshift DMA1_HIFCR bis!        \ DMA1_CDMEIF5	Bit 8	 Width 1
 %1  6 lshift DMA1_HIFCR bis!        \ DMA1_CFEIF5	Bit 6	 Width 1
 %1  5 lshift DMA1_HIFCR bis!        \ DMA1_CTCIF4	Bit 5	 Width 1
 %1  4 lshift DMA1_HIFCR bis!        \ DMA1_CHTIF4	Bit 4	 Width 1
 %1  3 lshift DMA1_HIFCR bis!        \ DMA1_CTEIF4	Bit 3	 Width 1
 %1  2 lshift DMA1_HIFCR bis!        \ DMA1_CDMEIF4	Bit 2	 Width 1
 %1  0 lshift DMA1_HIFCR bis!        \ DMA1_CFEIF4	Bit 0	 Width 1
\ DMA1_HIFCR Register BitField Fetch Words  
: DMA1_CTCIF7@ DMA1_HIFCR @ %1  27 lshift and 27 rshift ; 
: DMA1_CHTIF7@ DMA1_HIFCR @ %1  26 lshift and 26 rshift ; 
: DMA1_CTEIF7@ DMA1_HIFCR @ %1  25 lshift and 25 rshift ; 
: DMA1_CDMEIF7@ DMA1_HIFCR @ %1  24 lshift and 24 rshift ; 
: DMA1_CFEIF7@ DMA1_HIFCR @ %1  22 lshift and 22 rshift ; 
: DMA1_CTCIF6@ DMA1_HIFCR @ %1  21 lshift and 21 rshift ; 
: DMA1_CHTIF6@ DMA1_HIFCR @ %1  20 lshift and 20 rshift ; 
: DMA1_CTEIF6@ DMA1_HIFCR @ %1  19 lshift and 19 rshift ; 
: DMA1_CDMEIF6@ DMA1_HIFCR @ %1  18 lshift and 18 rshift ; 
: DMA1_CFEIF6@ DMA1_HIFCR @ %1  16 lshift and 16 rshift ; 
: DMA1_CTCIF5@ DMA1_HIFCR @ %1  11 lshift and 11 rshift ; 
: DMA1_CHTIF5@ DMA1_HIFCR @ %1  10 lshift and 10 rshift ; 
: DMA1_CTEIF5@ DMA1_HIFCR @ %1  9 lshift and 9 rshift ; 
: DMA1_CDMEIF5@ DMA1_HIFCR @ %1  8 lshift and 8 rshift ; 
: DMA1_CFEIF5@ DMA1_HIFCR @ %1  6 lshift and 6 rshift ; 
: DMA1_CTCIF4@ DMA1_HIFCR @ %1  5 lshift and 5 rshift ; 
: DMA1_CHTIF4@ DMA1_HIFCR @ %1  4 lshift and 4 rshift ; 
: DMA1_CTEIF4@ DMA1_HIFCR @ %1  3 lshift and 3 rshift ; 
: DMA1_CDMEIF4@ DMA1_HIFCR @ %1  2 lshift and 2 rshift ; 
: DMA1_CFEIF4@ DMA1_HIFCR @ %1  0 lshift and 0 rshift ; 

DMA1_S0CR (read-write)
$00000000 CONSTANT RESET_DMA1_S0CR 
 %xxx  25 lshift DMA1_S0CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S0CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S0CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  19 lshift DMA1_S0CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S0CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S0CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S0CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S0CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S0CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S0CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S0CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S0CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S0CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S0CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S0CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S0CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S0CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S0CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S0CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S0CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S0CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S0CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S0CR @ %11  21 lshift and 21 rshift ; 
: DMA1_CT@ DMA1_S0CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S0CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S0CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S0CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S0CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S0CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S0CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S0CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S0CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S0CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S0CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S0CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S0CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S0CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S0CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S0CR @ %1  0 lshift and 0 rshift ; 

DMA1_S0NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S0NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S0NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S0NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S0NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S0PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S0PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S0PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S0PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S0PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S0M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S0M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S0M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S0M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S0M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S0M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S0M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S0M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S0M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S0M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S0FCR ()
$00000021 CONSTANT RESET_DMA1_S0FCR 
 %1  7 lshift DMA1_S0FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S0FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S0FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S0FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S0FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S0FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S0FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S0FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S0FCR @ %11  0 lshift and 0 rshift ; 

DMA1_S1CR (read-write)
$00000000 CONSTANT RESET_DMA1_S1CR 
 %xxx  25 lshift DMA1_S1CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S1CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S1CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA1_S1CR bis!        \ DMA1_ACK	Bit 20	 Width 1
 %1  19 lshift DMA1_S1CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S1CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S1CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S1CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S1CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S1CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S1CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S1CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S1CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S1CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S1CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S1CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S1CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S1CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S1CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S1CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S1CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S1CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S1CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S1CR @ %11  21 lshift and 21 rshift ; 
: DMA1_ACK@ DMA1_S1CR @ %1  20 lshift and 20 rshift ; 
: DMA1_CT@ DMA1_S1CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S1CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S1CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S1CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S1CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S1CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S1CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S1CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S1CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S1CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S1CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S1CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S1CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S1CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S1CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S1CR @ %1  0 lshift and 0 rshift ; 

DMA1_S1NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S1NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S1NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S1NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S1NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S1PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S1PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S1PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S1PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S1PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S1M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S1M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S1M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S1M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S1M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S1M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S1M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S1M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S1M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S1M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S1FCR ()
$00000021 CONSTANT RESET_DMA1_S1FCR 
 %1  7 lshift DMA1_S1FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S1FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S1FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S1FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S1FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S1FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S1FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S1FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S1FCR @ %11  0 lshift and 0 rshift ; 

DMA1_S2CR (read-write)
$00000000 CONSTANT RESET_DMA1_S2CR 
 %xxx  25 lshift DMA1_S2CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S2CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S2CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA1_S2CR bis!        \ DMA1_ACK	Bit 20	 Width 1
 %1  19 lshift DMA1_S2CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S2CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S2CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S2CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S2CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S2CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S2CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S2CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S2CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S2CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S2CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S2CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S2CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S2CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S2CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S2CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S2CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S2CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S2CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S2CR @ %11  21 lshift and 21 rshift ; 
: DMA1_ACK@ DMA1_S2CR @ %1  20 lshift and 20 rshift ; 
: DMA1_CT@ DMA1_S2CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S2CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S2CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S2CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S2CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S2CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S2CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S2CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S2CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S2CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S2CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S2CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S2CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S2CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S2CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S2CR @ %1  0 lshift and 0 rshift ; 

DMA1_S2NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S2NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S2NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S2NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S2NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S2PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S2PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S2PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S2PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S2PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S2M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S2M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S2M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S2M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S2M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S2M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S2M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S2M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S2M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S2M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S2FCR ()
$00000021 CONSTANT RESET_DMA1_S2FCR 
 %1  7 lshift DMA1_S2FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S2FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S2FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S2FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S2FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S2FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S2FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S2FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S2FCR @ %11  0 lshift and 0 rshift ; 

DMA1_S3CR (read-write)
$00000000 CONSTANT RESET_DMA1_S3CR 
 %xxx  25 lshift DMA1_S3CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S3CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S3CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA1_S3CR bis!        \ DMA1_ACK	Bit 20	 Width 1
 %1  19 lshift DMA1_S3CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S3CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S3CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S3CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S3CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S3CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S3CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S3CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S3CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S3CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S3CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S3CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S3CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S3CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S3CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S3CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S3CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S3CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S3CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S3CR @ %11  21 lshift and 21 rshift ; 
: DMA1_ACK@ DMA1_S3CR @ %1  20 lshift and 20 rshift ; 
: DMA1_CT@ DMA1_S3CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S3CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S3CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S3CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S3CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S3CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S3CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S3CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S3CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S3CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S3CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S3CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S3CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S3CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S3CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S3CR @ %1  0 lshift and 0 rshift ; 

DMA1_S3NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S3NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S3NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S3NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S3NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S3PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S3PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S3PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S3PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S3PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S3M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S3M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S3M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S3M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S3M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S3M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S3M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S3M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S3M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S3M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S3FCR ()
$00000021 CONSTANT RESET_DMA1_S3FCR 
 %1  7 lshift DMA1_S3FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S3FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S3FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S3FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S3FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S3FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S3FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S3FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S3FCR @ %11  0 lshift and 0 rshift ; 

DMA1_S4CR (read-write)
$00000000 CONSTANT RESET_DMA1_S4CR 
 %xxx  25 lshift DMA1_S4CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S4CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S4CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA1_S4CR bis!        \ DMA1_ACK	Bit 20	 Width 1
 %1  19 lshift DMA1_S4CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S4CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S4CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S4CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S4CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S4CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S4CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S4CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S4CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S4CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S4CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S4CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S4CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S4CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S4CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S4CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S4CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S4CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S4CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S4CR @ %11  21 lshift and 21 rshift ; 
: DMA1_ACK@ DMA1_S4CR @ %1  20 lshift and 20 rshift ; 
: DMA1_CT@ DMA1_S4CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S4CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S4CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S4CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S4CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S4CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S4CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S4CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S4CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S4CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S4CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S4CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S4CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S4CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S4CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S4CR @ %1  0 lshift and 0 rshift ; 

DMA1_S4NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S4NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S4NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S4NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S4NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S4PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S4PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S4PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S4PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S4PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S4M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S4M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S4M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S4M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S4M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S4M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S4M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S4M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S4M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S4M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S4FCR ()
$00000021 CONSTANT RESET_DMA1_S4FCR 
 %1  7 lshift DMA1_S4FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S4FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S4FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S4FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S4FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S4FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S4FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S4FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S4FCR @ %11  0 lshift and 0 rshift ; 

DMA1_S5CR (read-write)
$00000000 CONSTANT RESET_DMA1_S5CR 
 %xxx  25 lshift DMA1_S5CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S5CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S5CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA1_S5CR bis!        \ DMA1_ACK	Bit 20	 Width 1
 %1  19 lshift DMA1_S5CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S5CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S5CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S5CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S5CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S5CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S5CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S5CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S5CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S5CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S5CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S5CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S5CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S5CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S5CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S5CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S5CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S5CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S5CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S5CR @ %11  21 lshift and 21 rshift ; 
: DMA1_ACK@ DMA1_S5CR @ %1  20 lshift and 20 rshift ; 
: DMA1_CT@ DMA1_S5CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S5CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S5CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S5CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S5CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S5CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S5CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S5CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S5CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S5CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S5CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S5CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S5CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S5CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S5CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S5CR @ %1  0 lshift and 0 rshift ; 

DMA1_S5NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S5NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S5NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S5NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S5NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S5PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S5PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S5PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S5PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S5PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S5M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S5M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S5M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S5M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S5M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S5M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S5M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S5M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S5M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S5M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S5FCR ()
$00000021 CONSTANT RESET_DMA1_S5FCR 
 %1  7 lshift DMA1_S5FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S5FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S5FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S5FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S5FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S5FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S5FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S5FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S5FCR @ %11  0 lshift and 0 rshift ; 

DMA1_S6CR (read-write)
$00000000 CONSTANT RESET_DMA1_S6CR 
 %xxx  25 lshift DMA1_S6CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S6CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S6CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA1_S6CR bis!        \ DMA1_ACK	Bit 20	 Width 1
 %1  19 lshift DMA1_S6CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S6CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S6CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S6CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S6CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S6CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S6CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S6CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S6CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S6CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S6CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S6CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S6CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S6CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S6CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S6CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S6CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S6CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S6CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S6CR @ %11  21 lshift and 21 rshift ; 
: DMA1_ACK@ DMA1_S6CR @ %1  20 lshift and 20 rshift ; 
: DMA1_CT@ DMA1_S6CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S6CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S6CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S6CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S6CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S6CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S6CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S6CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S6CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S6CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S6CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S6CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S6CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S6CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S6CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S6CR @ %1  0 lshift and 0 rshift ; 

DMA1_S6NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S6NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S6NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S6NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S6NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S6PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S6PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S6PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S6PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S6PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S6M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S6M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S6M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S6M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S6M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S6M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S6M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S6M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S6M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S6M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S6FCR ()
$00000021 CONSTANT RESET_DMA1_S6FCR 
 %1  7 lshift DMA1_S6FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S6FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S6FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S6FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S6FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S6FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S6FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S6FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S6FCR @ %11  0 lshift and 0 rshift ; 

DMA1_S7CR (read-write)
$00000000 CONSTANT RESET_DMA1_S7CR 
 %xxx  25 lshift DMA1_S7CR bis!        \ DMA1_CHSEL	Bit 25	 Width 3
 %xx  23 lshift DMA1_S7CR bis!        \ DMA1_MBURST	Bit 23	 Width 2
 %xx  21 lshift DMA1_S7CR bis!        \ DMA1_PBURST	Bit 21	 Width 2
 %1  20 lshift DMA1_S7CR bis!        \ DMA1_ACK	Bit 20	 Width 1
 %1  19 lshift DMA1_S7CR bis!        \ DMA1_CT	Bit 19	 Width 1
 %1  18 lshift DMA1_S7CR bis!        \ DMA1_DBM	Bit 18	 Width 1
 %xx  16 lshift DMA1_S7CR bis!        \ DMA1_PL	Bit 16	 Width 2
 %1  15 lshift DMA1_S7CR bis!        \ DMA1_PINCOS	Bit 15	 Width 1
 %xx  13 lshift DMA1_S7CR bis!        \ DMA1_MSIZE	Bit 13	 Width 2
 %xx  11 lshift DMA1_S7CR bis!        \ DMA1_PSIZE	Bit 11	 Width 2
 %1  10 lshift DMA1_S7CR bis!        \ DMA1_MINC	Bit 10	 Width 1
 %1  9 lshift DMA1_S7CR bis!        \ DMA1_PINC	Bit 9	 Width 1
 %1  8 lshift DMA1_S7CR bis!        \ DMA1_CIRC	Bit 8	 Width 1
 %xx  6 lshift DMA1_S7CR bis!        \ DMA1_DIR	Bit 6	 Width 2
 %1  5 lshift DMA1_S7CR bis!        \ DMA1_PFCTRL	Bit 5	 Width 1
 %1  4 lshift DMA1_S7CR bis!        \ DMA1_TCIE	Bit 4	 Width 1
 %1  3 lshift DMA1_S7CR bis!        \ DMA1_HTIE	Bit 3	 Width 1
 %1  2 lshift DMA1_S7CR bis!        \ DMA1_TEIE	Bit 2	 Width 1
 %1  1 lshift DMA1_S7CR bis!        \ DMA1_DMEIE	Bit 1	 Width 1
 %1  0 lshift DMA1_S7CR bis!        \ DMA1_EN	Bit 0	 Width 1
\ DMA1_S7CR Register BitField Fetch Words  
: DMA1_CHSEL@ DMA1_S7CR @ %111  25 lshift and 25 rshift ; 
: DMA1_MBURST@ DMA1_S7CR @ %11  23 lshift and 23 rshift ; 
: DMA1_PBURST@ DMA1_S7CR @ %11  21 lshift and 21 rshift ; 
: DMA1_ACK@ DMA1_S7CR @ %1  20 lshift and 20 rshift ; 
: DMA1_CT@ DMA1_S7CR @ %1  19 lshift and 19 rshift ; 
: DMA1_DBM@ DMA1_S7CR @ %1  18 lshift and 18 rshift ; 
: DMA1_PL@ DMA1_S7CR @ %11  16 lshift and 16 rshift ; 
: DMA1_PINCOS@ DMA1_S7CR @ %1  15 lshift and 15 rshift ; 
: DMA1_MSIZE@ DMA1_S7CR @ %11  13 lshift and 13 rshift ; 
: DMA1_PSIZE@ DMA1_S7CR @ %11  11 lshift and 11 rshift ; 
: DMA1_MINC@ DMA1_S7CR @ %1  10 lshift and 10 rshift ; 
: DMA1_PINC@ DMA1_S7CR @ %1  9 lshift and 9 rshift ; 
: DMA1_CIRC@ DMA1_S7CR @ %1  8 lshift and 8 rshift ; 
: DMA1_DIR@ DMA1_S7CR @ %11  6 lshift and 6 rshift ; 
: DMA1_PFCTRL@ DMA1_S7CR @ %1  5 lshift and 5 rshift ; 
: DMA1_TCIE@ DMA1_S7CR @ %1  4 lshift and 4 rshift ; 
: DMA1_HTIE@ DMA1_S7CR @ %1  3 lshift and 3 rshift ; 
: DMA1_TEIE@ DMA1_S7CR @ %1  2 lshift and 2 rshift ; 
: DMA1_DMEIE@ DMA1_S7CR @ %1  1 lshift and 1 rshift ; 
: DMA1_EN@ DMA1_S7CR @ %1  0 lshift and 0 rshift ; 

DMA1_S7NDTR (read-write)
$00000000 CONSTANT RESET_DMA1_S7NDTR 
 %xxxxxxxxxxxxxxxx  0 lshift DMA1_S7NDTR bis!        \ DMA1_NDT	Bit 0	 Width 16
\ DMA1_S7NDTR Register BitField Fetch Words  
: DMA1_NDT@ DMA1_S7NDTR @ %1111111111111111  0 lshift and 0 rshift ; 

DMA1_S7PAR (read-write)
$00000000 CONSTANT RESET_DMA1_S7PAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S7PAR bis!        \ DMA1_PA	Bit 0	 Width 32
\ DMA1_S7PAR Register BitField Fetch Words  
: DMA1_PA@ DMA1_S7PAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S7M0AR (read-write)
$00000000 CONSTANT RESET_DMA1_S7M0AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S7M0AR bis!        \ DMA1_M0A	Bit 0	 Width 32
\ DMA1_S7M0AR Register BitField Fetch Words  
: DMA1_M0A@ DMA1_S7M0AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S7M1AR (read-write)
$00000000 CONSTANT RESET_DMA1_S7M1AR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift DMA1_S7M1AR bis!        \ DMA1_M1A	Bit 0	 Width 32
\ DMA1_S7M1AR Register BitField Fetch Words  
: DMA1_M1A@ DMA1_S7M1AR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

DMA1_S7FCR ()
$00000021 CONSTANT RESET_DMA1_S7FCR 
 %1  7 lshift DMA1_S7FCR bis!        \ DMA1_FEIE	Bit 7	 Width 1
 %xxx  3 lshift DMA1_S7FCR bis!        \ DMA1_FS	Bit 3	 Width 3
 %1  2 lshift DMA1_S7FCR bis!        \ DMA1_DMDIS	Bit 2	 Width 1
 %xx  0 lshift DMA1_S7FCR bis!        \ DMA1_FTH	Bit 0	 Width 2
\ DMA1_S7FCR Register BitField Fetch Words  
: DMA1_FEIE@ DMA1_S7FCR @ %1  7 lshift and 7 rshift ; 
: DMA1_FS@ DMA1_S7FCR @ %111  3 lshift and 3 rshift ; 
: DMA1_DMDIS@ DMA1_S7FCR @ %1  2 lshift and 2 rshift ; 
: DMA1_FTH@ DMA1_S7FCR @ %11  0 lshift and 0 rshift ; 

                    
################################### RCC ###################################
RCC_CR ()
$00000083 CONSTANT RESET_RCC_CR 
 %1  27 lshift RCC_CR bis!        \ RCC_PLLI2SRDY	Bit 27	 Width 1
 %1  26 lshift RCC_CR bis!        \ RCC_PLLI2SON	Bit 26	 Width 1
 %1  25 lshift RCC_CR bis!        \ RCC_PLLRDY	Bit 25	 Width 1
 %1  24 lshift RCC_CR bis!        \ RCC_PLLON	Bit 24	 Width 1
 %1  19 lshift RCC_CR bis!        \ RCC_CSSON	Bit 19	 Width 1
 %1  18 lshift RCC_CR bis!        \ RCC_HSEBYP	Bit 18	 Width 1
 %1  17 lshift RCC_CR bis!        \ RCC_HSERDY	Bit 17	 Width 1
 %1  16 lshift RCC_CR bis!        \ RCC_HSEON	Bit 16	 Width 1
 %xxxxxxxx  8 lshift RCC_CR bis!        \ RCC_HSICAL	Bit 8	 Width 8
 %xxxxx  3 lshift RCC_CR bis!        \ RCC_HSITRIM	Bit 3	 Width 5
 %1  1 lshift RCC_CR bis!        \ RCC_HSIRDY	Bit 1	 Width 1
 %1  0 lshift RCC_CR bis!        \ RCC_HSION	Bit 0	 Width 1
\ RCC_CR Register BitField Fetch Words  
: RCC_PLLI2SRDY@ RCC_CR @ %1  27 lshift and 27 rshift ; 
: RCC_PLLI2SON@ RCC_CR @ %1  26 lshift and 26 rshift ; 
: RCC_PLLRDY@ RCC_CR @ %1  25 lshift and 25 rshift ; 
: RCC_PLLON@ RCC_CR @ %1  24 lshift and 24 rshift ; 
: RCC_CSSON@ RCC_CR @ %1  19 lshift and 19 rshift ; 
: RCC_HSEBYP@ RCC_CR @ %1  18 lshift and 18 rshift ; 
: RCC_HSERDY@ RCC_CR @ %1  17 lshift and 17 rshift ; 
: RCC_HSEON@ RCC_CR @ %1  16 lshift and 16 rshift ; 
: RCC_HSICAL@ RCC_CR @ %11111111  8 lshift and 8 rshift ; 
: RCC_HSITRIM@ RCC_CR @ %11111  3 lshift and 3 rshift ; 
: RCC_HSIRDY@ RCC_CR @ %1  1 lshift and 1 rshift ; 
: RCC_HSION@ RCC_CR @ %1  0 lshift and 0 rshift ; 

RCC_PLLCFGR (read-write)
$24003010 CONSTANT RESET_RCC_PLLCFGR 
 %1  27 lshift RCC_PLLCFGR bis!        \ RCC_PLLQ3	Bit 27	 Width 1
 %1  26 lshift RCC_PLLCFGR bis!        \ RCC_PLLQ2	Bit 26	 Width 1
 %1  25 lshift RCC_PLLCFGR bis!        \ RCC_PLLQ1	Bit 25	 Width 1
 %1  24 lshift RCC_PLLCFGR bis!        \ RCC_PLLQ0	Bit 24	 Width 1
 %1  22 lshift RCC_PLLCFGR bis!        \ RCC_PLLSRC	Bit 22	 Width 1
 %1  17 lshift RCC_PLLCFGR bis!        \ RCC_PLLP1	Bit 17	 Width 1
 %1  16 lshift RCC_PLLCFGR bis!        \ RCC_PLLP0	Bit 16	 Width 1
 %1  14 lshift RCC_PLLCFGR bis!        \ RCC_PLLN8	Bit 14	 Width 1
 %1  13 lshift RCC_PLLCFGR bis!        \ RCC_PLLN7	Bit 13	 Width 1
 %1  12 lshift RCC_PLLCFGR bis!        \ RCC_PLLN6	Bit 12	 Width 1
 %1  11 lshift RCC_PLLCFGR bis!        \ RCC_PLLN5	Bit 11	 Width 1
 %1  10 lshift RCC_PLLCFGR bis!        \ RCC_PLLN4	Bit 10	 Width 1
 %1  9 lshift RCC_PLLCFGR bis!        \ RCC_PLLN3	Bit 9	 Width 1
 %1  8 lshift RCC_PLLCFGR bis!        \ RCC_PLLN2	Bit 8	 Width 1
 %1  7 lshift RCC_PLLCFGR bis!        \ RCC_PLLN1	Bit 7	 Width 1
 %1  6 lshift RCC_PLLCFGR bis!        \ RCC_PLLN0	Bit 6	 Width 1
 %1  5 lshift RCC_PLLCFGR bis!        \ RCC_PLLM5	Bit 5	 Width 1
 %1  4 lshift RCC_PLLCFGR bis!        \ RCC_PLLM4	Bit 4	 Width 1
 %1  3 lshift RCC_PLLCFGR bis!        \ RCC_PLLM3	Bit 3	 Width 1
 %1  2 lshift RCC_PLLCFGR bis!        \ RCC_PLLM2	Bit 2	 Width 1
 %1  1 lshift RCC_PLLCFGR bis!        \ RCC_PLLM1	Bit 1	 Width 1
 %1  0 lshift RCC_PLLCFGR bis!        \ RCC_PLLM0	Bit 0	 Width 1
\ RCC_PLLCFGR Register BitField Fetch Words  
: RCC_PLLQ3@ RCC_PLLCFGR @ %1  27 lshift and 27 rshift ; 
: RCC_PLLQ2@ RCC_PLLCFGR @ %1  26 lshift and 26 rshift ; 
: RCC_PLLQ1@ RCC_PLLCFGR @ %1  25 lshift and 25 rshift ; 
: RCC_PLLQ0@ RCC_PLLCFGR @ %1  24 lshift and 24 rshift ; 
: RCC_PLLSRC@ RCC_PLLCFGR @ %1  22 lshift and 22 rshift ; 
: RCC_PLLP1@ RCC_PLLCFGR @ %1  17 lshift and 17 rshift ; 
: RCC_PLLP0@ RCC_PLLCFGR @ %1  16 lshift and 16 rshift ; 
: RCC_PLLN8@ RCC_PLLCFGR @ %1  14 lshift and 14 rshift ; 
: RCC_PLLN7@ RCC_PLLCFGR @ %1  13 lshift and 13 rshift ; 
: RCC_PLLN6@ RCC_PLLCFGR @ %1  12 lshift and 12 rshift ; 
: RCC_PLLN5@ RCC_PLLCFGR @ %1  11 lshift and 11 rshift ; 
: RCC_PLLN4@ RCC_PLLCFGR @ %1  10 lshift and 10 rshift ; 
: RCC_PLLN3@ RCC_PLLCFGR @ %1  9 lshift and 9 rshift ; 
: RCC_PLLN2@ RCC_PLLCFGR @ %1  8 lshift and 8 rshift ; 
: RCC_PLLN1@ RCC_PLLCFGR @ %1  7 lshift and 7 rshift ; 
: RCC_PLLN0@ RCC_PLLCFGR @ %1  6 lshift and 6 rshift ; 
: RCC_PLLM5@ RCC_PLLCFGR @ %1  5 lshift and 5 rshift ; 
: RCC_PLLM4@ RCC_PLLCFGR @ %1  4 lshift and 4 rshift ; 
: RCC_PLLM3@ RCC_PLLCFGR @ %1  3 lshift and 3 rshift ; 
: RCC_PLLM2@ RCC_PLLCFGR @ %1  2 lshift and 2 rshift ; 
: RCC_PLLM1@ RCC_PLLCFGR @ %1  1 lshift and 1 rshift ; 
: RCC_PLLM0@ RCC_PLLCFGR @ %1  0 lshift and 0 rshift ; 

RCC_CFGR ()
$00000000 CONSTANT RESET_RCC_CFGR 
 %xx  30 lshift RCC_CFGR bis!        \ RCC_MCO2	Bit 30	 Width 2
 %xxx  27 lshift RCC_CFGR bis!        \ RCC_MCO2PRE	Bit 27	 Width 3
 %xxx  24 lshift RCC_CFGR bis!        \ RCC_MCO1PRE	Bit 24	 Width 3
 %1  23 lshift RCC_CFGR bis!        \ RCC_I2SSRC	Bit 23	 Width 1
 %xx  21 lshift RCC_CFGR bis!        \ RCC_MCO1	Bit 21	 Width 2
 %xxxxx  16 lshift RCC_CFGR bis!        \ RCC_RTCPRE	Bit 16	 Width 5
 %xxx  13 lshift RCC_CFGR bis!        \ RCC_PPRE2	Bit 13	 Width 3
 %xxx  10 lshift RCC_CFGR bis!        \ RCC_PPRE1	Bit 10	 Width 3
 %xxxx  4 lshift RCC_CFGR bis!        \ RCC_HPRE	Bit 4	 Width 4
 %1  3 lshift RCC_CFGR bis!        \ RCC_SWS1	Bit 3	 Width 1
 %1  2 lshift RCC_CFGR bis!        \ RCC_SWS0	Bit 2	 Width 1
 %1  1 lshift RCC_CFGR bis!        \ RCC_SW1	Bit 1	 Width 1
 %1  0 lshift RCC_CFGR bis!        \ RCC_SW0	Bit 0	 Width 1
\ RCC_CFGR Register BitField Fetch Words  
: RCC_MCO2@ RCC_CFGR @ %11  30 lshift and 30 rshift ; 
: RCC_MCO2PRE@ RCC_CFGR @ %111  27 lshift and 27 rshift ; 
: RCC_MCO1PRE@ RCC_CFGR @ %111  24 lshift and 24 rshift ; 
: RCC_I2SSRC@ RCC_CFGR @ %1  23 lshift and 23 rshift ; 
: RCC_MCO1@ RCC_CFGR @ %11  21 lshift and 21 rshift ; 
: RCC_RTCPRE@ RCC_CFGR @ %11111  16 lshift and 16 rshift ; 
: RCC_PPRE2@ RCC_CFGR @ %111  13 lshift and 13 rshift ; 
: RCC_PPRE1@ RCC_CFGR @ %111  10 lshift and 10 rshift ; 
: RCC_HPRE@ RCC_CFGR @ %1111  4 lshift and 4 rshift ; 
: RCC_SWS1@ RCC_CFGR @ %1  3 lshift and 3 rshift ; 
: RCC_SWS0@ RCC_CFGR @ %1  2 lshift and 2 rshift ; 
: RCC_SW1@ RCC_CFGR @ %1  1 lshift and 1 rshift ; 
: RCC_SW0@ RCC_CFGR @ %1  0 lshift and 0 rshift ; 

RCC_CIR ()
$00000000 CONSTANT RESET_RCC_CIR 
 %1  23 lshift RCC_CIR bis!        \ RCC_CSSC	Bit 23	 Width 1
 %1  21 lshift RCC_CIR bis!        \ RCC_PLLI2SRDYC	Bit 21	 Width 1
 %1  20 lshift RCC_CIR bis!        \ RCC_PLLRDYC	Bit 20	 Width 1
 %1  19 lshift RCC_CIR bis!        \ RCC_HSERDYC	Bit 19	 Width 1
 %1  18 lshift RCC_CIR bis!        \ RCC_HSIRDYC	Bit 18	 Width 1
 %1  17 lshift RCC_CIR bis!        \ RCC_LSERDYC	Bit 17	 Width 1
 %1  16 lshift RCC_CIR bis!        \ RCC_LSIRDYC	Bit 16	 Width 1
 %1  13 lshift RCC_CIR bis!        \ RCC_PLLI2SRDYIE	Bit 13	 Width 1
 %1  12 lshift RCC_CIR bis!        \ RCC_PLLRDYIE	Bit 12	 Width 1
 %1  11 lshift RCC_CIR bis!        \ RCC_HSERDYIE	Bit 11	 Width 1
 %1  10 lshift RCC_CIR bis!        \ RCC_HSIRDYIE	Bit 10	 Width 1
 %1  9 lshift RCC_CIR bis!        \ RCC_LSERDYIE	Bit 9	 Width 1
 %1  8 lshift RCC_CIR bis!        \ RCC_LSIRDYIE	Bit 8	 Width 1
 %1  7 lshift RCC_CIR bis!        \ RCC_CSSF	Bit 7	 Width 1
 %1  5 lshift RCC_CIR bis!        \ RCC_PLLI2SRDYF	Bit 5	 Width 1
 %1  4 lshift RCC_CIR bis!        \ RCC_PLLRDYF	Bit 4	 Width 1
 %1  3 lshift RCC_CIR bis!        \ RCC_HSERDYF	Bit 3	 Width 1
 %1  2 lshift RCC_CIR bis!        \ RCC_HSIRDYF	Bit 2	 Width 1
 %1  1 lshift RCC_CIR bis!        \ RCC_LSERDYF	Bit 1	 Width 1
 %1  0 lshift RCC_CIR bis!        \ RCC_LSIRDYF	Bit 0	 Width 1
\ RCC_CIR Register BitField Fetch Words  
: RCC_CSSC@ RCC_CIR @ %1  23 lshift and 23 rshift ; 
: RCC_PLLI2SRDYC@ RCC_CIR @ %1  21 lshift and 21 rshift ; 
: RCC_PLLRDYC@ RCC_CIR @ %1  20 lshift and 20 rshift ; 
: RCC_HSERDYC@ RCC_CIR @ %1  19 lshift and 19 rshift ; 
: RCC_HSIRDYC@ RCC_CIR @ %1  18 lshift and 18 rshift ; 
: RCC_LSERDYC@ RCC_CIR @ %1  17 lshift and 17 rshift ; 
: RCC_LSIRDYC@ RCC_CIR @ %1  16 lshift and 16 rshift ; 
: RCC_PLLI2SRDYIE@ RCC_CIR @ %1  13 lshift and 13 rshift ; 
: RCC_PLLRDYIE@ RCC_CIR @ %1  12 lshift and 12 rshift ; 
: RCC_HSERDYIE@ RCC_CIR @ %1  11 lshift and 11 rshift ; 
: RCC_HSIRDYIE@ RCC_CIR @ %1  10 lshift and 10 rshift ; 
: RCC_LSERDYIE@ RCC_CIR @ %1  9 lshift and 9 rshift ; 
: RCC_LSIRDYIE@ RCC_CIR @ %1  8 lshift and 8 rshift ; 
: RCC_CSSF@ RCC_CIR @ %1  7 lshift and 7 rshift ; 
: RCC_PLLI2SRDYF@ RCC_CIR @ %1  5 lshift and 5 rshift ; 
: RCC_PLLRDYF@ RCC_CIR @ %1  4 lshift and 4 rshift ; 
: RCC_HSERDYF@ RCC_CIR @ %1  3 lshift and 3 rshift ; 
: RCC_HSIRDYF@ RCC_CIR @ %1  2 lshift and 2 rshift ; 
: RCC_LSERDYF@ RCC_CIR @ %1  1 lshift and 1 rshift ; 
: RCC_LSIRDYF@ RCC_CIR @ %1  0 lshift and 0 rshift ; 

RCC_AHB1RSTR (read-write)
$00000000 CONSTANT RESET_RCC_AHB1RSTR 
 %1  29 lshift RCC_AHB1RSTR bis!        \ RCC_OTGHSRST	Bit 29	 Width 1
 %1  25 lshift RCC_AHB1RSTR bis!        \ RCC_ETHMACRST	Bit 25	 Width 1
 %1  22 lshift RCC_AHB1RSTR bis!        \ RCC_DMA2RST	Bit 22	 Width 1
 %1  21 lshift RCC_AHB1RSTR bis!        \ RCC_DMA1RST	Bit 21	 Width 1
 %1  12 lshift RCC_AHB1RSTR bis!        \ RCC_CRCRST	Bit 12	 Width 1
 %1  8 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOIRST	Bit 8	 Width 1
 %1  7 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOHRST	Bit 7	 Width 1
 %1  6 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOGRST	Bit 6	 Width 1
 %1  5 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOFRST	Bit 5	 Width 1
 %1  4 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOERST	Bit 4	 Width 1
 %1  3 lshift RCC_AHB1RSTR bis!        \ RCC_GPIODRST	Bit 3	 Width 1
 %1  2 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOCRST	Bit 2	 Width 1
 %1  1 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOBRST	Bit 1	 Width 1
 %1  0 lshift RCC_AHB1RSTR bis!        \ RCC_GPIOARST	Bit 0	 Width 1
\ RCC_AHB1RSTR Register BitField Fetch Words  
: RCC_OTGHSRST@ RCC_AHB1RSTR @ %1  29 lshift and 29 rshift ; 
: RCC_ETHMACRST@ RCC_AHB1RSTR @ %1  25 lshift and 25 rshift ; 
: RCC_DMA2RST@ RCC_AHB1RSTR @ %1  22 lshift and 22 rshift ; 
: RCC_DMA1RST@ RCC_AHB1RSTR @ %1  21 lshift and 21 rshift ; 
: RCC_CRCRST@ RCC_AHB1RSTR @ %1  12 lshift and 12 rshift ; 
: RCC_GPIOIRST@ RCC_AHB1RSTR @ %1  8 lshift and 8 rshift ; 
: RCC_GPIOHRST@ RCC_AHB1RSTR @ %1  7 lshift and 7 rshift ; 
: RCC_GPIOGRST@ RCC_AHB1RSTR @ %1  6 lshift and 6 rshift ; 
: RCC_GPIOFRST@ RCC_AHB1RSTR @ %1  5 lshift and 5 rshift ; 
: RCC_GPIOERST@ RCC_AHB1RSTR @ %1  4 lshift and 4 rshift ; 
: RCC_GPIODRST@ RCC_AHB1RSTR @ %1  3 lshift and 3 rshift ; 
: RCC_GPIOCRST@ RCC_AHB1RSTR @ %1  2 lshift and 2 rshift ; 
: RCC_GPIOBRST@ RCC_AHB1RSTR @ %1  1 lshift and 1 rshift ; 
: RCC_GPIOARST@ RCC_AHB1RSTR @ %1  0 lshift and 0 rshift ; 

RCC_AHB2RSTR (read-write)
$00000000 CONSTANT RESET_RCC_AHB2RSTR 
 %1  7 lshift RCC_AHB2RSTR bis!        \ RCC_OTGFSRST	Bit 7	 Width 1
 %1  6 lshift RCC_AHB2RSTR bis!        \ RCC_RNGRST	Bit 6	 Width 1
 %1  5 lshift RCC_AHB2RSTR bis!        \ RCC_HSAHRST	Bit 5	 Width 1
 %1  4 lshift RCC_AHB2RSTR bis!        \ RCC_CRYPRST	Bit 4	 Width 1
 %1  0 lshift RCC_AHB2RSTR bis!        \ RCC_DCMIRST	Bit 0	 Width 1
\ RCC_AHB2RSTR Register BitField Fetch Words  
: RCC_OTGFSRST@ RCC_AHB2RSTR @ %1  7 lshift and 7 rshift ; 
: RCC_RNGRST@ RCC_AHB2RSTR @ %1  6 lshift and 6 rshift ; 
: RCC_HSAHRST@ RCC_AHB2RSTR @ %1  5 lshift and 5 rshift ; 
: RCC_CRYPRST@ RCC_AHB2RSTR @ %1  4 lshift and 4 rshift ; 
: RCC_DCMIRST@ RCC_AHB2RSTR @ %1  0 lshift and 0 rshift ; 

RCC_AHB3RSTR (read-write)
$00000000 CONSTANT RESET_RCC_AHB3RSTR 
 %1  0 lshift RCC_AHB3RSTR bis!        \ RCC_FSMCRST	Bit 0	 Width 1
\ RCC_AHB3RSTR Register BitField Fetch Words  
: RCC_FSMCRST@ RCC_AHB3RSTR @ %1  0 lshift and 0 rshift ; 

RCC_APB1RSTR (read-write)
$00000000 CONSTANT RESET_RCC_APB1RSTR 
 %1  29 lshift RCC_APB1RSTR bis!        \ RCC_DACRST	Bit 29	 Width 1
 %1  28 lshift RCC_APB1RSTR bis!        \ RCC_PWRRST	Bit 28	 Width 1
 %1  26 lshift RCC_APB1RSTR bis!        \ RCC_CAN2RST	Bit 26	 Width 1
 %1  25 lshift RCC_APB1RSTR bis!        \ RCC_CAN1RST	Bit 25	 Width 1
 %1  23 lshift RCC_APB1RSTR bis!        \ RCC_I2C3RST	Bit 23	 Width 1
 %1  22 lshift RCC_APB1RSTR bis!        \ RCC_I2C2RST	Bit 22	 Width 1
 %1  21 lshift RCC_APB1RSTR bis!        \ RCC_I2C1RST	Bit 21	 Width 1
 %1  20 lshift RCC_APB1RSTR bis!        \ RCC_UART5RST	Bit 20	 Width 1
 %1  19 lshift RCC_APB1RSTR bis!        \ RCC_UART4RST	Bit 19	 Width 1
 %1  18 lshift RCC_APB1RSTR bis!        \ RCC_UART3RST	Bit 18	 Width 1
 %1  17 lshift RCC_APB1RSTR bis!        \ RCC_UART2RST	Bit 17	 Width 1
 %1  15 lshift RCC_APB1RSTR bis!        \ RCC_SPI3RST	Bit 15	 Width 1
 %1  14 lshift RCC_APB1RSTR bis!        \ RCC_SPI2RST	Bit 14	 Width 1
 %1  11 lshift RCC_APB1RSTR bis!        \ RCC_WWDGRST	Bit 11	 Width 1
 %1  8 lshift RCC_APB1RSTR bis!        \ RCC_TIM14RST	Bit 8	 Width 1
 %1  7 lshift RCC_APB1RSTR bis!        \ RCC_TIM13RST	Bit 7	 Width 1
 %1  6 lshift RCC_APB1RSTR bis!        \ RCC_TIM12RST	Bit 6	 Width 1
 %1  5 lshift RCC_APB1RSTR bis!        \ RCC_TIM7RST	Bit 5	 Width 1
 %1  4 lshift RCC_APB1RSTR bis!        \ RCC_TIM6RST	Bit 4	 Width 1
 %1  3 lshift RCC_APB1RSTR bis!        \ RCC_TIM5RST	Bit 3	 Width 1
 %1  2 lshift RCC_APB1RSTR bis!        \ RCC_TIM4RST	Bit 2	 Width 1
 %1  1 lshift RCC_APB1RSTR bis!        \ RCC_TIM3RST	Bit 1	 Width 1
 %1  0 lshift RCC_APB1RSTR bis!        \ RCC_TIM2RST	Bit 0	 Width 1
\ RCC_APB1RSTR Register BitField Fetch Words  
: RCC_DACRST@ RCC_APB1RSTR @ %1  29 lshift and 29 rshift ; 
: RCC_PWRRST@ RCC_APB1RSTR @ %1  28 lshift and 28 rshift ; 
: RCC_CAN2RST@ RCC_APB1RSTR @ %1  26 lshift and 26 rshift ; 
: RCC_CAN1RST@ RCC_APB1RSTR @ %1  25 lshift and 25 rshift ; 
: RCC_I2C3RST@ RCC_APB1RSTR @ %1  23 lshift and 23 rshift ; 
: RCC_I2C2RST@ RCC_APB1RSTR @ %1  22 lshift and 22 rshift ; 
: RCC_I2C1RST@ RCC_APB1RSTR @ %1  21 lshift and 21 rshift ; 
: RCC_UART5RST@ RCC_APB1RSTR @ %1  20 lshift and 20 rshift ; 
: RCC_UART4RST@ RCC_APB1RSTR @ %1  19 lshift and 19 rshift ; 
: RCC_UART3RST@ RCC_APB1RSTR @ %1  18 lshift and 18 rshift ; 
: RCC_UART2RST@ RCC_APB1RSTR @ %1  17 lshift and 17 rshift ; 
: RCC_SPI3RST@ RCC_APB1RSTR @ %1  15 lshift and 15 rshift ; 
: RCC_SPI2RST@ RCC_APB1RSTR @ %1  14 lshift and 14 rshift ; 
: RCC_WWDGRST@ RCC_APB1RSTR @ %1  11 lshift and 11 rshift ; 
: RCC_TIM14RST@ RCC_APB1RSTR @ %1  8 lshift and 8 rshift ; 
: RCC_TIM13RST@ RCC_APB1RSTR @ %1  7 lshift and 7 rshift ; 
: RCC_TIM12RST@ RCC_APB1RSTR @ %1  6 lshift and 6 rshift ; 
: RCC_TIM7RST@ RCC_APB1RSTR @ %1  5 lshift and 5 rshift ; 
: RCC_TIM6RST@ RCC_APB1RSTR @ %1  4 lshift and 4 rshift ; 
: RCC_TIM5RST@ RCC_APB1RSTR @ %1  3 lshift and 3 rshift ; 
: RCC_TIM4RST@ RCC_APB1RSTR @ %1  2 lshift and 2 rshift ; 
: RCC_TIM3RST@ RCC_APB1RSTR @ %1  1 lshift and 1 rshift ; 
: RCC_TIM2RST@ RCC_APB1RSTR @ %1  0 lshift and 0 rshift ; 

RCC_APB2RSTR (read-write)
$00000000 CONSTANT RESET_RCC_APB2RSTR 
 %1  18 lshift RCC_APB2RSTR bis!        \ RCC_TIM11RST	Bit 18	 Width 1
 %1  17 lshift RCC_APB2RSTR bis!        \ RCC_TIM10RST	Bit 17	 Width 1
 %1  16 lshift RCC_APB2RSTR bis!        \ RCC_TIM9RST	Bit 16	 Width 1
 %1  14 lshift RCC_APB2RSTR bis!        \ RCC_SYSCFGRST	Bit 14	 Width 1
 %1  12 lshift RCC_APB2RSTR bis!        \ RCC_SPI1RST	Bit 12	 Width 1
 %1  11 lshift RCC_APB2RSTR bis!        \ RCC_SDIORST	Bit 11	 Width 1
 %1  8 lshift RCC_APB2RSTR bis!        \ RCC_ADCRST	Bit 8	 Width 1
 %1  5 lshift RCC_APB2RSTR bis!        \ RCC_USART6RST	Bit 5	 Width 1
 %1  4 lshift RCC_APB2RSTR bis!        \ RCC_USART1RST	Bit 4	 Width 1
 %1  1 lshift RCC_APB2RSTR bis!        \ RCC_TIM8RST	Bit 1	 Width 1
 %1  0 lshift RCC_APB2RSTR bis!        \ RCC_TIM1RST	Bit 0	 Width 1
\ RCC_APB2RSTR Register BitField Fetch Words  
: RCC_TIM11RST@ RCC_APB2RSTR @ %1  18 lshift and 18 rshift ; 
: RCC_TIM10RST@ RCC_APB2RSTR @ %1  17 lshift and 17 rshift ; 
: RCC_TIM9RST@ RCC_APB2RSTR @ %1  16 lshift and 16 rshift ; 
: RCC_SYSCFGRST@ RCC_APB2RSTR @ %1  14 lshift and 14 rshift ; 
: RCC_SPI1RST@ RCC_APB2RSTR @ %1  12 lshift and 12 rshift ; 
: RCC_SDIORST@ RCC_APB2RSTR @ %1  11 lshift and 11 rshift ; 
: RCC_ADCRST@ RCC_APB2RSTR @ %1  8 lshift and 8 rshift ; 
: RCC_USART6RST@ RCC_APB2RSTR @ %1  5 lshift and 5 rshift ; 
: RCC_USART1RST@ RCC_APB2RSTR @ %1  4 lshift and 4 rshift ; 
: RCC_TIM8RST@ RCC_APB2RSTR @ %1  1 lshift and 1 rshift ; 
: RCC_TIM1RST@ RCC_APB2RSTR @ %1  0 lshift and 0 rshift ; 

RCC_AHB1ENR (read-write)
$00100000 CONSTANT RESET_RCC_AHB1ENR 
 %1  30 lshift RCC_AHB1ENR bis!        \ RCC_OTGHSULPIEN	Bit 30	 Width 1
 %1  29 lshift RCC_AHB1ENR bis!        \ RCC_OTGHSEN	Bit 29	 Width 1
 %1  28 lshift RCC_AHB1ENR bis!        \ RCC_ETHMACPTPEN	Bit 28	 Width 1
 %1  27 lshift RCC_AHB1ENR bis!        \ RCC_ETHMACRXEN	Bit 27	 Width 1
 %1  26 lshift RCC_AHB1ENR bis!        \ RCC_ETHMACTXEN	Bit 26	 Width 1
 %1  25 lshift RCC_AHB1ENR bis!        \ RCC_ETHMACEN	Bit 25	 Width 1
 %1  22 lshift RCC_AHB1ENR bis!        \ RCC_DMA2EN	Bit 22	 Width 1
 %1  21 lshift RCC_AHB1ENR bis!        \ RCC_DMA1EN	Bit 21	 Width 1
 %1  18 lshift RCC_AHB1ENR bis!        \ RCC_BKPSRAMEN	Bit 18	 Width 1
 %1  12 lshift RCC_AHB1ENR bis!        \ RCC_CRCEN	Bit 12	 Width 1
 %1  8 lshift RCC_AHB1ENR bis!        \ RCC_GPIOIEN	Bit 8	 Width 1
 %1  7 lshift RCC_AHB1ENR bis!        \ RCC_GPIOHEN	Bit 7	 Width 1
 %1  6 lshift RCC_AHB1ENR bis!        \ RCC_GPIOGEN	Bit 6	 Width 1
 %1  5 lshift RCC_AHB1ENR bis!        \ RCC_GPIOFEN	Bit 5	 Width 1
 %1  4 lshift RCC_AHB1ENR bis!        \ RCC_GPIOEEN	Bit 4	 Width 1
 %1  3 lshift RCC_AHB1ENR bis!        \ RCC_GPIODEN	Bit 3	 Width 1
 %1  2 lshift RCC_AHB1ENR bis!        \ RCC_GPIOCEN	Bit 2	 Width 1
 %1  1 lshift RCC_AHB1ENR bis!        \ RCC_GPIOBEN	Bit 1	 Width 1
 %1  0 lshift RCC_AHB1ENR bis!        \ RCC_GPIOAEN	Bit 0	 Width 1
\ RCC_AHB1ENR Register BitField Fetch Words  
: RCC_OTGHSULPIEN@ RCC_AHB1ENR @ %1  30 lshift and 30 rshift ; 
: RCC_OTGHSEN@ RCC_AHB1ENR @ %1  29 lshift and 29 rshift ; 
: RCC_ETHMACPTPEN@ RCC_AHB1ENR @ %1  28 lshift and 28 rshift ; 
: RCC_ETHMACRXEN@ RCC_AHB1ENR @ %1  27 lshift and 27 rshift ; 
: RCC_ETHMACTXEN@ RCC_AHB1ENR @ %1  26 lshift and 26 rshift ; 
: RCC_ETHMACEN@ RCC_AHB1ENR @ %1  25 lshift and 25 rshift ; 
: RCC_DMA2EN@ RCC_AHB1ENR @ %1  22 lshift and 22 rshift ; 
: RCC_DMA1EN@ RCC_AHB1ENR @ %1  21 lshift and 21 rshift ; 
: RCC_BKPSRAMEN@ RCC_AHB1ENR @ %1  18 lshift and 18 rshift ; 
: RCC_CRCEN@ RCC_AHB1ENR @ %1  12 lshift and 12 rshift ; 
: RCC_GPIOIEN@ RCC_AHB1ENR @ %1  8 lshift and 8 rshift ; 
: RCC_GPIOHEN@ RCC_AHB1ENR @ %1  7 lshift and 7 rshift ; 
: RCC_GPIOGEN@ RCC_AHB1ENR @ %1  6 lshift and 6 rshift ; 
: RCC_GPIOFEN@ RCC_AHB1ENR @ %1  5 lshift and 5 rshift ; 
: RCC_GPIOEEN@ RCC_AHB1ENR @ %1  4 lshift and 4 rshift ; 
: RCC_GPIODEN@ RCC_AHB1ENR @ %1  3 lshift and 3 rshift ; 
: RCC_GPIOCEN@ RCC_AHB1ENR @ %1  2 lshift and 2 rshift ; 
: RCC_GPIOBEN@ RCC_AHB1ENR @ %1  1 lshift and 1 rshift ; 
: RCC_GPIOAEN@ RCC_AHB1ENR @ %1  0 lshift and 0 rshift ; 

RCC_AHB2ENR (read-write)
$00000000 CONSTANT RESET_RCC_AHB2ENR 
 %1  7 lshift RCC_AHB2ENR bis!        \ RCC_OTGFSEN	Bit 7	 Width 1
 %1  6 lshift RCC_AHB2ENR bis!        \ RCC_RNGEN	Bit 6	 Width 1
 %1  5 lshift RCC_AHB2ENR bis!        \ RCC_HASHEN	Bit 5	 Width 1
 %1  4 lshift RCC_AHB2ENR bis!        \ RCC_CRYPEN	Bit 4	 Width 1
 %1  0 lshift RCC_AHB2ENR bis!        \ RCC_DCMIEN	Bit 0	 Width 1
\ RCC_AHB2ENR Register BitField Fetch Words  
: RCC_OTGFSEN@ RCC_AHB2ENR @ %1  7 lshift and 7 rshift ; 
: RCC_RNGEN@ RCC_AHB2ENR @ %1  6 lshift and 6 rshift ; 
: RCC_HASHEN@ RCC_AHB2ENR @ %1  5 lshift and 5 rshift ; 
: RCC_CRYPEN@ RCC_AHB2ENR @ %1  4 lshift and 4 rshift ; 
: RCC_DCMIEN@ RCC_AHB2ENR @ %1  0 lshift and 0 rshift ; 

RCC_AHB3ENR (read-write)
$00000000 CONSTANT RESET_RCC_AHB3ENR 
 %1  0 lshift RCC_AHB3ENR bis!        \ RCC_FSMCEN	Bit 0	 Width 1
\ RCC_AHB3ENR Register BitField Fetch Words  
: RCC_FSMCEN@ RCC_AHB3ENR @ %1  0 lshift and 0 rshift ; 

RCC_APB1ENR (read-write)
$00000000 CONSTANT RESET_RCC_APB1ENR 
 %1  29 lshift RCC_APB1ENR bis!        \ RCC_DACEN	Bit 29	 Width 1
 %1  28 lshift RCC_APB1ENR bis!        \ RCC_PWREN	Bit 28	 Width 1
 %1  26 lshift RCC_APB1ENR bis!        \ RCC_CAN2EN	Bit 26	 Width 1
 %1  25 lshift RCC_APB1ENR bis!        \ RCC_CAN1EN	Bit 25	 Width 1
 %1  23 lshift RCC_APB1ENR bis!        \ RCC_I2C3EN	Bit 23	 Width 1
 %1  22 lshift RCC_APB1ENR bis!        \ RCC_I2C2EN	Bit 22	 Width 1
 %1  21 lshift RCC_APB1ENR bis!        \ RCC_I2C1EN	Bit 21	 Width 1
 %1  20 lshift RCC_APB1ENR bis!        \ RCC_UART5EN	Bit 20	 Width 1
 %1  19 lshift RCC_APB1ENR bis!        \ RCC_UART4EN	Bit 19	 Width 1
 %1  18 lshift RCC_APB1ENR bis!        \ RCC_USART3EN	Bit 18	 Width 1
 %1  17 lshift RCC_APB1ENR bis!        \ RCC_USART2EN	Bit 17	 Width 1
 %1  15 lshift RCC_APB1ENR bis!        \ RCC_SPI3EN	Bit 15	 Width 1
 %1  14 lshift RCC_APB1ENR bis!        \ RCC_SPI2EN	Bit 14	 Width 1
 %1  11 lshift RCC_APB1ENR bis!        \ RCC_WWDGEN	Bit 11	 Width 1
 %1  8 lshift RCC_APB1ENR bis!        \ RCC_TIM14EN	Bit 8	 Width 1
 %1  7 lshift RCC_APB1ENR bis!        \ RCC_TIM13EN	Bit 7	 Width 1
 %1  6 lshift RCC_APB1ENR bis!        \ RCC_TIM12EN	Bit 6	 Width 1
 %1  5 lshift RCC_APB1ENR bis!        \ RCC_TIM7EN	Bit 5	 Width 1
 %1  4 lshift RCC_APB1ENR bis!        \ RCC_TIM6EN	Bit 4	 Width 1
 %1  3 lshift RCC_APB1ENR bis!        \ RCC_TIM5EN	Bit 3	 Width 1
 %1  2 lshift RCC_APB1ENR bis!        \ RCC_TIM4EN	Bit 2	 Width 1
 %1  1 lshift RCC_APB1ENR bis!        \ RCC_TIM3EN	Bit 1	 Width 1
 %1  0 lshift RCC_APB1ENR bis!        \ RCC_TIM2EN	Bit 0	 Width 1
\ RCC_APB1ENR Register BitField Fetch Words  
: RCC_DACEN@ RCC_APB1ENR @ %1  29 lshift and 29 rshift ; 
: RCC_PWREN@ RCC_APB1ENR @ %1  28 lshift and 28 rshift ; 
: RCC_CAN2EN@ RCC_APB1ENR @ %1  26 lshift and 26 rshift ; 
: RCC_CAN1EN@ RCC_APB1ENR @ %1  25 lshift and 25 rshift ; 
: RCC_I2C3EN@ RCC_APB1ENR @ %1  23 lshift and 23 rshift ; 
: RCC_I2C2EN@ RCC_APB1ENR @ %1  22 lshift and 22 rshift ; 
: RCC_I2C1EN@ RCC_APB1ENR @ %1  21 lshift and 21 rshift ; 
: RCC_UART5EN@ RCC_APB1ENR @ %1  20 lshift and 20 rshift ; 
: RCC_UART4EN@ RCC_APB1ENR @ %1  19 lshift and 19 rshift ; 
: RCC_USART3EN@ RCC_APB1ENR @ %1  18 lshift and 18 rshift ; 
: RCC_USART2EN@ RCC_APB1ENR @ %1  17 lshift and 17 rshift ; 
: RCC_SPI3EN@ RCC_APB1ENR @ %1  15 lshift and 15 rshift ; 
: RCC_SPI2EN@ RCC_APB1ENR @ %1  14 lshift and 14 rshift ; 
: RCC_WWDGEN@ RCC_APB1ENR @ %1  11 lshift and 11 rshift ; 
: RCC_TIM14EN@ RCC_APB1ENR @ %1  8 lshift and 8 rshift ; 
: RCC_TIM13EN@ RCC_APB1ENR @ %1  7 lshift and 7 rshift ; 
: RCC_TIM12EN@ RCC_APB1ENR @ %1  6 lshift and 6 rshift ; 
: RCC_TIM7EN@ RCC_APB1ENR @ %1  5 lshift and 5 rshift ; 
: RCC_TIM6EN@ RCC_APB1ENR @ %1  4 lshift and 4 rshift ; 
: RCC_TIM5EN@ RCC_APB1ENR @ %1  3 lshift and 3 rshift ; 
: RCC_TIM4EN@ RCC_APB1ENR @ %1  2 lshift and 2 rshift ; 
: RCC_TIM3EN@ RCC_APB1ENR @ %1  1 lshift and 1 rshift ; 
: RCC_TIM2EN@ RCC_APB1ENR @ %1  0 lshift and 0 rshift ; 

RCC_APB2ENR (read-write)
$00000000 CONSTANT RESET_RCC_APB2ENR 
 %1  18 lshift RCC_APB2ENR bis!        \ RCC_TIM11EN	Bit 18	 Width 1
 %1  17 lshift RCC_APB2ENR bis!        \ RCC_TIM10EN	Bit 17	 Width 1
 %1  16 lshift RCC_APB2ENR bis!        \ RCC_TIM9EN	Bit 16	 Width 1
 %1  14 lshift RCC_APB2ENR bis!        \ RCC_SYSCFGEN	Bit 14	 Width 1
 %1  12 lshift RCC_APB2ENR bis!        \ RCC_SPI1EN	Bit 12	 Width 1
 %1  11 lshift RCC_APB2ENR bis!        \ RCC_SDIOEN	Bit 11	 Width 1
 %1  10 lshift RCC_APB2ENR bis!        \ RCC_ADC3EN	Bit 10	 Width 1
 %1  9 lshift RCC_APB2ENR bis!        \ RCC_ADC2EN	Bit 9	 Width 1
 %1  8 lshift RCC_APB2ENR bis!        \ RCC_ADC1EN	Bit 8	 Width 1
 %1  5 lshift RCC_APB2ENR bis!        \ RCC_USART6EN	Bit 5	 Width 1
 %1  4 lshift RCC_APB2ENR bis!        \ RCC_USART1EN	Bit 4	 Width 1
 %1  1 lshift RCC_APB2ENR bis!        \ RCC_TIM8EN	Bit 1	 Width 1
 %1  0 lshift RCC_APB2ENR bis!        \ RCC_TIM1EN	Bit 0	 Width 1
\ RCC_APB2ENR Register BitField Fetch Words  
: RCC_TIM11EN@ RCC_APB2ENR @ %1  18 lshift and 18 rshift ; 
: RCC_TIM10EN@ RCC_APB2ENR @ %1  17 lshift and 17 rshift ; 
: RCC_TIM9EN@ RCC_APB2ENR @ %1  16 lshift and 16 rshift ; 
: RCC_SYSCFGEN@ RCC_APB2ENR @ %1  14 lshift and 14 rshift ; 
: RCC_SPI1EN@ RCC_APB2ENR @ %1  12 lshift and 12 rshift ; 
: RCC_SDIOEN@ RCC_APB2ENR @ %1  11 lshift and 11 rshift ; 
: RCC_ADC3EN@ RCC_APB2ENR @ %1  10 lshift and 10 rshift ; 
: RCC_ADC2EN@ RCC_APB2ENR @ %1  9 lshift and 9 rshift ; 
: RCC_ADC1EN@ RCC_APB2ENR @ %1  8 lshift and 8 rshift ; 
: RCC_USART6EN@ RCC_APB2ENR @ %1  5 lshift and 5 rshift ; 
: RCC_USART1EN@ RCC_APB2ENR @ %1  4 lshift and 4 rshift ; 
: RCC_TIM8EN@ RCC_APB2ENR @ %1  1 lshift and 1 rshift ; 
: RCC_TIM1EN@ RCC_APB2ENR @ %1  0 lshift and 0 rshift ; 

RCC_AHB1LPENR (read-write)
$7E6791FF CONSTANT RESET_RCC_AHB1LPENR 
 %1  30 lshift RCC_AHB1LPENR bis!        \ RCC_OTGHSULPILPEN	Bit 30	 Width 1
 %1  29 lshift RCC_AHB1LPENR bis!        \ RCC_OTGHSLPEN	Bit 29	 Width 1
 %1  28 lshift RCC_AHB1LPENR bis!        \ RCC_ETHMACPTPLPEN	Bit 28	 Width 1
 %1  27 lshift RCC_AHB1LPENR bis!        \ RCC_ETHMACRXLPEN	Bit 27	 Width 1
 %1  26 lshift RCC_AHB1LPENR bis!        \ RCC_ETHMACTXLPEN	Bit 26	 Width 1
 %1  25 lshift RCC_AHB1LPENR bis!        \ RCC_ETHMACLPEN	Bit 25	 Width 1
 %1  22 lshift RCC_AHB1LPENR bis!        \ RCC_DMA2LPEN	Bit 22	 Width 1
 %1  21 lshift RCC_AHB1LPENR bis!        \ RCC_DMA1LPEN	Bit 21	 Width 1
 %1  18 lshift RCC_AHB1LPENR bis!        \ RCC_BKPSRAMLPEN	Bit 18	 Width 1
 %1  17 lshift RCC_AHB1LPENR bis!        \ RCC_SRAM2LPEN	Bit 17	 Width 1
 %1  16 lshift RCC_AHB1LPENR bis!        \ RCC_SRAM1LPEN	Bit 16	 Width 1
 %1  15 lshift RCC_AHB1LPENR bis!        \ RCC_FLITFLPEN	Bit 15	 Width 1
 %1  12 lshift RCC_AHB1LPENR bis!        \ RCC_CRCLPEN	Bit 12	 Width 1
 %1  8 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOILPEN	Bit 8	 Width 1
 %1  7 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOHLPEN	Bit 7	 Width 1
 %1  6 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOGLPEN	Bit 6	 Width 1
 %1  5 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOFLPEN	Bit 5	 Width 1
 %1  4 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOELPEN	Bit 4	 Width 1
 %1  3 lshift RCC_AHB1LPENR bis!        \ RCC_GPIODLPEN	Bit 3	 Width 1
 %1  2 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOCLPEN	Bit 2	 Width 1
 %1  1 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOBLPEN	Bit 1	 Width 1
 %1  0 lshift RCC_AHB1LPENR bis!        \ RCC_GPIOALPEN	Bit 0	 Width 1
\ RCC_AHB1LPENR Register BitField Fetch Words  
: RCC_OTGHSULPILPEN@ RCC_AHB1LPENR @ %1  30 lshift and 30 rshift ; 
: RCC_OTGHSLPEN@ RCC_AHB1LPENR @ %1  29 lshift and 29 rshift ; 
: RCC_ETHMACPTPLPEN@ RCC_AHB1LPENR @ %1  28 lshift and 28 rshift ; 
: RCC_ETHMACRXLPEN@ RCC_AHB1LPENR @ %1  27 lshift and 27 rshift ; 
: RCC_ETHMACTXLPEN@ RCC_AHB1LPENR @ %1  26 lshift and 26 rshift ; 
: RCC_ETHMACLPEN@ RCC_AHB1LPENR @ %1  25 lshift and 25 rshift ; 
: RCC_DMA2LPEN@ RCC_AHB1LPENR @ %1  22 lshift and 22 rshift ; 
: RCC_DMA1LPEN@ RCC_AHB1LPENR @ %1  21 lshift and 21 rshift ; 
: RCC_BKPSRAMLPEN@ RCC_AHB1LPENR @ %1  18 lshift and 18 rshift ; 
: RCC_SRAM2LPEN@ RCC_AHB1LPENR @ %1  17 lshift and 17 rshift ; 
: RCC_SRAM1LPEN@ RCC_AHB1LPENR @ %1  16 lshift and 16 rshift ; 
: RCC_FLITFLPEN@ RCC_AHB1LPENR @ %1  15 lshift and 15 rshift ; 
: RCC_CRCLPEN@ RCC_AHB1LPENR @ %1  12 lshift and 12 rshift ; 
: RCC_GPIOILPEN@ RCC_AHB1LPENR @ %1  8 lshift and 8 rshift ; 
: RCC_GPIOHLPEN@ RCC_AHB1LPENR @ %1  7 lshift and 7 rshift ; 
: RCC_GPIOGLPEN@ RCC_AHB1LPENR @ %1  6 lshift and 6 rshift ; 
: RCC_GPIOFLPEN@ RCC_AHB1LPENR @ %1  5 lshift and 5 rshift ; 
: RCC_GPIOELPEN@ RCC_AHB1LPENR @ %1  4 lshift and 4 rshift ; 
: RCC_GPIODLPEN@ RCC_AHB1LPENR @ %1  3 lshift and 3 rshift ; 
: RCC_GPIOCLPEN@ RCC_AHB1LPENR @ %1  2 lshift and 2 rshift ; 
: RCC_GPIOBLPEN@ RCC_AHB1LPENR @ %1  1 lshift and 1 rshift ; 
: RCC_GPIOALPEN@ RCC_AHB1LPENR @ %1  0 lshift and 0 rshift ; 

RCC_AHB2LPENR (read-write)
$000000F1 CONSTANT RESET_RCC_AHB2LPENR 
 %1  7 lshift RCC_AHB2LPENR bis!        \ RCC_OTGFSLPEN	Bit 7	 Width 1
 %1  6 lshift RCC_AHB2LPENR bis!        \ RCC_RNGLPEN	Bit 6	 Width 1
 %1  5 lshift RCC_AHB2LPENR bis!        \ RCC_HASHLPEN	Bit 5	 Width 1
 %1  4 lshift RCC_AHB2LPENR bis!        \ RCC_CRYPLPEN	Bit 4	 Width 1
 %1  0 lshift RCC_AHB2LPENR bis!        \ RCC_DCMILPEN	Bit 0	 Width 1
\ RCC_AHB2LPENR Register BitField Fetch Words  
: RCC_OTGFSLPEN@ RCC_AHB2LPENR @ %1  7 lshift and 7 rshift ; 
: RCC_RNGLPEN@ RCC_AHB2LPENR @ %1  6 lshift and 6 rshift ; 
: RCC_HASHLPEN@ RCC_AHB2LPENR @ %1  5 lshift and 5 rshift ; 
: RCC_CRYPLPEN@ RCC_AHB2LPENR @ %1  4 lshift and 4 rshift ; 
: RCC_DCMILPEN@ RCC_AHB2LPENR @ %1  0 lshift and 0 rshift ; 

RCC_AHB3LPENR (read-write)
$00000001 CONSTANT RESET_RCC_AHB3LPENR 
 %1  0 lshift RCC_AHB3LPENR bis!        \ RCC_FSMCLPEN	Bit 0	 Width 1
\ RCC_AHB3LPENR Register BitField Fetch Words  
: RCC_FSMCLPEN@ RCC_AHB3LPENR @ %1  0 lshift and 0 rshift ; 

RCC_APB1LPENR (read-write)
$36FEC9FF CONSTANT RESET_RCC_APB1LPENR 
 %1  29 lshift RCC_APB1LPENR bis!        \ RCC_DACLPEN	Bit 29	 Width 1
 %1  28 lshift RCC_APB1LPENR bis!        \ RCC_PWRLPEN	Bit 28	 Width 1
 %1  26 lshift RCC_APB1LPENR bis!        \ RCC_CAN2LPEN	Bit 26	 Width 1
 %1  25 lshift RCC_APB1LPENR bis!        \ RCC_CAN1LPEN	Bit 25	 Width 1
 %1  23 lshift RCC_APB1LPENR bis!        \ RCC_I2C3LPEN	Bit 23	 Width 1
 %1  22 lshift RCC_APB1LPENR bis!        \ RCC_I2C2LPEN	Bit 22	 Width 1
 %1  21 lshift RCC_APB1LPENR bis!        \ RCC_I2C1LPEN	Bit 21	 Width 1
 %1  20 lshift RCC_APB1LPENR bis!        \ RCC_UART5LPEN	Bit 20	 Width 1
 %1  19 lshift RCC_APB1LPENR bis!        \ RCC_UART4LPEN	Bit 19	 Width 1
 %1  18 lshift RCC_APB1LPENR bis!        \ RCC_USART3LPEN	Bit 18	 Width 1
 %1  17 lshift RCC_APB1LPENR bis!        \ RCC_USART2LPEN	Bit 17	 Width 1
 %1  15 lshift RCC_APB1LPENR bis!        \ RCC_SPI3LPEN	Bit 15	 Width 1
 %1  14 lshift RCC_APB1LPENR bis!        \ RCC_SPI2LPEN	Bit 14	 Width 1
 %1  11 lshift RCC_APB1LPENR bis!        \ RCC_WWDGLPEN	Bit 11	 Width 1
 %1  8 lshift RCC_APB1LPENR bis!        \ RCC_TIM14LPEN	Bit 8	 Width 1
 %1  7 lshift RCC_APB1LPENR bis!        \ RCC_TIM13LPEN	Bit 7	 Width 1
 %1  6 lshift RCC_APB1LPENR bis!        \ RCC_TIM12LPEN	Bit 6	 Width 1
 %1  5 lshift RCC_APB1LPENR bis!        \ RCC_TIM7LPEN	Bit 5	 Width 1
 %1  4 lshift RCC_APB1LPENR bis!        \ RCC_TIM6LPEN	Bit 4	 Width 1
 %1  3 lshift RCC_APB1LPENR bis!        \ RCC_TIM5LPEN	Bit 3	 Width 1
 %1  2 lshift RCC_APB1LPENR bis!        \ RCC_TIM4LPEN	Bit 2	 Width 1
 %1  1 lshift RCC_APB1LPENR bis!        \ RCC_TIM3LPEN	Bit 1	 Width 1
 %1  0 lshift RCC_APB1LPENR bis!        \ RCC_TIM2LPEN	Bit 0	 Width 1
\ RCC_APB1LPENR Register BitField Fetch Words  
: RCC_DACLPEN@ RCC_APB1LPENR @ %1  29 lshift and 29 rshift ; 
: RCC_PWRLPEN@ RCC_APB1LPENR @ %1  28 lshift and 28 rshift ; 
: RCC_CAN2LPEN@ RCC_APB1LPENR @ %1  26 lshift and 26 rshift ; 
: RCC_CAN1LPEN@ RCC_APB1LPENR @ %1  25 lshift and 25 rshift ; 
: RCC_I2C3LPEN@ RCC_APB1LPENR @ %1  23 lshift and 23 rshift ; 
: RCC_I2C2LPEN@ RCC_APB1LPENR @ %1  22 lshift and 22 rshift ; 
: RCC_I2C1LPEN@ RCC_APB1LPENR @ %1  21 lshift and 21 rshift ; 
: RCC_UART5LPEN@ RCC_APB1LPENR @ %1  20 lshift and 20 rshift ; 
: RCC_UART4LPEN@ RCC_APB1LPENR @ %1  19 lshift and 19 rshift ; 
: RCC_USART3LPEN@ RCC_APB1LPENR @ %1  18 lshift and 18 rshift ; 
: RCC_USART2LPEN@ RCC_APB1LPENR @ %1  17 lshift and 17 rshift ; 
: RCC_SPI3LPEN@ RCC_APB1LPENR @ %1  15 lshift and 15 rshift ; 
: RCC_SPI2LPEN@ RCC_APB1LPENR @ %1  14 lshift and 14 rshift ; 
: RCC_WWDGLPEN@ RCC_APB1LPENR @ %1  11 lshift and 11 rshift ; 
: RCC_TIM14LPEN@ RCC_APB1LPENR @ %1  8 lshift and 8 rshift ; 
: RCC_TIM13LPEN@ RCC_APB1LPENR @ %1  7 lshift and 7 rshift ; 
: RCC_TIM12LPEN@ RCC_APB1LPENR @ %1  6 lshift and 6 rshift ; 
: RCC_TIM7LPEN@ RCC_APB1LPENR @ %1  5 lshift and 5 rshift ; 
: RCC_TIM6LPEN@ RCC_APB1LPENR @ %1  4 lshift and 4 rshift ; 
: RCC_TIM5LPEN@ RCC_APB1LPENR @ %1  3 lshift and 3 rshift ; 
: RCC_TIM4LPEN@ RCC_APB1LPENR @ %1  2 lshift and 2 rshift ; 
: RCC_TIM3LPEN@ RCC_APB1LPENR @ %1  1 lshift and 1 rshift ; 
: RCC_TIM2LPEN@ RCC_APB1LPENR @ %1  0 lshift and 0 rshift ; 

RCC_APB2LPENR (read-write)
$00075F33 CONSTANT RESET_RCC_APB2LPENR 
 %1  18 lshift RCC_APB2LPENR bis!        \ RCC_TIM11LPEN	Bit 18	 Width 1
 %1  17 lshift RCC_APB2LPENR bis!        \ RCC_TIM10LPEN	Bit 17	 Width 1
 %1  16 lshift RCC_APB2LPENR bis!        \ RCC_TIM9LPEN	Bit 16	 Width 1
 %1  14 lshift RCC_APB2LPENR bis!        \ RCC_SYSCFGLPEN	Bit 14	 Width 1
 %1  12 lshift RCC_APB2LPENR bis!        \ RCC_SPI1LPEN	Bit 12	 Width 1
 %1  11 lshift RCC_APB2LPENR bis!        \ RCC_SDIOLPEN	Bit 11	 Width 1
 %1  10 lshift RCC_APB2LPENR bis!        \ RCC_ADC3LPEN	Bit 10	 Width 1
 %1  9 lshift RCC_APB2LPENR bis!        \ RCC_ADC2LPEN	Bit 9	 Width 1
 %1  8 lshift RCC_APB2LPENR bis!        \ RCC_ADC1LPEN	Bit 8	 Width 1
 %1  5 lshift RCC_APB2LPENR bis!        \ RCC_USART6LPEN	Bit 5	 Width 1
 %1  4 lshift RCC_APB2LPENR bis!        \ RCC_USART1LPEN	Bit 4	 Width 1
 %1  1 lshift RCC_APB2LPENR bis!        \ RCC_TIM8LPEN	Bit 1	 Width 1
 %1  0 lshift RCC_APB2LPENR bis!        \ RCC_TIM1LPEN	Bit 0	 Width 1
\ RCC_APB2LPENR Register BitField Fetch Words  
: RCC_TIM11LPEN@ RCC_APB2LPENR @ %1  18 lshift and 18 rshift ; 
: RCC_TIM10LPEN@ RCC_APB2LPENR @ %1  17 lshift and 17 rshift ; 
: RCC_TIM9LPEN@ RCC_APB2LPENR @ %1  16 lshift and 16 rshift ; 
: RCC_SYSCFGLPEN@ RCC_APB2LPENR @ %1  14 lshift and 14 rshift ; 
: RCC_SPI1LPEN@ RCC_APB2LPENR @ %1  12 lshift and 12 rshift ; 
: RCC_SDIOLPEN@ RCC_APB2LPENR @ %1  11 lshift and 11 rshift ; 
: RCC_ADC3LPEN@ RCC_APB2LPENR @ %1  10 lshift and 10 rshift ; 
: RCC_ADC2LPEN@ RCC_APB2LPENR @ %1  9 lshift and 9 rshift ; 
: RCC_ADC1LPEN@ RCC_APB2LPENR @ %1  8 lshift and 8 rshift ; 
: RCC_USART6LPEN@ RCC_APB2LPENR @ %1  5 lshift and 5 rshift ; 
: RCC_USART1LPEN@ RCC_APB2LPENR @ %1  4 lshift and 4 rshift ; 
: RCC_TIM8LPEN@ RCC_APB2LPENR @ %1  1 lshift and 1 rshift ; 
: RCC_TIM1LPEN@ RCC_APB2LPENR @ %1  0 lshift and 0 rshift ; 

RCC_BDCR ()
$00000000 CONSTANT RESET_RCC_BDCR 
 %1  16 lshift RCC_BDCR bis!        \ RCC_BDRST	Bit 16	 Width 1
 %1  15 lshift RCC_BDCR bis!        \ RCC_RTCEN	Bit 15	 Width 1
 %1  9 lshift RCC_BDCR bis!        \ RCC_RTCSEL1	Bit 9	 Width 1
 %1  8 lshift RCC_BDCR bis!        \ RCC_RTCSEL0	Bit 8	 Width 1
 %1  2 lshift RCC_BDCR bis!        \ RCC_LSEBYP	Bit 2	 Width 1
 %1  1 lshift RCC_BDCR bis!        \ RCC_LSERDY	Bit 1	 Width 1
 %1  0 lshift RCC_BDCR bis!        \ RCC_LSEON	Bit 0	 Width 1
\ RCC_BDCR Register BitField Fetch Words  
: RCC_BDRST@ RCC_BDCR @ %1  16 lshift and 16 rshift ; 
: RCC_RTCEN@ RCC_BDCR @ %1  15 lshift and 15 rshift ; 
: RCC_RTCSEL1@ RCC_BDCR @ %1  9 lshift and 9 rshift ; 
: RCC_RTCSEL0@ RCC_BDCR @ %1  8 lshift and 8 rshift ; 
: RCC_LSEBYP@ RCC_BDCR @ %1  2 lshift and 2 rshift ; 
: RCC_LSERDY@ RCC_BDCR @ %1  1 lshift and 1 rshift ; 
: RCC_LSEON@ RCC_BDCR @ %1  0 lshift and 0 rshift ; 

RCC_CSR ()
$0E000000 CONSTANT RESET_RCC_CSR 
 %1  31 lshift RCC_CSR bis!        \ RCC_LPWRRSTF	Bit 31	 Width 1
 %1  30 lshift RCC_CSR bis!        \ RCC_WWDGRSTF	Bit 30	 Width 1
 %1  29 lshift RCC_CSR bis!        \ RCC_WDGRSTF	Bit 29	 Width 1
 %1  28 lshift RCC_CSR bis!        \ RCC_SFTRSTF	Bit 28	 Width 1
 %1  27 lshift RCC_CSR bis!        \ RCC_PORRSTF	Bit 27	 Width 1
 %1  26 lshift RCC_CSR bis!        \ RCC_PADRSTF	Bit 26	 Width 1
 %1  25 lshift RCC_CSR bis!        \ RCC_BORRSTF	Bit 25	 Width 1
 %1  24 lshift RCC_CSR bis!        \ RCC_RMVF	Bit 24	 Width 1
 %1  1 lshift RCC_CSR bis!        \ RCC_LSIRDY	Bit 1	 Width 1
 %1  0 lshift RCC_CSR bis!        \ RCC_LSION	Bit 0	 Width 1
\ RCC_CSR Register BitField Fetch Words  
: RCC_LPWRRSTF@ RCC_CSR @ %1  31 lshift and 31 rshift ; 
: RCC_WWDGRSTF@ RCC_CSR @ %1  30 lshift and 30 rshift ; 
: RCC_WDGRSTF@ RCC_CSR @ %1  29 lshift and 29 rshift ; 
: RCC_SFTRSTF@ RCC_CSR @ %1  28 lshift and 28 rshift ; 
: RCC_PORRSTF@ RCC_CSR @ %1  27 lshift and 27 rshift ; 
: RCC_PADRSTF@ RCC_CSR @ %1  26 lshift and 26 rshift ; 
: RCC_BORRSTF@ RCC_CSR @ %1  25 lshift and 25 rshift ; 
: RCC_RMVF@ RCC_CSR @ %1  24 lshift and 24 rshift ; 
: RCC_LSIRDY@ RCC_CSR @ %1  1 lshift and 1 rshift ; 
: RCC_LSION@ RCC_CSR @ %1  0 lshift and 0 rshift ; 

RCC_SSCGR (read-write)
$00000000 CONSTANT RESET_RCC_SSCGR 
 %1  31 lshift RCC_SSCGR bis!        \ RCC_SSCGEN	Bit 31	 Width 1
 %1  30 lshift RCC_SSCGR bis!        \ RCC_SPREADSEL	Bit 30	 Width 1
 %xxxxxxxxxxxxxxx  13 lshift RCC_SSCGR bis!        \ RCC_INCSTEP	Bit 13	 Width 15
 % 0 lshift RCC_SSCGR bis!        \ RCC_MODPER	Bit 0	 Width 13
\ RCC_SSCGR Register BitField Fetch Words  
: RCC_SSCGEN@ RCC_SSCGR @ %1  31 lshift and 31 rshift ; 
: RCC_SPREADSEL@ RCC_SSCGR @ %1  30 lshift and 30 rshift ; 
: RCC_INCSTEP@ RCC_SSCGR @ %111111111111111  13 lshift and 13 rshift ; 
: RCC_MODPER@ RCC_SSCGR @ % 0 lshift and 0 rshift ; 

RCC_PLLI2SCFGR (read-write)
$20003000 CONSTANT RESET_RCC_PLLI2SCFGR 
 %xxx  28 lshift RCC_PLLI2SCFGR bis!        \ RCC_PLLI2SRx	Bit 28	 Width 3
 %xxxxxxxxx  6 lshift RCC_PLLI2SCFGR bis!        \ RCC_PLLI2SNx	Bit 6	 Width 9
\ RCC_PLLI2SCFGR Register BitField Fetch Words  
: RCC_PLLI2SRx@ RCC_PLLI2SCFGR @ %111  28 lshift and 28 rshift ; 
: RCC_PLLI2SNx@ RCC_PLLI2SCFGR @ %111111111  6 lshift and 6 rshift ; 

                    
################################### GPIOI ###################################
GPIOI_MODER (read-write)
$00000000 CONSTANT RESET_GPIOI_MODER 
 %xx  30 lshift GPIOI_MODER bis!        \ GPIOI_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOI_MODER bis!        \ GPIOI_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOI_MODER bis!        \ GPIOI_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOI_MODER bis!        \ GPIOI_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOI_MODER bis!        \ GPIOI_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOI_MODER bis!        \ GPIOI_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOI_MODER bis!        \ GPIOI_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOI_MODER bis!        \ GPIOI_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOI_MODER bis!        \ GPIOI_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOI_MODER bis!        \ GPIOI_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOI_MODER bis!        \ GPIOI_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOI_MODER bis!        \ GPIOI_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOI_MODER bis!        \ GPIOI_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOI_MODER bis!        \ GPIOI_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOI_MODER bis!        \ GPIOI_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOI_MODER bis!        \ GPIOI_MODER0	Bit 0	 Width 2
\ GPIOI_MODER Register BitField Fetch Words  
: GPIOI_MODER15@ GPIOI_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOI_MODER14@ GPIOI_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOI_MODER13@ GPIOI_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOI_MODER12@ GPIOI_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOI_MODER11@ GPIOI_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOI_MODER10@ GPIOI_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOI_MODER9@ GPIOI_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOI_MODER8@ GPIOI_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOI_MODER7@ GPIOI_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOI_MODER6@ GPIOI_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOI_MODER5@ GPIOI_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOI_MODER4@ GPIOI_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOI_MODER3@ GPIOI_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOI_MODER2@ GPIOI_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOI_MODER1@ GPIOI_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOI_MODER0@ GPIOI_MODER @ %11  0 lshift and 0 rshift ; 

GPIOI_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOI_OTYPER 
 %1  15 lshift GPIOI_OTYPER bis!        \ GPIOI_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOI_OTYPER bis!        \ GPIOI_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOI_OTYPER bis!        \ GPIOI_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOI_OTYPER bis!        \ GPIOI_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOI_OTYPER bis!        \ GPIOI_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOI_OTYPER bis!        \ GPIOI_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOI_OTYPER bis!        \ GPIOI_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOI_OTYPER bis!        \ GPIOI_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOI_OTYPER bis!        \ GPIOI_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOI_OTYPER bis!        \ GPIOI_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOI_OTYPER bis!        \ GPIOI_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOI_OTYPER bis!        \ GPIOI_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOI_OTYPER bis!        \ GPIOI_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOI_OTYPER bis!        \ GPIOI_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOI_OTYPER bis!        \ GPIOI_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOI_OTYPER bis!        \ GPIOI_OT0	Bit 0	 Width 1
\ GPIOI_OTYPER Register BitField Fetch Words  
: GPIOI_OT15@ GPIOI_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOI_OT14@ GPIOI_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOI_OT13@ GPIOI_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOI_OT12@ GPIOI_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOI_OT11@ GPIOI_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOI_OT10@ GPIOI_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOI_OT9@ GPIOI_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOI_OT8@ GPIOI_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOI_OT7@ GPIOI_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOI_OT6@ GPIOI_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOI_OT5@ GPIOI_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOI_OT4@ GPIOI_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOI_OT3@ GPIOI_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOI_OT2@ GPIOI_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOI_OT1@ GPIOI_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOI_OT0@ GPIOI_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOI_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOI_OSPEEDR 
 %xx  30 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOI_OSPEEDR bis!        \ GPIOI_OSPEEDR0	Bit 0	 Width 2
\ GPIOI_OSPEEDR Register BitField Fetch Words  
: GPIOI_OSPEEDR15@ GPIOI_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOI_OSPEEDR14@ GPIOI_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOI_OSPEEDR13@ GPIOI_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOI_OSPEEDR12@ GPIOI_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOI_OSPEEDR11@ GPIOI_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOI_OSPEEDR10@ GPIOI_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOI_OSPEEDR9@ GPIOI_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOI_OSPEEDR8@ GPIOI_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOI_OSPEEDR7@ GPIOI_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOI_OSPEEDR6@ GPIOI_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOI_OSPEEDR5@ GPIOI_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOI_OSPEEDR4@ GPIOI_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOI_OSPEEDR3@ GPIOI_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOI_OSPEEDR2@ GPIOI_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOI_OSPEEDR1@ GPIOI_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOI_OSPEEDR0@ GPIOI_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOI_PUPDR (read-write)
$00000000 CONSTANT RESET_GPIOI_PUPDR 
 %xx  30 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOI_PUPDR bis!        \ GPIOI_PUPDR0	Bit 0	 Width 2
\ GPIOI_PUPDR Register BitField Fetch Words  
: GPIOI_PUPDR15@ GPIOI_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOI_PUPDR14@ GPIOI_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOI_PUPDR13@ GPIOI_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOI_PUPDR12@ GPIOI_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOI_PUPDR11@ GPIOI_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOI_PUPDR10@ GPIOI_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOI_PUPDR9@ GPIOI_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOI_PUPDR8@ GPIOI_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOI_PUPDR7@ GPIOI_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOI_PUPDR6@ GPIOI_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOI_PUPDR5@ GPIOI_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOI_PUPDR4@ GPIOI_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOI_PUPDR3@ GPIOI_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOI_PUPDR2@ GPIOI_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOI_PUPDR1@ GPIOI_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOI_PUPDR0@ GPIOI_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOI_IDR (read-only)
$00000000 CONSTANT RESET_GPIOI_IDR 
 %1  15 lshift GPIOI_IDR bis!        \ GPIOI_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOI_IDR bis!        \ GPIOI_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOI_IDR bis!        \ GPIOI_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOI_IDR bis!        \ GPIOI_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOI_IDR bis!        \ GPIOI_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOI_IDR bis!        \ GPIOI_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOI_IDR bis!        \ GPIOI_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOI_IDR bis!        \ GPIOI_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOI_IDR bis!        \ GPIOI_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOI_IDR bis!        \ GPIOI_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOI_IDR bis!        \ GPIOI_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOI_IDR bis!        \ GPIOI_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOI_IDR bis!        \ GPIOI_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOI_IDR bis!        \ GPIOI_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOI_IDR bis!        \ GPIOI_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOI_IDR bis!        \ GPIOI_IDR0	Bit 0	 Width 1
\ GPIOI_IDR Register BitField Fetch Words  
: GPIOI_IDR15@ GPIOI_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOI_IDR14@ GPIOI_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOI_IDR13@ GPIOI_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOI_IDR12@ GPIOI_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOI_IDR11@ GPIOI_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOI_IDR10@ GPIOI_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOI_IDR9@ GPIOI_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOI_IDR8@ GPIOI_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOI_IDR7@ GPIOI_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOI_IDR6@ GPIOI_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOI_IDR5@ GPIOI_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOI_IDR4@ GPIOI_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOI_IDR3@ GPIOI_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOI_IDR2@ GPIOI_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOI_IDR1@ GPIOI_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOI_IDR0@ GPIOI_IDR @ %1  0 lshift and 0 rshift ; 

GPIOI_ODR (read-write)
$00000000 CONSTANT RESET_GPIOI_ODR 
 %1  15 lshift GPIOI_ODR bis!        \ GPIOI_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOI_ODR bis!        \ GPIOI_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOI_ODR bis!        \ GPIOI_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOI_ODR bis!        \ GPIOI_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOI_ODR bis!        \ GPIOI_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOI_ODR bis!        \ GPIOI_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOI_ODR bis!        \ GPIOI_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOI_ODR bis!        \ GPIOI_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOI_ODR bis!        \ GPIOI_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOI_ODR bis!        \ GPIOI_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOI_ODR bis!        \ GPIOI_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOI_ODR bis!        \ GPIOI_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOI_ODR bis!        \ GPIOI_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOI_ODR bis!        \ GPIOI_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOI_ODR bis!        \ GPIOI_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOI_ODR bis!        \ GPIOI_ODR0	Bit 0	 Width 1
\ GPIOI_ODR Register BitField Fetch Words  
: GPIOI_ODR15@ GPIOI_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOI_ODR14@ GPIOI_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOI_ODR13@ GPIOI_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOI_ODR12@ GPIOI_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOI_ODR11@ GPIOI_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOI_ODR10@ GPIOI_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOI_ODR9@ GPIOI_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOI_ODR8@ GPIOI_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOI_ODR7@ GPIOI_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOI_ODR6@ GPIOI_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOI_ODR5@ GPIOI_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOI_ODR4@ GPIOI_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOI_ODR3@ GPIOI_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOI_ODR2@ GPIOI_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOI_ODR1@ GPIOI_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOI_ODR0@ GPIOI_ODR @ %1  0 lshift and 0 rshift ; 

GPIOI_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOI_BSRR 
 %1  31 lshift GPIOI_BSRR bis!        \ GPIOI_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOI_BSRR bis!        \ GPIOI_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOI_BSRR bis!        \ GPIOI_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOI_BSRR bis!        \ GPIOI_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOI_BSRR bis!        \ GPIOI_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOI_BSRR bis!        \ GPIOI_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOI_BSRR bis!        \ GPIOI_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOI_BSRR bis!        \ GPIOI_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOI_BSRR bis!        \ GPIOI_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOI_BSRR bis!        \ GPIOI_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOI_BSRR bis!        \ GPIOI_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOI_BSRR bis!        \ GPIOI_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOI_BSRR bis!        \ GPIOI_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOI_BSRR bis!        \ GPIOI_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOI_BSRR bis!        \ GPIOI_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOI_BSRR bis!        \ GPIOI_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOI_BSRR bis!        \ GPIOI_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOI_BSRR bis!        \ GPIOI_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOI_BSRR bis!        \ GPIOI_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOI_BSRR bis!        \ GPIOI_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOI_BSRR bis!        \ GPIOI_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOI_BSRR bis!        \ GPIOI_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOI_BSRR bis!        \ GPIOI_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOI_BSRR bis!        \ GPIOI_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOI_BSRR bis!        \ GPIOI_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOI_BSRR bis!        \ GPIOI_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOI_BSRR bis!        \ GPIOI_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOI_BSRR bis!        \ GPIOI_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOI_BSRR bis!        \ GPIOI_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOI_BSRR bis!        \ GPIOI_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOI_BSRR bis!        \ GPIOI_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOI_BSRR bis!        \ GPIOI_BS0	Bit 0	 Width 1
\ GPIOI_BSRR Register BitField Fetch Words  
: GPIOI_BR15@ GPIOI_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOI_BR14@ GPIOI_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOI_BR13@ GPIOI_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOI_BR12@ GPIOI_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOI_BR11@ GPIOI_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOI_BR10@ GPIOI_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOI_BR9@ GPIOI_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOI_BR8@ GPIOI_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOI_BR7@ GPIOI_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOI_BR6@ GPIOI_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOI_BR5@ GPIOI_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOI_BR4@ GPIOI_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOI_BR3@ GPIOI_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOI_BR2@ GPIOI_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOI_BR1@ GPIOI_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOI_BR0@ GPIOI_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOI_BS15@ GPIOI_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOI_BS14@ GPIOI_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOI_BS13@ GPIOI_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOI_BS12@ GPIOI_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOI_BS11@ GPIOI_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOI_BS10@ GPIOI_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOI_BS9@ GPIOI_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOI_BS8@ GPIOI_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOI_BS7@ GPIOI_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOI_BS6@ GPIOI_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOI_BS5@ GPIOI_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOI_BS4@ GPIOI_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOI_BS3@ GPIOI_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOI_BS2@ GPIOI_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOI_BS1@ GPIOI_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOI_BS0@ GPIOI_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOI_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOI_LCKR 
 %1  16 lshift GPIOI_LCKR bis!        \ GPIOI_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOI_LCKR bis!        \ GPIOI_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOI_LCKR bis!        \ GPIOI_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOI_LCKR bis!        \ GPIOI_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOI_LCKR bis!        \ GPIOI_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOI_LCKR bis!        \ GPIOI_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOI_LCKR bis!        \ GPIOI_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOI_LCKR bis!        \ GPIOI_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOI_LCKR bis!        \ GPIOI_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOI_LCKR bis!        \ GPIOI_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOI_LCKR bis!        \ GPIOI_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOI_LCKR bis!        \ GPIOI_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOI_LCKR bis!        \ GPIOI_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOI_LCKR bis!        \ GPIOI_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOI_LCKR bis!        \ GPIOI_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOI_LCKR bis!        \ GPIOI_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOI_LCKR bis!        \ GPIOI_LCK0	Bit 0	 Width 1
\ GPIOI_LCKR Register BitField Fetch Words  
: GPIOI_LCKK@ GPIOI_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOI_LCK15@ GPIOI_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOI_LCK14@ GPIOI_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOI_LCK13@ GPIOI_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOI_LCK12@ GPIOI_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOI_LCK11@ GPIOI_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOI_LCK10@ GPIOI_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOI_LCK9@ GPIOI_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOI_LCK8@ GPIOI_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOI_LCK7@ GPIOI_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOI_LCK6@ GPIOI_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOI_LCK5@ GPIOI_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOI_LCK4@ GPIOI_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOI_LCK3@ GPIOI_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOI_LCK2@ GPIOI_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOI_LCK1@ GPIOI_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOI_LCK0@ GPIOI_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOI_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOI_AFRL 
 %xxxx  28 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOI_AFRL bis!        \ GPIOI_AFRL0	Bit 0	 Width 4
\ GPIOI_AFRL Register BitField Fetch Words  
: GPIOI_AFRL7@ GPIOI_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOI_AFRL6@ GPIOI_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOI_AFRL5@ GPIOI_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOI_AFRL4@ GPIOI_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOI_AFRL3@ GPIOI_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOI_AFRL2@ GPIOI_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOI_AFRL1@ GPIOI_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOI_AFRL0@ GPIOI_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOI_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOI_AFRH 
 %xxxx  28 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOI_AFRH bis!        \ GPIOI_AFRH8	Bit 0	 Width 4
\ GPIOI_AFRH Register BitField Fetch Words  
: GPIOI_AFRH15@ GPIOI_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOI_AFRH14@ GPIOI_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOI_AFRH13@ GPIOI_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOI_AFRH12@ GPIOI_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOI_AFRH11@ GPIOI_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOI_AFRH10@ GPIOI_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOI_AFRH9@ GPIOI_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOI_AFRH8@ GPIOI_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOH ###################################
GPIOH_MODER (read-write)
$00000000 CONSTANT RESET_GPIOH_MODER 
 %xx  30 lshift GPIOH_MODER bis!        \ GPIOH_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOH_MODER bis!        \ GPIOH_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOH_MODER bis!        \ GPIOH_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOH_MODER bis!        \ GPIOH_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOH_MODER bis!        \ GPIOH_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOH_MODER bis!        \ GPIOH_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOH_MODER bis!        \ GPIOH_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOH_MODER bis!        \ GPIOH_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOH_MODER bis!        \ GPIOH_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOH_MODER bis!        \ GPIOH_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOH_MODER bis!        \ GPIOH_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOH_MODER bis!        \ GPIOH_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOH_MODER bis!        \ GPIOH_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOH_MODER bis!        \ GPIOH_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOH_MODER bis!        \ GPIOH_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOH_MODER bis!        \ GPIOH_MODER0	Bit 0	 Width 2
\ GPIOH_MODER Register BitField Fetch Words  
: GPIOH_MODER15@ GPIOH_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOH_MODER14@ GPIOH_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOH_MODER13@ GPIOH_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOH_MODER12@ GPIOH_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOH_MODER11@ GPIOH_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOH_MODER10@ GPIOH_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOH_MODER9@ GPIOH_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOH_MODER8@ GPIOH_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOH_MODER7@ GPIOH_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOH_MODER6@ GPIOH_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOH_MODER5@ GPIOH_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOH_MODER4@ GPIOH_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOH_MODER3@ GPIOH_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOH_MODER2@ GPIOH_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOH_MODER1@ GPIOH_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOH_MODER0@ GPIOH_MODER @ %11  0 lshift and 0 rshift ; 

GPIOH_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOH_OTYPER 
 %1  15 lshift GPIOH_OTYPER bis!        \ GPIOH_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOH_OTYPER bis!        \ GPIOH_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOH_OTYPER bis!        \ GPIOH_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOH_OTYPER bis!        \ GPIOH_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOH_OTYPER bis!        \ GPIOH_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOH_OTYPER bis!        \ GPIOH_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOH_OTYPER bis!        \ GPIOH_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOH_OTYPER bis!        \ GPIOH_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOH_OTYPER bis!        \ GPIOH_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOH_OTYPER bis!        \ GPIOH_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOH_OTYPER bis!        \ GPIOH_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOH_OTYPER bis!        \ GPIOH_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOH_OTYPER bis!        \ GPIOH_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOH_OTYPER bis!        \ GPIOH_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOH_OTYPER bis!        \ GPIOH_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOH_OTYPER bis!        \ GPIOH_OT0	Bit 0	 Width 1
\ GPIOH_OTYPER Register BitField Fetch Words  
: GPIOH_OT15@ GPIOH_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOH_OT14@ GPIOH_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOH_OT13@ GPIOH_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOH_OT12@ GPIOH_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOH_OT11@ GPIOH_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOH_OT10@ GPIOH_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOH_OT9@ GPIOH_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOH_OT8@ GPIOH_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOH_OT7@ GPIOH_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOH_OT6@ GPIOH_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOH_OT5@ GPIOH_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOH_OT4@ GPIOH_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOH_OT3@ GPIOH_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOH_OT2@ GPIOH_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOH_OT1@ GPIOH_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOH_OT0@ GPIOH_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOH_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOH_OSPEEDR 
 %xx  30 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOH_OSPEEDR bis!        \ GPIOH_OSPEEDR0	Bit 0	 Width 2
\ GPIOH_OSPEEDR Register BitField Fetch Words  
: GPIOH_OSPEEDR15@ GPIOH_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOH_OSPEEDR14@ GPIOH_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOH_OSPEEDR13@ GPIOH_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOH_OSPEEDR12@ GPIOH_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOH_OSPEEDR11@ GPIOH_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOH_OSPEEDR10@ GPIOH_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOH_OSPEEDR9@ GPIOH_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOH_OSPEEDR8@ GPIOH_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOH_OSPEEDR7@ GPIOH_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOH_OSPEEDR6@ GPIOH_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOH_OSPEEDR5@ GPIOH_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOH_OSPEEDR4@ GPIOH_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOH_OSPEEDR3@ GPIOH_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOH_OSPEEDR2@ GPIOH_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOH_OSPEEDR1@ GPIOH_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOH_OSPEEDR0@ GPIOH_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOH_PUPDR (read-write)
$00000000 CONSTANT RESET_GPIOH_PUPDR 
 %xx  30 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOH_PUPDR bis!        \ GPIOH_PUPDR0	Bit 0	 Width 2
\ GPIOH_PUPDR Register BitField Fetch Words  
: GPIOH_PUPDR15@ GPIOH_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOH_PUPDR14@ GPIOH_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOH_PUPDR13@ GPIOH_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOH_PUPDR12@ GPIOH_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOH_PUPDR11@ GPIOH_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOH_PUPDR10@ GPIOH_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOH_PUPDR9@ GPIOH_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOH_PUPDR8@ GPIOH_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOH_PUPDR7@ GPIOH_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOH_PUPDR6@ GPIOH_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOH_PUPDR5@ GPIOH_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOH_PUPDR4@ GPIOH_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOH_PUPDR3@ GPIOH_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOH_PUPDR2@ GPIOH_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOH_PUPDR1@ GPIOH_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOH_PUPDR0@ GPIOH_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOH_IDR (read-only)
$00000000 CONSTANT RESET_GPIOH_IDR 
 %1  15 lshift GPIOH_IDR bis!        \ GPIOH_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOH_IDR bis!        \ GPIOH_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOH_IDR bis!        \ GPIOH_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOH_IDR bis!        \ GPIOH_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOH_IDR bis!        \ GPIOH_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOH_IDR bis!        \ GPIOH_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOH_IDR bis!        \ GPIOH_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOH_IDR bis!        \ GPIOH_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOH_IDR bis!        \ GPIOH_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOH_IDR bis!        \ GPIOH_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOH_IDR bis!        \ GPIOH_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOH_IDR bis!        \ GPIOH_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOH_IDR bis!        \ GPIOH_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOH_IDR bis!        \ GPIOH_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOH_IDR bis!        \ GPIOH_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOH_IDR bis!        \ GPIOH_IDR0	Bit 0	 Width 1
\ GPIOH_IDR Register BitField Fetch Words  
: GPIOH_IDR15@ GPIOH_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOH_IDR14@ GPIOH_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOH_IDR13@ GPIOH_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOH_IDR12@ GPIOH_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOH_IDR11@ GPIOH_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOH_IDR10@ GPIOH_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOH_IDR9@ GPIOH_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOH_IDR8@ GPIOH_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOH_IDR7@ GPIOH_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOH_IDR6@ GPIOH_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOH_IDR5@ GPIOH_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOH_IDR4@ GPIOH_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOH_IDR3@ GPIOH_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOH_IDR2@ GPIOH_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOH_IDR1@ GPIOH_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOH_IDR0@ GPIOH_IDR @ %1  0 lshift and 0 rshift ; 

GPIOH_ODR (read-write)
$00000000 CONSTANT RESET_GPIOH_ODR 
 %1  15 lshift GPIOH_ODR bis!        \ GPIOH_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOH_ODR bis!        \ GPIOH_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOH_ODR bis!        \ GPIOH_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOH_ODR bis!        \ GPIOH_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOH_ODR bis!        \ GPIOH_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOH_ODR bis!        \ GPIOH_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOH_ODR bis!        \ GPIOH_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOH_ODR bis!        \ GPIOH_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOH_ODR bis!        \ GPIOH_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOH_ODR bis!        \ GPIOH_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOH_ODR bis!        \ GPIOH_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOH_ODR bis!        \ GPIOH_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOH_ODR bis!        \ GPIOH_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOH_ODR bis!        \ GPIOH_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOH_ODR bis!        \ GPIOH_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOH_ODR bis!        \ GPIOH_ODR0	Bit 0	 Width 1
\ GPIOH_ODR Register BitField Fetch Words  
: GPIOH_ODR15@ GPIOH_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOH_ODR14@ GPIOH_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOH_ODR13@ GPIOH_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOH_ODR12@ GPIOH_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOH_ODR11@ GPIOH_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOH_ODR10@ GPIOH_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOH_ODR9@ GPIOH_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOH_ODR8@ GPIOH_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOH_ODR7@ GPIOH_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOH_ODR6@ GPIOH_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOH_ODR5@ GPIOH_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOH_ODR4@ GPIOH_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOH_ODR3@ GPIOH_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOH_ODR2@ GPIOH_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOH_ODR1@ GPIOH_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOH_ODR0@ GPIOH_ODR @ %1  0 lshift and 0 rshift ; 

GPIOH_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOH_BSRR 
 %1  31 lshift GPIOH_BSRR bis!        \ GPIOH_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOH_BSRR bis!        \ GPIOH_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOH_BSRR bis!        \ GPIOH_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOH_BSRR bis!        \ GPIOH_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOH_BSRR bis!        \ GPIOH_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOH_BSRR bis!        \ GPIOH_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOH_BSRR bis!        \ GPIOH_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOH_BSRR bis!        \ GPIOH_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOH_BSRR bis!        \ GPIOH_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOH_BSRR bis!        \ GPIOH_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOH_BSRR bis!        \ GPIOH_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOH_BSRR bis!        \ GPIOH_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOH_BSRR bis!        \ GPIOH_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOH_BSRR bis!        \ GPIOH_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOH_BSRR bis!        \ GPIOH_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOH_BSRR bis!        \ GPIOH_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOH_BSRR bis!        \ GPIOH_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOH_BSRR bis!        \ GPIOH_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOH_BSRR bis!        \ GPIOH_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOH_BSRR bis!        \ GPIOH_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOH_BSRR bis!        \ GPIOH_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOH_BSRR bis!        \ GPIOH_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOH_BSRR bis!        \ GPIOH_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOH_BSRR bis!        \ GPIOH_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOH_BSRR bis!        \ GPIOH_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOH_BSRR bis!        \ GPIOH_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOH_BSRR bis!        \ GPIOH_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOH_BSRR bis!        \ GPIOH_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOH_BSRR bis!        \ GPIOH_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOH_BSRR bis!        \ GPIOH_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOH_BSRR bis!        \ GPIOH_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOH_BSRR bis!        \ GPIOH_BS0	Bit 0	 Width 1
\ GPIOH_BSRR Register BitField Fetch Words  
: GPIOH_BR15@ GPIOH_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOH_BR14@ GPIOH_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOH_BR13@ GPIOH_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOH_BR12@ GPIOH_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOH_BR11@ GPIOH_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOH_BR10@ GPIOH_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOH_BR9@ GPIOH_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOH_BR8@ GPIOH_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOH_BR7@ GPIOH_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOH_BR6@ GPIOH_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOH_BR5@ GPIOH_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOH_BR4@ GPIOH_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOH_BR3@ GPIOH_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOH_BR2@ GPIOH_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOH_BR1@ GPIOH_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOH_BR0@ GPIOH_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOH_BS15@ GPIOH_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOH_BS14@ GPIOH_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOH_BS13@ GPIOH_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOH_BS12@ GPIOH_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOH_BS11@ GPIOH_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOH_BS10@ GPIOH_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOH_BS9@ GPIOH_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOH_BS8@ GPIOH_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOH_BS7@ GPIOH_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOH_BS6@ GPIOH_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOH_BS5@ GPIOH_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOH_BS4@ GPIOH_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOH_BS3@ GPIOH_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOH_BS2@ GPIOH_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOH_BS1@ GPIOH_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOH_BS0@ GPIOH_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOH_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOH_LCKR 
 %1  16 lshift GPIOH_LCKR bis!        \ GPIOH_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOH_LCKR bis!        \ GPIOH_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOH_LCKR bis!        \ GPIOH_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOH_LCKR bis!        \ GPIOH_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOH_LCKR bis!        \ GPIOH_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOH_LCKR bis!        \ GPIOH_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOH_LCKR bis!        \ GPIOH_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOH_LCKR bis!        \ GPIOH_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOH_LCKR bis!        \ GPIOH_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOH_LCKR bis!        \ GPIOH_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOH_LCKR bis!        \ GPIOH_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOH_LCKR bis!        \ GPIOH_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOH_LCKR bis!        \ GPIOH_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOH_LCKR bis!        \ GPIOH_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOH_LCKR bis!        \ GPIOH_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOH_LCKR bis!        \ GPIOH_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOH_LCKR bis!        \ GPIOH_LCK0	Bit 0	 Width 1
\ GPIOH_LCKR Register BitField Fetch Words  
: GPIOH_LCKK@ GPIOH_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOH_LCK15@ GPIOH_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOH_LCK14@ GPIOH_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOH_LCK13@ GPIOH_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOH_LCK12@ GPIOH_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOH_LCK11@ GPIOH_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOH_LCK10@ GPIOH_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOH_LCK9@ GPIOH_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOH_LCK8@ GPIOH_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOH_LCK7@ GPIOH_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOH_LCK6@ GPIOH_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOH_LCK5@ GPIOH_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOH_LCK4@ GPIOH_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOH_LCK3@ GPIOH_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOH_LCK2@ GPIOH_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOH_LCK1@ GPIOH_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOH_LCK0@ GPIOH_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOH_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOH_AFRL 
 %xxxx  28 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOH_AFRL bis!        \ GPIOH_AFRL0	Bit 0	 Width 4
\ GPIOH_AFRL Register BitField Fetch Words  
: GPIOH_AFRL7@ GPIOH_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOH_AFRL6@ GPIOH_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOH_AFRL5@ GPIOH_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOH_AFRL4@ GPIOH_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOH_AFRL3@ GPIOH_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOH_AFRL2@ GPIOH_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOH_AFRL1@ GPIOH_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOH_AFRL0@ GPIOH_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOH_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOH_AFRH 
 %xxxx  28 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOH_AFRH bis!        \ GPIOH_AFRH8	Bit 0	 Width 4
\ GPIOH_AFRH Register BitField Fetch Words  
: GPIOH_AFRH15@ GPIOH_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOH_AFRH14@ GPIOH_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOH_AFRH13@ GPIOH_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOH_AFRH12@ GPIOH_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOH_AFRH11@ GPIOH_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOH_AFRH10@ GPIOH_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOH_AFRH9@ GPIOH_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOH_AFRH8@ GPIOH_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOG ###################################
GPIOG_MODER (read-write)
$00000000 CONSTANT RESET_GPIOG_MODER 
 %xx  30 lshift GPIOG_MODER bis!        \ GPIOG_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOG_MODER bis!        \ GPIOG_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOG_MODER bis!        \ GPIOG_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOG_MODER bis!        \ GPIOG_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOG_MODER bis!        \ GPIOG_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOG_MODER bis!        \ GPIOG_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOG_MODER bis!        \ GPIOG_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOG_MODER bis!        \ GPIOG_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOG_MODER bis!        \ GPIOG_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOG_MODER bis!        \ GPIOG_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOG_MODER bis!        \ GPIOG_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOG_MODER bis!        \ GPIOG_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOG_MODER bis!        \ GPIOG_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOG_MODER bis!        \ GPIOG_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOG_MODER bis!        \ GPIOG_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOG_MODER bis!        \ GPIOG_MODER0	Bit 0	 Width 2
\ GPIOG_MODER Register BitField Fetch Words  
: GPIOG_MODER15@ GPIOG_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOG_MODER14@ GPIOG_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOG_MODER13@ GPIOG_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOG_MODER12@ GPIOG_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOG_MODER11@ GPIOG_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOG_MODER10@ GPIOG_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOG_MODER9@ GPIOG_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOG_MODER8@ GPIOG_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOG_MODER7@ GPIOG_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOG_MODER6@ GPIOG_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOG_MODER5@ GPIOG_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOG_MODER4@ GPIOG_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOG_MODER3@ GPIOG_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOG_MODER2@ GPIOG_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOG_MODER1@ GPIOG_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOG_MODER0@ GPIOG_MODER @ %11  0 lshift and 0 rshift ; 

GPIOG_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOG_OTYPER 
 %1  15 lshift GPIOG_OTYPER bis!        \ GPIOG_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOG_OTYPER bis!        \ GPIOG_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOG_OTYPER bis!        \ GPIOG_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOG_OTYPER bis!        \ GPIOG_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOG_OTYPER bis!        \ GPIOG_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOG_OTYPER bis!        \ GPIOG_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOG_OTYPER bis!        \ GPIOG_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOG_OTYPER bis!        \ GPIOG_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOG_OTYPER bis!        \ GPIOG_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOG_OTYPER bis!        \ GPIOG_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOG_OTYPER bis!        \ GPIOG_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOG_OTYPER bis!        \ GPIOG_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOG_OTYPER bis!        \ GPIOG_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOG_OTYPER bis!        \ GPIOG_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOG_OTYPER bis!        \ GPIOG_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOG_OTYPER bis!        \ GPIOG_OT0	Bit 0	 Width 1
\ GPIOG_OTYPER Register BitField Fetch Words  
: GPIOG_OT15@ GPIOG_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOG_OT14@ GPIOG_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOG_OT13@ GPIOG_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOG_OT12@ GPIOG_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOG_OT11@ GPIOG_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOG_OT10@ GPIOG_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOG_OT9@ GPIOG_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOG_OT8@ GPIOG_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOG_OT7@ GPIOG_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOG_OT6@ GPIOG_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOG_OT5@ GPIOG_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOG_OT4@ GPIOG_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOG_OT3@ GPIOG_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOG_OT2@ GPIOG_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOG_OT1@ GPIOG_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOG_OT0@ GPIOG_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOG_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOG_OSPEEDR 
 %xx  30 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOG_OSPEEDR bis!        \ GPIOG_OSPEEDR0	Bit 0	 Width 2
\ GPIOG_OSPEEDR Register BitField Fetch Words  
: GPIOG_OSPEEDR15@ GPIOG_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOG_OSPEEDR14@ GPIOG_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOG_OSPEEDR13@ GPIOG_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOG_OSPEEDR12@ GPIOG_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOG_OSPEEDR11@ GPIOG_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOG_OSPEEDR10@ GPIOG_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOG_OSPEEDR9@ GPIOG_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOG_OSPEEDR8@ GPIOG_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOG_OSPEEDR7@ GPIOG_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOG_OSPEEDR6@ GPIOG_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOG_OSPEEDR5@ GPIOG_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOG_OSPEEDR4@ GPIOG_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOG_OSPEEDR3@ GPIOG_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOG_OSPEEDR2@ GPIOG_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOG_OSPEEDR1@ GPIOG_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOG_OSPEEDR0@ GPIOG_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOG_PUPDR (read-write)
$00000000 CONSTANT RESET_GPIOG_PUPDR 
 %xx  30 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOG_PUPDR bis!        \ GPIOG_PUPDR0	Bit 0	 Width 2
\ GPIOG_PUPDR Register BitField Fetch Words  
: GPIOG_PUPDR15@ GPIOG_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOG_PUPDR14@ GPIOG_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOG_PUPDR13@ GPIOG_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOG_PUPDR12@ GPIOG_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOG_PUPDR11@ GPIOG_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOG_PUPDR10@ GPIOG_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOG_PUPDR9@ GPIOG_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOG_PUPDR8@ GPIOG_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOG_PUPDR7@ GPIOG_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOG_PUPDR6@ GPIOG_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOG_PUPDR5@ GPIOG_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOG_PUPDR4@ GPIOG_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOG_PUPDR3@ GPIOG_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOG_PUPDR2@ GPIOG_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOG_PUPDR1@ GPIOG_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOG_PUPDR0@ GPIOG_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOG_IDR (read-only)
$00000000 CONSTANT RESET_GPIOG_IDR 
 %1  15 lshift GPIOG_IDR bis!        \ GPIOG_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOG_IDR bis!        \ GPIOG_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOG_IDR bis!        \ GPIOG_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOG_IDR bis!        \ GPIOG_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOG_IDR bis!        \ GPIOG_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOG_IDR bis!        \ GPIOG_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOG_IDR bis!        \ GPIOG_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOG_IDR bis!        \ GPIOG_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOG_IDR bis!        \ GPIOG_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOG_IDR bis!        \ GPIOG_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOG_IDR bis!        \ GPIOG_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOG_IDR bis!        \ GPIOG_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOG_IDR bis!        \ GPIOG_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOG_IDR bis!        \ GPIOG_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOG_IDR bis!        \ GPIOG_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOG_IDR bis!        \ GPIOG_IDR0	Bit 0	 Width 1
\ GPIOG_IDR Register BitField Fetch Words  
: GPIOG_IDR15@ GPIOG_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOG_IDR14@ GPIOG_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOG_IDR13@ GPIOG_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOG_IDR12@ GPIOG_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOG_IDR11@ GPIOG_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOG_IDR10@ GPIOG_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOG_IDR9@ GPIOG_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOG_IDR8@ GPIOG_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOG_IDR7@ GPIOG_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOG_IDR6@ GPIOG_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOG_IDR5@ GPIOG_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOG_IDR4@ GPIOG_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOG_IDR3@ GPIOG_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOG_IDR2@ GPIOG_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOG_IDR1@ GPIOG_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOG_IDR0@ GPIOG_IDR @ %1  0 lshift and 0 rshift ; 

GPIOG_ODR (read-write)
$00000000 CONSTANT RESET_GPIOG_ODR 
 %1  15 lshift GPIOG_ODR bis!        \ GPIOG_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOG_ODR bis!        \ GPIOG_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOG_ODR bis!        \ GPIOG_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOG_ODR bis!        \ GPIOG_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOG_ODR bis!        \ GPIOG_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOG_ODR bis!        \ GPIOG_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOG_ODR bis!        \ GPIOG_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOG_ODR bis!        \ GPIOG_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOG_ODR bis!        \ GPIOG_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOG_ODR bis!        \ GPIOG_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOG_ODR bis!        \ GPIOG_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOG_ODR bis!        \ GPIOG_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOG_ODR bis!        \ GPIOG_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOG_ODR bis!        \ GPIOG_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOG_ODR bis!        \ GPIOG_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOG_ODR bis!        \ GPIOG_ODR0	Bit 0	 Width 1
\ GPIOG_ODR Register BitField Fetch Words  
: GPIOG_ODR15@ GPIOG_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOG_ODR14@ GPIOG_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOG_ODR13@ GPIOG_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOG_ODR12@ GPIOG_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOG_ODR11@ GPIOG_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOG_ODR10@ GPIOG_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOG_ODR9@ GPIOG_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOG_ODR8@ GPIOG_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOG_ODR7@ GPIOG_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOG_ODR6@ GPIOG_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOG_ODR5@ GPIOG_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOG_ODR4@ GPIOG_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOG_ODR3@ GPIOG_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOG_ODR2@ GPIOG_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOG_ODR1@ GPIOG_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOG_ODR0@ GPIOG_ODR @ %1  0 lshift and 0 rshift ; 

GPIOG_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOG_BSRR 
 %1  31 lshift GPIOG_BSRR bis!        \ GPIOG_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOG_BSRR bis!        \ GPIOG_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOG_BSRR bis!        \ GPIOG_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOG_BSRR bis!        \ GPIOG_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOG_BSRR bis!        \ GPIOG_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOG_BSRR bis!        \ GPIOG_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOG_BSRR bis!        \ GPIOG_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOG_BSRR bis!        \ GPIOG_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOG_BSRR bis!        \ GPIOG_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOG_BSRR bis!        \ GPIOG_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOG_BSRR bis!        \ GPIOG_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOG_BSRR bis!        \ GPIOG_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOG_BSRR bis!        \ GPIOG_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOG_BSRR bis!        \ GPIOG_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOG_BSRR bis!        \ GPIOG_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOG_BSRR bis!        \ GPIOG_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOG_BSRR bis!        \ GPIOG_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOG_BSRR bis!        \ GPIOG_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOG_BSRR bis!        \ GPIOG_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOG_BSRR bis!        \ GPIOG_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOG_BSRR bis!        \ GPIOG_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOG_BSRR bis!        \ GPIOG_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOG_BSRR bis!        \ GPIOG_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOG_BSRR bis!        \ GPIOG_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOG_BSRR bis!        \ GPIOG_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOG_BSRR bis!        \ GPIOG_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOG_BSRR bis!        \ GPIOG_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOG_BSRR bis!        \ GPIOG_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOG_BSRR bis!        \ GPIOG_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOG_BSRR bis!        \ GPIOG_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOG_BSRR bis!        \ GPIOG_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOG_BSRR bis!        \ GPIOG_BS0	Bit 0	 Width 1
\ GPIOG_BSRR Register BitField Fetch Words  
: GPIOG_BR15@ GPIOG_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOG_BR14@ GPIOG_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOG_BR13@ GPIOG_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOG_BR12@ GPIOG_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOG_BR11@ GPIOG_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOG_BR10@ GPIOG_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOG_BR9@ GPIOG_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOG_BR8@ GPIOG_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOG_BR7@ GPIOG_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOG_BR6@ GPIOG_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOG_BR5@ GPIOG_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOG_BR4@ GPIOG_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOG_BR3@ GPIOG_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOG_BR2@ GPIOG_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOG_BR1@ GPIOG_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOG_BR0@ GPIOG_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOG_BS15@ GPIOG_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOG_BS14@ GPIOG_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOG_BS13@ GPIOG_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOG_BS12@ GPIOG_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOG_BS11@ GPIOG_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOG_BS10@ GPIOG_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOG_BS9@ GPIOG_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOG_BS8@ GPIOG_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOG_BS7@ GPIOG_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOG_BS6@ GPIOG_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOG_BS5@ GPIOG_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOG_BS4@ GPIOG_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOG_BS3@ GPIOG_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOG_BS2@ GPIOG_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOG_BS1@ GPIOG_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOG_BS0@ GPIOG_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOG_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOG_LCKR 
 %1  16 lshift GPIOG_LCKR bis!        \ GPIOG_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOG_LCKR bis!        \ GPIOG_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOG_LCKR bis!        \ GPIOG_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOG_LCKR bis!        \ GPIOG_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOG_LCKR bis!        \ GPIOG_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOG_LCKR bis!        \ GPIOG_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOG_LCKR bis!        \ GPIOG_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOG_LCKR bis!        \ GPIOG_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOG_LCKR bis!        \ GPIOG_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOG_LCKR bis!        \ GPIOG_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOG_LCKR bis!        \ GPIOG_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOG_LCKR bis!        \ GPIOG_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOG_LCKR bis!        \ GPIOG_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOG_LCKR bis!        \ GPIOG_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOG_LCKR bis!        \ GPIOG_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOG_LCKR bis!        \ GPIOG_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOG_LCKR bis!        \ GPIOG_LCK0	Bit 0	 Width 1
\ GPIOG_LCKR Register BitField Fetch Words  
: GPIOG_LCKK@ GPIOG_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOG_LCK15@ GPIOG_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOG_LCK14@ GPIOG_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOG_LCK13@ GPIOG_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOG_LCK12@ GPIOG_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOG_LCK11@ GPIOG_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOG_LCK10@ GPIOG_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOG_LCK9@ GPIOG_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOG_LCK8@ GPIOG_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOG_LCK7@ GPIOG_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOG_LCK6@ GPIOG_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOG_LCK5@ GPIOG_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOG_LCK4@ GPIOG_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOG_LCK3@ GPIOG_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOG_LCK2@ GPIOG_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOG_LCK1@ GPIOG_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOG_LCK0@ GPIOG_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOG_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOG_AFRL 
 %xxxx  28 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOG_AFRL bis!        \ GPIOG_AFRL0	Bit 0	 Width 4
\ GPIOG_AFRL Register BitField Fetch Words  
: GPIOG_AFRL7@ GPIOG_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOG_AFRL6@ GPIOG_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOG_AFRL5@ GPIOG_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOG_AFRL4@ GPIOG_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOG_AFRL3@ GPIOG_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOG_AFRL2@ GPIOG_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOG_AFRL1@ GPIOG_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOG_AFRL0@ GPIOG_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOG_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOG_AFRH 
 %xxxx  28 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOG_AFRH bis!        \ GPIOG_AFRH8	Bit 0	 Width 4
\ GPIOG_AFRH Register BitField Fetch Words  
: GPIOG_AFRH15@ GPIOG_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOG_AFRH14@ GPIOG_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOG_AFRH13@ GPIOG_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOG_AFRH12@ GPIOG_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOG_AFRH11@ GPIOG_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOG_AFRH10@ GPIOG_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOG_AFRH9@ GPIOG_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOG_AFRH8@ GPIOG_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOF ###################################
GPIOF_MODER (read-write)
$00000000 CONSTANT RESET_GPIOF_MODER 
 %xx  30 lshift GPIOF_MODER bis!        \ GPIOF_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOF_MODER bis!        \ GPIOF_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOF_MODER bis!        \ GPIOF_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOF_MODER bis!        \ GPIOF_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOF_MODER bis!        \ GPIOF_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOF_MODER bis!        \ GPIOF_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOF_MODER bis!        \ GPIOF_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOF_MODER bis!        \ GPIOF_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOF_MODER bis!        \ GPIOF_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOF_MODER bis!        \ GPIOF_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOF_MODER bis!        \ GPIOF_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOF_MODER bis!        \ GPIOF_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOF_MODER bis!        \ GPIOF_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOF_MODER bis!        \ GPIOF_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOF_MODER bis!        \ GPIOF_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOF_MODER bis!        \ GPIOF_MODER0	Bit 0	 Width 2
\ GPIOF_MODER Register BitField Fetch Words  
: GPIOF_MODER15@ GPIOF_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOF_MODER14@ GPIOF_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOF_MODER13@ GPIOF_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOF_MODER12@ GPIOF_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOF_MODER11@ GPIOF_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOF_MODER10@ GPIOF_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOF_MODER9@ GPIOF_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOF_MODER8@ GPIOF_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOF_MODER7@ GPIOF_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOF_MODER6@ GPIOF_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOF_MODER5@ GPIOF_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOF_MODER4@ GPIOF_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOF_MODER3@ GPIOF_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOF_MODER2@ GPIOF_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOF_MODER1@ GPIOF_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOF_MODER0@ GPIOF_MODER @ %11  0 lshift and 0 rshift ; 

GPIOF_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOF_OTYPER 
 %1  15 lshift GPIOF_OTYPER bis!        \ GPIOF_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOF_OTYPER bis!        \ GPIOF_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOF_OTYPER bis!        \ GPIOF_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOF_OTYPER bis!        \ GPIOF_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOF_OTYPER bis!        \ GPIOF_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOF_OTYPER bis!        \ GPIOF_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOF_OTYPER bis!        \ GPIOF_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOF_OTYPER bis!        \ GPIOF_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOF_OTYPER bis!        \ GPIOF_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOF_OTYPER bis!        \ GPIOF_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOF_OTYPER bis!        \ GPIOF_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOF_OTYPER bis!        \ GPIOF_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOF_OTYPER bis!        \ GPIOF_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOF_OTYPER bis!        \ GPIOF_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOF_OTYPER bis!        \ GPIOF_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOF_OTYPER bis!        \ GPIOF_OT0	Bit 0	 Width 1
\ GPIOF_OTYPER Register BitField Fetch Words  
: GPIOF_OT15@ GPIOF_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOF_OT14@ GPIOF_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOF_OT13@ GPIOF_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOF_OT12@ GPIOF_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOF_OT11@ GPIOF_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOF_OT10@ GPIOF_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOF_OT9@ GPIOF_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOF_OT8@ GPIOF_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOF_OT7@ GPIOF_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOF_OT6@ GPIOF_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOF_OT5@ GPIOF_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOF_OT4@ GPIOF_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOF_OT3@ GPIOF_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOF_OT2@ GPIOF_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOF_OT1@ GPIOF_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOF_OT0@ GPIOF_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOF_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOF_OSPEEDR 
 %xx  30 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOF_OSPEEDR bis!        \ GPIOF_OSPEEDR0	Bit 0	 Width 2
\ GPIOF_OSPEEDR Register BitField Fetch Words  
: GPIOF_OSPEEDR15@ GPIOF_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOF_OSPEEDR14@ GPIOF_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOF_OSPEEDR13@ GPIOF_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOF_OSPEEDR12@ GPIOF_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOF_OSPEEDR11@ GPIOF_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOF_OSPEEDR10@ GPIOF_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOF_OSPEEDR9@ GPIOF_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOF_OSPEEDR8@ GPIOF_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOF_OSPEEDR7@ GPIOF_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOF_OSPEEDR6@ GPIOF_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOF_OSPEEDR5@ GPIOF_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOF_OSPEEDR4@ GPIOF_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOF_OSPEEDR3@ GPIOF_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOF_OSPEEDR2@ GPIOF_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOF_OSPEEDR1@ GPIOF_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOF_OSPEEDR0@ GPIOF_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOF_PUPDR (read-write)
$00000000 CONSTANT RESET_GPIOF_PUPDR 
 %xx  30 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOF_PUPDR bis!        \ GPIOF_PUPDR0	Bit 0	 Width 2
\ GPIOF_PUPDR Register BitField Fetch Words  
: GPIOF_PUPDR15@ GPIOF_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOF_PUPDR14@ GPIOF_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOF_PUPDR13@ GPIOF_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOF_PUPDR12@ GPIOF_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOF_PUPDR11@ GPIOF_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOF_PUPDR10@ GPIOF_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOF_PUPDR9@ GPIOF_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOF_PUPDR8@ GPIOF_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOF_PUPDR7@ GPIOF_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOF_PUPDR6@ GPIOF_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOF_PUPDR5@ GPIOF_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOF_PUPDR4@ GPIOF_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOF_PUPDR3@ GPIOF_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOF_PUPDR2@ GPIOF_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOF_PUPDR1@ GPIOF_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOF_PUPDR0@ GPIOF_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOF_IDR (read-only)
$00000000 CONSTANT RESET_GPIOF_IDR 
 %1  15 lshift GPIOF_IDR bis!        \ GPIOF_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOF_IDR bis!        \ GPIOF_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOF_IDR bis!        \ GPIOF_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOF_IDR bis!        \ GPIOF_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOF_IDR bis!        \ GPIOF_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOF_IDR bis!        \ GPIOF_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOF_IDR bis!        \ GPIOF_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOF_IDR bis!        \ GPIOF_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOF_IDR bis!        \ GPIOF_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOF_IDR bis!        \ GPIOF_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOF_IDR bis!        \ GPIOF_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOF_IDR bis!        \ GPIOF_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOF_IDR bis!        \ GPIOF_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOF_IDR bis!        \ GPIOF_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOF_IDR bis!        \ GPIOF_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOF_IDR bis!        \ GPIOF_IDR0	Bit 0	 Width 1
\ GPIOF_IDR Register BitField Fetch Words  
: GPIOF_IDR15@ GPIOF_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOF_IDR14@ GPIOF_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOF_IDR13@ GPIOF_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOF_IDR12@ GPIOF_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOF_IDR11@ GPIOF_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOF_IDR10@ GPIOF_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOF_IDR9@ GPIOF_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOF_IDR8@ GPIOF_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOF_IDR7@ GPIOF_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOF_IDR6@ GPIOF_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOF_IDR5@ GPIOF_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOF_IDR4@ GPIOF_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOF_IDR3@ GPIOF_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOF_IDR2@ GPIOF_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOF_IDR1@ GPIOF_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOF_IDR0@ GPIOF_IDR @ %1  0 lshift and 0 rshift ; 

GPIOF_ODR (read-write)
$00000000 CONSTANT RESET_GPIOF_ODR 
 %1  15 lshift GPIOF_ODR bis!        \ GPIOF_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOF_ODR bis!        \ GPIOF_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOF_ODR bis!        \ GPIOF_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOF_ODR bis!        \ GPIOF_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOF_ODR bis!        \ GPIOF_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOF_ODR bis!        \ GPIOF_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOF_ODR bis!        \ GPIOF_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOF_ODR bis!        \ GPIOF_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOF_ODR bis!        \ GPIOF_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOF_ODR bis!        \ GPIOF_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOF_ODR bis!        \ GPIOF_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOF_ODR bis!        \ GPIOF_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOF_ODR bis!        \ GPIOF_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOF_ODR bis!        \ GPIOF_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOF_ODR bis!        \ GPIOF_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOF_ODR bis!        \ GPIOF_ODR0	Bit 0	 Width 1
\ GPIOF_ODR Register BitField Fetch Words  
: GPIOF_ODR15@ GPIOF_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOF_ODR14@ GPIOF_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOF_ODR13@ GPIOF_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOF_ODR12@ GPIOF_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOF_ODR11@ GPIOF_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOF_ODR10@ GPIOF_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOF_ODR9@ GPIOF_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOF_ODR8@ GPIOF_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOF_ODR7@ GPIOF_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOF_ODR6@ GPIOF_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOF_ODR5@ GPIOF_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOF_ODR4@ GPIOF_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOF_ODR3@ GPIOF_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOF_ODR2@ GPIOF_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOF_ODR1@ GPIOF_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOF_ODR0@ GPIOF_ODR @ %1  0 lshift and 0 rshift ; 

GPIOF_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOF_BSRR 
 %1  31 lshift GPIOF_BSRR bis!        \ GPIOF_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOF_BSRR bis!        \ GPIOF_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOF_BSRR bis!        \ GPIOF_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOF_BSRR bis!        \ GPIOF_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOF_BSRR bis!        \ GPIOF_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOF_BSRR bis!        \ GPIOF_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOF_BSRR bis!        \ GPIOF_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOF_BSRR bis!        \ GPIOF_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOF_BSRR bis!        \ GPIOF_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOF_BSRR bis!        \ GPIOF_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOF_BSRR bis!        \ GPIOF_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOF_BSRR bis!        \ GPIOF_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOF_BSRR bis!        \ GPIOF_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOF_BSRR bis!        \ GPIOF_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOF_BSRR bis!        \ GPIOF_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOF_BSRR bis!        \ GPIOF_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOF_BSRR bis!        \ GPIOF_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOF_BSRR bis!        \ GPIOF_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOF_BSRR bis!        \ GPIOF_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOF_BSRR bis!        \ GPIOF_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOF_BSRR bis!        \ GPIOF_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOF_BSRR bis!        \ GPIOF_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOF_BSRR bis!        \ GPIOF_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOF_BSRR bis!        \ GPIOF_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOF_BSRR bis!        \ GPIOF_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOF_BSRR bis!        \ GPIOF_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOF_BSRR bis!        \ GPIOF_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOF_BSRR bis!        \ GPIOF_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOF_BSRR bis!        \ GPIOF_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOF_BSRR bis!        \ GPIOF_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOF_BSRR bis!        \ GPIOF_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOF_BSRR bis!        \ GPIOF_BS0	Bit 0	 Width 1
\ GPIOF_BSRR Register BitField Fetch Words  
: GPIOF_BR15@ GPIOF_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOF_BR14@ GPIOF_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOF_BR13@ GPIOF_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOF_BR12@ GPIOF_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOF_BR11@ GPIOF_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOF_BR10@ GPIOF_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOF_BR9@ GPIOF_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOF_BR8@ GPIOF_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOF_BR7@ GPIOF_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOF_BR6@ GPIOF_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOF_BR5@ GPIOF_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOF_BR4@ GPIOF_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOF_BR3@ GPIOF_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOF_BR2@ GPIOF_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOF_BR1@ GPIOF_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOF_BR0@ GPIOF_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOF_BS15@ GPIOF_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOF_BS14@ GPIOF_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOF_BS13@ GPIOF_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOF_BS12@ GPIOF_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOF_BS11@ GPIOF_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOF_BS10@ GPIOF_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOF_BS9@ GPIOF_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOF_BS8@ GPIOF_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOF_BS7@ GPIOF_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOF_BS6@ GPIOF_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOF_BS5@ GPIOF_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOF_BS4@ GPIOF_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOF_BS3@ GPIOF_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOF_BS2@ GPIOF_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOF_BS1@ GPIOF_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOF_BS0@ GPIOF_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOF_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOF_LCKR 
 %1  16 lshift GPIOF_LCKR bis!        \ GPIOF_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOF_LCKR bis!        \ GPIOF_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOF_LCKR bis!        \ GPIOF_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOF_LCKR bis!        \ GPIOF_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOF_LCKR bis!        \ GPIOF_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOF_LCKR bis!        \ GPIOF_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOF_LCKR bis!        \ GPIOF_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOF_LCKR bis!        \ GPIOF_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOF_LCKR bis!        \ GPIOF_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOF_LCKR bis!        \ GPIOF_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOF_LCKR bis!        \ GPIOF_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOF_LCKR bis!        \ GPIOF_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOF_LCKR bis!        \ GPIOF_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOF_LCKR bis!        \ GPIOF_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOF_LCKR bis!        \ GPIOF_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOF_LCKR bis!        \ GPIOF_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOF_LCKR bis!        \ GPIOF_LCK0	Bit 0	 Width 1
\ GPIOF_LCKR Register BitField Fetch Words  
: GPIOF_LCKK@ GPIOF_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOF_LCK15@ GPIOF_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOF_LCK14@ GPIOF_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOF_LCK13@ GPIOF_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOF_LCK12@ GPIOF_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOF_LCK11@ GPIOF_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOF_LCK10@ GPIOF_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOF_LCK9@ GPIOF_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOF_LCK8@ GPIOF_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOF_LCK7@ GPIOF_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOF_LCK6@ GPIOF_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOF_LCK5@ GPIOF_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOF_LCK4@ GPIOF_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOF_LCK3@ GPIOF_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOF_LCK2@ GPIOF_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOF_LCK1@ GPIOF_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOF_LCK0@ GPIOF_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOF_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOF_AFRL 
 %xxxx  28 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOF_AFRL bis!        \ GPIOF_AFRL0	Bit 0	 Width 4
\ GPIOF_AFRL Register BitField Fetch Words  
: GPIOF_AFRL7@ GPIOF_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOF_AFRL6@ GPIOF_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOF_AFRL5@ GPIOF_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOF_AFRL4@ GPIOF_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOF_AFRL3@ GPIOF_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOF_AFRL2@ GPIOF_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOF_AFRL1@ GPIOF_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOF_AFRL0@ GPIOF_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOF_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOF_AFRH 
 %xxxx  28 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOF_AFRH bis!        \ GPIOF_AFRH8	Bit 0	 Width 4
\ GPIOF_AFRH Register BitField Fetch Words  
: GPIOF_AFRH15@ GPIOF_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOF_AFRH14@ GPIOF_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOF_AFRH13@ GPIOF_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOF_AFRH12@ GPIOF_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOF_AFRH11@ GPIOF_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOF_AFRH10@ GPIOF_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOF_AFRH9@ GPIOF_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOF_AFRH8@ GPIOF_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOE ###################################
GPIOE_MODER (read-write)
$00000000 CONSTANT RESET_GPIOE_MODER 
 %xx  30 lshift GPIOE_MODER bis!        \ GPIOE_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOE_MODER bis!        \ GPIOE_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOE_MODER bis!        \ GPIOE_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOE_MODER bis!        \ GPIOE_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOE_MODER bis!        \ GPIOE_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOE_MODER bis!        \ GPIOE_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOE_MODER bis!        \ GPIOE_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOE_MODER bis!        \ GPIOE_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOE_MODER bis!        \ GPIOE_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOE_MODER bis!        \ GPIOE_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOE_MODER bis!        \ GPIOE_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOE_MODER bis!        \ GPIOE_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOE_MODER bis!        \ GPIOE_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOE_MODER bis!        \ GPIOE_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOE_MODER bis!        \ GPIOE_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOE_MODER bis!        \ GPIOE_MODER0	Bit 0	 Width 2
\ GPIOE_MODER Register BitField Fetch Words  
: GPIOE_MODER15@ GPIOE_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOE_MODER14@ GPIOE_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOE_MODER13@ GPIOE_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOE_MODER12@ GPIOE_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOE_MODER11@ GPIOE_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOE_MODER10@ GPIOE_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOE_MODER9@ GPIOE_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOE_MODER8@ GPIOE_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOE_MODER7@ GPIOE_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOE_MODER6@ GPIOE_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOE_MODER5@ GPIOE_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOE_MODER4@ GPIOE_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOE_MODER3@ GPIOE_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOE_MODER2@ GPIOE_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOE_MODER1@ GPIOE_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOE_MODER0@ GPIOE_MODER @ %11  0 lshift and 0 rshift ; 

GPIOE_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOE_OTYPER 
 %1  15 lshift GPIOE_OTYPER bis!        \ GPIOE_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOE_OTYPER bis!        \ GPIOE_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOE_OTYPER bis!        \ GPIOE_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOE_OTYPER bis!        \ GPIOE_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOE_OTYPER bis!        \ GPIOE_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOE_OTYPER bis!        \ GPIOE_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOE_OTYPER bis!        \ GPIOE_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOE_OTYPER bis!        \ GPIOE_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOE_OTYPER bis!        \ GPIOE_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOE_OTYPER bis!        \ GPIOE_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOE_OTYPER bis!        \ GPIOE_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOE_OTYPER bis!        \ GPIOE_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOE_OTYPER bis!        \ GPIOE_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOE_OTYPER bis!        \ GPIOE_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOE_OTYPER bis!        \ GPIOE_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOE_OTYPER bis!        \ GPIOE_OT0	Bit 0	 Width 1
\ GPIOE_OTYPER Register BitField Fetch Words  
: GPIOE_OT15@ GPIOE_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOE_OT14@ GPIOE_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOE_OT13@ GPIOE_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOE_OT12@ GPIOE_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOE_OT11@ GPIOE_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOE_OT10@ GPIOE_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOE_OT9@ GPIOE_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOE_OT8@ GPIOE_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOE_OT7@ GPIOE_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOE_OT6@ GPIOE_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOE_OT5@ GPIOE_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOE_OT4@ GPIOE_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOE_OT3@ GPIOE_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOE_OT2@ GPIOE_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOE_OT1@ GPIOE_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOE_OT0@ GPIOE_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOE_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOE_OSPEEDR 
 %xx  30 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOE_OSPEEDR bis!        \ GPIOE_OSPEEDR0	Bit 0	 Width 2
\ GPIOE_OSPEEDR Register BitField Fetch Words  
: GPIOE_OSPEEDR15@ GPIOE_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOE_OSPEEDR14@ GPIOE_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOE_OSPEEDR13@ GPIOE_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOE_OSPEEDR12@ GPIOE_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOE_OSPEEDR11@ GPIOE_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOE_OSPEEDR10@ GPIOE_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOE_OSPEEDR9@ GPIOE_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOE_OSPEEDR8@ GPIOE_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOE_OSPEEDR7@ GPIOE_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOE_OSPEEDR6@ GPIOE_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOE_OSPEEDR5@ GPIOE_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOE_OSPEEDR4@ GPIOE_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOE_OSPEEDR3@ GPIOE_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOE_OSPEEDR2@ GPIOE_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOE_OSPEEDR1@ GPIOE_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOE_OSPEEDR0@ GPIOE_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOE_PUPDR (read-write)
$00000000 CONSTANT RESET_GPIOE_PUPDR 
 %xx  30 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOE_PUPDR bis!        \ GPIOE_PUPDR0	Bit 0	 Width 2
\ GPIOE_PUPDR Register BitField Fetch Words  
: GPIOE_PUPDR15@ GPIOE_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOE_PUPDR14@ GPIOE_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOE_PUPDR13@ GPIOE_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOE_PUPDR12@ GPIOE_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOE_PUPDR11@ GPIOE_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOE_PUPDR10@ GPIOE_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOE_PUPDR9@ GPIOE_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOE_PUPDR8@ GPIOE_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOE_PUPDR7@ GPIOE_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOE_PUPDR6@ GPIOE_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOE_PUPDR5@ GPIOE_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOE_PUPDR4@ GPIOE_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOE_PUPDR3@ GPIOE_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOE_PUPDR2@ GPIOE_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOE_PUPDR1@ GPIOE_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOE_PUPDR0@ GPIOE_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOE_IDR (read-only)
$00000000 CONSTANT RESET_GPIOE_IDR 
 %1  15 lshift GPIOE_IDR bis!        \ GPIOE_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOE_IDR bis!        \ GPIOE_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOE_IDR bis!        \ GPIOE_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOE_IDR bis!        \ GPIOE_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOE_IDR bis!        \ GPIOE_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOE_IDR bis!        \ GPIOE_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOE_IDR bis!        \ GPIOE_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOE_IDR bis!        \ GPIOE_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOE_IDR bis!        \ GPIOE_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOE_IDR bis!        \ GPIOE_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOE_IDR bis!        \ GPIOE_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOE_IDR bis!        \ GPIOE_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOE_IDR bis!        \ GPIOE_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOE_IDR bis!        \ GPIOE_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOE_IDR bis!        \ GPIOE_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOE_IDR bis!        \ GPIOE_IDR0	Bit 0	 Width 1
\ GPIOE_IDR Register BitField Fetch Words  
: GPIOE_IDR15@ GPIOE_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOE_IDR14@ GPIOE_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOE_IDR13@ GPIOE_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOE_IDR12@ GPIOE_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOE_IDR11@ GPIOE_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOE_IDR10@ GPIOE_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOE_IDR9@ GPIOE_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOE_IDR8@ GPIOE_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOE_IDR7@ GPIOE_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOE_IDR6@ GPIOE_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOE_IDR5@ GPIOE_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOE_IDR4@ GPIOE_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOE_IDR3@ GPIOE_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOE_IDR2@ GPIOE_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOE_IDR1@ GPIOE_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOE_IDR0@ GPIOE_IDR @ %1  0 lshift and 0 rshift ; 

GPIOE_ODR (read-write)
$00000000 CONSTANT RESET_GPIOE_ODR 
 %1  15 lshift GPIOE_ODR bis!        \ GPIOE_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOE_ODR bis!        \ GPIOE_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOE_ODR bis!        \ GPIOE_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOE_ODR bis!        \ GPIOE_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOE_ODR bis!        \ GPIOE_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOE_ODR bis!        \ GPIOE_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOE_ODR bis!        \ GPIOE_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOE_ODR bis!        \ GPIOE_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOE_ODR bis!        \ GPIOE_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOE_ODR bis!        \ GPIOE_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOE_ODR bis!        \ GPIOE_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOE_ODR bis!        \ GPIOE_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOE_ODR bis!        \ GPIOE_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOE_ODR bis!        \ GPIOE_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOE_ODR bis!        \ GPIOE_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOE_ODR bis!        \ GPIOE_ODR0	Bit 0	 Width 1
\ GPIOE_ODR Register BitField Fetch Words  
: GPIOE_ODR15@ GPIOE_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOE_ODR14@ GPIOE_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOE_ODR13@ GPIOE_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOE_ODR12@ GPIOE_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOE_ODR11@ GPIOE_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOE_ODR10@ GPIOE_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOE_ODR9@ GPIOE_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOE_ODR8@ GPIOE_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOE_ODR7@ GPIOE_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOE_ODR6@ GPIOE_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOE_ODR5@ GPIOE_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOE_ODR4@ GPIOE_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOE_ODR3@ GPIOE_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOE_ODR2@ GPIOE_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOE_ODR1@ GPIOE_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOE_ODR0@ GPIOE_ODR @ %1  0 lshift and 0 rshift ; 

GPIOE_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOE_BSRR 
 %1  31 lshift GPIOE_BSRR bis!        \ GPIOE_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOE_BSRR bis!        \ GPIOE_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOE_BSRR bis!        \ GPIOE_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOE_BSRR bis!        \ GPIOE_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOE_BSRR bis!        \ GPIOE_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOE_BSRR bis!        \ GPIOE_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOE_BSRR bis!        \ GPIOE_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOE_BSRR bis!        \ GPIOE_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOE_BSRR bis!        \ GPIOE_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOE_BSRR bis!        \ GPIOE_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOE_BSRR bis!        \ GPIOE_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOE_BSRR bis!        \ GPIOE_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOE_BSRR bis!        \ GPIOE_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOE_BSRR bis!        \ GPIOE_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOE_BSRR bis!        \ GPIOE_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOE_BSRR bis!        \ GPIOE_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOE_BSRR bis!        \ GPIOE_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOE_BSRR bis!        \ GPIOE_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOE_BSRR bis!        \ GPIOE_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOE_BSRR bis!        \ GPIOE_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOE_BSRR bis!        \ GPIOE_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOE_BSRR bis!        \ GPIOE_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOE_BSRR bis!        \ GPIOE_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOE_BSRR bis!        \ GPIOE_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOE_BSRR bis!        \ GPIOE_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOE_BSRR bis!        \ GPIOE_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOE_BSRR bis!        \ GPIOE_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOE_BSRR bis!        \ GPIOE_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOE_BSRR bis!        \ GPIOE_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOE_BSRR bis!        \ GPIOE_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOE_BSRR bis!        \ GPIOE_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOE_BSRR bis!        \ GPIOE_BS0	Bit 0	 Width 1
\ GPIOE_BSRR Register BitField Fetch Words  
: GPIOE_BR15@ GPIOE_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOE_BR14@ GPIOE_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOE_BR13@ GPIOE_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOE_BR12@ GPIOE_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOE_BR11@ GPIOE_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOE_BR10@ GPIOE_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOE_BR9@ GPIOE_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOE_BR8@ GPIOE_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOE_BR7@ GPIOE_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOE_BR6@ GPIOE_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOE_BR5@ GPIOE_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOE_BR4@ GPIOE_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOE_BR3@ GPIOE_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOE_BR2@ GPIOE_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOE_BR1@ GPIOE_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOE_BR0@ GPIOE_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOE_BS15@ GPIOE_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOE_BS14@ GPIOE_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOE_BS13@ GPIOE_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOE_BS12@ GPIOE_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOE_BS11@ GPIOE_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOE_BS10@ GPIOE_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOE_BS9@ GPIOE_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOE_BS8@ GPIOE_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOE_BS7@ GPIOE_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOE_BS6@ GPIOE_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOE_BS5@ GPIOE_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOE_BS4@ GPIOE_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOE_BS3@ GPIOE_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOE_BS2@ GPIOE_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOE_BS1@ GPIOE_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOE_BS0@ GPIOE_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOE_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOE_LCKR 
 %1  16 lshift GPIOE_LCKR bis!        \ GPIOE_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOE_LCKR bis!        \ GPIOE_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOE_LCKR bis!        \ GPIOE_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOE_LCKR bis!        \ GPIOE_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOE_LCKR bis!        \ GPIOE_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOE_LCKR bis!        \ GPIOE_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOE_LCKR bis!        \ GPIOE_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOE_LCKR bis!        \ GPIOE_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOE_LCKR bis!        \ GPIOE_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOE_LCKR bis!        \ GPIOE_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOE_LCKR bis!        \ GPIOE_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOE_LCKR bis!        \ GPIOE_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOE_LCKR bis!        \ GPIOE_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOE_LCKR bis!        \ GPIOE_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOE_LCKR bis!        \ GPIOE_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOE_LCKR bis!        \ GPIOE_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOE_LCKR bis!        \ GPIOE_LCK0	Bit 0	 Width 1
\ GPIOE_LCKR Register BitField Fetch Words  
: GPIOE_LCKK@ GPIOE_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOE_LCK15@ GPIOE_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOE_LCK14@ GPIOE_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOE_LCK13@ GPIOE_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOE_LCK12@ GPIOE_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOE_LCK11@ GPIOE_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOE_LCK10@ GPIOE_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOE_LCK9@ GPIOE_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOE_LCK8@ GPIOE_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOE_LCK7@ GPIOE_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOE_LCK6@ GPIOE_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOE_LCK5@ GPIOE_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOE_LCK4@ GPIOE_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOE_LCK3@ GPIOE_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOE_LCK2@ GPIOE_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOE_LCK1@ GPIOE_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOE_LCK0@ GPIOE_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOE_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOE_AFRL 
 %xxxx  28 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOE_AFRL bis!        \ GPIOE_AFRL0	Bit 0	 Width 4
\ GPIOE_AFRL Register BitField Fetch Words  
: GPIOE_AFRL7@ GPIOE_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOE_AFRL6@ GPIOE_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOE_AFRL5@ GPIOE_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOE_AFRL4@ GPIOE_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOE_AFRL3@ GPIOE_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOE_AFRL2@ GPIOE_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOE_AFRL1@ GPIOE_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOE_AFRL0@ GPIOE_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOE_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOE_AFRH 
 %xxxx  28 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOE_AFRH bis!        \ GPIOE_AFRH8	Bit 0	 Width 4
\ GPIOE_AFRH Register BitField Fetch Words  
: GPIOE_AFRH15@ GPIOE_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOE_AFRH14@ GPIOE_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOE_AFRH13@ GPIOE_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOE_AFRH12@ GPIOE_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOE_AFRH11@ GPIOE_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOE_AFRH10@ GPIOE_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOE_AFRH9@ GPIOE_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOE_AFRH8@ GPIOE_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOD ###################################
GPIOD_MODER (read-write)
$00000000 CONSTANT RESET_GPIOD_MODER 
 %xx  30 lshift GPIOD_MODER bis!        \ GPIOD_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOD_MODER bis!        \ GPIOD_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOD_MODER bis!        \ GPIOD_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOD_MODER bis!        \ GPIOD_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOD_MODER bis!        \ GPIOD_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOD_MODER bis!        \ GPIOD_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOD_MODER bis!        \ GPIOD_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOD_MODER bis!        \ GPIOD_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOD_MODER bis!        \ GPIOD_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOD_MODER bis!        \ GPIOD_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOD_MODER bis!        \ GPIOD_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOD_MODER bis!        \ GPIOD_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOD_MODER bis!        \ GPIOD_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOD_MODER bis!        \ GPIOD_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOD_MODER bis!        \ GPIOD_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOD_MODER bis!        \ GPIOD_MODER0	Bit 0	 Width 2
\ GPIOD_MODER Register BitField Fetch Words  
: GPIOD_MODER15@ GPIOD_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOD_MODER14@ GPIOD_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOD_MODER13@ GPIOD_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOD_MODER12@ GPIOD_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOD_MODER11@ GPIOD_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOD_MODER10@ GPIOD_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOD_MODER9@ GPIOD_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOD_MODER8@ GPIOD_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOD_MODER7@ GPIOD_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOD_MODER6@ GPIOD_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOD_MODER5@ GPIOD_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOD_MODER4@ GPIOD_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOD_MODER3@ GPIOD_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOD_MODER2@ GPIOD_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOD_MODER1@ GPIOD_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOD_MODER0@ GPIOD_MODER @ %11  0 lshift and 0 rshift ; 

GPIOD_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOD_OTYPER 
 %1  15 lshift GPIOD_OTYPER bis!        \ GPIOD_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOD_OTYPER bis!        \ GPIOD_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOD_OTYPER bis!        \ GPIOD_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOD_OTYPER bis!        \ GPIOD_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOD_OTYPER bis!        \ GPIOD_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOD_OTYPER bis!        \ GPIOD_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOD_OTYPER bis!        \ GPIOD_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOD_OTYPER bis!        \ GPIOD_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOD_OTYPER bis!        \ GPIOD_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOD_OTYPER bis!        \ GPIOD_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOD_OTYPER bis!        \ GPIOD_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOD_OTYPER bis!        \ GPIOD_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOD_OTYPER bis!        \ GPIOD_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOD_OTYPER bis!        \ GPIOD_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOD_OTYPER bis!        \ GPIOD_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOD_OTYPER bis!        \ GPIOD_OT0	Bit 0	 Width 1
\ GPIOD_OTYPER Register BitField Fetch Words  
: GPIOD_OT15@ GPIOD_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOD_OT14@ GPIOD_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOD_OT13@ GPIOD_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOD_OT12@ GPIOD_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOD_OT11@ GPIOD_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOD_OT10@ GPIOD_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOD_OT9@ GPIOD_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOD_OT8@ GPIOD_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOD_OT7@ GPIOD_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOD_OT6@ GPIOD_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOD_OT5@ GPIOD_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOD_OT4@ GPIOD_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOD_OT3@ GPIOD_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOD_OT2@ GPIOD_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOD_OT1@ GPIOD_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOD_OT0@ GPIOD_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOD_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOD_OSPEEDR 
 %xx  30 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOD_OSPEEDR bis!        \ GPIOD_OSPEEDR0	Bit 0	 Width 2
\ GPIOD_OSPEEDR Register BitField Fetch Words  
: GPIOD_OSPEEDR15@ GPIOD_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOD_OSPEEDR14@ GPIOD_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOD_OSPEEDR13@ GPIOD_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOD_OSPEEDR12@ GPIOD_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOD_OSPEEDR11@ GPIOD_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOD_OSPEEDR10@ GPIOD_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOD_OSPEEDR9@ GPIOD_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOD_OSPEEDR8@ GPIOD_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOD_OSPEEDR7@ GPIOD_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOD_OSPEEDR6@ GPIOD_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOD_OSPEEDR5@ GPIOD_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOD_OSPEEDR4@ GPIOD_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOD_OSPEEDR3@ GPIOD_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOD_OSPEEDR2@ GPIOD_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOD_OSPEEDR1@ GPIOD_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOD_OSPEEDR0@ GPIOD_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOD_PUPDR (read-write)
$00000000 CONSTANT RESET_GPIOD_PUPDR 
 %xx  30 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOD_PUPDR bis!        \ GPIOD_PUPDR0	Bit 0	 Width 2
\ GPIOD_PUPDR Register BitField Fetch Words  
: GPIOD_PUPDR15@ GPIOD_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOD_PUPDR14@ GPIOD_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOD_PUPDR13@ GPIOD_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOD_PUPDR12@ GPIOD_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOD_PUPDR11@ GPIOD_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOD_PUPDR10@ GPIOD_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOD_PUPDR9@ GPIOD_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOD_PUPDR8@ GPIOD_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOD_PUPDR7@ GPIOD_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOD_PUPDR6@ GPIOD_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOD_PUPDR5@ GPIOD_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOD_PUPDR4@ GPIOD_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOD_PUPDR3@ GPIOD_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOD_PUPDR2@ GPIOD_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOD_PUPDR1@ GPIOD_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOD_PUPDR0@ GPIOD_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOD_IDR (read-only)
$00000000 CONSTANT RESET_GPIOD_IDR 
 %1  15 lshift GPIOD_IDR bis!        \ GPIOD_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOD_IDR bis!        \ GPIOD_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOD_IDR bis!        \ GPIOD_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOD_IDR bis!        \ GPIOD_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOD_IDR bis!        \ GPIOD_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOD_IDR bis!        \ GPIOD_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOD_IDR bis!        \ GPIOD_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOD_IDR bis!        \ GPIOD_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOD_IDR bis!        \ GPIOD_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOD_IDR bis!        \ GPIOD_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOD_IDR bis!        \ GPIOD_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOD_IDR bis!        \ GPIOD_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOD_IDR bis!        \ GPIOD_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOD_IDR bis!        \ GPIOD_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOD_IDR bis!        \ GPIOD_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOD_IDR bis!        \ GPIOD_IDR0	Bit 0	 Width 1
\ GPIOD_IDR Register BitField Fetch Words  
: GPIOD_IDR15@ GPIOD_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOD_IDR14@ GPIOD_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOD_IDR13@ GPIOD_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOD_IDR12@ GPIOD_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOD_IDR11@ GPIOD_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOD_IDR10@ GPIOD_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOD_IDR9@ GPIOD_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOD_IDR8@ GPIOD_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOD_IDR7@ GPIOD_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOD_IDR6@ GPIOD_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOD_IDR5@ GPIOD_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOD_IDR4@ GPIOD_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOD_IDR3@ GPIOD_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOD_IDR2@ GPIOD_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOD_IDR1@ GPIOD_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOD_IDR0@ GPIOD_IDR @ %1  0 lshift and 0 rshift ; 

GPIOD_ODR (read-write)
$00000000 CONSTANT RESET_GPIOD_ODR 
 %1  15 lshift GPIOD_ODR bis!        \ GPIOD_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOD_ODR bis!        \ GPIOD_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOD_ODR bis!        \ GPIOD_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOD_ODR bis!        \ GPIOD_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOD_ODR bis!        \ GPIOD_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOD_ODR bis!        \ GPIOD_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOD_ODR bis!        \ GPIOD_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOD_ODR bis!        \ GPIOD_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOD_ODR bis!        \ GPIOD_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOD_ODR bis!        \ GPIOD_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOD_ODR bis!        \ GPIOD_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOD_ODR bis!        \ GPIOD_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOD_ODR bis!        \ GPIOD_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOD_ODR bis!        \ GPIOD_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOD_ODR bis!        \ GPIOD_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOD_ODR bis!        \ GPIOD_ODR0	Bit 0	 Width 1
\ GPIOD_ODR Register BitField Fetch Words  
: GPIOD_ODR15@ GPIOD_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOD_ODR14@ GPIOD_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOD_ODR13@ GPIOD_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOD_ODR12@ GPIOD_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOD_ODR11@ GPIOD_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOD_ODR10@ GPIOD_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOD_ODR9@ GPIOD_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOD_ODR8@ GPIOD_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOD_ODR7@ GPIOD_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOD_ODR6@ GPIOD_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOD_ODR5@ GPIOD_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOD_ODR4@ GPIOD_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOD_ODR3@ GPIOD_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOD_ODR2@ GPIOD_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOD_ODR1@ GPIOD_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOD_ODR0@ GPIOD_ODR @ %1  0 lshift and 0 rshift ; 

GPIOD_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOD_BSRR 
 %1  31 lshift GPIOD_BSRR bis!        \ GPIOD_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOD_BSRR bis!        \ GPIOD_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOD_BSRR bis!        \ GPIOD_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOD_BSRR bis!        \ GPIOD_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOD_BSRR bis!        \ GPIOD_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOD_BSRR bis!        \ GPIOD_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOD_BSRR bis!        \ GPIOD_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOD_BSRR bis!        \ GPIOD_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOD_BSRR bis!        \ GPIOD_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOD_BSRR bis!        \ GPIOD_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOD_BSRR bis!        \ GPIOD_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOD_BSRR bis!        \ GPIOD_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOD_BSRR bis!        \ GPIOD_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOD_BSRR bis!        \ GPIOD_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOD_BSRR bis!        \ GPIOD_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOD_BSRR bis!        \ GPIOD_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOD_BSRR bis!        \ GPIOD_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOD_BSRR bis!        \ GPIOD_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOD_BSRR bis!        \ GPIOD_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOD_BSRR bis!        \ GPIOD_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOD_BSRR bis!        \ GPIOD_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOD_BSRR bis!        \ GPIOD_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOD_BSRR bis!        \ GPIOD_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOD_BSRR bis!        \ GPIOD_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOD_BSRR bis!        \ GPIOD_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOD_BSRR bis!        \ GPIOD_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOD_BSRR bis!        \ GPIOD_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOD_BSRR bis!        \ GPIOD_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOD_BSRR bis!        \ GPIOD_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOD_BSRR bis!        \ GPIOD_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOD_BSRR bis!        \ GPIOD_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOD_BSRR bis!        \ GPIOD_BS0	Bit 0	 Width 1
\ GPIOD_BSRR Register BitField Fetch Words  
: GPIOD_BR15@ GPIOD_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOD_BR14@ GPIOD_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOD_BR13@ GPIOD_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOD_BR12@ GPIOD_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOD_BR11@ GPIOD_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOD_BR10@ GPIOD_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOD_BR9@ GPIOD_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOD_BR8@ GPIOD_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOD_BR7@ GPIOD_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOD_BR6@ GPIOD_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOD_BR5@ GPIOD_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOD_BR4@ GPIOD_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOD_BR3@ GPIOD_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOD_BR2@ GPIOD_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOD_BR1@ GPIOD_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOD_BR0@ GPIOD_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOD_BS15@ GPIOD_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOD_BS14@ GPIOD_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOD_BS13@ GPIOD_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOD_BS12@ GPIOD_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOD_BS11@ GPIOD_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOD_BS10@ GPIOD_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOD_BS9@ GPIOD_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOD_BS8@ GPIOD_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOD_BS7@ GPIOD_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOD_BS6@ GPIOD_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOD_BS5@ GPIOD_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOD_BS4@ GPIOD_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOD_BS3@ GPIOD_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOD_BS2@ GPIOD_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOD_BS1@ GPIOD_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOD_BS0@ GPIOD_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOD_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOD_LCKR 
 %1  16 lshift GPIOD_LCKR bis!        \ GPIOD_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOD_LCKR bis!        \ GPIOD_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOD_LCKR bis!        \ GPIOD_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOD_LCKR bis!        \ GPIOD_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOD_LCKR bis!        \ GPIOD_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOD_LCKR bis!        \ GPIOD_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOD_LCKR bis!        \ GPIOD_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOD_LCKR bis!        \ GPIOD_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOD_LCKR bis!        \ GPIOD_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOD_LCKR bis!        \ GPIOD_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOD_LCKR bis!        \ GPIOD_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOD_LCKR bis!        \ GPIOD_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOD_LCKR bis!        \ GPIOD_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOD_LCKR bis!        \ GPIOD_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOD_LCKR bis!        \ GPIOD_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOD_LCKR bis!        \ GPIOD_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOD_LCKR bis!        \ GPIOD_LCK0	Bit 0	 Width 1
\ GPIOD_LCKR Register BitField Fetch Words  
: GPIOD_LCKK@ GPIOD_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOD_LCK15@ GPIOD_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOD_LCK14@ GPIOD_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOD_LCK13@ GPIOD_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOD_LCK12@ GPIOD_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOD_LCK11@ GPIOD_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOD_LCK10@ GPIOD_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOD_LCK9@ GPIOD_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOD_LCK8@ GPIOD_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOD_LCK7@ GPIOD_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOD_LCK6@ GPIOD_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOD_LCK5@ GPIOD_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOD_LCK4@ GPIOD_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOD_LCK3@ GPIOD_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOD_LCK2@ GPIOD_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOD_LCK1@ GPIOD_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOD_LCK0@ GPIOD_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOD_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOD_AFRL 
 %xxxx  28 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOD_AFRL bis!        \ GPIOD_AFRL0	Bit 0	 Width 4
\ GPIOD_AFRL Register BitField Fetch Words  
: GPIOD_AFRL7@ GPIOD_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOD_AFRL6@ GPIOD_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOD_AFRL5@ GPIOD_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOD_AFRL4@ GPIOD_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOD_AFRL3@ GPIOD_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOD_AFRL2@ GPIOD_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOD_AFRL1@ GPIOD_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOD_AFRL0@ GPIOD_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOD_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOD_AFRH 
 %xxxx  28 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOD_AFRH bis!        \ GPIOD_AFRH8	Bit 0	 Width 4
\ GPIOD_AFRH Register BitField Fetch Words  
: GPIOD_AFRH15@ GPIOD_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOD_AFRH14@ GPIOD_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOD_AFRH13@ GPIOD_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOD_AFRH12@ GPIOD_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOD_AFRH11@ GPIOD_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOD_AFRH10@ GPIOD_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOD_AFRH9@ GPIOD_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOD_AFRH8@ GPIOD_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOC ###################################
GPIOC_MODER (read-write)
$00000000 CONSTANT RESET_GPIOC_MODER 
 %xx  30 lshift GPIOC_MODER bis!        \ GPIOC_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOC_MODER bis!        \ GPIOC_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOC_MODER bis!        \ GPIOC_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOC_MODER bis!        \ GPIOC_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOC_MODER bis!        \ GPIOC_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOC_MODER bis!        \ GPIOC_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOC_MODER bis!        \ GPIOC_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOC_MODER bis!        \ GPIOC_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOC_MODER bis!        \ GPIOC_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOC_MODER bis!        \ GPIOC_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOC_MODER bis!        \ GPIOC_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOC_MODER bis!        \ GPIOC_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOC_MODER bis!        \ GPIOC_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOC_MODER bis!        \ GPIOC_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOC_MODER bis!        \ GPIOC_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOC_MODER bis!        \ GPIOC_MODER0	Bit 0	 Width 2
\ GPIOC_MODER Register BitField Fetch Words  
: GPIOC_MODER15@ GPIOC_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOC_MODER14@ GPIOC_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOC_MODER13@ GPIOC_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOC_MODER12@ GPIOC_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOC_MODER11@ GPIOC_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOC_MODER10@ GPIOC_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOC_MODER9@ GPIOC_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOC_MODER8@ GPIOC_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOC_MODER7@ GPIOC_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOC_MODER6@ GPIOC_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOC_MODER5@ GPIOC_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOC_MODER4@ GPIOC_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOC_MODER3@ GPIOC_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOC_MODER2@ GPIOC_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOC_MODER1@ GPIOC_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOC_MODER0@ GPIOC_MODER @ %11  0 lshift and 0 rshift ; 

GPIOC_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOC_OTYPER 
 %1  15 lshift GPIOC_OTYPER bis!        \ GPIOC_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOC_OTYPER bis!        \ GPIOC_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOC_OTYPER bis!        \ GPIOC_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOC_OTYPER bis!        \ GPIOC_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOC_OTYPER bis!        \ GPIOC_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOC_OTYPER bis!        \ GPIOC_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOC_OTYPER bis!        \ GPIOC_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOC_OTYPER bis!        \ GPIOC_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOC_OTYPER bis!        \ GPIOC_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOC_OTYPER bis!        \ GPIOC_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOC_OTYPER bis!        \ GPIOC_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOC_OTYPER bis!        \ GPIOC_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOC_OTYPER bis!        \ GPIOC_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOC_OTYPER bis!        \ GPIOC_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOC_OTYPER bis!        \ GPIOC_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOC_OTYPER bis!        \ GPIOC_OT0	Bit 0	 Width 1
\ GPIOC_OTYPER Register BitField Fetch Words  
: GPIOC_OT15@ GPIOC_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOC_OT14@ GPIOC_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOC_OT13@ GPIOC_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOC_OT12@ GPIOC_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOC_OT11@ GPIOC_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOC_OT10@ GPIOC_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOC_OT9@ GPIOC_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOC_OT8@ GPIOC_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOC_OT7@ GPIOC_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOC_OT6@ GPIOC_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOC_OT5@ GPIOC_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOC_OT4@ GPIOC_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOC_OT3@ GPIOC_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOC_OT2@ GPIOC_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOC_OT1@ GPIOC_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOC_OT0@ GPIOC_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOC_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOC_OSPEEDR 
 %xx  30 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOC_OSPEEDR bis!        \ GPIOC_OSPEEDR0	Bit 0	 Width 2
\ GPIOC_OSPEEDR Register BitField Fetch Words  
: GPIOC_OSPEEDR15@ GPIOC_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOC_OSPEEDR14@ GPIOC_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOC_OSPEEDR13@ GPIOC_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOC_OSPEEDR12@ GPIOC_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOC_OSPEEDR11@ GPIOC_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOC_OSPEEDR10@ GPIOC_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOC_OSPEEDR9@ GPIOC_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOC_OSPEEDR8@ GPIOC_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOC_OSPEEDR7@ GPIOC_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOC_OSPEEDR6@ GPIOC_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOC_OSPEEDR5@ GPIOC_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOC_OSPEEDR4@ GPIOC_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOC_OSPEEDR3@ GPIOC_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOC_OSPEEDR2@ GPIOC_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOC_OSPEEDR1@ GPIOC_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOC_OSPEEDR0@ GPIOC_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOC_PUPDR (read-write)
$00000000 CONSTANT RESET_GPIOC_PUPDR 
 %xx  30 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOC_PUPDR bis!        \ GPIOC_PUPDR0	Bit 0	 Width 2
\ GPIOC_PUPDR Register BitField Fetch Words  
: GPIOC_PUPDR15@ GPIOC_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOC_PUPDR14@ GPIOC_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOC_PUPDR13@ GPIOC_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOC_PUPDR12@ GPIOC_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOC_PUPDR11@ GPIOC_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOC_PUPDR10@ GPIOC_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOC_PUPDR9@ GPIOC_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOC_PUPDR8@ GPIOC_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOC_PUPDR7@ GPIOC_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOC_PUPDR6@ GPIOC_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOC_PUPDR5@ GPIOC_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOC_PUPDR4@ GPIOC_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOC_PUPDR3@ GPIOC_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOC_PUPDR2@ GPIOC_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOC_PUPDR1@ GPIOC_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOC_PUPDR0@ GPIOC_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOC_IDR (read-only)
$00000000 CONSTANT RESET_GPIOC_IDR 
 %1  15 lshift GPIOC_IDR bis!        \ GPIOC_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOC_IDR bis!        \ GPIOC_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOC_IDR bis!        \ GPIOC_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOC_IDR bis!        \ GPIOC_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOC_IDR bis!        \ GPIOC_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOC_IDR bis!        \ GPIOC_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOC_IDR bis!        \ GPIOC_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOC_IDR bis!        \ GPIOC_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOC_IDR bis!        \ GPIOC_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOC_IDR bis!        \ GPIOC_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOC_IDR bis!        \ GPIOC_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOC_IDR bis!        \ GPIOC_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOC_IDR bis!        \ GPIOC_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOC_IDR bis!        \ GPIOC_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOC_IDR bis!        \ GPIOC_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOC_IDR bis!        \ GPIOC_IDR0	Bit 0	 Width 1
\ GPIOC_IDR Register BitField Fetch Words  
: GPIOC_IDR15@ GPIOC_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOC_IDR14@ GPIOC_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOC_IDR13@ GPIOC_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOC_IDR12@ GPIOC_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOC_IDR11@ GPIOC_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOC_IDR10@ GPIOC_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOC_IDR9@ GPIOC_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOC_IDR8@ GPIOC_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOC_IDR7@ GPIOC_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOC_IDR6@ GPIOC_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOC_IDR5@ GPIOC_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOC_IDR4@ GPIOC_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOC_IDR3@ GPIOC_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOC_IDR2@ GPIOC_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOC_IDR1@ GPIOC_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOC_IDR0@ GPIOC_IDR @ %1  0 lshift and 0 rshift ; 

GPIOC_ODR (read-write)
$00000000 CONSTANT RESET_GPIOC_ODR 
 %1  15 lshift GPIOC_ODR bis!        \ GPIOC_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOC_ODR bis!        \ GPIOC_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOC_ODR bis!        \ GPIOC_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOC_ODR bis!        \ GPIOC_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOC_ODR bis!        \ GPIOC_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOC_ODR bis!        \ GPIOC_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOC_ODR bis!        \ GPIOC_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOC_ODR bis!        \ GPIOC_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOC_ODR bis!        \ GPIOC_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOC_ODR bis!        \ GPIOC_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOC_ODR bis!        \ GPIOC_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOC_ODR bis!        \ GPIOC_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOC_ODR bis!        \ GPIOC_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOC_ODR bis!        \ GPIOC_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOC_ODR bis!        \ GPIOC_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOC_ODR bis!        \ GPIOC_ODR0	Bit 0	 Width 1
\ GPIOC_ODR Register BitField Fetch Words  
: GPIOC_ODR15@ GPIOC_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOC_ODR14@ GPIOC_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOC_ODR13@ GPIOC_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOC_ODR12@ GPIOC_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOC_ODR11@ GPIOC_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOC_ODR10@ GPIOC_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOC_ODR9@ GPIOC_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOC_ODR8@ GPIOC_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOC_ODR7@ GPIOC_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOC_ODR6@ GPIOC_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOC_ODR5@ GPIOC_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOC_ODR4@ GPIOC_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOC_ODR3@ GPIOC_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOC_ODR2@ GPIOC_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOC_ODR1@ GPIOC_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOC_ODR0@ GPIOC_ODR @ %1  0 lshift and 0 rshift ; 

GPIOC_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOC_BSRR 
 %1  31 lshift GPIOC_BSRR bis!        \ GPIOC_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOC_BSRR bis!        \ GPIOC_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOC_BSRR bis!        \ GPIOC_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOC_BSRR bis!        \ GPIOC_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOC_BSRR bis!        \ GPIOC_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOC_BSRR bis!        \ GPIOC_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOC_BSRR bis!        \ GPIOC_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOC_BSRR bis!        \ GPIOC_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOC_BSRR bis!        \ GPIOC_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOC_BSRR bis!        \ GPIOC_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOC_BSRR bis!        \ GPIOC_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOC_BSRR bis!        \ GPIOC_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOC_BSRR bis!        \ GPIOC_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOC_BSRR bis!        \ GPIOC_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOC_BSRR bis!        \ GPIOC_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOC_BSRR bis!        \ GPIOC_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOC_BSRR bis!        \ GPIOC_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOC_BSRR bis!        \ GPIOC_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOC_BSRR bis!        \ GPIOC_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOC_BSRR bis!        \ GPIOC_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOC_BSRR bis!        \ GPIOC_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOC_BSRR bis!        \ GPIOC_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOC_BSRR bis!        \ GPIOC_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOC_BSRR bis!        \ GPIOC_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOC_BSRR bis!        \ GPIOC_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOC_BSRR bis!        \ GPIOC_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOC_BSRR bis!        \ GPIOC_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOC_BSRR bis!        \ GPIOC_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOC_BSRR bis!        \ GPIOC_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOC_BSRR bis!        \ GPIOC_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOC_BSRR bis!        \ GPIOC_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOC_BSRR bis!        \ GPIOC_BS0	Bit 0	 Width 1
\ GPIOC_BSRR Register BitField Fetch Words  
: GPIOC_BR15@ GPIOC_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOC_BR14@ GPIOC_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOC_BR13@ GPIOC_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOC_BR12@ GPIOC_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOC_BR11@ GPIOC_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOC_BR10@ GPIOC_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOC_BR9@ GPIOC_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOC_BR8@ GPIOC_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOC_BR7@ GPIOC_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOC_BR6@ GPIOC_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOC_BR5@ GPIOC_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOC_BR4@ GPIOC_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOC_BR3@ GPIOC_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOC_BR2@ GPIOC_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOC_BR1@ GPIOC_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOC_BR0@ GPIOC_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOC_BS15@ GPIOC_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOC_BS14@ GPIOC_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOC_BS13@ GPIOC_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOC_BS12@ GPIOC_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOC_BS11@ GPIOC_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOC_BS10@ GPIOC_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOC_BS9@ GPIOC_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOC_BS8@ GPIOC_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOC_BS7@ GPIOC_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOC_BS6@ GPIOC_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOC_BS5@ GPIOC_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOC_BS4@ GPIOC_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOC_BS3@ GPIOC_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOC_BS2@ GPIOC_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOC_BS1@ GPIOC_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOC_BS0@ GPIOC_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOC_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOC_LCKR 
 %1  16 lshift GPIOC_LCKR bis!        \ GPIOC_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOC_LCKR bis!        \ GPIOC_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOC_LCKR bis!        \ GPIOC_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOC_LCKR bis!        \ GPIOC_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOC_LCKR bis!        \ GPIOC_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOC_LCKR bis!        \ GPIOC_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOC_LCKR bis!        \ GPIOC_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOC_LCKR bis!        \ GPIOC_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOC_LCKR bis!        \ GPIOC_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOC_LCKR bis!        \ GPIOC_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOC_LCKR bis!        \ GPIOC_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOC_LCKR bis!        \ GPIOC_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOC_LCKR bis!        \ GPIOC_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOC_LCKR bis!        \ GPIOC_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOC_LCKR bis!        \ GPIOC_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOC_LCKR bis!        \ GPIOC_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOC_LCKR bis!        \ GPIOC_LCK0	Bit 0	 Width 1
\ GPIOC_LCKR Register BitField Fetch Words  
: GPIOC_LCKK@ GPIOC_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOC_LCK15@ GPIOC_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOC_LCK14@ GPIOC_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOC_LCK13@ GPIOC_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOC_LCK12@ GPIOC_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOC_LCK11@ GPIOC_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOC_LCK10@ GPIOC_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOC_LCK9@ GPIOC_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOC_LCK8@ GPIOC_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOC_LCK7@ GPIOC_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOC_LCK6@ GPIOC_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOC_LCK5@ GPIOC_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOC_LCK4@ GPIOC_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOC_LCK3@ GPIOC_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOC_LCK2@ GPIOC_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOC_LCK1@ GPIOC_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOC_LCK0@ GPIOC_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOC_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOC_AFRL 
 %xxxx  28 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOC_AFRL bis!        \ GPIOC_AFRL0	Bit 0	 Width 4
\ GPIOC_AFRL Register BitField Fetch Words  
: GPIOC_AFRL7@ GPIOC_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOC_AFRL6@ GPIOC_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOC_AFRL5@ GPIOC_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOC_AFRL4@ GPIOC_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOC_AFRL3@ GPIOC_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOC_AFRL2@ GPIOC_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOC_AFRL1@ GPIOC_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOC_AFRL0@ GPIOC_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOC_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOC_AFRH 
 %xxxx  28 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOC_AFRH bis!        \ GPIOC_AFRH8	Bit 0	 Width 4
\ GPIOC_AFRH Register BitField Fetch Words  
: GPIOC_AFRH15@ GPIOC_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOC_AFRH14@ GPIOC_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOC_AFRH13@ GPIOC_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOC_AFRH12@ GPIOC_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOC_AFRH11@ GPIOC_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOC_AFRH10@ GPIOC_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOC_AFRH9@ GPIOC_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOC_AFRH8@ GPIOC_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOB ###################################
GPIOB_MODER (read-write)
$00000280 CONSTANT RESET_GPIOB_MODER 
 %xx  30 lshift GPIOB_MODER bis!        \ GPIOB_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOB_MODER bis!        \ GPIOB_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOB_MODER bis!        \ GPIOB_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOB_MODER bis!        \ GPIOB_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOB_MODER bis!        \ GPIOB_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOB_MODER bis!        \ GPIOB_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOB_MODER bis!        \ GPIOB_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOB_MODER bis!        \ GPIOB_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOB_MODER bis!        \ GPIOB_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOB_MODER bis!        \ GPIOB_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOB_MODER bis!        \ GPIOB_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOB_MODER bis!        \ GPIOB_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOB_MODER bis!        \ GPIOB_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOB_MODER bis!        \ GPIOB_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOB_MODER bis!        \ GPIOB_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOB_MODER bis!        \ GPIOB_MODER0	Bit 0	 Width 2
\ GPIOB_MODER Register BitField Fetch Words  
: GPIOB_MODER15@ GPIOB_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOB_MODER14@ GPIOB_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOB_MODER13@ GPIOB_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOB_MODER12@ GPIOB_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOB_MODER11@ GPIOB_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOB_MODER10@ GPIOB_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOB_MODER9@ GPIOB_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOB_MODER8@ GPIOB_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOB_MODER7@ GPIOB_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOB_MODER6@ GPIOB_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOB_MODER5@ GPIOB_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOB_MODER4@ GPIOB_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOB_MODER3@ GPIOB_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOB_MODER2@ GPIOB_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOB_MODER1@ GPIOB_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOB_MODER0@ GPIOB_MODER @ %11  0 lshift and 0 rshift ; 

GPIOB_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOB_OTYPER 
 %1  15 lshift GPIOB_OTYPER bis!        \ GPIOB_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOB_OTYPER bis!        \ GPIOB_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOB_OTYPER bis!        \ GPIOB_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOB_OTYPER bis!        \ GPIOB_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOB_OTYPER bis!        \ GPIOB_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOB_OTYPER bis!        \ GPIOB_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOB_OTYPER bis!        \ GPIOB_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOB_OTYPER bis!        \ GPIOB_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOB_OTYPER bis!        \ GPIOB_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOB_OTYPER bis!        \ GPIOB_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOB_OTYPER bis!        \ GPIOB_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOB_OTYPER bis!        \ GPIOB_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOB_OTYPER bis!        \ GPIOB_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOB_OTYPER bis!        \ GPIOB_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOB_OTYPER bis!        \ GPIOB_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOB_OTYPER bis!        \ GPIOB_OT0	Bit 0	 Width 1
\ GPIOB_OTYPER Register BitField Fetch Words  
: GPIOB_OT15@ GPIOB_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOB_OT14@ GPIOB_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOB_OT13@ GPIOB_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOB_OT12@ GPIOB_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOB_OT11@ GPIOB_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOB_OT10@ GPIOB_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOB_OT9@ GPIOB_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOB_OT8@ GPIOB_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOB_OT7@ GPIOB_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOB_OT6@ GPIOB_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOB_OT5@ GPIOB_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOB_OT4@ GPIOB_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOB_OT3@ GPIOB_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOB_OT2@ GPIOB_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOB_OT1@ GPIOB_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOB_OT0@ GPIOB_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOB_OSPEEDR (read-write)
$000000C0 CONSTANT RESET_GPIOB_OSPEEDR 
 %xx  30 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOB_OSPEEDR bis!        \ GPIOB_OSPEEDR0	Bit 0	 Width 2
\ GPIOB_OSPEEDR Register BitField Fetch Words  
: GPIOB_OSPEEDR15@ GPIOB_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOB_OSPEEDR14@ GPIOB_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOB_OSPEEDR13@ GPIOB_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOB_OSPEEDR12@ GPIOB_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOB_OSPEEDR11@ GPIOB_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOB_OSPEEDR10@ GPIOB_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOB_OSPEEDR9@ GPIOB_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOB_OSPEEDR8@ GPIOB_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOB_OSPEEDR7@ GPIOB_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOB_OSPEEDR6@ GPIOB_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOB_OSPEEDR5@ GPIOB_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOB_OSPEEDR4@ GPIOB_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOB_OSPEEDR3@ GPIOB_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOB_OSPEEDR2@ GPIOB_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOB_OSPEEDR1@ GPIOB_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOB_OSPEEDR0@ GPIOB_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOB_PUPDR (read-write)
$00000100 CONSTANT RESET_GPIOB_PUPDR 
 %xx  30 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOB_PUPDR bis!        \ GPIOB_PUPDR0	Bit 0	 Width 2
\ GPIOB_PUPDR Register BitField Fetch Words  
: GPIOB_PUPDR15@ GPIOB_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOB_PUPDR14@ GPIOB_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOB_PUPDR13@ GPIOB_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOB_PUPDR12@ GPIOB_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOB_PUPDR11@ GPIOB_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOB_PUPDR10@ GPIOB_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOB_PUPDR9@ GPIOB_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOB_PUPDR8@ GPIOB_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOB_PUPDR7@ GPIOB_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOB_PUPDR6@ GPIOB_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOB_PUPDR5@ GPIOB_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOB_PUPDR4@ GPIOB_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOB_PUPDR3@ GPIOB_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOB_PUPDR2@ GPIOB_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOB_PUPDR1@ GPIOB_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOB_PUPDR0@ GPIOB_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOB_IDR (read-only)
$00000000 CONSTANT RESET_GPIOB_IDR 
 %1  15 lshift GPIOB_IDR bis!        \ GPIOB_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOB_IDR bis!        \ GPIOB_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOB_IDR bis!        \ GPIOB_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOB_IDR bis!        \ GPIOB_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOB_IDR bis!        \ GPIOB_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOB_IDR bis!        \ GPIOB_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOB_IDR bis!        \ GPIOB_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOB_IDR bis!        \ GPIOB_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOB_IDR bis!        \ GPIOB_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOB_IDR bis!        \ GPIOB_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOB_IDR bis!        \ GPIOB_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOB_IDR bis!        \ GPIOB_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOB_IDR bis!        \ GPIOB_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOB_IDR bis!        \ GPIOB_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOB_IDR bis!        \ GPIOB_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOB_IDR bis!        \ GPIOB_IDR0	Bit 0	 Width 1
\ GPIOB_IDR Register BitField Fetch Words  
: GPIOB_IDR15@ GPIOB_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOB_IDR14@ GPIOB_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOB_IDR13@ GPIOB_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOB_IDR12@ GPIOB_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOB_IDR11@ GPIOB_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOB_IDR10@ GPIOB_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOB_IDR9@ GPIOB_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOB_IDR8@ GPIOB_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOB_IDR7@ GPIOB_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOB_IDR6@ GPIOB_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOB_IDR5@ GPIOB_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOB_IDR4@ GPIOB_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOB_IDR3@ GPIOB_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOB_IDR2@ GPIOB_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOB_IDR1@ GPIOB_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOB_IDR0@ GPIOB_IDR @ %1  0 lshift and 0 rshift ; 

GPIOB_ODR (read-write)
$00000000 CONSTANT RESET_GPIOB_ODR 
 %1  15 lshift GPIOB_ODR bis!        \ GPIOB_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOB_ODR bis!        \ GPIOB_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOB_ODR bis!        \ GPIOB_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOB_ODR bis!        \ GPIOB_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOB_ODR bis!        \ GPIOB_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOB_ODR bis!        \ GPIOB_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOB_ODR bis!        \ GPIOB_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOB_ODR bis!        \ GPIOB_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOB_ODR bis!        \ GPIOB_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOB_ODR bis!        \ GPIOB_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOB_ODR bis!        \ GPIOB_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOB_ODR bis!        \ GPIOB_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOB_ODR bis!        \ GPIOB_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOB_ODR bis!        \ GPIOB_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOB_ODR bis!        \ GPIOB_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOB_ODR bis!        \ GPIOB_ODR0	Bit 0	 Width 1
\ GPIOB_ODR Register BitField Fetch Words  
: GPIOB_ODR15@ GPIOB_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOB_ODR14@ GPIOB_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOB_ODR13@ GPIOB_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOB_ODR12@ GPIOB_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOB_ODR11@ GPIOB_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOB_ODR10@ GPIOB_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOB_ODR9@ GPIOB_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOB_ODR8@ GPIOB_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOB_ODR7@ GPIOB_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOB_ODR6@ GPIOB_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOB_ODR5@ GPIOB_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOB_ODR4@ GPIOB_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOB_ODR3@ GPIOB_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOB_ODR2@ GPIOB_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOB_ODR1@ GPIOB_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOB_ODR0@ GPIOB_ODR @ %1  0 lshift and 0 rshift ; 

GPIOB_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOB_BSRR 
 %1  31 lshift GPIOB_BSRR bis!        \ GPIOB_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOB_BSRR bis!        \ GPIOB_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOB_BSRR bis!        \ GPIOB_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOB_BSRR bis!        \ GPIOB_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOB_BSRR bis!        \ GPIOB_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOB_BSRR bis!        \ GPIOB_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOB_BSRR bis!        \ GPIOB_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOB_BSRR bis!        \ GPIOB_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOB_BSRR bis!        \ GPIOB_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOB_BSRR bis!        \ GPIOB_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOB_BSRR bis!        \ GPIOB_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOB_BSRR bis!        \ GPIOB_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOB_BSRR bis!        \ GPIOB_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOB_BSRR bis!        \ GPIOB_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOB_BSRR bis!        \ GPIOB_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOB_BSRR bis!        \ GPIOB_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOB_BSRR bis!        \ GPIOB_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOB_BSRR bis!        \ GPIOB_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOB_BSRR bis!        \ GPIOB_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOB_BSRR bis!        \ GPIOB_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOB_BSRR bis!        \ GPIOB_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOB_BSRR bis!        \ GPIOB_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOB_BSRR bis!        \ GPIOB_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOB_BSRR bis!        \ GPIOB_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOB_BSRR bis!        \ GPIOB_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOB_BSRR bis!        \ GPIOB_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOB_BSRR bis!        \ GPIOB_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOB_BSRR bis!        \ GPIOB_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOB_BSRR bis!        \ GPIOB_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOB_BSRR bis!        \ GPIOB_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOB_BSRR bis!        \ GPIOB_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOB_BSRR bis!        \ GPIOB_BS0	Bit 0	 Width 1
\ GPIOB_BSRR Register BitField Fetch Words  
: GPIOB_BR15@ GPIOB_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOB_BR14@ GPIOB_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOB_BR13@ GPIOB_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOB_BR12@ GPIOB_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOB_BR11@ GPIOB_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOB_BR10@ GPIOB_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOB_BR9@ GPIOB_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOB_BR8@ GPIOB_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOB_BR7@ GPIOB_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOB_BR6@ GPIOB_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOB_BR5@ GPIOB_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOB_BR4@ GPIOB_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOB_BR3@ GPIOB_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOB_BR2@ GPIOB_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOB_BR1@ GPIOB_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOB_BR0@ GPIOB_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOB_BS15@ GPIOB_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOB_BS14@ GPIOB_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOB_BS13@ GPIOB_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOB_BS12@ GPIOB_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOB_BS11@ GPIOB_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOB_BS10@ GPIOB_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOB_BS9@ GPIOB_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOB_BS8@ GPIOB_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOB_BS7@ GPIOB_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOB_BS6@ GPIOB_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOB_BS5@ GPIOB_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOB_BS4@ GPIOB_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOB_BS3@ GPIOB_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOB_BS2@ GPIOB_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOB_BS1@ GPIOB_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOB_BS0@ GPIOB_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOB_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOB_LCKR 
 %1  16 lshift GPIOB_LCKR bis!        \ GPIOB_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOB_LCKR bis!        \ GPIOB_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOB_LCKR bis!        \ GPIOB_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOB_LCKR bis!        \ GPIOB_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOB_LCKR bis!        \ GPIOB_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOB_LCKR bis!        \ GPIOB_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOB_LCKR bis!        \ GPIOB_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOB_LCKR bis!        \ GPIOB_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOB_LCKR bis!        \ GPIOB_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOB_LCKR bis!        \ GPIOB_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOB_LCKR bis!        \ GPIOB_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOB_LCKR bis!        \ GPIOB_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOB_LCKR bis!        \ GPIOB_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOB_LCKR bis!        \ GPIOB_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOB_LCKR bis!        \ GPIOB_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOB_LCKR bis!        \ GPIOB_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOB_LCKR bis!        \ GPIOB_LCK0	Bit 0	 Width 1
\ GPIOB_LCKR Register BitField Fetch Words  
: GPIOB_LCKK@ GPIOB_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOB_LCK15@ GPIOB_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOB_LCK14@ GPIOB_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOB_LCK13@ GPIOB_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOB_LCK12@ GPIOB_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOB_LCK11@ GPIOB_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOB_LCK10@ GPIOB_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOB_LCK9@ GPIOB_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOB_LCK8@ GPIOB_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOB_LCK7@ GPIOB_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOB_LCK6@ GPIOB_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOB_LCK5@ GPIOB_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOB_LCK4@ GPIOB_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOB_LCK3@ GPIOB_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOB_LCK2@ GPIOB_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOB_LCK1@ GPIOB_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOB_LCK0@ GPIOB_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOB_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOB_AFRL 
 %xxxx  28 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOB_AFRL bis!        \ GPIOB_AFRL0	Bit 0	 Width 4
\ GPIOB_AFRL Register BitField Fetch Words  
: GPIOB_AFRL7@ GPIOB_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOB_AFRL6@ GPIOB_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOB_AFRL5@ GPIOB_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOB_AFRL4@ GPIOB_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOB_AFRL3@ GPIOB_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOB_AFRL2@ GPIOB_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOB_AFRL1@ GPIOB_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOB_AFRL0@ GPIOB_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOB_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOB_AFRH 
 %xxxx  28 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOB_AFRH bis!        \ GPIOB_AFRH8	Bit 0	 Width 4
\ GPIOB_AFRH Register BitField Fetch Words  
: GPIOB_AFRH15@ GPIOB_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOB_AFRH14@ GPIOB_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOB_AFRH13@ GPIOB_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOB_AFRH12@ GPIOB_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOB_AFRH11@ GPIOB_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOB_AFRH10@ GPIOB_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOB_AFRH9@ GPIOB_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOB_AFRH8@ GPIOB_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### GPIOA ###################################
GPIOA_MODER (read-write)
$A8000000 CONSTANT RESET_GPIOA_MODER 
 %xx  30 lshift GPIOA_MODER bis!        \ GPIOA_MODER15	Bit 30	 Width 2
 %xx  28 lshift GPIOA_MODER bis!        \ GPIOA_MODER14	Bit 28	 Width 2
 %xx  26 lshift GPIOA_MODER bis!        \ GPIOA_MODER13	Bit 26	 Width 2
 %xx  24 lshift GPIOA_MODER bis!        \ GPIOA_MODER12	Bit 24	 Width 2
 %xx  22 lshift GPIOA_MODER bis!        \ GPIOA_MODER11	Bit 22	 Width 2
 %xx  20 lshift GPIOA_MODER bis!        \ GPIOA_MODER10	Bit 20	 Width 2
 %xx  18 lshift GPIOA_MODER bis!        \ GPIOA_MODER9	Bit 18	 Width 2
 %xx  16 lshift GPIOA_MODER bis!        \ GPIOA_MODER8	Bit 16	 Width 2
 %xx  14 lshift GPIOA_MODER bis!        \ GPIOA_MODER7	Bit 14	 Width 2
 %xx  12 lshift GPIOA_MODER bis!        \ GPIOA_MODER6	Bit 12	 Width 2
 %xx  10 lshift GPIOA_MODER bis!        \ GPIOA_MODER5	Bit 10	 Width 2
 %xx  8 lshift GPIOA_MODER bis!        \ GPIOA_MODER4	Bit 8	 Width 2
 %xx  6 lshift GPIOA_MODER bis!        \ GPIOA_MODER3	Bit 6	 Width 2
 %xx  4 lshift GPIOA_MODER bis!        \ GPIOA_MODER2	Bit 4	 Width 2
 %xx  2 lshift GPIOA_MODER bis!        \ GPIOA_MODER1	Bit 2	 Width 2
 %xx  0 lshift GPIOA_MODER bis!        \ GPIOA_MODER0	Bit 0	 Width 2
\ GPIOA_MODER Register BitField Fetch Words  
: GPIOA_MODER15@ GPIOA_MODER @ %11  30 lshift and 30 rshift ; 
: GPIOA_MODER14@ GPIOA_MODER @ %11  28 lshift and 28 rshift ; 
: GPIOA_MODER13@ GPIOA_MODER @ %11  26 lshift and 26 rshift ; 
: GPIOA_MODER12@ GPIOA_MODER @ %11  24 lshift and 24 rshift ; 
: GPIOA_MODER11@ GPIOA_MODER @ %11  22 lshift and 22 rshift ; 
: GPIOA_MODER10@ GPIOA_MODER @ %11  20 lshift and 20 rshift ; 
: GPIOA_MODER9@ GPIOA_MODER @ %11  18 lshift and 18 rshift ; 
: GPIOA_MODER8@ GPIOA_MODER @ %11  16 lshift and 16 rshift ; 
: GPIOA_MODER7@ GPIOA_MODER @ %11  14 lshift and 14 rshift ; 
: GPIOA_MODER6@ GPIOA_MODER @ %11  12 lshift and 12 rshift ; 
: GPIOA_MODER5@ GPIOA_MODER @ %11  10 lshift and 10 rshift ; 
: GPIOA_MODER4@ GPIOA_MODER @ %11  8 lshift and 8 rshift ; 
: GPIOA_MODER3@ GPIOA_MODER @ %11  6 lshift and 6 rshift ; 
: GPIOA_MODER2@ GPIOA_MODER @ %11  4 lshift and 4 rshift ; 
: GPIOA_MODER1@ GPIOA_MODER @ %11  2 lshift and 2 rshift ; 
: GPIOA_MODER0@ GPIOA_MODER @ %11  0 lshift and 0 rshift ; 

GPIOA_OTYPER (read-write)
$00000000 CONSTANT RESET_GPIOA_OTYPER 
 %1  15 lshift GPIOA_OTYPER bis!        \ GPIOA_OT15	Bit 15	 Width 1
 %1  14 lshift GPIOA_OTYPER bis!        \ GPIOA_OT14	Bit 14	 Width 1
 %1  13 lshift GPIOA_OTYPER bis!        \ GPIOA_OT13	Bit 13	 Width 1
 %1  12 lshift GPIOA_OTYPER bis!        \ GPIOA_OT12	Bit 12	 Width 1
 %1  11 lshift GPIOA_OTYPER bis!        \ GPIOA_OT11	Bit 11	 Width 1
 %1  10 lshift GPIOA_OTYPER bis!        \ GPIOA_OT10	Bit 10	 Width 1
 %1  9 lshift GPIOA_OTYPER bis!        \ GPIOA_OT9	Bit 9	 Width 1
 %1  8 lshift GPIOA_OTYPER bis!        \ GPIOA_OT8	Bit 8	 Width 1
 %1  7 lshift GPIOA_OTYPER bis!        \ GPIOA_OT7	Bit 7	 Width 1
 %1  6 lshift GPIOA_OTYPER bis!        \ GPIOA_OT6	Bit 6	 Width 1
 %1  5 lshift GPIOA_OTYPER bis!        \ GPIOA_OT5	Bit 5	 Width 1
 %1  4 lshift GPIOA_OTYPER bis!        \ GPIOA_OT4	Bit 4	 Width 1
 %1  3 lshift GPIOA_OTYPER bis!        \ GPIOA_OT3	Bit 3	 Width 1
 %1  2 lshift GPIOA_OTYPER bis!        \ GPIOA_OT2	Bit 2	 Width 1
 %1  1 lshift GPIOA_OTYPER bis!        \ GPIOA_OT1	Bit 1	 Width 1
 %1  0 lshift GPIOA_OTYPER bis!        \ GPIOA_OT0	Bit 0	 Width 1
\ GPIOA_OTYPER Register BitField Fetch Words  
: GPIOA_OT15@ GPIOA_OTYPER @ %1  15 lshift and 15 rshift ; 
: GPIOA_OT14@ GPIOA_OTYPER @ %1  14 lshift and 14 rshift ; 
: GPIOA_OT13@ GPIOA_OTYPER @ %1  13 lshift and 13 rshift ; 
: GPIOA_OT12@ GPIOA_OTYPER @ %1  12 lshift and 12 rshift ; 
: GPIOA_OT11@ GPIOA_OTYPER @ %1  11 lshift and 11 rshift ; 
: GPIOA_OT10@ GPIOA_OTYPER @ %1  10 lshift and 10 rshift ; 
: GPIOA_OT9@ GPIOA_OTYPER @ %1  9 lshift and 9 rshift ; 
: GPIOA_OT8@ GPIOA_OTYPER @ %1  8 lshift and 8 rshift ; 
: GPIOA_OT7@ GPIOA_OTYPER @ %1  7 lshift and 7 rshift ; 
: GPIOA_OT6@ GPIOA_OTYPER @ %1  6 lshift and 6 rshift ; 
: GPIOA_OT5@ GPIOA_OTYPER @ %1  5 lshift and 5 rshift ; 
: GPIOA_OT4@ GPIOA_OTYPER @ %1  4 lshift and 4 rshift ; 
: GPIOA_OT3@ GPIOA_OTYPER @ %1  3 lshift and 3 rshift ; 
: GPIOA_OT2@ GPIOA_OTYPER @ %1  2 lshift and 2 rshift ; 
: GPIOA_OT1@ GPIOA_OTYPER @ %1  1 lshift and 1 rshift ; 
: GPIOA_OT0@ GPIOA_OTYPER @ %1  0 lshift and 0 rshift ; 

GPIOA_OSPEEDR (read-write)
$00000000 CONSTANT RESET_GPIOA_OSPEEDR 
 %xx  30 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOA_OSPEEDR bis!        \ GPIOA_OSPEEDR0	Bit 0	 Width 2
\ GPIOA_OSPEEDR Register BitField Fetch Words  
: GPIOA_OSPEEDR15@ GPIOA_OSPEEDR @ %11  30 lshift and 30 rshift ; 
: GPIOA_OSPEEDR14@ GPIOA_OSPEEDR @ %11  28 lshift and 28 rshift ; 
: GPIOA_OSPEEDR13@ GPIOA_OSPEEDR @ %11  26 lshift and 26 rshift ; 
: GPIOA_OSPEEDR12@ GPIOA_OSPEEDR @ %11  24 lshift and 24 rshift ; 
: GPIOA_OSPEEDR11@ GPIOA_OSPEEDR @ %11  22 lshift and 22 rshift ; 
: GPIOA_OSPEEDR10@ GPIOA_OSPEEDR @ %11  20 lshift and 20 rshift ; 
: GPIOA_OSPEEDR9@ GPIOA_OSPEEDR @ %11  18 lshift and 18 rshift ; 
: GPIOA_OSPEEDR8@ GPIOA_OSPEEDR @ %11  16 lshift and 16 rshift ; 
: GPIOA_OSPEEDR7@ GPIOA_OSPEEDR @ %11  14 lshift and 14 rshift ; 
: GPIOA_OSPEEDR6@ GPIOA_OSPEEDR @ %11  12 lshift and 12 rshift ; 
: GPIOA_OSPEEDR5@ GPIOA_OSPEEDR @ %11  10 lshift and 10 rshift ; 
: GPIOA_OSPEEDR4@ GPIOA_OSPEEDR @ %11  8 lshift and 8 rshift ; 
: GPIOA_OSPEEDR3@ GPIOA_OSPEEDR @ %11  6 lshift and 6 rshift ; 
: GPIOA_OSPEEDR2@ GPIOA_OSPEEDR @ %11  4 lshift and 4 rshift ; 
: GPIOA_OSPEEDR1@ GPIOA_OSPEEDR @ %11  2 lshift and 2 rshift ; 
: GPIOA_OSPEEDR0@ GPIOA_OSPEEDR @ %11  0 lshift and 0 rshift ; 

GPIOA_PUPDR (read-write)
$64000000 CONSTANT RESET_GPIOA_PUPDR 
 %xx  30 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR15	Bit 30	 Width 2
 %xx  28 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR14	Bit 28	 Width 2
 %xx  26 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR13	Bit 26	 Width 2
 %xx  24 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR12	Bit 24	 Width 2
 %xx  22 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR11	Bit 22	 Width 2
 %xx  20 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR10	Bit 20	 Width 2
 %xx  18 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR9	Bit 18	 Width 2
 %xx  16 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR8	Bit 16	 Width 2
 %xx  14 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR7	Bit 14	 Width 2
 %xx  12 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR6	Bit 12	 Width 2
 %xx  10 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR5	Bit 10	 Width 2
 %xx  8 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR4	Bit 8	 Width 2
 %xx  6 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR3	Bit 6	 Width 2
 %xx  4 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR2	Bit 4	 Width 2
 %xx  2 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR1	Bit 2	 Width 2
 %xx  0 lshift GPIOA_PUPDR bis!        \ GPIOA_PUPDR0	Bit 0	 Width 2
\ GPIOA_PUPDR Register BitField Fetch Words  
: GPIOA_PUPDR15@ GPIOA_PUPDR @ %11  30 lshift and 30 rshift ; 
: GPIOA_PUPDR14@ GPIOA_PUPDR @ %11  28 lshift and 28 rshift ; 
: GPIOA_PUPDR13@ GPIOA_PUPDR @ %11  26 lshift and 26 rshift ; 
: GPIOA_PUPDR12@ GPIOA_PUPDR @ %11  24 lshift and 24 rshift ; 
: GPIOA_PUPDR11@ GPIOA_PUPDR @ %11  22 lshift and 22 rshift ; 
: GPIOA_PUPDR10@ GPIOA_PUPDR @ %11  20 lshift and 20 rshift ; 
: GPIOA_PUPDR9@ GPIOA_PUPDR @ %11  18 lshift and 18 rshift ; 
: GPIOA_PUPDR8@ GPIOA_PUPDR @ %11  16 lshift and 16 rshift ; 
: GPIOA_PUPDR7@ GPIOA_PUPDR @ %11  14 lshift and 14 rshift ; 
: GPIOA_PUPDR6@ GPIOA_PUPDR @ %11  12 lshift and 12 rshift ; 
: GPIOA_PUPDR5@ GPIOA_PUPDR @ %11  10 lshift and 10 rshift ; 
: GPIOA_PUPDR4@ GPIOA_PUPDR @ %11  8 lshift and 8 rshift ; 
: GPIOA_PUPDR3@ GPIOA_PUPDR @ %11  6 lshift and 6 rshift ; 
: GPIOA_PUPDR2@ GPIOA_PUPDR @ %11  4 lshift and 4 rshift ; 
: GPIOA_PUPDR1@ GPIOA_PUPDR @ %11  2 lshift and 2 rshift ; 
: GPIOA_PUPDR0@ GPIOA_PUPDR @ %11  0 lshift and 0 rshift ; 

GPIOA_IDR (read-only)
$00000000 CONSTANT RESET_GPIOA_IDR 
 %1  15 lshift GPIOA_IDR bis!        \ GPIOA_IDR15	Bit 15	 Width 1
 %1  14 lshift GPIOA_IDR bis!        \ GPIOA_IDR14	Bit 14	 Width 1
 %1  13 lshift GPIOA_IDR bis!        \ GPIOA_IDR13	Bit 13	 Width 1
 %1  12 lshift GPIOA_IDR bis!        \ GPIOA_IDR12	Bit 12	 Width 1
 %1  11 lshift GPIOA_IDR bis!        \ GPIOA_IDR11	Bit 11	 Width 1
 %1  10 lshift GPIOA_IDR bis!        \ GPIOA_IDR10	Bit 10	 Width 1
 %1  9 lshift GPIOA_IDR bis!        \ GPIOA_IDR9	Bit 9	 Width 1
 %1  8 lshift GPIOA_IDR bis!        \ GPIOA_IDR8	Bit 8	 Width 1
 %1  7 lshift GPIOA_IDR bis!        \ GPIOA_IDR7	Bit 7	 Width 1
 %1  6 lshift GPIOA_IDR bis!        \ GPIOA_IDR6	Bit 6	 Width 1
 %1  5 lshift GPIOA_IDR bis!        \ GPIOA_IDR5	Bit 5	 Width 1
 %1  4 lshift GPIOA_IDR bis!        \ GPIOA_IDR4	Bit 4	 Width 1
 %1  3 lshift GPIOA_IDR bis!        \ GPIOA_IDR3	Bit 3	 Width 1
 %1  2 lshift GPIOA_IDR bis!        \ GPIOA_IDR2	Bit 2	 Width 1
 %1  1 lshift GPIOA_IDR bis!        \ GPIOA_IDR1	Bit 1	 Width 1
 %1  0 lshift GPIOA_IDR bis!        \ GPIOA_IDR0	Bit 0	 Width 1
\ GPIOA_IDR Register BitField Fetch Words  
: GPIOA_IDR15@ GPIOA_IDR @ %1  15 lshift and 15 rshift ; 
: GPIOA_IDR14@ GPIOA_IDR @ %1  14 lshift and 14 rshift ; 
: GPIOA_IDR13@ GPIOA_IDR @ %1  13 lshift and 13 rshift ; 
: GPIOA_IDR12@ GPIOA_IDR @ %1  12 lshift and 12 rshift ; 
: GPIOA_IDR11@ GPIOA_IDR @ %1  11 lshift and 11 rshift ; 
: GPIOA_IDR10@ GPIOA_IDR @ %1  10 lshift and 10 rshift ; 
: GPIOA_IDR9@ GPIOA_IDR @ %1  9 lshift and 9 rshift ; 
: GPIOA_IDR8@ GPIOA_IDR @ %1  8 lshift and 8 rshift ; 
: GPIOA_IDR7@ GPIOA_IDR @ %1  7 lshift and 7 rshift ; 
: GPIOA_IDR6@ GPIOA_IDR @ %1  6 lshift and 6 rshift ; 
: GPIOA_IDR5@ GPIOA_IDR @ %1  5 lshift and 5 rshift ; 
: GPIOA_IDR4@ GPIOA_IDR @ %1  4 lshift and 4 rshift ; 
: GPIOA_IDR3@ GPIOA_IDR @ %1  3 lshift and 3 rshift ; 
: GPIOA_IDR2@ GPIOA_IDR @ %1  2 lshift and 2 rshift ; 
: GPIOA_IDR1@ GPIOA_IDR @ %1  1 lshift and 1 rshift ; 
: GPIOA_IDR0@ GPIOA_IDR @ %1  0 lshift and 0 rshift ; 

GPIOA_ODR (read-write)
$00000000 CONSTANT RESET_GPIOA_ODR 
 %1  15 lshift GPIOA_ODR bis!        \ GPIOA_ODR15	Bit 15	 Width 1
 %1  14 lshift GPIOA_ODR bis!        \ GPIOA_ODR14	Bit 14	 Width 1
 %1  13 lshift GPIOA_ODR bis!        \ GPIOA_ODR13	Bit 13	 Width 1
 %1  12 lshift GPIOA_ODR bis!        \ GPIOA_ODR12	Bit 12	 Width 1
 %1  11 lshift GPIOA_ODR bis!        \ GPIOA_ODR11	Bit 11	 Width 1
 %1  10 lshift GPIOA_ODR bis!        \ GPIOA_ODR10	Bit 10	 Width 1
 %1  9 lshift GPIOA_ODR bis!        \ GPIOA_ODR9	Bit 9	 Width 1
 %1  8 lshift GPIOA_ODR bis!        \ GPIOA_ODR8	Bit 8	 Width 1
 %1  7 lshift GPIOA_ODR bis!        \ GPIOA_ODR7	Bit 7	 Width 1
 %1  6 lshift GPIOA_ODR bis!        \ GPIOA_ODR6	Bit 6	 Width 1
 %1  5 lshift GPIOA_ODR bis!        \ GPIOA_ODR5	Bit 5	 Width 1
 %1  4 lshift GPIOA_ODR bis!        \ GPIOA_ODR4	Bit 4	 Width 1
 %1  3 lshift GPIOA_ODR bis!        \ GPIOA_ODR3	Bit 3	 Width 1
 %1  2 lshift GPIOA_ODR bis!        \ GPIOA_ODR2	Bit 2	 Width 1
 %1  1 lshift GPIOA_ODR bis!        \ GPIOA_ODR1	Bit 1	 Width 1
 %1  0 lshift GPIOA_ODR bis!        \ GPIOA_ODR0	Bit 0	 Width 1
\ GPIOA_ODR Register BitField Fetch Words  
: GPIOA_ODR15@ GPIOA_ODR @ %1  15 lshift and 15 rshift ; 
: GPIOA_ODR14@ GPIOA_ODR @ %1  14 lshift and 14 rshift ; 
: GPIOA_ODR13@ GPIOA_ODR @ %1  13 lshift and 13 rshift ; 
: GPIOA_ODR12@ GPIOA_ODR @ %1  12 lshift and 12 rshift ; 
: GPIOA_ODR11@ GPIOA_ODR @ %1  11 lshift and 11 rshift ; 
: GPIOA_ODR10@ GPIOA_ODR @ %1  10 lshift and 10 rshift ; 
: GPIOA_ODR9@ GPIOA_ODR @ %1  9 lshift and 9 rshift ; 
: GPIOA_ODR8@ GPIOA_ODR @ %1  8 lshift and 8 rshift ; 
: GPIOA_ODR7@ GPIOA_ODR @ %1  7 lshift and 7 rshift ; 
: GPIOA_ODR6@ GPIOA_ODR @ %1  6 lshift and 6 rshift ; 
: GPIOA_ODR5@ GPIOA_ODR @ %1  5 lshift and 5 rshift ; 
: GPIOA_ODR4@ GPIOA_ODR @ %1  4 lshift and 4 rshift ; 
: GPIOA_ODR3@ GPIOA_ODR @ %1  3 lshift and 3 rshift ; 
: GPIOA_ODR2@ GPIOA_ODR @ %1  2 lshift and 2 rshift ; 
: GPIOA_ODR1@ GPIOA_ODR @ %1  1 lshift and 1 rshift ; 
: GPIOA_ODR0@ GPIOA_ODR @ %1  0 lshift and 0 rshift ; 

GPIOA_BSRR (write-only)
$00000000 CONSTANT RESET_GPIOA_BSRR 
 %1  31 lshift GPIOA_BSRR bis!        \ GPIOA_BR15	Bit 31	 Width 1
 %1  30 lshift GPIOA_BSRR bis!        \ GPIOA_BR14	Bit 30	 Width 1
 %1  29 lshift GPIOA_BSRR bis!        \ GPIOA_BR13	Bit 29	 Width 1
 %1  28 lshift GPIOA_BSRR bis!        \ GPIOA_BR12	Bit 28	 Width 1
 %1  27 lshift GPIOA_BSRR bis!        \ GPIOA_BR11	Bit 27	 Width 1
 %1  26 lshift GPIOA_BSRR bis!        \ GPIOA_BR10	Bit 26	 Width 1
 %1  25 lshift GPIOA_BSRR bis!        \ GPIOA_BR9	Bit 25	 Width 1
 %1  24 lshift GPIOA_BSRR bis!        \ GPIOA_BR8	Bit 24	 Width 1
 %1  23 lshift GPIOA_BSRR bis!        \ GPIOA_BR7	Bit 23	 Width 1
 %1  22 lshift GPIOA_BSRR bis!        \ GPIOA_BR6	Bit 22	 Width 1
 %1  21 lshift GPIOA_BSRR bis!        \ GPIOA_BR5	Bit 21	 Width 1
 %1  20 lshift GPIOA_BSRR bis!        \ GPIOA_BR4	Bit 20	 Width 1
 %1  19 lshift GPIOA_BSRR bis!        \ GPIOA_BR3	Bit 19	 Width 1
 %1  18 lshift GPIOA_BSRR bis!        \ GPIOA_BR2	Bit 18	 Width 1
 %1  17 lshift GPIOA_BSRR bis!        \ GPIOA_BR1	Bit 17	 Width 1
 %1  16 lshift GPIOA_BSRR bis!        \ GPIOA_BR0	Bit 16	 Width 1
 %1  15 lshift GPIOA_BSRR bis!        \ GPIOA_BS15	Bit 15	 Width 1
 %1  14 lshift GPIOA_BSRR bis!        \ GPIOA_BS14	Bit 14	 Width 1
 %1  13 lshift GPIOA_BSRR bis!        \ GPIOA_BS13	Bit 13	 Width 1
 %1  12 lshift GPIOA_BSRR bis!        \ GPIOA_BS12	Bit 12	 Width 1
 %1  11 lshift GPIOA_BSRR bis!        \ GPIOA_BS11	Bit 11	 Width 1
 %1  10 lshift GPIOA_BSRR bis!        \ GPIOA_BS10	Bit 10	 Width 1
 %1  9 lshift GPIOA_BSRR bis!        \ GPIOA_BS9	Bit 9	 Width 1
 %1  8 lshift GPIOA_BSRR bis!        \ GPIOA_BS8	Bit 8	 Width 1
 %1  7 lshift GPIOA_BSRR bis!        \ GPIOA_BS7	Bit 7	 Width 1
 %1  6 lshift GPIOA_BSRR bis!        \ GPIOA_BS6	Bit 6	 Width 1
 %1  5 lshift GPIOA_BSRR bis!        \ GPIOA_BS5	Bit 5	 Width 1
 %1  4 lshift GPIOA_BSRR bis!        \ GPIOA_BS4	Bit 4	 Width 1
 %1  3 lshift GPIOA_BSRR bis!        \ GPIOA_BS3	Bit 3	 Width 1
 %1  2 lshift GPIOA_BSRR bis!        \ GPIOA_BS2	Bit 2	 Width 1
 %1  1 lshift GPIOA_BSRR bis!        \ GPIOA_BS1	Bit 1	 Width 1
 %1  0 lshift GPIOA_BSRR bis!        \ GPIOA_BS0	Bit 0	 Width 1
\ GPIOA_BSRR Register BitField Fetch Words  
: GPIOA_BR15@ GPIOA_BSRR @ %1  31 lshift and 31 rshift ; 
: GPIOA_BR14@ GPIOA_BSRR @ %1  30 lshift and 30 rshift ; 
: GPIOA_BR13@ GPIOA_BSRR @ %1  29 lshift and 29 rshift ; 
: GPIOA_BR12@ GPIOA_BSRR @ %1  28 lshift and 28 rshift ; 
: GPIOA_BR11@ GPIOA_BSRR @ %1  27 lshift and 27 rshift ; 
: GPIOA_BR10@ GPIOA_BSRR @ %1  26 lshift and 26 rshift ; 
: GPIOA_BR9@ GPIOA_BSRR @ %1  25 lshift and 25 rshift ; 
: GPIOA_BR8@ GPIOA_BSRR @ %1  24 lshift and 24 rshift ; 
: GPIOA_BR7@ GPIOA_BSRR @ %1  23 lshift and 23 rshift ; 
: GPIOA_BR6@ GPIOA_BSRR @ %1  22 lshift and 22 rshift ; 
: GPIOA_BR5@ GPIOA_BSRR @ %1  21 lshift and 21 rshift ; 
: GPIOA_BR4@ GPIOA_BSRR @ %1  20 lshift and 20 rshift ; 
: GPIOA_BR3@ GPIOA_BSRR @ %1  19 lshift and 19 rshift ; 
: GPIOA_BR2@ GPIOA_BSRR @ %1  18 lshift and 18 rshift ; 
: GPIOA_BR1@ GPIOA_BSRR @ %1  17 lshift and 17 rshift ; 
: GPIOA_BR0@ GPIOA_BSRR @ %1  16 lshift and 16 rshift ; 
: GPIOA_BS15@ GPIOA_BSRR @ %1  15 lshift and 15 rshift ; 
: GPIOA_BS14@ GPIOA_BSRR @ %1  14 lshift and 14 rshift ; 
: GPIOA_BS13@ GPIOA_BSRR @ %1  13 lshift and 13 rshift ; 
: GPIOA_BS12@ GPIOA_BSRR @ %1  12 lshift and 12 rshift ; 
: GPIOA_BS11@ GPIOA_BSRR @ %1  11 lshift and 11 rshift ; 
: GPIOA_BS10@ GPIOA_BSRR @ %1  10 lshift and 10 rshift ; 
: GPIOA_BS9@ GPIOA_BSRR @ %1  9 lshift and 9 rshift ; 
: GPIOA_BS8@ GPIOA_BSRR @ %1  8 lshift and 8 rshift ; 
: GPIOA_BS7@ GPIOA_BSRR @ %1  7 lshift and 7 rshift ; 
: GPIOA_BS6@ GPIOA_BSRR @ %1  6 lshift and 6 rshift ; 
: GPIOA_BS5@ GPIOA_BSRR @ %1  5 lshift and 5 rshift ; 
: GPIOA_BS4@ GPIOA_BSRR @ %1  4 lshift and 4 rshift ; 
: GPIOA_BS3@ GPIOA_BSRR @ %1  3 lshift and 3 rshift ; 
: GPIOA_BS2@ GPIOA_BSRR @ %1  2 lshift and 2 rshift ; 
: GPIOA_BS1@ GPIOA_BSRR @ %1  1 lshift and 1 rshift ; 
: GPIOA_BS0@ GPIOA_BSRR @ %1  0 lshift and 0 rshift ; 

GPIOA_LCKR (read-write)
$00000000 CONSTANT RESET_GPIOA_LCKR 
 %1  16 lshift GPIOA_LCKR bis!        \ GPIOA_LCKK	Bit 16	 Width 1
 %1  15 lshift GPIOA_LCKR bis!        \ GPIOA_LCK15	Bit 15	 Width 1
 %1  14 lshift GPIOA_LCKR bis!        \ GPIOA_LCK14	Bit 14	 Width 1
 %1  13 lshift GPIOA_LCKR bis!        \ GPIOA_LCK13	Bit 13	 Width 1
 %1  12 lshift GPIOA_LCKR bis!        \ GPIOA_LCK12	Bit 12	 Width 1
 %1  11 lshift GPIOA_LCKR bis!        \ GPIOA_LCK11	Bit 11	 Width 1
 %1  10 lshift GPIOA_LCKR bis!        \ GPIOA_LCK10	Bit 10	 Width 1
 %1  9 lshift GPIOA_LCKR bis!        \ GPIOA_LCK9	Bit 9	 Width 1
 %1  8 lshift GPIOA_LCKR bis!        \ GPIOA_LCK8	Bit 8	 Width 1
 %1  7 lshift GPIOA_LCKR bis!        \ GPIOA_LCK7	Bit 7	 Width 1
 %1  6 lshift GPIOA_LCKR bis!        \ GPIOA_LCK6	Bit 6	 Width 1
 %1  5 lshift GPIOA_LCKR bis!        \ GPIOA_LCK5	Bit 5	 Width 1
 %1  4 lshift GPIOA_LCKR bis!        \ GPIOA_LCK4	Bit 4	 Width 1
 %1  3 lshift GPIOA_LCKR bis!        \ GPIOA_LCK3	Bit 3	 Width 1
 %1  2 lshift GPIOA_LCKR bis!        \ GPIOA_LCK2	Bit 2	 Width 1
 %1  1 lshift GPIOA_LCKR bis!        \ GPIOA_LCK1	Bit 1	 Width 1
 %1  0 lshift GPIOA_LCKR bis!        \ GPIOA_LCK0	Bit 0	 Width 1
\ GPIOA_LCKR Register BitField Fetch Words  
: GPIOA_LCKK@ GPIOA_LCKR @ %1  16 lshift and 16 rshift ; 
: GPIOA_LCK15@ GPIOA_LCKR @ %1  15 lshift and 15 rshift ; 
: GPIOA_LCK14@ GPIOA_LCKR @ %1  14 lshift and 14 rshift ; 
: GPIOA_LCK13@ GPIOA_LCKR @ %1  13 lshift and 13 rshift ; 
: GPIOA_LCK12@ GPIOA_LCKR @ %1  12 lshift and 12 rshift ; 
: GPIOA_LCK11@ GPIOA_LCKR @ %1  11 lshift and 11 rshift ; 
: GPIOA_LCK10@ GPIOA_LCKR @ %1  10 lshift and 10 rshift ; 
: GPIOA_LCK9@ GPIOA_LCKR @ %1  9 lshift and 9 rshift ; 
: GPIOA_LCK8@ GPIOA_LCKR @ %1  8 lshift and 8 rshift ; 
: GPIOA_LCK7@ GPIOA_LCKR @ %1  7 lshift and 7 rshift ; 
: GPIOA_LCK6@ GPIOA_LCKR @ %1  6 lshift and 6 rshift ; 
: GPIOA_LCK5@ GPIOA_LCKR @ %1  5 lshift and 5 rshift ; 
: GPIOA_LCK4@ GPIOA_LCKR @ %1  4 lshift and 4 rshift ; 
: GPIOA_LCK3@ GPIOA_LCKR @ %1  3 lshift and 3 rshift ; 
: GPIOA_LCK2@ GPIOA_LCKR @ %1  2 lshift and 2 rshift ; 
: GPIOA_LCK1@ GPIOA_LCKR @ %1  1 lshift and 1 rshift ; 
: GPIOA_LCK0@ GPIOA_LCKR @ %1  0 lshift and 0 rshift ; 

GPIOA_AFRL (read-write)
$00000000 CONSTANT RESET_GPIOA_AFRL 
 %xxxx  28 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL7	Bit 28	 Width 4
 %xxxx  24 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL6	Bit 24	 Width 4
 %xxxx  20 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL5	Bit 20	 Width 4
 %xxxx  16 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL4	Bit 16	 Width 4
 %xxxx  12 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL3	Bit 12	 Width 4
 %xxxx  8 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL2	Bit 8	 Width 4
 %xxxx  4 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL1	Bit 4	 Width 4
 %xxxx  0 lshift GPIOA_AFRL bis!        \ GPIOA_AFRL0	Bit 0	 Width 4
\ GPIOA_AFRL Register BitField Fetch Words  
: GPIOA_AFRL7@ GPIOA_AFRL @ %1111  28 lshift and 28 rshift ; 
: GPIOA_AFRL6@ GPIOA_AFRL @ %1111  24 lshift and 24 rshift ; 
: GPIOA_AFRL5@ GPIOA_AFRL @ %1111  20 lshift and 20 rshift ; 
: GPIOA_AFRL4@ GPIOA_AFRL @ %1111  16 lshift and 16 rshift ; 
: GPIOA_AFRL3@ GPIOA_AFRL @ %1111  12 lshift and 12 rshift ; 
: GPIOA_AFRL2@ GPIOA_AFRL @ %1111  8 lshift and 8 rshift ; 
: GPIOA_AFRL1@ GPIOA_AFRL @ %1111  4 lshift and 4 rshift ; 
: GPIOA_AFRL0@ GPIOA_AFRL @ %1111  0 lshift and 0 rshift ; 

GPIOA_AFRH (read-write)
$00000000 CONSTANT RESET_GPIOA_AFRH 
 %xxxx  28 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH15	Bit 28	 Width 4
 %xxxx  24 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH14	Bit 24	 Width 4
 %xxxx  20 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH13	Bit 20	 Width 4
 %xxxx  16 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH12	Bit 16	 Width 4
 %xxxx  12 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH11	Bit 12	 Width 4
 %xxxx  8 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH10	Bit 8	 Width 4
 %xxxx  4 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH9	Bit 4	 Width 4
 %xxxx  0 lshift GPIOA_AFRH bis!        \ GPIOA_AFRH8	Bit 0	 Width 4
\ GPIOA_AFRH Register BitField Fetch Words  
: GPIOA_AFRH15@ GPIOA_AFRH @ %1111  28 lshift and 28 rshift ; 
: GPIOA_AFRH14@ GPIOA_AFRH @ %1111  24 lshift and 24 rshift ; 
: GPIOA_AFRH13@ GPIOA_AFRH @ %1111  20 lshift and 20 rshift ; 
: GPIOA_AFRH12@ GPIOA_AFRH @ %1111  16 lshift and 16 rshift ; 
: GPIOA_AFRH11@ GPIOA_AFRH @ %1111  12 lshift and 12 rshift ; 
: GPIOA_AFRH10@ GPIOA_AFRH @ %1111  8 lshift and 8 rshift ; 
: GPIOA_AFRH9@ GPIOA_AFRH @ %1111  4 lshift and 4 rshift ; 
: GPIOA_AFRH8@ GPIOA_AFRH @ %1111  0 lshift and 0 rshift ; 

                    
################################### SYSCFG ###################################
SYSCFG_MEMRM (read-write)
$00000000 CONSTANT RESET_SYSCFG_MEMRM 
 %xx  0 lshift SYSCFG_MEMRM bis!        \ SYSCFG_MEM_MODE	Bit 0	 Width 2
\ SYSCFG_MEMRM Register BitField Fetch Words  
: SYSCFG_MEM_MODE@ SYSCFG_MEMRM @ %11  0 lshift and 0 rshift ; 

SYSCFG_PMC (read-write)
$00000000 CONSTANT RESET_SYSCFG_PMC 
 %1  23 lshift SYSCFG_PMC bis!        \ SYSCFG_MII_RMII_SEL	Bit 23	 Width 1
\ SYSCFG_PMC Register BitField Fetch Words  
: SYSCFG_MII_RMII_SEL@ SYSCFG_PMC @ %1  23 lshift and 23 rshift ; 

SYSCFG_EXTICR1 (read-write)
$0000 CONSTANT RESET_SYSCFG_EXTICR1 
 %xxxx  12 lshift SYSCFG_EXTICR1 bis!        \ SYSCFG_EXTI3	Bit 12	 Width 4
 %xxxx  8 lshift SYSCFG_EXTICR1 bis!        \ SYSCFG_EXTI2	Bit 8	 Width 4
 %xxxx  4 lshift SYSCFG_EXTICR1 bis!        \ SYSCFG_EXTI1	Bit 4	 Width 4
 %xxxx  0 lshift SYSCFG_EXTICR1 bis!        \ SYSCFG_EXTI0	Bit 0	 Width 4
\ SYSCFG_EXTICR1 Register BitField Fetch Words  
: SYSCFG_EXTI3@ SYSCFG_EXTICR1 @ %1111  12 lshift and 12 rshift ; 
: SYSCFG_EXTI2@ SYSCFG_EXTICR1 @ %1111  8 lshift and 8 rshift ; 
: SYSCFG_EXTI1@ SYSCFG_EXTICR1 @ %1111  4 lshift and 4 rshift ; 
: SYSCFG_EXTI0@ SYSCFG_EXTICR1 @ %1111  0 lshift and 0 rshift ; 

SYSCFG_EXTICR2 (read-write)
$0000 CONSTANT RESET_SYSCFG_EXTICR2 
 %xxxx  12 lshift SYSCFG_EXTICR2 bis!        \ SYSCFG_EXTI7	Bit 12	 Width 4
 %xxxx  8 lshift SYSCFG_EXTICR2 bis!        \ SYSCFG_EXTI6	Bit 8	 Width 4
 %xxxx  4 lshift SYSCFG_EXTICR2 bis!        \ SYSCFG_EXTI5	Bit 4	 Width 4
 %xxxx  0 lshift SYSCFG_EXTICR2 bis!        \ SYSCFG_EXTI4	Bit 0	 Width 4
\ SYSCFG_EXTICR2 Register BitField Fetch Words  
: SYSCFG_EXTI7@ SYSCFG_EXTICR2 @ %1111  12 lshift and 12 rshift ; 
: SYSCFG_EXTI6@ SYSCFG_EXTICR2 @ %1111  8 lshift and 8 rshift ; 
: SYSCFG_EXTI5@ SYSCFG_EXTICR2 @ %1111  4 lshift and 4 rshift ; 
: SYSCFG_EXTI4@ SYSCFG_EXTICR2 @ %1111  0 lshift and 0 rshift ; 

SYSCFG_EXTICR3 (read-write)
$0000 CONSTANT RESET_SYSCFG_EXTICR3 
 %xxxx  12 lshift SYSCFG_EXTICR3 bis!        \ SYSCFG_EXTI11	Bit 12	 Width 4
 %xxxx  8 lshift SYSCFG_EXTICR3 bis!        \ SYSCFG_EXTI10	Bit 8	 Width 4
 %xxxx  4 lshift SYSCFG_EXTICR3 bis!        \ SYSCFG_EXTI9	Bit 4	 Width 4
 %xxxx  0 lshift SYSCFG_EXTICR3 bis!        \ SYSCFG_EXTI8	Bit 0	 Width 4
\ SYSCFG_EXTICR3 Register BitField Fetch Words  
: SYSCFG_EXTI11@ SYSCFG_EXTICR3 @ %1111  12 lshift and 12 rshift ; 
: SYSCFG_EXTI10@ SYSCFG_EXTICR3 @ %1111  8 lshift and 8 rshift ; 
: SYSCFG_EXTI9@ SYSCFG_EXTICR3 @ %1111  4 lshift and 4 rshift ; 
: SYSCFG_EXTI8@ SYSCFG_EXTICR3 @ %1111  0 lshift and 0 rshift ; 

SYSCFG_EXTICR4 (read-write)
$0000 CONSTANT RESET_SYSCFG_EXTICR4 
 %xxxx  12 lshift SYSCFG_EXTICR4 bis!        \ SYSCFG_EXTI15	Bit 12	 Width 4
 %xxxx  8 lshift SYSCFG_EXTICR4 bis!        \ SYSCFG_EXTI14	Bit 8	 Width 4
 %xxxx  4 lshift SYSCFG_EXTICR4 bis!        \ SYSCFG_EXTI13	Bit 4	 Width 4
 %xxxx  0 lshift SYSCFG_EXTICR4 bis!        \ SYSCFG_EXTI12	Bit 0	 Width 4
\ SYSCFG_EXTICR4 Register BitField Fetch Words  
: SYSCFG_EXTI15@ SYSCFG_EXTICR4 @ %1111  12 lshift and 12 rshift ; 
: SYSCFG_EXTI14@ SYSCFG_EXTICR4 @ %1111  8 lshift and 8 rshift ; 
: SYSCFG_EXTI13@ SYSCFG_EXTICR4 @ %1111  4 lshift and 4 rshift ; 
: SYSCFG_EXTI12@ SYSCFG_EXTICR4 @ %1111  0 lshift and 0 rshift ; 

SYSCFG_CMPCR (read-only)
$00000000 CONSTANT RESET_SYSCFG_CMPCR 
 %1  8 lshift SYSCFG_CMPCR bis!        \ SYSCFG_READY	Bit 8	 Width 1
 %1  0 lshift SYSCFG_CMPCR bis!        \ SYSCFG_CMP_PD	Bit 0	 Width 1
\ SYSCFG_CMPCR Register BitField Fetch Words  
: SYSCFG_READY@ SYSCFG_CMPCR @ %1  8 lshift and 8 rshift ; 
: SYSCFG_CMP_PD@ SYSCFG_CMPCR @ %1  0 lshift and 0 rshift ; 

                    
################################### SPI1 ###################################
SPI1_CR1 (read-write)
$0000 CONSTANT RESET_SPI1_CR1 
 %1  15 lshift SPI1_CR1 bis!        \ SPI1_BIDIMODE	Bit 15	 Width 1
 %1  14 lshift SPI1_CR1 bis!        \ SPI1_BIDIOE	Bit 14	 Width 1
 %1  13 lshift SPI1_CR1 bis!        \ SPI1_CRCEN	Bit 13	 Width 1
 %1  12 lshift SPI1_CR1 bis!        \ SPI1_CRCNEXT	Bit 12	 Width 1
 %1  11 lshift SPI1_CR1 bis!        \ SPI1_DFF	Bit 11	 Width 1
 %1  10 lshift SPI1_CR1 bis!        \ SPI1_RXONLY	Bit 10	 Width 1
 %1  9 lshift SPI1_CR1 bis!        \ SPI1_SSM	Bit 9	 Width 1
 %1  8 lshift SPI1_CR1 bis!        \ SPI1_SSI	Bit 8	 Width 1
 %1  7 lshift SPI1_CR1 bis!        \ SPI1_LSBFIRST	Bit 7	 Width 1
 %1  6 lshift SPI1_CR1 bis!        \ SPI1_SPE	Bit 6	 Width 1
 %xxx  3 lshift SPI1_CR1 bis!        \ SPI1_BR	Bit 3	 Width 3
 %1  2 lshift SPI1_CR1 bis!        \ SPI1_MSTR	Bit 2	 Width 1
 %1  1 lshift SPI1_CR1 bis!        \ SPI1_CPOL	Bit 1	 Width 1
 %1  0 lshift SPI1_CR1 bis!        \ SPI1_CPHA	Bit 0	 Width 1
\ SPI1_CR1 Register BitField Fetch Words  
: SPI1_BIDIMODE@ SPI1_CR1 @ %1  15 lshift and 15 rshift ; 
: SPI1_BIDIOE@ SPI1_CR1 @ %1  14 lshift and 14 rshift ; 
: SPI1_CRCEN@ SPI1_CR1 @ %1  13 lshift and 13 rshift ; 
: SPI1_CRCNEXT@ SPI1_CR1 @ %1  12 lshift and 12 rshift ; 
: SPI1_DFF@ SPI1_CR1 @ %1  11 lshift and 11 rshift ; 
: SPI1_RXONLY@ SPI1_CR1 @ %1  10 lshift and 10 rshift ; 
: SPI1_SSM@ SPI1_CR1 @ %1  9 lshift and 9 rshift ; 
: SPI1_SSI@ SPI1_CR1 @ %1  8 lshift and 8 rshift ; 
: SPI1_LSBFIRST@ SPI1_CR1 @ %1  7 lshift and 7 rshift ; 
: SPI1_SPE@ SPI1_CR1 @ %1  6 lshift and 6 rshift ; 
: SPI1_BR@ SPI1_CR1 @ %111  3 lshift and 3 rshift ; 
: SPI1_MSTR@ SPI1_CR1 @ %1  2 lshift and 2 rshift ; 
: SPI1_CPOL@ SPI1_CR1 @ %1  1 lshift and 1 rshift ; 
: SPI1_CPHA@ SPI1_CR1 @ %1  0 lshift and 0 rshift ; 

SPI1_CR2 (read-write)
$0000 CONSTANT RESET_SPI1_CR2 
 %1  7 lshift SPI1_CR2 bis!        \ SPI1_TXEIE	Bit 7	 Width 1
 %1  6 lshift SPI1_CR2 bis!        \ SPI1_RXNEIE	Bit 6	 Width 1
 %1  5 lshift SPI1_CR2 bis!        \ SPI1_ERRIE	Bit 5	 Width 1
 %1  4 lshift SPI1_CR2 bis!        \ SPI1_FRF	Bit 4	 Width 1
 %1  2 lshift SPI1_CR2 bis!        \ SPI1_SSOE	Bit 2	 Width 1
 %1  1 lshift SPI1_CR2 bis!        \ SPI1_TXDMAEN	Bit 1	 Width 1
 %1  0 lshift SPI1_CR2 bis!        \ SPI1_RXDMAEN	Bit 0	 Width 1
\ SPI1_CR2 Register BitField Fetch Words  
: SPI1_TXEIE@ SPI1_CR2 @ %1  7 lshift and 7 rshift ; 
: SPI1_RXNEIE@ SPI1_CR2 @ %1  6 lshift and 6 rshift ; 
: SPI1_ERRIE@ SPI1_CR2 @ %1  5 lshift and 5 rshift ; 
: SPI1_FRF@ SPI1_CR2 @ %1  4 lshift and 4 rshift ; 
: SPI1_SSOE@ SPI1_CR2 @ %1  2 lshift and 2 rshift ; 
: SPI1_TXDMAEN@ SPI1_CR2 @ %1  1 lshift and 1 rshift ; 
: SPI1_RXDMAEN@ SPI1_CR2 @ %1  0 lshift and 0 rshift ; 

SPI1_SR ()
$0002 CONSTANT RESET_SPI1_SR 
 %1  8 lshift SPI1_SR bis!        \ SPI1_TIFRFE	Bit 8	 Width 1
 %1  7 lshift SPI1_SR bis!        \ SPI1_BSY	Bit 7	 Width 1
 %1  6 lshift SPI1_SR bis!        \ SPI1_OVR	Bit 6	 Width 1
 %1  5 lshift SPI1_SR bis!        \ SPI1_MODF	Bit 5	 Width 1
 %1  4 lshift SPI1_SR bis!        \ SPI1_CRCERR	Bit 4	 Width 1
 %1  3 lshift SPI1_SR bis!        \ SPI1_UDR	Bit 3	 Width 1
 %1  2 lshift SPI1_SR bis!        \ SPI1_CHSIDE	Bit 2	 Width 1
 %1  1 lshift SPI1_SR bis!        \ SPI1_TXE	Bit 1	 Width 1
 %1  0 lshift SPI1_SR bis!        \ SPI1_RXNE	Bit 0	 Width 1
\ SPI1_SR Register BitField Fetch Words  
: SPI1_TIFRFE@ SPI1_SR @ %1  8 lshift and 8 rshift ; 
: SPI1_BSY@ SPI1_SR @ %1  7 lshift and 7 rshift ; 
: SPI1_OVR@ SPI1_SR @ %1  6 lshift and 6 rshift ; 
: SPI1_MODF@ SPI1_SR @ %1  5 lshift and 5 rshift ; 
: SPI1_CRCERR@ SPI1_SR @ %1  4 lshift and 4 rshift ; 
: SPI1_UDR@ SPI1_SR @ %1  3 lshift and 3 rshift ; 
: SPI1_CHSIDE@ SPI1_SR @ %1  2 lshift and 2 rshift ; 
: SPI1_TXE@ SPI1_SR @ %1  1 lshift and 1 rshift ; 
: SPI1_RXNE@ SPI1_SR @ %1  0 lshift and 0 rshift ; 

SPI1_DR (read-write)
$0000 CONSTANT RESET_SPI1_DR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI1_DR bis!        \ SPI1_DR	Bit 0	 Width 16
\ SPI1_DR Register BitField Fetch Words  
: SPI1_DR@ SPI1_DR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI1_CRCPR (read-write)
$0007 CONSTANT RESET_SPI1_CRCPR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI1_CRCPR bis!        \ SPI1_CRCPOLY	Bit 0	 Width 16
\ SPI1_CRCPR Register BitField Fetch Words  
: SPI1_CRCPOLY@ SPI1_CRCPR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI1_RXCRCR (read-only)
$0000 CONSTANT RESET_SPI1_RXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI1_RXCRCR bis!        \ SPI1_RxCRC	Bit 0	 Width 16
\ SPI1_RXCRCR Register BitField Fetch Words  
: SPI1_RxCRC@ SPI1_RXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI1_TXCRCR (read-only)
$0000 CONSTANT RESET_SPI1_TXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI1_TXCRCR bis!        \ SPI1_TxCRC	Bit 0	 Width 16
\ SPI1_TXCRCR Register BitField Fetch Words  
: SPI1_TxCRC@ SPI1_TXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI1_I2SCFGR (read-write)
$0000 CONSTANT RESET_SPI1_I2SCFGR 
 %1  11 lshift SPI1_I2SCFGR bis!        \ SPI1_I2SMOD	Bit 11	 Width 1
 %1  10 lshift SPI1_I2SCFGR bis!        \ SPI1_I2SE	Bit 10	 Width 1
 %xx  8 lshift SPI1_I2SCFGR bis!        \ SPI1_I2SCFG	Bit 8	 Width 2
 %1  7 lshift SPI1_I2SCFGR bis!        \ SPI1_PCMSYNC	Bit 7	 Width 1
 %xx  4 lshift SPI1_I2SCFGR bis!        \ SPI1_I2SSTD	Bit 4	 Width 2
 %1  3 lshift SPI1_I2SCFGR bis!        \ SPI1_CKPOL	Bit 3	 Width 1
 %xx  1 lshift SPI1_I2SCFGR bis!        \ SPI1_DATLEN	Bit 1	 Width 2
 %1  0 lshift SPI1_I2SCFGR bis!        \ SPI1_CHLEN	Bit 0	 Width 1
\ SPI1_I2SCFGR Register BitField Fetch Words  
: SPI1_I2SMOD@ SPI1_I2SCFGR @ %1  11 lshift and 11 rshift ; 
: SPI1_I2SE@ SPI1_I2SCFGR @ %1  10 lshift and 10 rshift ; 
: SPI1_I2SCFG@ SPI1_I2SCFGR @ %11  8 lshift and 8 rshift ; 
: SPI1_PCMSYNC@ SPI1_I2SCFGR @ %1  7 lshift and 7 rshift ; 
: SPI1_I2SSTD@ SPI1_I2SCFGR @ %11  4 lshift and 4 rshift ; 
: SPI1_CKPOL@ SPI1_I2SCFGR @ %1  3 lshift and 3 rshift ; 
: SPI1_DATLEN@ SPI1_I2SCFGR @ %11  1 lshift and 1 rshift ; 
: SPI1_CHLEN@ SPI1_I2SCFGR @ %1  0 lshift and 0 rshift ; 

SPI1_I2SPR (read-write)
00000010 CONSTANT RESET_SPI1_I2SPR 
 %1  9 lshift SPI1_I2SPR bis!        \ SPI1_MCKOE	Bit 9	 Width 1
 %1  8 lshift SPI1_I2SPR bis!        \ SPI1_ODD	Bit 8	 Width 1
 %xxxxxxxx  0 lshift SPI1_I2SPR bis!        \ SPI1_I2SDIV	Bit 0	 Width 8
\ SPI1_I2SPR Register BitField Fetch Words  
: SPI1_MCKOE@ SPI1_I2SPR @ %1  9 lshift and 9 rshift ; 
: SPI1_ODD@ SPI1_I2SPR @ %1  8 lshift and 8 rshift ; 
: SPI1_I2SDIV@ SPI1_I2SPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### SPI2 ###################################
SPI2_CR1 (read-write)
$0000 CONSTANT RESET_SPI2_CR1 
 %1  15 lshift SPI2_CR1 bis!        \ SPI2_BIDIMODE	Bit 15	 Width 1
 %1  14 lshift SPI2_CR1 bis!        \ SPI2_BIDIOE	Bit 14	 Width 1
 %1  13 lshift SPI2_CR1 bis!        \ SPI2_CRCEN	Bit 13	 Width 1
 %1  12 lshift SPI2_CR1 bis!        \ SPI2_CRCNEXT	Bit 12	 Width 1
 %1  11 lshift SPI2_CR1 bis!        \ SPI2_DFF	Bit 11	 Width 1
 %1  10 lshift SPI2_CR1 bis!        \ SPI2_RXONLY	Bit 10	 Width 1
 %1  9 lshift SPI2_CR1 bis!        \ SPI2_SSM	Bit 9	 Width 1
 %1  8 lshift SPI2_CR1 bis!        \ SPI2_SSI	Bit 8	 Width 1
 %1  7 lshift SPI2_CR1 bis!        \ SPI2_LSBFIRST	Bit 7	 Width 1
 %1  6 lshift SPI2_CR1 bis!        \ SPI2_SPE	Bit 6	 Width 1
 %xxx  3 lshift SPI2_CR1 bis!        \ SPI2_BR	Bit 3	 Width 3
 %1  2 lshift SPI2_CR1 bis!        \ SPI2_MSTR	Bit 2	 Width 1
 %1  1 lshift SPI2_CR1 bis!        \ SPI2_CPOL	Bit 1	 Width 1
 %1  0 lshift SPI2_CR1 bis!        \ SPI2_CPHA	Bit 0	 Width 1
\ SPI2_CR1 Register BitField Fetch Words  
: SPI2_BIDIMODE@ SPI2_CR1 @ %1  15 lshift and 15 rshift ; 
: SPI2_BIDIOE@ SPI2_CR1 @ %1  14 lshift and 14 rshift ; 
: SPI2_CRCEN@ SPI2_CR1 @ %1  13 lshift and 13 rshift ; 
: SPI2_CRCNEXT@ SPI2_CR1 @ %1  12 lshift and 12 rshift ; 
: SPI2_DFF@ SPI2_CR1 @ %1  11 lshift and 11 rshift ; 
: SPI2_RXONLY@ SPI2_CR1 @ %1  10 lshift and 10 rshift ; 
: SPI2_SSM@ SPI2_CR1 @ %1  9 lshift and 9 rshift ; 
: SPI2_SSI@ SPI2_CR1 @ %1  8 lshift and 8 rshift ; 
: SPI2_LSBFIRST@ SPI2_CR1 @ %1  7 lshift and 7 rshift ; 
: SPI2_SPE@ SPI2_CR1 @ %1  6 lshift and 6 rshift ; 
: SPI2_BR@ SPI2_CR1 @ %111  3 lshift and 3 rshift ; 
: SPI2_MSTR@ SPI2_CR1 @ %1  2 lshift and 2 rshift ; 
: SPI2_CPOL@ SPI2_CR1 @ %1  1 lshift and 1 rshift ; 
: SPI2_CPHA@ SPI2_CR1 @ %1  0 lshift and 0 rshift ; 

SPI2_CR2 (read-write)
$0000 CONSTANT RESET_SPI2_CR2 
 %1  7 lshift SPI2_CR2 bis!        \ SPI2_TXEIE	Bit 7	 Width 1
 %1  6 lshift SPI2_CR2 bis!        \ SPI2_RXNEIE	Bit 6	 Width 1
 %1  5 lshift SPI2_CR2 bis!        \ SPI2_ERRIE	Bit 5	 Width 1
 %1  4 lshift SPI2_CR2 bis!        \ SPI2_FRF	Bit 4	 Width 1
 %1  2 lshift SPI2_CR2 bis!        \ SPI2_SSOE	Bit 2	 Width 1
 %1  1 lshift SPI2_CR2 bis!        \ SPI2_TXDMAEN	Bit 1	 Width 1
 %1  0 lshift SPI2_CR2 bis!        \ SPI2_RXDMAEN	Bit 0	 Width 1
\ SPI2_CR2 Register BitField Fetch Words  
: SPI2_TXEIE@ SPI2_CR2 @ %1  7 lshift and 7 rshift ; 
: SPI2_RXNEIE@ SPI2_CR2 @ %1  6 lshift and 6 rshift ; 
: SPI2_ERRIE@ SPI2_CR2 @ %1  5 lshift and 5 rshift ; 
: SPI2_FRF@ SPI2_CR2 @ %1  4 lshift and 4 rshift ; 
: SPI2_SSOE@ SPI2_CR2 @ %1  2 lshift and 2 rshift ; 
: SPI2_TXDMAEN@ SPI2_CR2 @ %1  1 lshift and 1 rshift ; 
: SPI2_RXDMAEN@ SPI2_CR2 @ %1  0 lshift and 0 rshift ; 

SPI2_SR ()
$0002 CONSTANT RESET_SPI2_SR 
 %1  8 lshift SPI2_SR bis!        \ SPI2_TIFRFE	Bit 8	 Width 1
 %1  7 lshift SPI2_SR bis!        \ SPI2_BSY	Bit 7	 Width 1
 %1  6 lshift SPI2_SR bis!        \ SPI2_OVR	Bit 6	 Width 1
 %1  5 lshift SPI2_SR bis!        \ SPI2_MODF	Bit 5	 Width 1
 %1  4 lshift SPI2_SR bis!        \ SPI2_CRCERR	Bit 4	 Width 1
 %1  3 lshift SPI2_SR bis!        \ SPI2_UDR	Bit 3	 Width 1
 %1  2 lshift SPI2_SR bis!        \ SPI2_CHSIDE	Bit 2	 Width 1
 %1  1 lshift SPI2_SR bis!        \ SPI2_TXE	Bit 1	 Width 1
 %1  0 lshift SPI2_SR bis!        \ SPI2_RXNE	Bit 0	 Width 1
\ SPI2_SR Register BitField Fetch Words  
: SPI2_TIFRFE@ SPI2_SR @ %1  8 lshift and 8 rshift ; 
: SPI2_BSY@ SPI2_SR @ %1  7 lshift and 7 rshift ; 
: SPI2_OVR@ SPI2_SR @ %1  6 lshift and 6 rshift ; 
: SPI2_MODF@ SPI2_SR @ %1  5 lshift and 5 rshift ; 
: SPI2_CRCERR@ SPI2_SR @ %1  4 lshift and 4 rshift ; 
: SPI2_UDR@ SPI2_SR @ %1  3 lshift and 3 rshift ; 
: SPI2_CHSIDE@ SPI2_SR @ %1  2 lshift and 2 rshift ; 
: SPI2_TXE@ SPI2_SR @ %1  1 lshift and 1 rshift ; 
: SPI2_RXNE@ SPI2_SR @ %1  0 lshift and 0 rshift ; 

SPI2_DR (read-write)
$0000 CONSTANT RESET_SPI2_DR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI2_DR bis!        \ SPI2_DR	Bit 0	 Width 16
\ SPI2_DR Register BitField Fetch Words  
: SPI2_DR@ SPI2_DR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI2_CRCPR (read-write)
$0007 CONSTANT RESET_SPI2_CRCPR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI2_CRCPR bis!        \ SPI2_CRCPOLY	Bit 0	 Width 16
\ SPI2_CRCPR Register BitField Fetch Words  
: SPI2_CRCPOLY@ SPI2_CRCPR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI2_RXCRCR (read-only)
$0000 CONSTANT RESET_SPI2_RXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI2_RXCRCR bis!        \ SPI2_RxCRC	Bit 0	 Width 16
\ SPI2_RXCRCR Register BitField Fetch Words  
: SPI2_RxCRC@ SPI2_RXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI2_TXCRCR (read-only)
$0000 CONSTANT RESET_SPI2_TXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI2_TXCRCR bis!        \ SPI2_TxCRC	Bit 0	 Width 16
\ SPI2_TXCRCR Register BitField Fetch Words  
: SPI2_TxCRC@ SPI2_TXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI2_I2SCFGR (read-write)
$0000 CONSTANT RESET_SPI2_I2SCFGR 
 %1  11 lshift SPI2_I2SCFGR bis!        \ SPI2_I2SMOD	Bit 11	 Width 1
 %1  10 lshift SPI2_I2SCFGR bis!        \ SPI2_I2SE	Bit 10	 Width 1
 %xx  8 lshift SPI2_I2SCFGR bis!        \ SPI2_I2SCFG	Bit 8	 Width 2
 %1  7 lshift SPI2_I2SCFGR bis!        \ SPI2_PCMSYNC	Bit 7	 Width 1
 %xx  4 lshift SPI2_I2SCFGR bis!        \ SPI2_I2SSTD	Bit 4	 Width 2
 %1  3 lshift SPI2_I2SCFGR bis!        \ SPI2_CKPOL	Bit 3	 Width 1
 %xx  1 lshift SPI2_I2SCFGR bis!        \ SPI2_DATLEN	Bit 1	 Width 2
 %1  0 lshift SPI2_I2SCFGR bis!        \ SPI2_CHLEN	Bit 0	 Width 1
\ SPI2_I2SCFGR Register BitField Fetch Words  
: SPI2_I2SMOD@ SPI2_I2SCFGR @ %1  11 lshift and 11 rshift ; 
: SPI2_I2SE@ SPI2_I2SCFGR @ %1  10 lshift and 10 rshift ; 
: SPI2_I2SCFG@ SPI2_I2SCFGR @ %11  8 lshift and 8 rshift ; 
: SPI2_PCMSYNC@ SPI2_I2SCFGR @ %1  7 lshift and 7 rshift ; 
: SPI2_I2SSTD@ SPI2_I2SCFGR @ %11  4 lshift and 4 rshift ; 
: SPI2_CKPOL@ SPI2_I2SCFGR @ %1  3 lshift and 3 rshift ; 
: SPI2_DATLEN@ SPI2_I2SCFGR @ %11  1 lshift and 1 rshift ; 
: SPI2_CHLEN@ SPI2_I2SCFGR @ %1  0 lshift and 0 rshift ; 

SPI2_I2SPR (read-write)
00000010 CONSTANT RESET_SPI2_I2SPR 
 %1  9 lshift SPI2_I2SPR bis!        \ SPI2_MCKOE	Bit 9	 Width 1
 %1  8 lshift SPI2_I2SPR bis!        \ SPI2_ODD	Bit 8	 Width 1
 %xxxxxxxx  0 lshift SPI2_I2SPR bis!        \ SPI2_I2SDIV	Bit 0	 Width 8
\ SPI2_I2SPR Register BitField Fetch Words  
: SPI2_MCKOE@ SPI2_I2SPR @ %1  9 lshift and 9 rshift ; 
: SPI2_ODD@ SPI2_I2SPR @ %1  8 lshift and 8 rshift ; 
: SPI2_I2SDIV@ SPI2_I2SPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### SPI3 ###################################
SPI3_CR1 (read-write)
$0000 CONSTANT RESET_SPI3_CR1 
 %1  15 lshift SPI3_CR1 bis!        \ SPI3_BIDIMODE	Bit 15	 Width 1
 %1  14 lshift SPI3_CR1 bis!        \ SPI3_BIDIOE	Bit 14	 Width 1
 %1  13 lshift SPI3_CR1 bis!        \ SPI3_CRCEN	Bit 13	 Width 1
 %1  12 lshift SPI3_CR1 bis!        \ SPI3_CRCNEXT	Bit 12	 Width 1
 %1  11 lshift SPI3_CR1 bis!        \ SPI3_DFF	Bit 11	 Width 1
 %1  10 lshift SPI3_CR1 bis!        \ SPI3_RXONLY	Bit 10	 Width 1
 %1  9 lshift SPI3_CR1 bis!        \ SPI3_SSM	Bit 9	 Width 1
 %1  8 lshift SPI3_CR1 bis!        \ SPI3_SSI	Bit 8	 Width 1
 %1  7 lshift SPI3_CR1 bis!        \ SPI3_LSBFIRST	Bit 7	 Width 1
 %1  6 lshift SPI3_CR1 bis!        \ SPI3_SPE	Bit 6	 Width 1
 %xxx  3 lshift SPI3_CR1 bis!        \ SPI3_BR	Bit 3	 Width 3
 %1  2 lshift SPI3_CR1 bis!        \ SPI3_MSTR	Bit 2	 Width 1
 %1  1 lshift SPI3_CR1 bis!        \ SPI3_CPOL	Bit 1	 Width 1
 %1  0 lshift SPI3_CR1 bis!        \ SPI3_CPHA	Bit 0	 Width 1
\ SPI3_CR1 Register BitField Fetch Words  
: SPI3_BIDIMODE@ SPI3_CR1 @ %1  15 lshift and 15 rshift ; 
: SPI3_BIDIOE@ SPI3_CR1 @ %1  14 lshift and 14 rshift ; 
: SPI3_CRCEN@ SPI3_CR1 @ %1  13 lshift and 13 rshift ; 
: SPI3_CRCNEXT@ SPI3_CR1 @ %1  12 lshift and 12 rshift ; 
: SPI3_DFF@ SPI3_CR1 @ %1  11 lshift and 11 rshift ; 
: SPI3_RXONLY@ SPI3_CR1 @ %1  10 lshift and 10 rshift ; 
: SPI3_SSM@ SPI3_CR1 @ %1  9 lshift and 9 rshift ; 
: SPI3_SSI@ SPI3_CR1 @ %1  8 lshift and 8 rshift ; 
: SPI3_LSBFIRST@ SPI3_CR1 @ %1  7 lshift and 7 rshift ; 
: SPI3_SPE@ SPI3_CR1 @ %1  6 lshift and 6 rshift ; 
: SPI3_BR@ SPI3_CR1 @ %111  3 lshift and 3 rshift ; 
: SPI3_MSTR@ SPI3_CR1 @ %1  2 lshift and 2 rshift ; 
: SPI3_CPOL@ SPI3_CR1 @ %1  1 lshift and 1 rshift ; 
: SPI3_CPHA@ SPI3_CR1 @ %1  0 lshift and 0 rshift ; 

SPI3_CR2 (read-write)
$0000 CONSTANT RESET_SPI3_CR2 
 %1  7 lshift SPI3_CR2 bis!        \ SPI3_TXEIE	Bit 7	 Width 1
 %1  6 lshift SPI3_CR2 bis!        \ SPI3_RXNEIE	Bit 6	 Width 1
 %1  5 lshift SPI3_CR2 bis!        \ SPI3_ERRIE	Bit 5	 Width 1
 %1  4 lshift SPI3_CR2 bis!        \ SPI3_FRF	Bit 4	 Width 1
 %1  2 lshift SPI3_CR2 bis!        \ SPI3_SSOE	Bit 2	 Width 1
 %1  1 lshift SPI3_CR2 bis!        \ SPI3_TXDMAEN	Bit 1	 Width 1
 %1  0 lshift SPI3_CR2 bis!        \ SPI3_RXDMAEN	Bit 0	 Width 1
\ SPI3_CR2 Register BitField Fetch Words  
: SPI3_TXEIE@ SPI3_CR2 @ %1  7 lshift and 7 rshift ; 
: SPI3_RXNEIE@ SPI3_CR2 @ %1  6 lshift and 6 rshift ; 
: SPI3_ERRIE@ SPI3_CR2 @ %1  5 lshift and 5 rshift ; 
: SPI3_FRF@ SPI3_CR2 @ %1  4 lshift and 4 rshift ; 
: SPI3_SSOE@ SPI3_CR2 @ %1  2 lshift and 2 rshift ; 
: SPI3_TXDMAEN@ SPI3_CR2 @ %1  1 lshift and 1 rshift ; 
: SPI3_RXDMAEN@ SPI3_CR2 @ %1  0 lshift and 0 rshift ; 

SPI3_SR ()
$0002 CONSTANT RESET_SPI3_SR 
 %1  8 lshift SPI3_SR bis!        \ SPI3_TIFRFE	Bit 8	 Width 1
 %1  7 lshift SPI3_SR bis!        \ SPI3_BSY	Bit 7	 Width 1
 %1  6 lshift SPI3_SR bis!        \ SPI3_OVR	Bit 6	 Width 1
 %1  5 lshift SPI3_SR bis!        \ SPI3_MODF	Bit 5	 Width 1
 %1  4 lshift SPI3_SR bis!        \ SPI3_CRCERR	Bit 4	 Width 1
 %1  3 lshift SPI3_SR bis!        \ SPI3_UDR	Bit 3	 Width 1
 %1  2 lshift SPI3_SR bis!        \ SPI3_CHSIDE	Bit 2	 Width 1
 %1  1 lshift SPI3_SR bis!        \ SPI3_TXE	Bit 1	 Width 1
 %1  0 lshift SPI3_SR bis!        \ SPI3_RXNE	Bit 0	 Width 1
\ SPI3_SR Register BitField Fetch Words  
: SPI3_TIFRFE@ SPI3_SR @ %1  8 lshift and 8 rshift ; 
: SPI3_BSY@ SPI3_SR @ %1  7 lshift and 7 rshift ; 
: SPI3_OVR@ SPI3_SR @ %1  6 lshift and 6 rshift ; 
: SPI3_MODF@ SPI3_SR @ %1  5 lshift and 5 rshift ; 
: SPI3_CRCERR@ SPI3_SR @ %1  4 lshift and 4 rshift ; 
: SPI3_UDR@ SPI3_SR @ %1  3 lshift and 3 rshift ; 
: SPI3_CHSIDE@ SPI3_SR @ %1  2 lshift and 2 rshift ; 
: SPI3_TXE@ SPI3_SR @ %1  1 lshift and 1 rshift ; 
: SPI3_RXNE@ SPI3_SR @ %1  0 lshift and 0 rshift ; 

SPI3_DR (read-write)
$0000 CONSTANT RESET_SPI3_DR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI3_DR bis!        \ SPI3_DR	Bit 0	 Width 16
\ SPI3_DR Register BitField Fetch Words  
: SPI3_DR@ SPI3_DR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI3_CRCPR (read-write)
$0007 CONSTANT RESET_SPI3_CRCPR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI3_CRCPR bis!        \ SPI3_CRCPOLY	Bit 0	 Width 16
\ SPI3_CRCPR Register BitField Fetch Words  
: SPI3_CRCPOLY@ SPI3_CRCPR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI3_RXCRCR (read-only)
$0000 CONSTANT RESET_SPI3_RXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI3_RXCRCR bis!        \ SPI3_RxCRC	Bit 0	 Width 16
\ SPI3_RXCRCR Register BitField Fetch Words  
: SPI3_RxCRC@ SPI3_RXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI3_TXCRCR (read-only)
$0000 CONSTANT RESET_SPI3_TXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift SPI3_TXCRCR bis!        \ SPI3_TxCRC	Bit 0	 Width 16
\ SPI3_TXCRCR Register BitField Fetch Words  
: SPI3_TxCRC@ SPI3_TXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

SPI3_I2SCFGR (read-write)
$0000 CONSTANT RESET_SPI3_I2SCFGR 
 %1  11 lshift SPI3_I2SCFGR bis!        \ SPI3_I2SMOD	Bit 11	 Width 1
 %1  10 lshift SPI3_I2SCFGR bis!        \ SPI3_I2SE	Bit 10	 Width 1
 %xx  8 lshift SPI3_I2SCFGR bis!        \ SPI3_I2SCFG	Bit 8	 Width 2
 %1  7 lshift SPI3_I2SCFGR bis!        \ SPI3_PCMSYNC	Bit 7	 Width 1
 %xx  4 lshift SPI3_I2SCFGR bis!        \ SPI3_I2SSTD	Bit 4	 Width 2
 %1  3 lshift SPI3_I2SCFGR bis!        \ SPI3_CKPOL	Bit 3	 Width 1
 %xx  1 lshift SPI3_I2SCFGR bis!        \ SPI3_DATLEN	Bit 1	 Width 2
 %1  0 lshift SPI3_I2SCFGR bis!        \ SPI3_CHLEN	Bit 0	 Width 1
\ SPI3_I2SCFGR Register BitField Fetch Words  
: SPI3_I2SMOD@ SPI3_I2SCFGR @ %1  11 lshift and 11 rshift ; 
: SPI3_I2SE@ SPI3_I2SCFGR @ %1  10 lshift and 10 rshift ; 
: SPI3_I2SCFG@ SPI3_I2SCFGR @ %11  8 lshift and 8 rshift ; 
: SPI3_PCMSYNC@ SPI3_I2SCFGR @ %1  7 lshift and 7 rshift ; 
: SPI3_I2SSTD@ SPI3_I2SCFGR @ %11  4 lshift and 4 rshift ; 
: SPI3_CKPOL@ SPI3_I2SCFGR @ %1  3 lshift and 3 rshift ; 
: SPI3_DATLEN@ SPI3_I2SCFGR @ %11  1 lshift and 1 rshift ; 
: SPI3_CHLEN@ SPI3_I2SCFGR @ %1  0 lshift and 0 rshift ; 

SPI3_I2SPR (read-write)
00000010 CONSTANT RESET_SPI3_I2SPR 
 %1  9 lshift SPI3_I2SPR bis!        \ SPI3_MCKOE	Bit 9	 Width 1
 %1  8 lshift SPI3_I2SPR bis!        \ SPI3_ODD	Bit 8	 Width 1
 %xxxxxxxx  0 lshift SPI3_I2SPR bis!        \ SPI3_I2SDIV	Bit 0	 Width 8
\ SPI3_I2SPR Register BitField Fetch Words  
: SPI3_MCKOE@ SPI3_I2SPR @ %1  9 lshift and 9 rshift ; 
: SPI3_ODD@ SPI3_I2SPR @ %1  8 lshift and 8 rshift ; 
: SPI3_I2SDIV@ SPI3_I2SPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### I2S2ext ###################################
I2S2ext_CR1 (read-write)
$0000 CONSTANT RESET_I2S2ext_CR1 
 %1  15 lshift I2S2ext_CR1 bis!        \ I2S2ext_BIDIMODE	Bit 15	 Width 1
 %1  14 lshift I2S2ext_CR1 bis!        \ I2S2ext_BIDIOE	Bit 14	 Width 1
 %1  13 lshift I2S2ext_CR1 bis!        \ I2S2ext_CRCEN	Bit 13	 Width 1
 %1  12 lshift I2S2ext_CR1 bis!        \ I2S2ext_CRCNEXT	Bit 12	 Width 1
 %1  11 lshift I2S2ext_CR1 bis!        \ I2S2ext_DFF	Bit 11	 Width 1
 %1  10 lshift I2S2ext_CR1 bis!        \ I2S2ext_RXONLY	Bit 10	 Width 1
 %1  9 lshift I2S2ext_CR1 bis!        \ I2S2ext_SSM	Bit 9	 Width 1
 %1  8 lshift I2S2ext_CR1 bis!        \ I2S2ext_SSI	Bit 8	 Width 1
 %1  7 lshift I2S2ext_CR1 bis!        \ I2S2ext_LSBFIRST	Bit 7	 Width 1
 %1  6 lshift I2S2ext_CR1 bis!        \ I2S2ext_SPE	Bit 6	 Width 1
 %xxx  3 lshift I2S2ext_CR1 bis!        \ I2S2ext_BR	Bit 3	 Width 3
 %1  2 lshift I2S2ext_CR1 bis!        \ I2S2ext_MSTR	Bit 2	 Width 1
 %1  1 lshift I2S2ext_CR1 bis!        \ I2S2ext_CPOL	Bit 1	 Width 1
 %1  0 lshift I2S2ext_CR1 bis!        \ I2S2ext_CPHA	Bit 0	 Width 1
\ I2S2ext_CR1 Register BitField Fetch Words  
: I2S2ext_BIDIMODE@ I2S2ext_CR1 @ %1  15 lshift and 15 rshift ; 
: I2S2ext_BIDIOE@ I2S2ext_CR1 @ %1  14 lshift and 14 rshift ; 
: I2S2ext_CRCEN@ I2S2ext_CR1 @ %1  13 lshift and 13 rshift ; 
: I2S2ext_CRCNEXT@ I2S2ext_CR1 @ %1  12 lshift and 12 rshift ; 
: I2S2ext_DFF@ I2S2ext_CR1 @ %1  11 lshift and 11 rshift ; 
: I2S2ext_RXONLY@ I2S2ext_CR1 @ %1  10 lshift and 10 rshift ; 
: I2S2ext_SSM@ I2S2ext_CR1 @ %1  9 lshift and 9 rshift ; 
: I2S2ext_SSI@ I2S2ext_CR1 @ %1  8 lshift and 8 rshift ; 
: I2S2ext_LSBFIRST@ I2S2ext_CR1 @ %1  7 lshift and 7 rshift ; 
: I2S2ext_SPE@ I2S2ext_CR1 @ %1  6 lshift and 6 rshift ; 
: I2S2ext_BR@ I2S2ext_CR1 @ %111  3 lshift and 3 rshift ; 
: I2S2ext_MSTR@ I2S2ext_CR1 @ %1  2 lshift and 2 rshift ; 
: I2S2ext_CPOL@ I2S2ext_CR1 @ %1  1 lshift and 1 rshift ; 
: I2S2ext_CPHA@ I2S2ext_CR1 @ %1  0 lshift and 0 rshift ; 

I2S2ext_CR2 (read-write)
$0000 CONSTANT RESET_I2S2ext_CR2 
 %1  7 lshift I2S2ext_CR2 bis!        \ I2S2ext_TXEIE	Bit 7	 Width 1
 %1  6 lshift I2S2ext_CR2 bis!        \ I2S2ext_RXNEIE	Bit 6	 Width 1
 %1  5 lshift I2S2ext_CR2 bis!        \ I2S2ext_ERRIE	Bit 5	 Width 1
 %1  4 lshift I2S2ext_CR2 bis!        \ I2S2ext_FRF	Bit 4	 Width 1
 %1  2 lshift I2S2ext_CR2 bis!        \ I2S2ext_SSOE	Bit 2	 Width 1
 %1  1 lshift I2S2ext_CR2 bis!        \ I2S2ext_TXDMAEN	Bit 1	 Width 1
 %1  0 lshift I2S2ext_CR2 bis!        \ I2S2ext_RXDMAEN	Bit 0	 Width 1
\ I2S2ext_CR2 Register BitField Fetch Words  
: I2S2ext_TXEIE@ I2S2ext_CR2 @ %1  7 lshift and 7 rshift ; 
: I2S2ext_RXNEIE@ I2S2ext_CR2 @ %1  6 lshift and 6 rshift ; 
: I2S2ext_ERRIE@ I2S2ext_CR2 @ %1  5 lshift and 5 rshift ; 
: I2S2ext_FRF@ I2S2ext_CR2 @ %1  4 lshift and 4 rshift ; 
: I2S2ext_SSOE@ I2S2ext_CR2 @ %1  2 lshift and 2 rshift ; 
: I2S2ext_TXDMAEN@ I2S2ext_CR2 @ %1  1 lshift and 1 rshift ; 
: I2S2ext_RXDMAEN@ I2S2ext_CR2 @ %1  0 lshift and 0 rshift ; 

I2S2ext_SR ()
$0002 CONSTANT RESET_I2S2ext_SR 
 %1  8 lshift I2S2ext_SR bis!        \ I2S2ext_TIFRFE	Bit 8	 Width 1
 %1  7 lshift I2S2ext_SR bis!        \ I2S2ext_BSY	Bit 7	 Width 1
 %1  6 lshift I2S2ext_SR bis!        \ I2S2ext_OVR	Bit 6	 Width 1
 %1  5 lshift I2S2ext_SR bis!        \ I2S2ext_MODF	Bit 5	 Width 1
 %1  4 lshift I2S2ext_SR bis!        \ I2S2ext_CRCERR	Bit 4	 Width 1
 %1  3 lshift I2S2ext_SR bis!        \ I2S2ext_UDR	Bit 3	 Width 1
 %1  2 lshift I2S2ext_SR bis!        \ I2S2ext_CHSIDE	Bit 2	 Width 1
 %1  1 lshift I2S2ext_SR bis!        \ I2S2ext_TXE	Bit 1	 Width 1
 %1  0 lshift I2S2ext_SR bis!        \ I2S2ext_RXNE	Bit 0	 Width 1
\ I2S2ext_SR Register BitField Fetch Words  
: I2S2ext_TIFRFE@ I2S2ext_SR @ %1  8 lshift and 8 rshift ; 
: I2S2ext_BSY@ I2S2ext_SR @ %1  7 lshift and 7 rshift ; 
: I2S2ext_OVR@ I2S2ext_SR @ %1  6 lshift and 6 rshift ; 
: I2S2ext_MODF@ I2S2ext_SR @ %1  5 lshift and 5 rshift ; 
: I2S2ext_CRCERR@ I2S2ext_SR @ %1  4 lshift and 4 rshift ; 
: I2S2ext_UDR@ I2S2ext_SR @ %1  3 lshift and 3 rshift ; 
: I2S2ext_CHSIDE@ I2S2ext_SR @ %1  2 lshift and 2 rshift ; 
: I2S2ext_TXE@ I2S2ext_SR @ %1  1 lshift and 1 rshift ; 
: I2S2ext_RXNE@ I2S2ext_SR @ %1  0 lshift and 0 rshift ; 

I2S2ext_DR (read-write)
$0000 CONSTANT RESET_I2S2ext_DR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S2ext_DR bis!        \ I2S2ext_DR	Bit 0	 Width 16
\ I2S2ext_DR Register BitField Fetch Words  
: I2S2ext_DR@ I2S2ext_DR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S2ext_CRCPR (read-write)
$0007 CONSTANT RESET_I2S2ext_CRCPR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S2ext_CRCPR bis!        \ I2S2ext_CRCPOLY	Bit 0	 Width 16
\ I2S2ext_CRCPR Register BitField Fetch Words  
: I2S2ext_CRCPOLY@ I2S2ext_CRCPR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S2ext_RXCRCR (read-only)
$0000 CONSTANT RESET_I2S2ext_RXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S2ext_RXCRCR bis!        \ I2S2ext_RxCRC	Bit 0	 Width 16
\ I2S2ext_RXCRCR Register BitField Fetch Words  
: I2S2ext_RxCRC@ I2S2ext_RXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S2ext_TXCRCR (read-only)
$0000 CONSTANT RESET_I2S2ext_TXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S2ext_TXCRCR bis!        \ I2S2ext_TxCRC	Bit 0	 Width 16
\ I2S2ext_TXCRCR Register BitField Fetch Words  
: I2S2ext_TxCRC@ I2S2ext_TXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S2ext_I2SCFGR (read-write)
$0000 CONSTANT RESET_I2S2ext_I2SCFGR 
 %1  11 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_I2SMOD	Bit 11	 Width 1
 %1  10 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_I2SE	Bit 10	 Width 1
 %xx  8 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_I2SCFG	Bit 8	 Width 2
 %1  7 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_PCMSYNC	Bit 7	 Width 1
 %xx  4 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_I2SSTD	Bit 4	 Width 2
 %1  3 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_CKPOL	Bit 3	 Width 1
 %xx  1 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_DATLEN	Bit 1	 Width 2
 %1  0 lshift I2S2ext_I2SCFGR bis!        \ I2S2ext_CHLEN	Bit 0	 Width 1
\ I2S2ext_I2SCFGR Register BitField Fetch Words  
: I2S2ext_I2SMOD@ I2S2ext_I2SCFGR @ %1  11 lshift and 11 rshift ; 
: I2S2ext_I2SE@ I2S2ext_I2SCFGR @ %1  10 lshift and 10 rshift ; 
: I2S2ext_I2SCFG@ I2S2ext_I2SCFGR @ %11  8 lshift and 8 rshift ; 
: I2S2ext_PCMSYNC@ I2S2ext_I2SCFGR @ %1  7 lshift and 7 rshift ; 
: I2S2ext_I2SSTD@ I2S2ext_I2SCFGR @ %11  4 lshift and 4 rshift ; 
: I2S2ext_CKPOL@ I2S2ext_I2SCFGR @ %1  3 lshift and 3 rshift ; 
: I2S2ext_DATLEN@ I2S2ext_I2SCFGR @ %11  1 lshift and 1 rshift ; 
: I2S2ext_CHLEN@ I2S2ext_I2SCFGR @ %1  0 lshift and 0 rshift ; 

I2S2ext_I2SPR (read-write)
00000010 CONSTANT RESET_I2S2ext_I2SPR 
 %1  9 lshift I2S2ext_I2SPR bis!        \ I2S2ext_MCKOE	Bit 9	 Width 1
 %1  8 lshift I2S2ext_I2SPR bis!        \ I2S2ext_ODD	Bit 8	 Width 1
 %xxxxxxxx  0 lshift I2S2ext_I2SPR bis!        \ I2S2ext_I2SDIV	Bit 0	 Width 8
\ I2S2ext_I2SPR Register BitField Fetch Words  
: I2S2ext_MCKOE@ I2S2ext_I2SPR @ %1  9 lshift and 9 rshift ; 
: I2S2ext_ODD@ I2S2ext_I2SPR @ %1  8 lshift and 8 rshift ; 
: I2S2ext_I2SDIV@ I2S2ext_I2SPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### I2S3ext ###################################
I2S3ext_CR1 (read-write)
$0000 CONSTANT RESET_I2S3ext_CR1 
 %1  15 lshift I2S3ext_CR1 bis!        \ I2S3ext_BIDIMODE	Bit 15	 Width 1
 %1  14 lshift I2S3ext_CR1 bis!        \ I2S3ext_BIDIOE	Bit 14	 Width 1
 %1  13 lshift I2S3ext_CR1 bis!        \ I2S3ext_CRCEN	Bit 13	 Width 1
 %1  12 lshift I2S3ext_CR1 bis!        \ I2S3ext_CRCNEXT	Bit 12	 Width 1
 %1  11 lshift I2S3ext_CR1 bis!        \ I2S3ext_DFF	Bit 11	 Width 1
 %1  10 lshift I2S3ext_CR1 bis!        \ I2S3ext_RXONLY	Bit 10	 Width 1
 %1  9 lshift I2S3ext_CR1 bis!        \ I2S3ext_SSM	Bit 9	 Width 1
 %1  8 lshift I2S3ext_CR1 bis!        \ I2S3ext_SSI	Bit 8	 Width 1
 %1  7 lshift I2S3ext_CR1 bis!        \ I2S3ext_LSBFIRST	Bit 7	 Width 1
 %1  6 lshift I2S3ext_CR1 bis!        \ I2S3ext_SPE	Bit 6	 Width 1
 %xxx  3 lshift I2S3ext_CR1 bis!        \ I2S3ext_BR	Bit 3	 Width 3
 %1  2 lshift I2S3ext_CR1 bis!        \ I2S3ext_MSTR	Bit 2	 Width 1
 %1  1 lshift I2S3ext_CR1 bis!        \ I2S3ext_CPOL	Bit 1	 Width 1
 %1  0 lshift I2S3ext_CR1 bis!        \ I2S3ext_CPHA	Bit 0	 Width 1
\ I2S3ext_CR1 Register BitField Fetch Words  
: I2S3ext_BIDIMODE@ I2S3ext_CR1 @ %1  15 lshift and 15 rshift ; 
: I2S3ext_BIDIOE@ I2S3ext_CR1 @ %1  14 lshift and 14 rshift ; 
: I2S3ext_CRCEN@ I2S3ext_CR1 @ %1  13 lshift and 13 rshift ; 
: I2S3ext_CRCNEXT@ I2S3ext_CR1 @ %1  12 lshift and 12 rshift ; 
: I2S3ext_DFF@ I2S3ext_CR1 @ %1  11 lshift and 11 rshift ; 
: I2S3ext_RXONLY@ I2S3ext_CR1 @ %1  10 lshift and 10 rshift ; 
: I2S3ext_SSM@ I2S3ext_CR1 @ %1  9 lshift and 9 rshift ; 
: I2S3ext_SSI@ I2S3ext_CR1 @ %1  8 lshift and 8 rshift ; 
: I2S3ext_LSBFIRST@ I2S3ext_CR1 @ %1  7 lshift and 7 rshift ; 
: I2S3ext_SPE@ I2S3ext_CR1 @ %1  6 lshift and 6 rshift ; 
: I2S3ext_BR@ I2S3ext_CR1 @ %111  3 lshift and 3 rshift ; 
: I2S3ext_MSTR@ I2S3ext_CR1 @ %1  2 lshift and 2 rshift ; 
: I2S3ext_CPOL@ I2S3ext_CR1 @ %1  1 lshift and 1 rshift ; 
: I2S3ext_CPHA@ I2S3ext_CR1 @ %1  0 lshift and 0 rshift ; 

I2S3ext_CR2 (read-write)
$0000 CONSTANT RESET_I2S3ext_CR2 
 %1  7 lshift I2S3ext_CR2 bis!        \ I2S3ext_TXEIE	Bit 7	 Width 1
 %1  6 lshift I2S3ext_CR2 bis!        \ I2S3ext_RXNEIE	Bit 6	 Width 1
 %1  5 lshift I2S3ext_CR2 bis!        \ I2S3ext_ERRIE	Bit 5	 Width 1
 %1  4 lshift I2S3ext_CR2 bis!        \ I2S3ext_FRF	Bit 4	 Width 1
 %1  2 lshift I2S3ext_CR2 bis!        \ I2S3ext_SSOE	Bit 2	 Width 1
 %1  1 lshift I2S3ext_CR2 bis!        \ I2S3ext_TXDMAEN	Bit 1	 Width 1
 %1  0 lshift I2S3ext_CR2 bis!        \ I2S3ext_RXDMAEN	Bit 0	 Width 1
\ I2S3ext_CR2 Register BitField Fetch Words  
: I2S3ext_TXEIE@ I2S3ext_CR2 @ %1  7 lshift and 7 rshift ; 
: I2S3ext_RXNEIE@ I2S3ext_CR2 @ %1  6 lshift and 6 rshift ; 
: I2S3ext_ERRIE@ I2S3ext_CR2 @ %1  5 lshift and 5 rshift ; 
: I2S3ext_FRF@ I2S3ext_CR2 @ %1  4 lshift and 4 rshift ; 
: I2S3ext_SSOE@ I2S3ext_CR2 @ %1  2 lshift and 2 rshift ; 
: I2S3ext_TXDMAEN@ I2S3ext_CR2 @ %1  1 lshift and 1 rshift ; 
: I2S3ext_RXDMAEN@ I2S3ext_CR2 @ %1  0 lshift and 0 rshift ; 

I2S3ext_SR ()
$0002 CONSTANT RESET_I2S3ext_SR 
 %1  8 lshift I2S3ext_SR bis!        \ I2S3ext_TIFRFE	Bit 8	 Width 1
 %1  7 lshift I2S3ext_SR bis!        \ I2S3ext_BSY	Bit 7	 Width 1
 %1  6 lshift I2S3ext_SR bis!        \ I2S3ext_OVR	Bit 6	 Width 1
 %1  5 lshift I2S3ext_SR bis!        \ I2S3ext_MODF	Bit 5	 Width 1
 %1  4 lshift I2S3ext_SR bis!        \ I2S3ext_CRCERR	Bit 4	 Width 1
 %1  3 lshift I2S3ext_SR bis!        \ I2S3ext_UDR	Bit 3	 Width 1
 %1  2 lshift I2S3ext_SR bis!        \ I2S3ext_CHSIDE	Bit 2	 Width 1
 %1  1 lshift I2S3ext_SR bis!        \ I2S3ext_TXE	Bit 1	 Width 1
 %1  0 lshift I2S3ext_SR bis!        \ I2S3ext_RXNE	Bit 0	 Width 1
\ I2S3ext_SR Register BitField Fetch Words  
: I2S3ext_TIFRFE@ I2S3ext_SR @ %1  8 lshift and 8 rshift ; 
: I2S3ext_BSY@ I2S3ext_SR @ %1  7 lshift and 7 rshift ; 
: I2S3ext_OVR@ I2S3ext_SR @ %1  6 lshift and 6 rshift ; 
: I2S3ext_MODF@ I2S3ext_SR @ %1  5 lshift and 5 rshift ; 
: I2S3ext_CRCERR@ I2S3ext_SR @ %1  4 lshift and 4 rshift ; 
: I2S3ext_UDR@ I2S3ext_SR @ %1  3 lshift and 3 rshift ; 
: I2S3ext_CHSIDE@ I2S3ext_SR @ %1  2 lshift and 2 rshift ; 
: I2S3ext_TXE@ I2S3ext_SR @ %1  1 lshift and 1 rshift ; 
: I2S3ext_RXNE@ I2S3ext_SR @ %1  0 lshift and 0 rshift ; 

I2S3ext_DR (read-write)
$0000 CONSTANT RESET_I2S3ext_DR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S3ext_DR bis!        \ I2S3ext_DR	Bit 0	 Width 16
\ I2S3ext_DR Register BitField Fetch Words  
: I2S3ext_DR@ I2S3ext_DR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S3ext_CRCPR (read-write)
$0007 CONSTANT RESET_I2S3ext_CRCPR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S3ext_CRCPR bis!        \ I2S3ext_CRCPOLY	Bit 0	 Width 16
\ I2S3ext_CRCPR Register BitField Fetch Words  
: I2S3ext_CRCPOLY@ I2S3ext_CRCPR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S3ext_RXCRCR (read-only)
$0000 CONSTANT RESET_I2S3ext_RXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S3ext_RXCRCR bis!        \ I2S3ext_RxCRC	Bit 0	 Width 16
\ I2S3ext_RXCRCR Register BitField Fetch Words  
: I2S3ext_RxCRC@ I2S3ext_RXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S3ext_TXCRCR (read-only)
$0000 CONSTANT RESET_I2S3ext_TXCRCR 
 %xxxxxxxxxxxxxxxx  0 lshift I2S3ext_TXCRCR bis!        \ I2S3ext_TxCRC	Bit 0	 Width 16
\ I2S3ext_TXCRCR Register BitField Fetch Words  
: I2S3ext_TxCRC@ I2S3ext_TXCRCR @ %1111111111111111  0 lshift and 0 rshift ; 

I2S3ext_I2SCFGR (read-write)
$0000 CONSTANT RESET_I2S3ext_I2SCFGR 
 %1  11 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_I2SMOD	Bit 11	 Width 1
 %1  10 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_I2SE	Bit 10	 Width 1
 %xx  8 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_I2SCFG	Bit 8	 Width 2
 %1  7 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_PCMSYNC	Bit 7	 Width 1
 %xx  4 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_I2SSTD	Bit 4	 Width 2
 %1  3 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_CKPOL	Bit 3	 Width 1
 %xx  1 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_DATLEN	Bit 1	 Width 2
 %1  0 lshift I2S3ext_I2SCFGR bis!        \ I2S3ext_CHLEN	Bit 0	 Width 1
\ I2S3ext_I2SCFGR Register BitField Fetch Words  
: I2S3ext_I2SMOD@ I2S3ext_I2SCFGR @ %1  11 lshift and 11 rshift ; 
: I2S3ext_I2SE@ I2S3ext_I2SCFGR @ %1  10 lshift and 10 rshift ; 
: I2S3ext_I2SCFG@ I2S3ext_I2SCFGR @ %11  8 lshift and 8 rshift ; 
: I2S3ext_PCMSYNC@ I2S3ext_I2SCFGR @ %1  7 lshift and 7 rshift ; 
: I2S3ext_I2SSTD@ I2S3ext_I2SCFGR @ %11  4 lshift and 4 rshift ; 
: I2S3ext_CKPOL@ I2S3ext_I2SCFGR @ %1  3 lshift and 3 rshift ; 
: I2S3ext_DATLEN@ I2S3ext_I2SCFGR @ %11  1 lshift and 1 rshift ; 
: I2S3ext_CHLEN@ I2S3ext_I2SCFGR @ %1  0 lshift and 0 rshift ; 

I2S3ext_I2SPR (read-write)
00000010 CONSTANT RESET_I2S3ext_I2SPR 
 %1  9 lshift I2S3ext_I2SPR bis!        \ I2S3ext_MCKOE	Bit 9	 Width 1
 %1  8 lshift I2S3ext_I2SPR bis!        \ I2S3ext_ODD	Bit 8	 Width 1
 %xxxxxxxx  0 lshift I2S3ext_I2SPR bis!        \ I2S3ext_I2SDIV	Bit 0	 Width 8
\ I2S3ext_I2SPR Register BitField Fetch Words  
: I2S3ext_MCKOE@ I2S3ext_I2SPR @ %1  9 lshift and 9 rshift ; 
: I2S3ext_ODD@ I2S3ext_I2SPR @ %1  8 lshift and 8 rshift ; 
: I2S3ext_I2SDIV@ I2S3ext_I2SPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### SDIO ###################################
SDIO_POWER (read-write)
$00000000 CONSTANT RESET_SDIO_POWER 
 %xx  0 lshift SDIO_POWER bis!        \ SDIO_PWRCTRL	Bit 0	 Width 2
\ SDIO_POWER Register BitField Fetch Words  
: SDIO_PWRCTRL@ SDIO_POWER @ %11  0 lshift and 0 rshift ; 

SDIO_CLKCR (read-write)
$00000000 CONSTANT RESET_SDIO_CLKCR 
 %1  14 lshift SDIO_CLKCR bis!        \ SDIO_HWFC_EN	Bit 14	 Width 1
 %1  13 lshift SDIO_CLKCR bis!        \ SDIO_NEGEDGE	Bit 13	 Width 1
 %xx  11 lshift SDIO_CLKCR bis!        \ SDIO_WIDBUS	Bit 11	 Width 2
 %1  10 lshift SDIO_CLKCR bis!        \ SDIO_BYPASS	Bit 10	 Width 1
 %1  9 lshift SDIO_CLKCR bis!        \ SDIO_PWRSAV	Bit 9	 Width 1
 %1  8 lshift SDIO_CLKCR bis!        \ SDIO_CLKEN	Bit 8	 Width 1
 %xxxxxxxx  0 lshift SDIO_CLKCR bis!        \ SDIO_CLKDIV	Bit 0	 Width 8
\ SDIO_CLKCR Register BitField Fetch Words  
: SDIO_HWFC_EN@ SDIO_CLKCR @ %1  14 lshift and 14 rshift ; 
: SDIO_NEGEDGE@ SDIO_CLKCR @ %1  13 lshift and 13 rshift ; 
: SDIO_WIDBUS@ SDIO_CLKCR @ %11  11 lshift and 11 rshift ; 
: SDIO_BYPASS@ SDIO_CLKCR @ %1  10 lshift and 10 rshift ; 
: SDIO_PWRSAV@ SDIO_CLKCR @ %1  9 lshift and 9 rshift ; 
: SDIO_CLKEN@ SDIO_CLKCR @ %1  8 lshift and 8 rshift ; 
: SDIO_CLKDIV@ SDIO_CLKCR @ %11111111  0 lshift and 0 rshift ; 

SDIO_ARG (read-write)
$00000000 CONSTANT RESET_SDIO_ARG 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_ARG bis!        \ SDIO_CMDARG	Bit 0	 Width 32
\ SDIO_ARG Register BitField Fetch Words  
: SDIO_CMDARG@ SDIO_ARG @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

SDIO_CMD (read-write)
$00000000 CONSTANT RESET_SDIO_CMD 
 %1  14 lshift SDIO_CMD bis!        \ SDIO_CE_ATACMD	Bit 14	 Width 1
 %1  13 lshift SDIO_CMD bis!        \ SDIO_nIEN	Bit 13	 Width 1
 %1  12 lshift SDIO_CMD bis!        \ SDIO_ENCMDcompl	Bit 12	 Width 1
 %1  11 lshift SDIO_CMD bis!        \ SDIO_SDIOSuspend	Bit 11	 Width 1
 %1  10 lshift SDIO_CMD bis!        \ SDIO_CPSMEN	Bit 10	 Width 1
 %1  9 lshift SDIO_CMD bis!        \ SDIO_WAITPEND	Bit 9	 Width 1
 %1  8 lshift SDIO_CMD bis!        \ SDIO_WAITINT	Bit 8	 Width 1
 %xx  6 lshift SDIO_CMD bis!        \ SDIO_WAITRESP	Bit 6	 Width 2
 %xxxxxx  0 lshift SDIO_CMD bis!        \ SDIO_CMDINDEX	Bit 0	 Width 6
\ SDIO_CMD Register BitField Fetch Words  
: SDIO_CE_ATACMD@ SDIO_CMD @ %1  14 lshift and 14 rshift ; 
: SDIO_nIEN@ SDIO_CMD @ %1  13 lshift and 13 rshift ; 
: SDIO_ENCMDcompl@ SDIO_CMD @ %1  12 lshift and 12 rshift ; 
: SDIO_SDIOSuspend@ SDIO_CMD @ %1  11 lshift and 11 rshift ; 
: SDIO_CPSMEN@ SDIO_CMD @ %1  10 lshift and 10 rshift ; 
: SDIO_WAITPEND@ SDIO_CMD @ %1  9 lshift and 9 rshift ; 
: SDIO_WAITINT@ SDIO_CMD @ %1  8 lshift and 8 rshift ; 
: SDIO_WAITRESP@ SDIO_CMD @ %11  6 lshift and 6 rshift ; 
: SDIO_CMDINDEX@ SDIO_CMD @ %111111  0 lshift and 0 rshift ; 

SDIO_RESPCMD (read-only)
$00000000 CONSTANT RESET_SDIO_RESPCMD 
 %xxxxxx  0 lshift SDIO_RESPCMD bis!        \ SDIO_RESPCMD	Bit 0	 Width 6
\ SDIO_RESPCMD Register BitField Fetch Words  
: SDIO_RESPCMD@ SDIO_RESPCMD @ %111111  0 lshift and 0 rshift ; 

SDIO_RESP1 (read-only)
$00000000 CONSTANT RESET_SDIO_RESP1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_RESP1 bis!        \ SDIO_CARDSTATUS1	Bit 0	 Width 32
\ SDIO_RESP1 Register BitField Fetch Words  
: SDIO_CARDSTATUS1@ SDIO_RESP1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

SDIO_RESP2 (read-only)
$00000000 CONSTANT RESET_SDIO_RESP2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_RESP2 bis!        \ SDIO_CARDSTATUS2	Bit 0	 Width 32
\ SDIO_RESP2 Register BitField Fetch Words  
: SDIO_CARDSTATUS2@ SDIO_RESP2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

SDIO_RESP3 (read-only)
$00000000 CONSTANT RESET_SDIO_RESP3 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_RESP3 bis!        \ SDIO_CARDSTATUS3	Bit 0	 Width 32
\ SDIO_RESP3 Register BitField Fetch Words  
: SDIO_CARDSTATUS3@ SDIO_RESP3 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

SDIO_RESP4 (read-only)
$00000000 CONSTANT RESET_SDIO_RESP4 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_RESP4 bis!        \ SDIO_CARDSTATUS4	Bit 0	 Width 32
\ SDIO_RESP4 Register BitField Fetch Words  
: SDIO_CARDSTATUS4@ SDIO_RESP4 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

SDIO_DTIMER (read-write)
$00000000 CONSTANT RESET_SDIO_DTIMER 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_DTIMER bis!        \ SDIO_DATATIME	Bit 0	 Width 32
\ SDIO_DTIMER Register BitField Fetch Words  
: SDIO_DATATIME@ SDIO_DTIMER @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

SDIO_DLEN (read-write)
$00000000 CONSTANT RESET_SDIO_DLEN 
 % 0 lshift SDIO_DLEN bis!        \ SDIO_DATALENGTH	Bit 0	 Width 25
\ SDIO_DLEN Register BitField Fetch Words  
: SDIO_DATALENGTH@ SDIO_DLEN @ % 0 lshift and 0 rshift ; 

SDIO_DCTRL (read-write)
$00000000 CONSTANT RESET_SDIO_DCTRL 
 %1  11 lshift SDIO_DCTRL bis!        \ SDIO_SDIOEN	Bit 11	 Width 1
 %1  10 lshift SDIO_DCTRL bis!        \ SDIO_RWMOD	Bit 10	 Width 1
 %1  9 lshift SDIO_DCTRL bis!        \ SDIO_RWSTOP	Bit 9	 Width 1
 %1  8 lshift SDIO_DCTRL bis!        \ SDIO_RWSTART	Bit 8	 Width 1
 %xxxx  4 lshift SDIO_DCTRL bis!        \ SDIO_DBLOCKSIZE	Bit 4	 Width 4
 %1  3 lshift SDIO_DCTRL bis!        \ SDIO_DMAEN	Bit 3	 Width 1
 %1  2 lshift SDIO_DCTRL bis!        \ SDIO_DTMODE	Bit 2	 Width 1
 %1  1 lshift SDIO_DCTRL bis!        \ SDIO_DTDIR	Bit 1	 Width 1
 %1  0 lshift SDIO_DCTRL bis!        \ SDIO_DTEN	Bit 0	 Width 1
\ SDIO_DCTRL Register BitField Fetch Words  
: SDIO_SDIOEN@ SDIO_DCTRL @ %1  11 lshift and 11 rshift ; 
: SDIO_RWMOD@ SDIO_DCTRL @ %1  10 lshift and 10 rshift ; 
: SDIO_RWSTOP@ SDIO_DCTRL @ %1  9 lshift and 9 rshift ; 
: SDIO_RWSTART@ SDIO_DCTRL @ %1  8 lshift and 8 rshift ; 
: SDIO_DBLOCKSIZE@ SDIO_DCTRL @ %1111  4 lshift and 4 rshift ; 
: SDIO_DMAEN@ SDIO_DCTRL @ %1  3 lshift and 3 rshift ; 
: SDIO_DTMODE@ SDIO_DCTRL @ %1  2 lshift and 2 rshift ; 
: SDIO_DTDIR@ SDIO_DCTRL @ %1  1 lshift and 1 rshift ; 
: SDIO_DTEN@ SDIO_DCTRL @ %1  0 lshift and 0 rshift ; 

SDIO_DCOUNT (read-only)
$00000000 CONSTANT RESET_SDIO_DCOUNT 
 % 0 lshift SDIO_DCOUNT bis!        \ SDIO_DATACOUNT	Bit 0	 Width 25
\ SDIO_DCOUNT Register BitField Fetch Words  
: SDIO_DATACOUNT@ SDIO_DCOUNT @ % 0 lshift and 0 rshift ; 

SDIO_STA (read-only)
$00000000 CONSTANT RESET_SDIO_STA 
 %1  23 lshift SDIO_STA bis!        \ SDIO_CEATAEND	Bit 23	 Width 1
 %1  22 lshift SDIO_STA bis!        \ SDIO_SDIOIT	Bit 22	 Width 1
 %1  21 lshift SDIO_STA bis!        \ SDIO_RXDAVL	Bit 21	 Width 1
 %1  20 lshift SDIO_STA bis!        \ SDIO_TXDAVL	Bit 20	 Width 1
 %1  19 lshift SDIO_STA bis!        \ SDIO_RXFIFOE	Bit 19	 Width 1
 %1  18 lshift SDIO_STA bis!        \ SDIO_TXFIFOE	Bit 18	 Width 1
 %1  17 lshift SDIO_STA bis!        \ SDIO_RXFIFOF	Bit 17	 Width 1
 %1  16 lshift SDIO_STA bis!        \ SDIO_TXFIFOF	Bit 16	 Width 1
 %1  15 lshift SDIO_STA bis!        \ SDIO_RXFIFOHF	Bit 15	 Width 1
 %1  14 lshift SDIO_STA bis!        \ SDIO_TXFIFOHE	Bit 14	 Width 1
 %1  13 lshift SDIO_STA bis!        \ SDIO_RXACT	Bit 13	 Width 1
 %1  12 lshift SDIO_STA bis!        \ SDIO_TXACT	Bit 12	 Width 1
 %1  11 lshift SDIO_STA bis!        \ SDIO_CMDACT	Bit 11	 Width 1
 %1  10 lshift SDIO_STA bis!        \ SDIO_DBCKEND	Bit 10	 Width 1
 %1  9 lshift SDIO_STA bis!        \ SDIO_STBITERR	Bit 9	 Width 1
 %1  8 lshift SDIO_STA bis!        \ SDIO_DATAEND	Bit 8	 Width 1
 %1  7 lshift SDIO_STA bis!        \ SDIO_CMDSENT	Bit 7	 Width 1
 %1  6 lshift SDIO_STA bis!        \ SDIO_CMDREND	Bit 6	 Width 1
 %1  5 lshift SDIO_STA bis!        \ SDIO_RXOVERR	Bit 5	 Width 1
 %1  4 lshift SDIO_STA bis!        \ SDIO_TXUNDERR	Bit 4	 Width 1
 %1  3 lshift SDIO_STA bis!        \ SDIO_DTIMEOUT	Bit 3	 Width 1
 %1  2 lshift SDIO_STA bis!        \ SDIO_CTIMEOUT	Bit 2	 Width 1
 %1  1 lshift SDIO_STA bis!        \ SDIO_DCRCFAIL	Bit 1	 Width 1
 %1  0 lshift SDIO_STA bis!        \ SDIO_CCRCFAIL	Bit 0	 Width 1
\ SDIO_STA Register BitField Fetch Words  
: SDIO_CEATAEND@ SDIO_STA @ %1  23 lshift and 23 rshift ; 
: SDIO_SDIOIT@ SDIO_STA @ %1  22 lshift and 22 rshift ; 
: SDIO_RXDAVL@ SDIO_STA @ %1  21 lshift and 21 rshift ; 
: SDIO_TXDAVL@ SDIO_STA @ %1  20 lshift and 20 rshift ; 
: SDIO_RXFIFOE@ SDIO_STA @ %1  19 lshift and 19 rshift ; 
: SDIO_TXFIFOE@ SDIO_STA @ %1  18 lshift and 18 rshift ; 
: SDIO_RXFIFOF@ SDIO_STA @ %1  17 lshift and 17 rshift ; 
: SDIO_TXFIFOF@ SDIO_STA @ %1  16 lshift and 16 rshift ; 
: SDIO_RXFIFOHF@ SDIO_STA @ %1  15 lshift and 15 rshift ; 
: SDIO_TXFIFOHE@ SDIO_STA @ %1  14 lshift and 14 rshift ; 
: SDIO_RXACT@ SDIO_STA @ %1  13 lshift and 13 rshift ; 
: SDIO_TXACT@ SDIO_STA @ %1  12 lshift and 12 rshift ; 
: SDIO_CMDACT@ SDIO_STA @ %1  11 lshift and 11 rshift ; 
: SDIO_DBCKEND@ SDIO_STA @ %1  10 lshift and 10 rshift ; 
: SDIO_STBITERR@ SDIO_STA @ %1  9 lshift and 9 rshift ; 
: SDIO_DATAEND@ SDIO_STA @ %1  8 lshift and 8 rshift ; 
: SDIO_CMDSENT@ SDIO_STA @ %1  7 lshift and 7 rshift ; 
: SDIO_CMDREND@ SDIO_STA @ %1  6 lshift and 6 rshift ; 
: SDIO_RXOVERR@ SDIO_STA @ %1  5 lshift and 5 rshift ; 
: SDIO_TXUNDERR@ SDIO_STA @ %1  4 lshift and 4 rshift ; 
: SDIO_DTIMEOUT@ SDIO_STA @ %1  3 lshift and 3 rshift ; 
: SDIO_CTIMEOUT@ SDIO_STA @ %1  2 lshift and 2 rshift ; 
: SDIO_DCRCFAIL@ SDIO_STA @ %1  1 lshift and 1 rshift ; 
: SDIO_CCRCFAIL@ SDIO_STA @ %1  0 lshift and 0 rshift ; 

SDIO_ICR (read-write)
$00000000 CONSTANT RESET_SDIO_ICR 
 %1  23 lshift SDIO_ICR bis!        \ SDIO_CEATAENDC	Bit 23	 Width 1
 %1  22 lshift SDIO_ICR bis!        \ SDIO_SDIOITC	Bit 22	 Width 1
 %1  10 lshift SDIO_ICR bis!        \ SDIO_DBCKENDC	Bit 10	 Width 1
 %1  9 lshift SDIO_ICR bis!        \ SDIO_STBITERRC	Bit 9	 Width 1
 %1  8 lshift SDIO_ICR bis!        \ SDIO_DATAENDC	Bit 8	 Width 1
 %1  7 lshift SDIO_ICR bis!        \ SDIO_CMDSENTC	Bit 7	 Width 1
 %1  6 lshift SDIO_ICR bis!        \ SDIO_CMDRENDC	Bit 6	 Width 1
 %1  5 lshift SDIO_ICR bis!        \ SDIO_RXOVERRC	Bit 5	 Width 1
 %1  4 lshift SDIO_ICR bis!        \ SDIO_TXUNDERRC	Bit 4	 Width 1
 %1  3 lshift SDIO_ICR bis!        \ SDIO_DTIMEOUTC	Bit 3	 Width 1
 %1  2 lshift SDIO_ICR bis!        \ SDIO_CTIMEOUTC	Bit 2	 Width 1
 %1  1 lshift SDIO_ICR bis!        \ SDIO_DCRCFAILC	Bit 1	 Width 1
 %1  0 lshift SDIO_ICR bis!        \ SDIO_CCRCFAILC	Bit 0	 Width 1
\ SDIO_ICR Register BitField Fetch Words  
: SDIO_CEATAENDC@ SDIO_ICR @ %1  23 lshift and 23 rshift ; 
: SDIO_SDIOITC@ SDIO_ICR @ %1  22 lshift and 22 rshift ; 
: SDIO_DBCKENDC@ SDIO_ICR @ %1  10 lshift and 10 rshift ; 
: SDIO_STBITERRC@ SDIO_ICR @ %1  9 lshift and 9 rshift ; 
: SDIO_DATAENDC@ SDIO_ICR @ %1  8 lshift and 8 rshift ; 
: SDIO_CMDSENTC@ SDIO_ICR @ %1  7 lshift and 7 rshift ; 
: SDIO_CMDRENDC@ SDIO_ICR @ %1  6 lshift and 6 rshift ; 
: SDIO_RXOVERRC@ SDIO_ICR @ %1  5 lshift and 5 rshift ; 
: SDIO_TXUNDERRC@ SDIO_ICR @ %1  4 lshift and 4 rshift ; 
: SDIO_DTIMEOUTC@ SDIO_ICR @ %1  3 lshift and 3 rshift ; 
: SDIO_CTIMEOUTC@ SDIO_ICR @ %1  2 lshift and 2 rshift ; 
: SDIO_DCRCFAILC@ SDIO_ICR @ %1  1 lshift and 1 rshift ; 
: SDIO_CCRCFAILC@ SDIO_ICR @ %1  0 lshift and 0 rshift ; 

SDIO_MASK (read-write)
$00000000 CONSTANT RESET_SDIO_MASK 
 %1  23 lshift SDIO_MASK bis!        \ SDIO_CEATAENDIE	Bit 23	 Width 1
 %1  22 lshift SDIO_MASK bis!        \ SDIO_SDIOITIE	Bit 22	 Width 1
 %1  21 lshift SDIO_MASK bis!        \ SDIO_RXDAVLIE	Bit 21	 Width 1
 %1  20 lshift SDIO_MASK bis!        \ SDIO_TXDAVLIE	Bit 20	 Width 1
 %1  19 lshift SDIO_MASK bis!        \ SDIO_RXFIFOEIE	Bit 19	 Width 1
 %1  18 lshift SDIO_MASK bis!        \ SDIO_TXFIFOEIE	Bit 18	 Width 1
 %1  17 lshift SDIO_MASK bis!        \ SDIO_RXFIFOFIE	Bit 17	 Width 1
 %1  16 lshift SDIO_MASK bis!        \ SDIO_TXFIFOFIE	Bit 16	 Width 1
 %1  15 lshift SDIO_MASK bis!        \ SDIO_RXFIFOHFIE	Bit 15	 Width 1
 %1  14 lshift SDIO_MASK bis!        \ SDIO_TXFIFOHEIE	Bit 14	 Width 1
 %1  13 lshift SDIO_MASK bis!        \ SDIO_RXACTIE	Bit 13	 Width 1
 %1  12 lshift SDIO_MASK bis!        \ SDIO_TXACTIE	Bit 12	 Width 1
 %1  11 lshift SDIO_MASK bis!        \ SDIO_CMDACTIE	Bit 11	 Width 1
 %1  10 lshift SDIO_MASK bis!        \ SDIO_DBCKENDIE	Bit 10	 Width 1
 %1  9 lshift SDIO_MASK bis!        \ SDIO_STBITERRIE	Bit 9	 Width 1
 %1  8 lshift SDIO_MASK bis!        \ SDIO_DATAENDIE	Bit 8	 Width 1
 %1  7 lshift SDIO_MASK bis!        \ SDIO_CMDSENTIE	Bit 7	 Width 1
 %1  6 lshift SDIO_MASK bis!        \ SDIO_CMDRENDIE	Bit 6	 Width 1
 %1  5 lshift SDIO_MASK bis!        \ SDIO_RXOVERRIE	Bit 5	 Width 1
 %1  4 lshift SDIO_MASK bis!        \ SDIO_TXUNDERRIE	Bit 4	 Width 1
 %1  3 lshift SDIO_MASK bis!        \ SDIO_DTIMEOUTIE	Bit 3	 Width 1
 %1  2 lshift SDIO_MASK bis!        \ SDIO_CTIMEOUTIE	Bit 2	 Width 1
 %1  1 lshift SDIO_MASK bis!        \ SDIO_DCRCFAILIE	Bit 1	 Width 1
 %1  0 lshift SDIO_MASK bis!        \ SDIO_CCRCFAILIE	Bit 0	 Width 1
\ SDIO_MASK Register BitField Fetch Words  
: SDIO_CEATAENDIE@ SDIO_MASK @ %1  23 lshift and 23 rshift ; 
: SDIO_SDIOITIE@ SDIO_MASK @ %1  22 lshift and 22 rshift ; 
: SDIO_RXDAVLIE@ SDIO_MASK @ %1  21 lshift and 21 rshift ; 
: SDIO_TXDAVLIE@ SDIO_MASK @ %1  20 lshift and 20 rshift ; 
: SDIO_RXFIFOEIE@ SDIO_MASK @ %1  19 lshift and 19 rshift ; 
: SDIO_TXFIFOEIE@ SDIO_MASK @ %1  18 lshift and 18 rshift ; 
: SDIO_RXFIFOFIE@ SDIO_MASK @ %1  17 lshift and 17 rshift ; 
: SDIO_TXFIFOFIE@ SDIO_MASK @ %1  16 lshift and 16 rshift ; 
: SDIO_RXFIFOHFIE@ SDIO_MASK @ %1  15 lshift and 15 rshift ; 
: SDIO_TXFIFOHEIE@ SDIO_MASK @ %1  14 lshift and 14 rshift ; 
: SDIO_RXACTIE@ SDIO_MASK @ %1  13 lshift and 13 rshift ; 
: SDIO_TXACTIE@ SDIO_MASK @ %1  12 lshift and 12 rshift ; 
: SDIO_CMDACTIE@ SDIO_MASK @ %1  11 lshift and 11 rshift ; 
: SDIO_DBCKENDIE@ SDIO_MASK @ %1  10 lshift and 10 rshift ; 
: SDIO_STBITERRIE@ SDIO_MASK @ %1  9 lshift and 9 rshift ; 
: SDIO_DATAENDIE@ SDIO_MASK @ %1  8 lshift and 8 rshift ; 
: SDIO_CMDSENTIE@ SDIO_MASK @ %1  7 lshift and 7 rshift ; 
: SDIO_CMDRENDIE@ SDIO_MASK @ %1  6 lshift and 6 rshift ; 
: SDIO_RXOVERRIE@ SDIO_MASK @ %1  5 lshift and 5 rshift ; 
: SDIO_TXUNDERRIE@ SDIO_MASK @ %1  4 lshift and 4 rshift ; 
: SDIO_DTIMEOUTIE@ SDIO_MASK @ %1  3 lshift and 3 rshift ; 
: SDIO_CTIMEOUTIE@ SDIO_MASK @ %1  2 lshift and 2 rshift ; 
: SDIO_DCRCFAILIE@ SDIO_MASK @ %1  1 lshift and 1 rshift ; 
: SDIO_CCRCFAILIE@ SDIO_MASK @ %1  0 lshift and 0 rshift ; 

SDIO_FIFOCNT (read-only)
$00000000 CONSTANT RESET_SDIO_FIFOCNT 
 %xxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_FIFOCNT bis!        \ SDIO_FIFOCOUNT	Bit 0	 Width 24
\ SDIO_FIFOCNT Register BitField Fetch Words  
: SDIO_FIFOCOUNT@ SDIO_FIFOCNT @ %111111111111111111111111  0 lshift and 0 rshift ; 

SDIO_FIFO (read-write)
$00000000 CONSTANT RESET_SDIO_FIFO 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift SDIO_FIFO bis!        \ SDIO_FIFOData	Bit 0	 Width 32
\ SDIO_FIFO Register BitField Fetch Words  
: SDIO_FIFOData@ SDIO_FIFO @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### ADC1 ###################################
ADC1_SR (read-write)
$00000000 CONSTANT RESET_ADC1_SR 
 %1  5 lshift ADC1_SR bis!        \ ADC1_OVR	Bit 5	 Width 1
 %1  4 lshift ADC1_SR bis!        \ ADC1_STRT	Bit 4	 Width 1
 %1  3 lshift ADC1_SR bis!        \ ADC1_JSTRT	Bit 3	 Width 1
 %1  2 lshift ADC1_SR bis!        \ ADC1_JEOC	Bit 2	 Width 1
 %1  1 lshift ADC1_SR bis!        \ ADC1_EOC	Bit 1	 Width 1
 %1  0 lshift ADC1_SR bis!        \ ADC1_AWD	Bit 0	 Width 1
\ ADC1_SR Register BitField Fetch Words  
: ADC1_OVR@ ADC1_SR @ %1  5 lshift and 5 rshift ; 
: ADC1_STRT@ ADC1_SR @ %1  4 lshift and 4 rshift ; 
: ADC1_JSTRT@ ADC1_SR @ %1  3 lshift and 3 rshift ; 
: ADC1_JEOC@ ADC1_SR @ %1  2 lshift and 2 rshift ; 
: ADC1_EOC@ ADC1_SR @ %1  1 lshift and 1 rshift ; 
: ADC1_AWD@ ADC1_SR @ %1  0 lshift and 0 rshift ; 

ADC1_CR1 (read-write)
$00000000 CONSTANT RESET_ADC1_CR1 
 %1  26 lshift ADC1_CR1 bis!        \ ADC1_OVRIE	Bit 26	 Width 1
 %xx  24 lshift ADC1_CR1 bis!        \ ADC1_RES	Bit 24	 Width 2
 %1  23 lshift ADC1_CR1 bis!        \ ADC1_AWDEN	Bit 23	 Width 1
 %1  22 lshift ADC1_CR1 bis!        \ ADC1_JAWDEN	Bit 22	 Width 1
 %xxx  13 lshift ADC1_CR1 bis!        \ ADC1_DISCNUM	Bit 13	 Width 3
 %1  12 lshift ADC1_CR1 bis!        \ ADC1_JDISCEN	Bit 12	 Width 1
 %1  11 lshift ADC1_CR1 bis!        \ ADC1_DISCEN	Bit 11	 Width 1
 %1  10 lshift ADC1_CR1 bis!        \ ADC1_JAUTO	Bit 10	 Width 1
 %1  9 lshift ADC1_CR1 bis!        \ ADC1_AWDSGL	Bit 9	 Width 1
 %1  8 lshift ADC1_CR1 bis!        \ ADC1_SCAN	Bit 8	 Width 1
 %1  7 lshift ADC1_CR1 bis!        \ ADC1_JEOCIE	Bit 7	 Width 1
 %1  6 lshift ADC1_CR1 bis!        \ ADC1_AWDIE	Bit 6	 Width 1
 %1  5 lshift ADC1_CR1 bis!        \ ADC1_EOCIE	Bit 5	 Width 1
 %xxxxx  0 lshift ADC1_CR1 bis!        \ ADC1_AWDCH	Bit 0	 Width 5
\ ADC1_CR1 Register BitField Fetch Words  
: ADC1_OVRIE@ ADC1_CR1 @ %1  26 lshift and 26 rshift ; 
: ADC1_RES@ ADC1_CR1 @ %11  24 lshift and 24 rshift ; 
: ADC1_AWDEN@ ADC1_CR1 @ %1  23 lshift and 23 rshift ; 
: ADC1_JAWDEN@ ADC1_CR1 @ %1  22 lshift and 22 rshift ; 
: ADC1_DISCNUM@ ADC1_CR1 @ %111  13 lshift and 13 rshift ; 
: ADC1_JDISCEN@ ADC1_CR1 @ %1  12 lshift and 12 rshift ; 
: ADC1_DISCEN@ ADC1_CR1 @ %1  11 lshift and 11 rshift ; 
: ADC1_JAUTO@ ADC1_CR1 @ %1  10 lshift and 10 rshift ; 
: ADC1_AWDSGL@ ADC1_CR1 @ %1  9 lshift and 9 rshift ; 
: ADC1_SCAN@ ADC1_CR1 @ %1  8 lshift and 8 rshift ; 
: ADC1_JEOCIE@ ADC1_CR1 @ %1  7 lshift and 7 rshift ; 
: ADC1_AWDIE@ ADC1_CR1 @ %1  6 lshift and 6 rshift ; 
: ADC1_EOCIE@ ADC1_CR1 @ %1  5 lshift and 5 rshift ; 
: ADC1_AWDCH@ ADC1_CR1 @ %11111  0 lshift and 0 rshift ; 

ADC1_CR2 (read-write)
$00000000 CONSTANT RESET_ADC1_CR2 
 %1  30 lshift ADC1_CR2 bis!        \ ADC1_SWSTART	Bit 30	 Width 1
 %xx  28 lshift ADC1_CR2 bis!        \ ADC1_EXTEN	Bit 28	 Width 2
 %xxxx  24 lshift ADC1_CR2 bis!        \ ADC1_EXTSEL	Bit 24	 Width 4
 %1  22 lshift ADC1_CR2 bis!        \ ADC1_JSWSTART	Bit 22	 Width 1
 %xx  20 lshift ADC1_CR2 bis!        \ ADC1_JEXTEN	Bit 20	 Width 2
 %xxxx  16 lshift ADC1_CR2 bis!        \ ADC1_JEXTSEL	Bit 16	 Width 4
 %1  11 lshift ADC1_CR2 bis!        \ ADC1_ALIGN	Bit 11	 Width 1
 %1  10 lshift ADC1_CR2 bis!        \ ADC1_EOCS	Bit 10	 Width 1
 %1  9 lshift ADC1_CR2 bis!        \ ADC1_DDS	Bit 9	 Width 1
 %1  8 lshift ADC1_CR2 bis!        \ ADC1_DMA	Bit 8	 Width 1
 %1  1 lshift ADC1_CR2 bis!        \ ADC1_CONT	Bit 1	 Width 1
 %1  0 lshift ADC1_CR2 bis!        \ ADC1_ADON	Bit 0	 Width 1
\ ADC1_CR2 Register BitField Fetch Words  
: ADC1_SWSTART@ ADC1_CR2 @ %1  30 lshift and 30 rshift ; 
: ADC1_EXTEN@ ADC1_CR2 @ %11  28 lshift and 28 rshift ; 
: ADC1_EXTSEL@ ADC1_CR2 @ %1111  24 lshift and 24 rshift ; 
: ADC1_JSWSTART@ ADC1_CR2 @ %1  22 lshift and 22 rshift ; 
: ADC1_JEXTEN@ ADC1_CR2 @ %11  20 lshift and 20 rshift ; 
: ADC1_JEXTSEL@ ADC1_CR2 @ %1111  16 lshift and 16 rshift ; 
: ADC1_ALIGN@ ADC1_CR2 @ %1  11 lshift and 11 rshift ; 
: ADC1_EOCS@ ADC1_CR2 @ %1  10 lshift and 10 rshift ; 
: ADC1_DDS@ ADC1_CR2 @ %1  9 lshift and 9 rshift ; 
: ADC1_DMA@ ADC1_CR2 @ %1  8 lshift and 8 rshift ; 
: ADC1_CONT@ ADC1_CR2 @ %1  1 lshift and 1 rshift ; 
: ADC1_ADON@ ADC1_CR2 @ %1  0 lshift and 0 rshift ; 

ADC1_SMPR1 (read-write)
$00000000 CONSTANT RESET_ADC1_SMPR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift ADC1_SMPR1 bis!        \ ADC1_SMPx_x	Bit 0	 Width 32
\ ADC1_SMPR1 Register BitField Fetch Words  
: ADC1_SMPx_x@ ADC1_SMPR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

ADC1_SMPR2 (read-write)
$00000000 CONSTANT RESET_ADC1_SMPR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift ADC1_SMPR2 bis!        \ ADC1_SMPx_x	Bit 0	 Width 32
\ ADC1_SMPR2 Register BitField Fetch Words  
: ADC1_SMPx_x@ ADC1_SMPR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

ADC1_JOFR1 (read-write)
$00000000 CONSTANT RESET_ADC1_JOFR1 
 %xxxxxxxxxxxx  0 lshift ADC1_JOFR1 bis!        \ ADC1_JOFFSET1	Bit 0	 Width 12
\ ADC1_JOFR1 Register BitField Fetch Words  
: ADC1_JOFFSET1@ ADC1_JOFR1 @ %11111111111  0 lshift and 0 rshift ; 

ADC1_JOFR2 (read-write)
$00000000 CONSTANT RESET_ADC1_JOFR2 
 %xxxxxxxxxxxx  0 lshift ADC1_JOFR2 bis!        \ ADC1_JOFFSET2	Bit 0	 Width 12
\ ADC1_JOFR2 Register BitField Fetch Words  
: ADC1_JOFFSET2@ ADC1_JOFR2 @ %11111111111  0 lshift and 0 rshift ; 

ADC1_JOFR3 (read-write)
$00000000 CONSTANT RESET_ADC1_JOFR3 
 %xxxxxxxxxxxx  0 lshift ADC1_JOFR3 bis!        \ ADC1_JOFFSET3	Bit 0	 Width 12
\ ADC1_JOFR3 Register BitField Fetch Words  
: ADC1_JOFFSET3@ ADC1_JOFR3 @ %11111111111  0 lshift and 0 rshift ; 

ADC1_JOFR4 (read-write)
$00000000 CONSTANT RESET_ADC1_JOFR4 
 %xxxxxxxxxxxx  0 lshift ADC1_JOFR4 bis!        \ ADC1_JOFFSET4	Bit 0	 Width 12
\ ADC1_JOFR4 Register BitField Fetch Words  
: ADC1_JOFFSET4@ ADC1_JOFR4 @ %11111111111  0 lshift and 0 rshift ; 

ADC1_HTR (read-write)
$00000FFF CONSTANT RESET_ADC1_HTR 
 %xxxxxxxxxxxx  0 lshift ADC1_HTR bis!        \ ADC1_HT	Bit 0	 Width 12
\ ADC1_HTR Register BitField Fetch Words  
: ADC1_HT@ ADC1_HTR @ %11111111111  0 lshift and 0 rshift ; 

ADC1_LTR (read-write)
$00000000 CONSTANT RESET_ADC1_LTR 
 %xxxxxxxxxxxx  0 lshift ADC1_LTR bis!        \ ADC1_LT	Bit 0	 Width 12
\ ADC1_LTR Register BitField Fetch Words  
: ADC1_LT@ ADC1_LTR @ %11111111111  0 lshift and 0 rshift ; 

ADC1_SQR1 (read-write)
$00000000 CONSTANT RESET_ADC1_SQR1 
 %xxxx  20 lshift ADC1_SQR1 bis!        \ ADC1_L	Bit 20	 Width 4
 %xxxxx  15 lshift ADC1_SQR1 bis!        \ ADC1_SQ16	Bit 15	 Width 5
 %xxxxx  10 lshift ADC1_SQR1 bis!        \ ADC1_SQ15	Bit 10	 Width 5
 %xxxxx  5 lshift ADC1_SQR1 bis!        \ ADC1_SQ14	Bit 5	 Width 5
 %xxxxx  0 lshift ADC1_SQR1 bis!        \ ADC1_SQ13	Bit 0	 Width 5
\ ADC1_SQR1 Register BitField Fetch Words  
: ADC1_L@ ADC1_SQR1 @ %1111  20 lshift and 20 rshift ; 
: ADC1_SQ16@ ADC1_SQR1 @ %11111  15 lshift and 15 rshift ; 
: ADC1_SQ15@ ADC1_SQR1 @ %11111  10 lshift and 10 rshift ; 
: ADC1_SQ14@ ADC1_SQR1 @ %11111  5 lshift and 5 rshift ; 
: ADC1_SQ13@ ADC1_SQR1 @ %11111  0 lshift and 0 rshift ; 

ADC1_SQR2 (read-write)
$00000000 CONSTANT RESET_ADC1_SQR2 
 %xxxxx  25 lshift ADC1_SQR2 bis!        \ ADC1_SQ12	Bit 25	 Width 5
 %xxxxx  20 lshift ADC1_SQR2 bis!        \ ADC1_SQ11	Bit 20	 Width 5
 %xxxxx  15 lshift ADC1_SQR2 bis!        \ ADC1_SQ10	Bit 15	 Width 5
 %xxxxx  10 lshift ADC1_SQR2 bis!        \ ADC1_SQ9	Bit 10	 Width 5
 %xxxxx  5 lshift ADC1_SQR2 bis!        \ ADC1_SQ8	Bit 5	 Width 5
 %xxxxx  0 lshift ADC1_SQR2 bis!        \ ADC1_SQ7	Bit 0	 Width 5
\ ADC1_SQR2 Register BitField Fetch Words  
: ADC1_SQ12@ ADC1_SQR2 @ %11111  25 lshift and 25 rshift ; 
: ADC1_SQ11@ ADC1_SQR2 @ %11111  20 lshift and 20 rshift ; 
: ADC1_SQ10@ ADC1_SQR2 @ %11111  15 lshift and 15 rshift ; 
: ADC1_SQ9@ ADC1_SQR2 @ %11111  10 lshift and 10 rshift ; 
: ADC1_SQ8@ ADC1_SQR2 @ %11111  5 lshift and 5 rshift ; 
: ADC1_SQ7@ ADC1_SQR2 @ %11111  0 lshift and 0 rshift ; 

ADC1_SQR3 (read-write)
$00000000 CONSTANT RESET_ADC1_SQR3 
 %xxxxx  25 lshift ADC1_SQR3 bis!        \ ADC1_SQ6	Bit 25	 Width 5
 %xxxxx  20 lshift ADC1_SQR3 bis!        \ ADC1_SQ5	Bit 20	 Width 5
 %xxxxx  15 lshift ADC1_SQR3 bis!        \ ADC1_SQ4	Bit 15	 Width 5
 %xxxxx  10 lshift ADC1_SQR3 bis!        \ ADC1_SQ3	Bit 10	 Width 5
 %xxxxx  5 lshift ADC1_SQR3 bis!        \ ADC1_SQ2	Bit 5	 Width 5
 %xxxxx  0 lshift ADC1_SQR3 bis!        \ ADC1_SQ1	Bit 0	 Width 5
\ ADC1_SQR3 Register BitField Fetch Words  
: ADC1_SQ6@ ADC1_SQR3 @ %11111  25 lshift and 25 rshift ; 
: ADC1_SQ5@ ADC1_SQR3 @ %11111  20 lshift and 20 rshift ; 
: ADC1_SQ4@ ADC1_SQR3 @ %11111  15 lshift and 15 rshift ; 
: ADC1_SQ3@ ADC1_SQR3 @ %11111  10 lshift and 10 rshift ; 
: ADC1_SQ2@ ADC1_SQR3 @ %11111  5 lshift and 5 rshift ; 
: ADC1_SQ1@ ADC1_SQR3 @ %11111  0 lshift and 0 rshift ; 

ADC1_JSQR (read-write)
$00000000 CONSTANT RESET_ADC1_JSQR 
 %xx  20 lshift ADC1_JSQR bis!        \ ADC1_JL	Bit 20	 Width 2
 %xxxxx  15 lshift ADC1_JSQR bis!        \ ADC1_JSQ4	Bit 15	 Width 5
 %xxxxx  10 lshift ADC1_JSQR bis!        \ ADC1_JSQ3	Bit 10	 Width 5
 %xxxxx  5 lshift ADC1_JSQR bis!        \ ADC1_JSQ2	Bit 5	 Width 5
 %xxxxx  0 lshift ADC1_JSQR bis!        \ ADC1_JSQ1	Bit 0	 Width 5
\ ADC1_JSQR Register BitField Fetch Words  
: ADC1_JL@ ADC1_JSQR @ %11  20 lshift and 20 rshift ; 
: ADC1_JSQ4@ ADC1_JSQR @ %11111  15 lshift and 15 rshift ; 
: ADC1_JSQ3@ ADC1_JSQR @ %11111  10 lshift and 10 rshift ; 
: ADC1_JSQ2@ ADC1_JSQR @ %11111  5 lshift and 5 rshift ; 
: ADC1_JSQ1@ ADC1_JSQR @ %11111  0 lshift and 0 rshift ; 

ADC1_JDR1 (read-only)
$00000000 CONSTANT RESET_ADC1_JDR1 
 %xxxxxxxxxxxxxxxx  0 lshift ADC1_JDR1 bis!        \ ADC1_JDATA	Bit 0	 Width 16
\ ADC1_JDR1 Register BitField Fetch Words  
: ADC1_JDATA@ ADC1_JDR1 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC1_JDR2 (read-only)
$00000000 CONSTANT RESET_ADC1_JDR2 
 %xxxxxxxxxxxxxxxx  0 lshift ADC1_JDR2 bis!        \ ADC1_JDATA	Bit 0	 Width 16
\ ADC1_JDR2 Register BitField Fetch Words  
: ADC1_JDATA@ ADC1_JDR2 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC1_JDR3 (read-only)
$00000000 CONSTANT RESET_ADC1_JDR3 
 %xxxxxxxxxxxxxxxx  0 lshift ADC1_JDR3 bis!        \ ADC1_JDATA	Bit 0	 Width 16
\ ADC1_JDR3 Register BitField Fetch Words  
: ADC1_JDATA@ ADC1_JDR3 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC1_JDR4 (read-only)
$00000000 CONSTANT RESET_ADC1_JDR4 
 %xxxxxxxxxxxxxxxx  0 lshift ADC1_JDR4 bis!        \ ADC1_JDATA	Bit 0	 Width 16
\ ADC1_JDR4 Register BitField Fetch Words  
: ADC1_JDATA@ ADC1_JDR4 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC1_DR (read-only)
$00000000 CONSTANT RESET_ADC1_DR 
 %xxxxxxxxxxxxxxxx  0 lshift ADC1_DR bis!        \ ADC1_DATA	Bit 0	 Width 16
\ ADC1_DR Register BitField Fetch Words  
: ADC1_DATA@ ADC1_DR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### ADC2 ###################################
ADC2_SR (read-write)
$00000000 CONSTANT RESET_ADC2_SR 
 %1  5 lshift ADC2_SR bis!        \ ADC2_OVR	Bit 5	 Width 1
 %1  4 lshift ADC2_SR bis!        \ ADC2_STRT	Bit 4	 Width 1
 %1  3 lshift ADC2_SR bis!        \ ADC2_JSTRT	Bit 3	 Width 1
 %1  2 lshift ADC2_SR bis!        \ ADC2_JEOC	Bit 2	 Width 1
 %1  1 lshift ADC2_SR bis!        \ ADC2_EOC	Bit 1	 Width 1
 %1  0 lshift ADC2_SR bis!        \ ADC2_AWD	Bit 0	 Width 1
\ ADC2_SR Register BitField Fetch Words  
: ADC2_OVR@ ADC2_SR @ %1  5 lshift and 5 rshift ; 
: ADC2_STRT@ ADC2_SR @ %1  4 lshift and 4 rshift ; 
: ADC2_JSTRT@ ADC2_SR @ %1  3 lshift and 3 rshift ; 
: ADC2_JEOC@ ADC2_SR @ %1  2 lshift and 2 rshift ; 
: ADC2_EOC@ ADC2_SR @ %1  1 lshift and 1 rshift ; 
: ADC2_AWD@ ADC2_SR @ %1  0 lshift and 0 rshift ; 

ADC2_CR1 (read-write)
$00000000 CONSTANT RESET_ADC2_CR1 
 %1  26 lshift ADC2_CR1 bis!        \ ADC2_OVRIE	Bit 26	 Width 1
 %xx  24 lshift ADC2_CR1 bis!        \ ADC2_RES	Bit 24	 Width 2
 %1  23 lshift ADC2_CR1 bis!        \ ADC2_AWDEN	Bit 23	 Width 1
 %1  22 lshift ADC2_CR1 bis!        \ ADC2_JAWDEN	Bit 22	 Width 1
 %xxx  13 lshift ADC2_CR1 bis!        \ ADC2_DISCNUM	Bit 13	 Width 3
 %1  12 lshift ADC2_CR1 bis!        \ ADC2_JDISCEN	Bit 12	 Width 1
 %1  11 lshift ADC2_CR1 bis!        \ ADC2_DISCEN	Bit 11	 Width 1
 %1  10 lshift ADC2_CR1 bis!        \ ADC2_JAUTO	Bit 10	 Width 1
 %1  9 lshift ADC2_CR1 bis!        \ ADC2_AWDSGL	Bit 9	 Width 1
 %1  8 lshift ADC2_CR1 bis!        \ ADC2_SCAN	Bit 8	 Width 1
 %1  7 lshift ADC2_CR1 bis!        \ ADC2_JEOCIE	Bit 7	 Width 1
 %1  6 lshift ADC2_CR1 bis!        \ ADC2_AWDIE	Bit 6	 Width 1
 %1  5 lshift ADC2_CR1 bis!        \ ADC2_EOCIE	Bit 5	 Width 1
 %xxxxx  0 lshift ADC2_CR1 bis!        \ ADC2_AWDCH	Bit 0	 Width 5
\ ADC2_CR1 Register BitField Fetch Words  
: ADC2_OVRIE@ ADC2_CR1 @ %1  26 lshift and 26 rshift ; 
: ADC2_RES@ ADC2_CR1 @ %11  24 lshift and 24 rshift ; 
: ADC2_AWDEN@ ADC2_CR1 @ %1  23 lshift and 23 rshift ; 
: ADC2_JAWDEN@ ADC2_CR1 @ %1  22 lshift and 22 rshift ; 
: ADC2_DISCNUM@ ADC2_CR1 @ %111  13 lshift and 13 rshift ; 
: ADC2_JDISCEN@ ADC2_CR1 @ %1  12 lshift and 12 rshift ; 
: ADC2_DISCEN@ ADC2_CR1 @ %1  11 lshift and 11 rshift ; 
: ADC2_JAUTO@ ADC2_CR1 @ %1  10 lshift and 10 rshift ; 
: ADC2_AWDSGL@ ADC2_CR1 @ %1  9 lshift and 9 rshift ; 
: ADC2_SCAN@ ADC2_CR1 @ %1  8 lshift and 8 rshift ; 
: ADC2_JEOCIE@ ADC2_CR1 @ %1  7 lshift and 7 rshift ; 
: ADC2_AWDIE@ ADC2_CR1 @ %1  6 lshift and 6 rshift ; 
: ADC2_EOCIE@ ADC2_CR1 @ %1  5 lshift and 5 rshift ; 
: ADC2_AWDCH@ ADC2_CR1 @ %11111  0 lshift and 0 rshift ; 

ADC2_CR2 (read-write)
$00000000 CONSTANT RESET_ADC2_CR2 
 %1  30 lshift ADC2_CR2 bis!        \ ADC2_SWSTART	Bit 30	 Width 1
 %xx  28 lshift ADC2_CR2 bis!        \ ADC2_EXTEN	Bit 28	 Width 2
 %xxxx  24 lshift ADC2_CR2 bis!        \ ADC2_EXTSEL	Bit 24	 Width 4
 %1  22 lshift ADC2_CR2 bis!        \ ADC2_JSWSTART	Bit 22	 Width 1
 %xx  20 lshift ADC2_CR2 bis!        \ ADC2_JEXTEN	Bit 20	 Width 2
 %xxxx  16 lshift ADC2_CR2 bis!        \ ADC2_JEXTSEL	Bit 16	 Width 4
 %1  11 lshift ADC2_CR2 bis!        \ ADC2_ALIGN	Bit 11	 Width 1
 %1  10 lshift ADC2_CR2 bis!        \ ADC2_EOCS	Bit 10	 Width 1
 %1  9 lshift ADC2_CR2 bis!        \ ADC2_DDS	Bit 9	 Width 1
 %1  8 lshift ADC2_CR2 bis!        \ ADC2_DMA	Bit 8	 Width 1
 %1  1 lshift ADC2_CR2 bis!        \ ADC2_CONT	Bit 1	 Width 1
 %1  0 lshift ADC2_CR2 bis!        \ ADC2_ADON	Bit 0	 Width 1
\ ADC2_CR2 Register BitField Fetch Words  
: ADC2_SWSTART@ ADC2_CR2 @ %1  30 lshift and 30 rshift ; 
: ADC2_EXTEN@ ADC2_CR2 @ %11  28 lshift and 28 rshift ; 
: ADC2_EXTSEL@ ADC2_CR2 @ %1111  24 lshift and 24 rshift ; 
: ADC2_JSWSTART@ ADC2_CR2 @ %1  22 lshift and 22 rshift ; 
: ADC2_JEXTEN@ ADC2_CR2 @ %11  20 lshift and 20 rshift ; 
: ADC2_JEXTSEL@ ADC2_CR2 @ %1111  16 lshift and 16 rshift ; 
: ADC2_ALIGN@ ADC2_CR2 @ %1  11 lshift and 11 rshift ; 
: ADC2_EOCS@ ADC2_CR2 @ %1  10 lshift and 10 rshift ; 
: ADC2_DDS@ ADC2_CR2 @ %1  9 lshift and 9 rshift ; 
: ADC2_DMA@ ADC2_CR2 @ %1  8 lshift and 8 rshift ; 
: ADC2_CONT@ ADC2_CR2 @ %1  1 lshift and 1 rshift ; 
: ADC2_ADON@ ADC2_CR2 @ %1  0 lshift and 0 rshift ; 

ADC2_SMPR1 (read-write)
$00000000 CONSTANT RESET_ADC2_SMPR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift ADC2_SMPR1 bis!        \ ADC2_SMPx_x	Bit 0	 Width 32
\ ADC2_SMPR1 Register BitField Fetch Words  
: ADC2_SMPx_x@ ADC2_SMPR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

ADC2_SMPR2 (read-write)
$00000000 CONSTANT RESET_ADC2_SMPR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift ADC2_SMPR2 bis!        \ ADC2_SMPx_x	Bit 0	 Width 32
\ ADC2_SMPR2 Register BitField Fetch Words  
: ADC2_SMPx_x@ ADC2_SMPR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

ADC2_JOFR1 (read-write)
$00000000 CONSTANT RESET_ADC2_JOFR1 
 %xxxxxxxxxxxx  0 lshift ADC2_JOFR1 bis!        \ ADC2_JOFFSET1	Bit 0	 Width 12
\ ADC2_JOFR1 Register BitField Fetch Words  
: ADC2_JOFFSET1@ ADC2_JOFR1 @ %11111111111  0 lshift and 0 rshift ; 

ADC2_JOFR2 (read-write)
$00000000 CONSTANT RESET_ADC2_JOFR2 
 %xxxxxxxxxxxx  0 lshift ADC2_JOFR2 bis!        \ ADC2_JOFFSET2	Bit 0	 Width 12
\ ADC2_JOFR2 Register BitField Fetch Words  
: ADC2_JOFFSET2@ ADC2_JOFR2 @ %11111111111  0 lshift and 0 rshift ; 

ADC2_JOFR3 (read-write)
$00000000 CONSTANT RESET_ADC2_JOFR3 
 %xxxxxxxxxxxx  0 lshift ADC2_JOFR3 bis!        \ ADC2_JOFFSET3	Bit 0	 Width 12
\ ADC2_JOFR3 Register BitField Fetch Words  
: ADC2_JOFFSET3@ ADC2_JOFR3 @ %11111111111  0 lshift and 0 rshift ; 

ADC2_JOFR4 (read-write)
$00000000 CONSTANT RESET_ADC2_JOFR4 
 %xxxxxxxxxxxx  0 lshift ADC2_JOFR4 bis!        \ ADC2_JOFFSET4	Bit 0	 Width 12
\ ADC2_JOFR4 Register BitField Fetch Words  
: ADC2_JOFFSET4@ ADC2_JOFR4 @ %11111111111  0 lshift and 0 rshift ; 

ADC2_HTR (read-write)
$00000FFF CONSTANT RESET_ADC2_HTR 
 %xxxxxxxxxxxx  0 lshift ADC2_HTR bis!        \ ADC2_HT	Bit 0	 Width 12
\ ADC2_HTR Register BitField Fetch Words  
: ADC2_HT@ ADC2_HTR @ %11111111111  0 lshift and 0 rshift ; 

ADC2_LTR (read-write)
$00000000 CONSTANT RESET_ADC2_LTR 
 %xxxxxxxxxxxx  0 lshift ADC2_LTR bis!        \ ADC2_LT	Bit 0	 Width 12
\ ADC2_LTR Register BitField Fetch Words  
: ADC2_LT@ ADC2_LTR @ %11111111111  0 lshift and 0 rshift ; 

ADC2_SQR1 (read-write)
$00000000 CONSTANT RESET_ADC2_SQR1 
 %xxxx  20 lshift ADC2_SQR1 bis!        \ ADC2_L	Bit 20	 Width 4
 %xxxxx  15 lshift ADC2_SQR1 bis!        \ ADC2_SQ16	Bit 15	 Width 5
 %xxxxx  10 lshift ADC2_SQR1 bis!        \ ADC2_SQ15	Bit 10	 Width 5
 %xxxxx  5 lshift ADC2_SQR1 bis!        \ ADC2_SQ14	Bit 5	 Width 5
 %xxxxx  0 lshift ADC2_SQR1 bis!        \ ADC2_SQ13	Bit 0	 Width 5
\ ADC2_SQR1 Register BitField Fetch Words  
: ADC2_L@ ADC2_SQR1 @ %1111  20 lshift and 20 rshift ; 
: ADC2_SQ16@ ADC2_SQR1 @ %11111  15 lshift and 15 rshift ; 
: ADC2_SQ15@ ADC2_SQR1 @ %11111  10 lshift and 10 rshift ; 
: ADC2_SQ14@ ADC2_SQR1 @ %11111  5 lshift and 5 rshift ; 
: ADC2_SQ13@ ADC2_SQR1 @ %11111  0 lshift and 0 rshift ; 

ADC2_SQR2 (read-write)
$00000000 CONSTANT RESET_ADC2_SQR2 
 %xxxxx  25 lshift ADC2_SQR2 bis!        \ ADC2_SQ12	Bit 25	 Width 5
 %xxxxx  20 lshift ADC2_SQR2 bis!        \ ADC2_SQ11	Bit 20	 Width 5
 %xxxxx  15 lshift ADC2_SQR2 bis!        \ ADC2_SQ10	Bit 15	 Width 5
 %xxxxx  10 lshift ADC2_SQR2 bis!        \ ADC2_SQ9	Bit 10	 Width 5
 %xxxxx  5 lshift ADC2_SQR2 bis!        \ ADC2_SQ8	Bit 5	 Width 5
 %xxxxx  0 lshift ADC2_SQR2 bis!        \ ADC2_SQ7	Bit 0	 Width 5
\ ADC2_SQR2 Register BitField Fetch Words  
: ADC2_SQ12@ ADC2_SQR2 @ %11111  25 lshift and 25 rshift ; 
: ADC2_SQ11@ ADC2_SQR2 @ %11111  20 lshift and 20 rshift ; 
: ADC2_SQ10@ ADC2_SQR2 @ %11111  15 lshift and 15 rshift ; 
: ADC2_SQ9@ ADC2_SQR2 @ %11111  10 lshift and 10 rshift ; 
: ADC2_SQ8@ ADC2_SQR2 @ %11111  5 lshift and 5 rshift ; 
: ADC2_SQ7@ ADC2_SQR2 @ %11111  0 lshift and 0 rshift ; 

ADC2_SQR3 (read-write)
$00000000 CONSTANT RESET_ADC2_SQR3 
 %xxxxx  25 lshift ADC2_SQR3 bis!        \ ADC2_SQ6	Bit 25	 Width 5
 %xxxxx  20 lshift ADC2_SQR3 bis!        \ ADC2_SQ5	Bit 20	 Width 5
 %xxxxx  15 lshift ADC2_SQR3 bis!        \ ADC2_SQ4	Bit 15	 Width 5
 %xxxxx  10 lshift ADC2_SQR3 bis!        \ ADC2_SQ3	Bit 10	 Width 5
 %xxxxx  5 lshift ADC2_SQR3 bis!        \ ADC2_SQ2	Bit 5	 Width 5
 %xxxxx  0 lshift ADC2_SQR3 bis!        \ ADC2_SQ1	Bit 0	 Width 5
\ ADC2_SQR3 Register BitField Fetch Words  
: ADC2_SQ6@ ADC2_SQR3 @ %11111  25 lshift and 25 rshift ; 
: ADC2_SQ5@ ADC2_SQR3 @ %11111  20 lshift and 20 rshift ; 
: ADC2_SQ4@ ADC2_SQR3 @ %11111  15 lshift and 15 rshift ; 
: ADC2_SQ3@ ADC2_SQR3 @ %11111  10 lshift and 10 rshift ; 
: ADC2_SQ2@ ADC2_SQR3 @ %11111  5 lshift and 5 rshift ; 
: ADC2_SQ1@ ADC2_SQR3 @ %11111  0 lshift and 0 rshift ; 

ADC2_JSQR (read-write)
$00000000 CONSTANT RESET_ADC2_JSQR 
 %xx  20 lshift ADC2_JSQR bis!        \ ADC2_JL	Bit 20	 Width 2
 %xxxxx  15 lshift ADC2_JSQR bis!        \ ADC2_JSQ4	Bit 15	 Width 5
 %xxxxx  10 lshift ADC2_JSQR bis!        \ ADC2_JSQ3	Bit 10	 Width 5
 %xxxxx  5 lshift ADC2_JSQR bis!        \ ADC2_JSQ2	Bit 5	 Width 5
 %xxxxx  0 lshift ADC2_JSQR bis!        \ ADC2_JSQ1	Bit 0	 Width 5
\ ADC2_JSQR Register BitField Fetch Words  
: ADC2_JL@ ADC2_JSQR @ %11  20 lshift and 20 rshift ; 
: ADC2_JSQ4@ ADC2_JSQR @ %11111  15 lshift and 15 rshift ; 
: ADC2_JSQ3@ ADC2_JSQR @ %11111  10 lshift and 10 rshift ; 
: ADC2_JSQ2@ ADC2_JSQR @ %11111  5 lshift and 5 rshift ; 
: ADC2_JSQ1@ ADC2_JSQR @ %11111  0 lshift and 0 rshift ; 

ADC2_JDR1 (read-only)
$00000000 CONSTANT RESET_ADC2_JDR1 
 %xxxxxxxxxxxxxxxx  0 lshift ADC2_JDR1 bis!        \ ADC2_JDATA	Bit 0	 Width 16
\ ADC2_JDR1 Register BitField Fetch Words  
: ADC2_JDATA@ ADC2_JDR1 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC2_JDR2 (read-only)
$00000000 CONSTANT RESET_ADC2_JDR2 
 %xxxxxxxxxxxxxxxx  0 lshift ADC2_JDR2 bis!        \ ADC2_JDATA	Bit 0	 Width 16
\ ADC2_JDR2 Register BitField Fetch Words  
: ADC2_JDATA@ ADC2_JDR2 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC2_JDR3 (read-only)
$00000000 CONSTANT RESET_ADC2_JDR3 
 %xxxxxxxxxxxxxxxx  0 lshift ADC2_JDR3 bis!        \ ADC2_JDATA	Bit 0	 Width 16
\ ADC2_JDR3 Register BitField Fetch Words  
: ADC2_JDATA@ ADC2_JDR3 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC2_JDR4 (read-only)
$00000000 CONSTANT RESET_ADC2_JDR4 
 %xxxxxxxxxxxxxxxx  0 lshift ADC2_JDR4 bis!        \ ADC2_JDATA	Bit 0	 Width 16
\ ADC2_JDR4 Register BitField Fetch Words  
: ADC2_JDATA@ ADC2_JDR4 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC2_DR (read-only)
$00000000 CONSTANT RESET_ADC2_DR 
 %xxxxxxxxxxxxxxxx  0 lshift ADC2_DR bis!        \ ADC2_DATA	Bit 0	 Width 16
\ ADC2_DR Register BitField Fetch Words  
: ADC2_DATA@ ADC2_DR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### ADC3 ###################################
ADC3_SR (read-write)
$00000000 CONSTANT RESET_ADC3_SR 
 %1  5 lshift ADC3_SR bis!        \ ADC3_OVR	Bit 5	 Width 1
 %1  4 lshift ADC3_SR bis!        \ ADC3_STRT	Bit 4	 Width 1
 %1  3 lshift ADC3_SR bis!        \ ADC3_JSTRT	Bit 3	 Width 1
 %1  2 lshift ADC3_SR bis!        \ ADC3_JEOC	Bit 2	 Width 1
 %1  1 lshift ADC3_SR bis!        \ ADC3_EOC	Bit 1	 Width 1
 %1  0 lshift ADC3_SR bis!        \ ADC3_AWD	Bit 0	 Width 1
\ ADC3_SR Register BitField Fetch Words  
: ADC3_OVR@ ADC3_SR @ %1  5 lshift and 5 rshift ; 
: ADC3_STRT@ ADC3_SR @ %1  4 lshift and 4 rshift ; 
: ADC3_JSTRT@ ADC3_SR @ %1  3 lshift and 3 rshift ; 
: ADC3_JEOC@ ADC3_SR @ %1  2 lshift and 2 rshift ; 
: ADC3_EOC@ ADC3_SR @ %1  1 lshift and 1 rshift ; 
: ADC3_AWD@ ADC3_SR @ %1  0 lshift and 0 rshift ; 

ADC3_CR1 (read-write)
$00000000 CONSTANT RESET_ADC3_CR1 
 %1  26 lshift ADC3_CR1 bis!        \ ADC3_OVRIE	Bit 26	 Width 1
 %xx  24 lshift ADC3_CR1 bis!        \ ADC3_RES	Bit 24	 Width 2
 %1  23 lshift ADC3_CR1 bis!        \ ADC3_AWDEN	Bit 23	 Width 1
 %1  22 lshift ADC3_CR1 bis!        \ ADC3_JAWDEN	Bit 22	 Width 1
 %xxx  13 lshift ADC3_CR1 bis!        \ ADC3_DISCNUM	Bit 13	 Width 3
 %1  12 lshift ADC3_CR1 bis!        \ ADC3_JDISCEN	Bit 12	 Width 1
 %1  11 lshift ADC3_CR1 bis!        \ ADC3_DISCEN	Bit 11	 Width 1
 %1  10 lshift ADC3_CR1 bis!        \ ADC3_JAUTO	Bit 10	 Width 1
 %1  9 lshift ADC3_CR1 bis!        \ ADC3_AWDSGL	Bit 9	 Width 1
 %1  8 lshift ADC3_CR1 bis!        \ ADC3_SCAN	Bit 8	 Width 1
 %1  7 lshift ADC3_CR1 bis!        \ ADC3_JEOCIE	Bit 7	 Width 1
 %1  6 lshift ADC3_CR1 bis!        \ ADC3_AWDIE	Bit 6	 Width 1
 %1  5 lshift ADC3_CR1 bis!        \ ADC3_EOCIE	Bit 5	 Width 1
 %xxxxx  0 lshift ADC3_CR1 bis!        \ ADC3_AWDCH	Bit 0	 Width 5
\ ADC3_CR1 Register BitField Fetch Words  
: ADC3_OVRIE@ ADC3_CR1 @ %1  26 lshift and 26 rshift ; 
: ADC3_RES@ ADC3_CR1 @ %11  24 lshift and 24 rshift ; 
: ADC3_AWDEN@ ADC3_CR1 @ %1  23 lshift and 23 rshift ; 
: ADC3_JAWDEN@ ADC3_CR1 @ %1  22 lshift and 22 rshift ; 
: ADC3_DISCNUM@ ADC3_CR1 @ %111  13 lshift and 13 rshift ; 
: ADC3_JDISCEN@ ADC3_CR1 @ %1  12 lshift and 12 rshift ; 
: ADC3_DISCEN@ ADC3_CR1 @ %1  11 lshift and 11 rshift ; 
: ADC3_JAUTO@ ADC3_CR1 @ %1  10 lshift and 10 rshift ; 
: ADC3_AWDSGL@ ADC3_CR1 @ %1  9 lshift and 9 rshift ; 
: ADC3_SCAN@ ADC3_CR1 @ %1  8 lshift and 8 rshift ; 
: ADC3_JEOCIE@ ADC3_CR1 @ %1  7 lshift and 7 rshift ; 
: ADC3_AWDIE@ ADC3_CR1 @ %1  6 lshift and 6 rshift ; 
: ADC3_EOCIE@ ADC3_CR1 @ %1  5 lshift and 5 rshift ; 
: ADC3_AWDCH@ ADC3_CR1 @ %11111  0 lshift and 0 rshift ; 

ADC3_CR2 (read-write)
$00000000 CONSTANT RESET_ADC3_CR2 
 %1  30 lshift ADC3_CR2 bis!        \ ADC3_SWSTART	Bit 30	 Width 1
 %xx  28 lshift ADC3_CR2 bis!        \ ADC3_EXTEN	Bit 28	 Width 2
 %xxxx  24 lshift ADC3_CR2 bis!        \ ADC3_EXTSEL	Bit 24	 Width 4
 %1  22 lshift ADC3_CR2 bis!        \ ADC3_JSWSTART	Bit 22	 Width 1
 %xx  20 lshift ADC3_CR2 bis!        \ ADC3_JEXTEN	Bit 20	 Width 2
 %xxxx  16 lshift ADC3_CR2 bis!        \ ADC3_JEXTSEL	Bit 16	 Width 4
 %1  11 lshift ADC3_CR2 bis!        \ ADC3_ALIGN	Bit 11	 Width 1
 %1  10 lshift ADC3_CR2 bis!        \ ADC3_EOCS	Bit 10	 Width 1
 %1  9 lshift ADC3_CR2 bis!        \ ADC3_DDS	Bit 9	 Width 1
 %1  8 lshift ADC3_CR2 bis!        \ ADC3_DMA	Bit 8	 Width 1
 %1  1 lshift ADC3_CR2 bis!        \ ADC3_CONT	Bit 1	 Width 1
 %1  0 lshift ADC3_CR2 bis!        \ ADC3_ADON	Bit 0	 Width 1
\ ADC3_CR2 Register BitField Fetch Words  
: ADC3_SWSTART@ ADC3_CR2 @ %1  30 lshift and 30 rshift ; 
: ADC3_EXTEN@ ADC3_CR2 @ %11  28 lshift and 28 rshift ; 
: ADC3_EXTSEL@ ADC3_CR2 @ %1111  24 lshift and 24 rshift ; 
: ADC3_JSWSTART@ ADC3_CR2 @ %1  22 lshift and 22 rshift ; 
: ADC3_JEXTEN@ ADC3_CR2 @ %11  20 lshift and 20 rshift ; 
: ADC3_JEXTSEL@ ADC3_CR2 @ %1111  16 lshift and 16 rshift ; 
: ADC3_ALIGN@ ADC3_CR2 @ %1  11 lshift and 11 rshift ; 
: ADC3_EOCS@ ADC3_CR2 @ %1  10 lshift and 10 rshift ; 
: ADC3_DDS@ ADC3_CR2 @ %1  9 lshift and 9 rshift ; 
: ADC3_DMA@ ADC3_CR2 @ %1  8 lshift and 8 rshift ; 
: ADC3_CONT@ ADC3_CR2 @ %1  1 lshift and 1 rshift ; 
: ADC3_ADON@ ADC3_CR2 @ %1  0 lshift and 0 rshift ; 

ADC3_SMPR1 (read-write)
$00000000 CONSTANT RESET_ADC3_SMPR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift ADC3_SMPR1 bis!        \ ADC3_SMPx_x	Bit 0	 Width 32
\ ADC3_SMPR1 Register BitField Fetch Words  
: ADC3_SMPx_x@ ADC3_SMPR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

ADC3_SMPR2 (read-write)
$00000000 CONSTANT RESET_ADC3_SMPR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift ADC3_SMPR2 bis!        \ ADC3_SMPx_x	Bit 0	 Width 32
\ ADC3_SMPR2 Register BitField Fetch Words  
: ADC3_SMPx_x@ ADC3_SMPR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

ADC3_JOFR1 (read-write)
$00000000 CONSTANT RESET_ADC3_JOFR1 
 %xxxxxxxxxxxx  0 lshift ADC3_JOFR1 bis!        \ ADC3_JOFFSET1	Bit 0	 Width 12
\ ADC3_JOFR1 Register BitField Fetch Words  
: ADC3_JOFFSET1@ ADC3_JOFR1 @ %11111111111  0 lshift and 0 rshift ; 

ADC3_JOFR2 (read-write)
$00000000 CONSTANT RESET_ADC3_JOFR2 
 %xxxxxxxxxxxx  0 lshift ADC3_JOFR2 bis!        \ ADC3_JOFFSET2	Bit 0	 Width 12
\ ADC3_JOFR2 Register BitField Fetch Words  
: ADC3_JOFFSET2@ ADC3_JOFR2 @ %11111111111  0 lshift and 0 rshift ; 

ADC3_JOFR3 (read-write)
$00000000 CONSTANT RESET_ADC3_JOFR3 
 %xxxxxxxxxxxx  0 lshift ADC3_JOFR3 bis!        \ ADC3_JOFFSET3	Bit 0	 Width 12
\ ADC3_JOFR3 Register BitField Fetch Words  
: ADC3_JOFFSET3@ ADC3_JOFR3 @ %11111111111  0 lshift and 0 rshift ; 

ADC3_JOFR4 (read-write)
$00000000 CONSTANT RESET_ADC3_JOFR4 
 %xxxxxxxxxxxx  0 lshift ADC3_JOFR4 bis!        \ ADC3_JOFFSET4	Bit 0	 Width 12
\ ADC3_JOFR4 Register BitField Fetch Words  
: ADC3_JOFFSET4@ ADC3_JOFR4 @ %11111111111  0 lshift and 0 rshift ; 

ADC3_HTR (read-write)
$00000FFF CONSTANT RESET_ADC3_HTR 
 %xxxxxxxxxxxx  0 lshift ADC3_HTR bis!        \ ADC3_HT	Bit 0	 Width 12
\ ADC3_HTR Register BitField Fetch Words  
: ADC3_HT@ ADC3_HTR @ %11111111111  0 lshift and 0 rshift ; 

ADC3_LTR (read-write)
$00000000 CONSTANT RESET_ADC3_LTR 
 %xxxxxxxxxxxx  0 lshift ADC3_LTR bis!        \ ADC3_LT	Bit 0	 Width 12
\ ADC3_LTR Register BitField Fetch Words  
: ADC3_LT@ ADC3_LTR @ %11111111111  0 lshift and 0 rshift ; 

ADC3_SQR1 (read-write)
$00000000 CONSTANT RESET_ADC3_SQR1 
 %xxxx  20 lshift ADC3_SQR1 bis!        \ ADC3_L	Bit 20	 Width 4
 %xxxxx  15 lshift ADC3_SQR1 bis!        \ ADC3_SQ16	Bit 15	 Width 5
 %xxxxx  10 lshift ADC3_SQR1 bis!        \ ADC3_SQ15	Bit 10	 Width 5
 %xxxxx  5 lshift ADC3_SQR1 bis!        \ ADC3_SQ14	Bit 5	 Width 5
 %xxxxx  0 lshift ADC3_SQR1 bis!        \ ADC3_SQ13	Bit 0	 Width 5
\ ADC3_SQR1 Register BitField Fetch Words  
: ADC3_L@ ADC3_SQR1 @ %1111  20 lshift and 20 rshift ; 
: ADC3_SQ16@ ADC3_SQR1 @ %11111  15 lshift and 15 rshift ; 
: ADC3_SQ15@ ADC3_SQR1 @ %11111  10 lshift and 10 rshift ; 
: ADC3_SQ14@ ADC3_SQR1 @ %11111  5 lshift and 5 rshift ; 
: ADC3_SQ13@ ADC3_SQR1 @ %11111  0 lshift and 0 rshift ; 

ADC3_SQR2 (read-write)
$00000000 CONSTANT RESET_ADC3_SQR2 
 %xxxxx  25 lshift ADC3_SQR2 bis!        \ ADC3_SQ12	Bit 25	 Width 5
 %xxxxx  20 lshift ADC3_SQR2 bis!        \ ADC3_SQ11	Bit 20	 Width 5
 %xxxxx  15 lshift ADC3_SQR2 bis!        \ ADC3_SQ10	Bit 15	 Width 5
 %xxxxx  10 lshift ADC3_SQR2 bis!        \ ADC3_SQ9	Bit 10	 Width 5
 %xxxxx  5 lshift ADC3_SQR2 bis!        \ ADC3_SQ8	Bit 5	 Width 5
 %xxxxx  0 lshift ADC3_SQR2 bis!        \ ADC3_SQ7	Bit 0	 Width 5
\ ADC3_SQR2 Register BitField Fetch Words  
: ADC3_SQ12@ ADC3_SQR2 @ %11111  25 lshift and 25 rshift ; 
: ADC3_SQ11@ ADC3_SQR2 @ %11111  20 lshift and 20 rshift ; 
: ADC3_SQ10@ ADC3_SQR2 @ %11111  15 lshift and 15 rshift ; 
: ADC3_SQ9@ ADC3_SQR2 @ %11111  10 lshift and 10 rshift ; 
: ADC3_SQ8@ ADC3_SQR2 @ %11111  5 lshift and 5 rshift ; 
: ADC3_SQ7@ ADC3_SQR2 @ %11111  0 lshift and 0 rshift ; 

ADC3_SQR3 (read-write)
$00000000 CONSTANT RESET_ADC3_SQR3 
 %xxxxx  25 lshift ADC3_SQR3 bis!        \ ADC3_SQ6	Bit 25	 Width 5
 %xxxxx  20 lshift ADC3_SQR3 bis!        \ ADC3_SQ5	Bit 20	 Width 5
 %xxxxx  15 lshift ADC3_SQR3 bis!        \ ADC3_SQ4	Bit 15	 Width 5
 %xxxxx  10 lshift ADC3_SQR3 bis!        \ ADC3_SQ3	Bit 10	 Width 5
 %xxxxx  5 lshift ADC3_SQR3 bis!        \ ADC3_SQ2	Bit 5	 Width 5
 %xxxxx  0 lshift ADC3_SQR3 bis!        \ ADC3_SQ1	Bit 0	 Width 5
\ ADC3_SQR3 Register BitField Fetch Words  
: ADC3_SQ6@ ADC3_SQR3 @ %11111  25 lshift and 25 rshift ; 
: ADC3_SQ5@ ADC3_SQR3 @ %11111  20 lshift and 20 rshift ; 
: ADC3_SQ4@ ADC3_SQR3 @ %11111  15 lshift and 15 rshift ; 
: ADC3_SQ3@ ADC3_SQR3 @ %11111  10 lshift and 10 rshift ; 
: ADC3_SQ2@ ADC3_SQR3 @ %11111  5 lshift and 5 rshift ; 
: ADC3_SQ1@ ADC3_SQR3 @ %11111  0 lshift and 0 rshift ; 

ADC3_JSQR (read-write)
$00000000 CONSTANT RESET_ADC3_JSQR 
 %xx  20 lshift ADC3_JSQR bis!        \ ADC3_JL	Bit 20	 Width 2
 %xxxxx  15 lshift ADC3_JSQR bis!        \ ADC3_JSQ4	Bit 15	 Width 5
 %xxxxx  10 lshift ADC3_JSQR bis!        \ ADC3_JSQ3	Bit 10	 Width 5
 %xxxxx  5 lshift ADC3_JSQR bis!        \ ADC3_JSQ2	Bit 5	 Width 5
 %xxxxx  0 lshift ADC3_JSQR bis!        \ ADC3_JSQ1	Bit 0	 Width 5
\ ADC3_JSQR Register BitField Fetch Words  
: ADC3_JL@ ADC3_JSQR @ %11  20 lshift and 20 rshift ; 
: ADC3_JSQ4@ ADC3_JSQR @ %11111  15 lshift and 15 rshift ; 
: ADC3_JSQ3@ ADC3_JSQR @ %11111  10 lshift and 10 rshift ; 
: ADC3_JSQ2@ ADC3_JSQR @ %11111  5 lshift and 5 rshift ; 
: ADC3_JSQ1@ ADC3_JSQR @ %11111  0 lshift and 0 rshift ; 

ADC3_JDR1 (read-only)
$00000000 CONSTANT RESET_ADC3_JDR1 
 %xxxxxxxxxxxxxxxx  0 lshift ADC3_JDR1 bis!        \ ADC3_JDATA	Bit 0	 Width 16
\ ADC3_JDR1 Register BitField Fetch Words  
: ADC3_JDATA@ ADC3_JDR1 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC3_JDR2 (read-only)
$00000000 CONSTANT RESET_ADC3_JDR2 
 %xxxxxxxxxxxxxxxx  0 lshift ADC3_JDR2 bis!        \ ADC3_JDATA	Bit 0	 Width 16
\ ADC3_JDR2 Register BitField Fetch Words  
: ADC3_JDATA@ ADC3_JDR2 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC3_JDR3 (read-only)
$00000000 CONSTANT RESET_ADC3_JDR3 
 %xxxxxxxxxxxxxxxx  0 lshift ADC3_JDR3 bis!        \ ADC3_JDATA	Bit 0	 Width 16
\ ADC3_JDR3 Register BitField Fetch Words  
: ADC3_JDATA@ ADC3_JDR3 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC3_JDR4 (read-only)
$00000000 CONSTANT RESET_ADC3_JDR4 
 %xxxxxxxxxxxxxxxx  0 lshift ADC3_JDR4 bis!        \ ADC3_JDATA	Bit 0	 Width 16
\ ADC3_JDR4 Register BitField Fetch Words  
: ADC3_JDATA@ ADC3_JDR4 @ %1111111111111111  0 lshift and 0 rshift ; 

ADC3_DR (read-only)
$00000000 CONSTANT RESET_ADC3_DR 
 %xxxxxxxxxxxxxxxx  0 lshift ADC3_DR bis!        \ ADC3_DATA	Bit 0	 Width 16
\ ADC3_DR Register BitField Fetch Words  
: ADC3_DATA@ ADC3_DR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### USART6 ###################################
USART6_SR ()
$00C00000 CONSTANT RESET_USART6_SR 
 %1  9 lshift USART6_SR bis!        \ USART6_CTS	Bit 9	 Width 1
 %1  8 lshift USART6_SR bis!        \ USART6_LBD	Bit 8	 Width 1
 %1  7 lshift USART6_SR bis!        \ USART6_TXE	Bit 7	 Width 1
 %1  6 lshift USART6_SR bis!        \ USART6_TC	Bit 6	 Width 1
 %1  5 lshift USART6_SR bis!        \ USART6_RXNE	Bit 5	 Width 1
 %1  4 lshift USART6_SR bis!        \ USART6_IDLE	Bit 4	 Width 1
 %1  3 lshift USART6_SR bis!        \ USART6_ORE	Bit 3	 Width 1
 %1  2 lshift USART6_SR bis!        \ USART6_NF	Bit 2	 Width 1
 %1  1 lshift USART6_SR bis!        \ USART6_FE	Bit 1	 Width 1
 %1  0 lshift USART6_SR bis!        \ USART6_PE	Bit 0	 Width 1
\ USART6_SR Register BitField Fetch Words  
: USART6_CTS@ USART6_SR @ %1  9 lshift and 9 rshift ; 
: USART6_LBD@ USART6_SR @ %1  8 lshift and 8 rshift ; 
: USART6_TXE@ USART6_SR @ %1  7 lshift and 7 rshift ; 
: USART6_TC@ USART6_SR @ %1  6 lshift and 6 rshift ; 
: USART6_RXNE@ USART6_SR @ %1  5 lshift and 5 rshift ; 
: USART6_IDLE@ USART6_SR @ %1  4 lshift and 4 rshift ; 
: USART6_ORE@ USART6_SR @ %1  3 lshift and 3 rshift ; 
: USART6_NF@ USART6_SR @ %1  2 lshift and 2 rshift ; 
: USART6_FE@ USART6_SR @ %1  1 lshift and 1 rshift ; 
: USART6_PE@ USART6_SR @ %1  0 lshift and 0 rshift ; 

USART6_DR (read-write)
$00000000 CONSTANT RESET_USART6_DR 
 %xxxxxxxxx  0 lshift USART6_DR bis!        \ USART6_DR	Bit 0	 Width 9
\ USART6_DR Register BitField Fetch Words  
: USART6_DR@ USART6_DR @ %111111111  0 lshift and 0 rshift ; 

USART6_BRR (read-write)
$0000 CONSTANT RESET_USART6_BRR 
 %xxxxxxxxxxxx  4 lshift USART6_BRR bis!        \ USART6_DIV_Mantissa	Bit 4	 Width 12
 %xxxx  0 lshift USART6_BRR bis!        \ USART6_DIV_Fraction	Bit 0	 Width 4
\ USART6_BRR Register BitField Fetch Words  
: USART6_DIV_Mantissa@ USART6_BRR @ %11111111111  4 lshift and 4 rshift ; 
: USART6_DIV_Fraction@ USART6_BRR @ %1111  0 lshift and 0 rshift ; 

USART6_CR1 (read-write)
$0000 CONSTANT RESET_USART6_CR1 
 %1  15 lshift USART6_CR1 bis!        \ USART6_OVER8	Bit 15	 Width 1
 %1  13 lshift USART6_CR1 bis!        \ USART6_UE	Bit 13	 Width 1
 %1  12 lshift USART6_CR1 bis!        \ USART6_M	Bit 12	 Width 1
 %1  11 lshift USART6_CR1 bis!        \ USART6_WAKE	Bit 11	 Width 1
 %1  10 lshift USART6_CR1 bis!        \ USART6_PCE	Bit 10	 Width 1
 %1  9 lshift USART6_CR1 bis!        \ USART6_PS	Bit 9	 Width 1
 %1  8 lshift USART6_CR1 bis!        \ USART6_PEIE	Bit 8	 Width 1
 %1  7 lshift USART6_CR1 bis!        \ USART6_TXEIE	Bit 7	 Width 1
 %1  6 lshift USART6_CR1 bis!        \ USART6_TCIE	Bit 6	 Width 1
 %1  5 lshift USART6_CR1 bis!        \ USART6_RXNEIE	Bit 5	 Width 1
 %1  4 lshift USART6_CR1 bis!        \ USART6_IDLEIE	Bit 4	 Width 1
 %1  3 lshift USART6_CR1 bis!        \ USART6_TE	Bit 3	 Width 1
 %1  2 lshift USART6_CR1 bis!        \ USART6_RE	Bit 2	 Width 1
 %1  1 lshift USART6_CR1 bis!        \ USART6_RWU	Bit 1	 Width 1
 %1  0 lshift USART6_CR1 bis!        \ USART6_SBK	Bit 0	 Width 1
\ USART6_CR1 Register BitField Fetch Words  
: USART6_OVER8@ USART6_CR1 @ %1  15 lshift and 15 rshift ; 
: USART6_UE@ USART6_CR1 @ %1  13 lshift and 13 rshift ; 
: USART6_M@ USART6_CR1 @ %1  12 lshift and 12 rshift ; 
: USART6_WAKE@ USART6_CR1 @ %1  11 lshift and 11 rshift ; 
: USART6_PCE@ USART6_CR1 @ %1  10 lshift and 10 rshift ; 
: USART6_PS@ USART6_CR1 @ %1  9 lshift and 9 rshift ; 
: USART6_PEIE@ USART6_CR1 @ %1  8 lshift and 8 rshift ; 
: USART6_TXEIE@ USART6_CR1 @ %1  7 lshift and 7 rshift ; 
: USART6_TCIE@ USART6_CR1 @ %1  6 lshift and 6 rshift ; 
: USART6_RXNEIE@ USART6_CR1 @ %1  5 lshift and 5 rshift ; 
: USART6_IDLEIE@ USART6_CR1 @ %1  4 lshift and 4 rshift ; 
: USART6_TE@ USART6_CR1 @ %1  3 lshift and 3 rshift ; 
: USART6_RE@ USART6_CR1 @ %1  2 lshift and 2 rshift ; 
: USART6_RWU@ USART6_CR1 @ %1  1 lshift and 1 rshift ; 
: USART6_SBK@ USART6_CR1 @ %1  0 lshift and 0 rshift ; 

USART6_CR2 (read-write)
$0000 CONSTANT RESET_USART6_CR2 
 %1  14 lshift USART6_CR2 bis!        \ USART6_LINEN	Bit 14	 Width 1
 %xx  12 lshift USART6_CR2 bis!        \ USART6_STOP	Bit 12	 Width 2
 %1  11 lshift USART6_CR2 bis!        \ USART6_CLKEN	Bit 11	 Width 1
 %1  10 lshift USART6_CR2 bis!        \ USART6_CPOL	Bit 10	 Width 1
 %1  9 lshift USART6_CR2 bis!        \ USART6_CPHA	Bit 9	 Width 1
 %1  8 lshift USART6_CR2 bis!        \ USART6_LBCL	Bit 8	 Width 1
 %1  6 lshift USART6_CR2 bis!        \ USART6_LBDIE	Bit 6	 Width 1
 %1  5 lshift USART6_CR2 bis!        \ USART6_LBDL	Bit 5	 Width 1
 %xxxx  0 lshift USART6_CR2 bis!        \ USART6_ADD	Bit 0	 Width 4
\ USART6_CR2 Register BitField Fetch Words  
: USART6_LINEN@ USART6_CR2 @ %1  14 lshift and 14 rshift ; 
: USART6_STOP@ USART6_CR2 @ %11  12 lshift and 12 rshift ; 
: USART6_CLKEN@ USART6_CR2 @ %1  11 lshift and 11 rshift ; 
: USART6_CPOL@ USART6_CR2 @ %1  10 lshift and 10 rshift ; 
: USART6_CPHA@ USART6_CR2 @ %1  9 lshift and 9 rshift ; 
: USART6_LBCL@ USART6_CR2 @ %1  8 lshift and 8 rshift ; 
: USART6_LBDIE@ USART6_CR2 @ %1  6 lshift and 6 rshift ; 
: USART6_LBDL@ USART6_CR2 @ %1  5 lshift and 5 rshift ; 
: USART6_ADD@ USART6_CR2 @ %1111  0 lshift and 0 rshift ; 

USART6_CR3 (read-write)
$0000 CONSTANT RESET_USART6_CR3 
 %1  11 lshift USART6_CR3 bis!        \ USART6_ONEBIT	Bit 11	 Width 1
 %1  10 lshift USART6_CR3 bis!        \ USART6_CTSIE	Bit 10	 Width 1
 %1  9 lshift USART6_CR3 bis!        \ USART6_CTSE	Bit 9	 Width 1
 %1  8 lshift USART6_CR3 bis!        \ USART6_RTSE	Bit 8	 Width 1
 %1  7 lshift USART6_CR3 bis!        \ USART6_DMAT	Bit 7	 Width 1
 %1  6 lshift USART6_CR3 bis!        \ USART6_DMAR	Bit 6	 Width 1
 %1  5 lshift USART6_CR3 bis!        \ USART6_SCEN	Bit 5	 Width 1
 %1  4 lshift USART6_CR3 bis!        \ USART6_NACK	Bit 4	 Width 1
 %1  3 lshift USART6_CR3 bis!        \ USART6_HDSEL	Bit 3	 Width 1
 %1  2 lshift USART6_CR3 bis!        \ USART6_IRLP	Bit 2	 Width 1
 %1  1 lshift USART6_CR3 bis!        \ USART6_IREN	Bit 1	 Width 1
 %1  0 lshift USART6_CR3 bis!        \ USART6_EIE	Bit 0	 Width 1
\ USART6_CR3 Register BitField Fetch Words  
: USART6_ONEBIT@ USART6_CR3 @ %1  11 lshift and 11 rshift ; 
: USART6_CTSIE@ USART6_CR3 @ %1  10 lshift and 10 rshift ; 
: USART6_CTSE@ USART6_CR3 @ %1  9 lshift and 9 rshift ; 
: USART6_RTSE@ USART6_CR3 @ %1  8 lshift and 8 rshift ; 
: USART6_DMAT@ USART6_CR3 @ %1  7 lshift and 7 rshift ; 
: USART6_DMAR@ USART6_CR3 @ %1  6 lshift and 6 rshift ; 
: USART6_SCEN@ USART6_CR3 @ %1  5 lshift and 5 rshift ; 
: USART6_NACK@ USART6_CR3 @ %1  4 lshift and 4 rshift ; 
: USART6_HDSEL@ USART6_CR3 @ %1  3 lshift and 3 rshift ; 
: USART6_IRLP@ USART6_CR3 @ %1  2 lshift and 2 rshift ; 
: USART6_IREN@ USART6_CR3 @ %1  1 lshift and 1 rshift ; 
: USART6_EIE@ USART6_CR3 @ %1  0 lshift and 0 rshift ; 

USART6_GTPR (read-write)
$0000 CONSTANT RESET_USART6_GTPR 
 %xxxxxxxx  8 lshift USART6_GTPR bis!        \ USART6_GT	Bit 8	 Width 8
 %xxxxxxxx  0 lshift USART6_GTPR bis!        \ USART6_PSC	Bit 0	 Width 8
\ USART6_GTPR Register BitField Fetch Words  
: USART6_GT@ USART6_GTPR @ %11111111  8 lshift and 8 rshift ; 
: USART6_PSC@ USART6_GTPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### USART1 ###################################
USART1_SR ()
$00C00000 CONSTANT RESET_USART1_SR 
 %1  9 lshift USART1_SR bis!        \ USART1_CTS	Bit 9	 Width 1
 %1  8 lshift USART1_SR bis!        \ USART1_LBD	Bit 8	 Width 1
 %1  7 lshift USART1_SR bis!        \ USART1_TXE	Bit 7	 Width 1
 %1  6 lshift USART1_SR bis!        \ USART1_TC	Bit 6	 Width 1
 %1  5 lshift USART1_SR bis!        \ USART1_RXNE	Bit 5	 Width 1
 %1  4 lshift USART1_SR bis!        \ USART1_IDLE	Bit 4	 Width 1
 %1  3 lshift USART1_SR bis!        \ USART1_ORE	Bit 3	 Width 1
 %1  2 lshift USART1_SR bis!        \ USART1_NF	Bit 2	 Width 1
 %1  1 lshift USART1_SR bis!        \ USART1_FE	Bit 1	 Width 1
 %1  0 lshift USART1_SR bis!        \ USART1_PE	Bit 0	 Width 1
\ USART1_SR Register BitField Fetch Words  
: USART1_CTS@ USART1_SR @ %1  9 lshift and 9 rshift ; 
: USART1_LBD@ USART1_SR @ %1  8 lshift and 8 rshift ; 
: USART1_TXE@ USART1_SR @ %1  7 lshift and 7 rshift ; 
: USART1_TC@ USART1_SR @ %1  6 lshift and 6 rshift ; 
: USART1_RXNE@ USART1_SR @ %1  5 lshift and 5 rshift ; 
: USART1_IDLE@ USART1_SR @ %1  4 lshift and 4 rshift ; 
: USART1_ORE@ USART1_SR @ %1  3 lshift and 3 rshift ; 
: USART1_NF@ USART1_SR @ %1  2 lshift and 2 rshift ; 
: USART1_FE@ USART1_SR @ %1  1 lshift and 1 rshift ; 
: USART1_PE@ USART1_SR @ %1  0 lshift and 0 rshift ; 

USART1_DR (read-write)
$00000000 CONSTANT RESET_USART1_DR 
 %xxxxxxxxx  0 lshift USART1_DR bis!        \ USART1_DR	Bit 0	 Width 9
\ USART1_DR Register BitField Fetch Words  
: USART1_DR@ USART1_DR @ %111111111  0 lshift and 0 rshift ; 

USART1_BRR (read-write)
$0000 CONSTANT RESET_USART1_BRR 
 %xxxxxxxxxxxx  4 lshift USART1_BRR bis!        \ USART1_DIV_Mantissa	Bit 4	 Width 12
 %xxxx  0 lshift USART1_BRR bis!        \ USART1_DIV_Fraction	Bit 0	 Width 4
\ USART1_BRR Register BitField Fetch Words  
: USART1_DIV_Mantissa@ USART1_BRR @ %11111111111  4 lshift and 4 rshift ; 
: USART1_DIV_Fraction@ USART1_BRR @ %1111  0 lshift and 0 rshift ; 

USART1_CR1 (read-write)
$0000 CONSTANT RESET_USART1_CR1 
 %1  15 lshift USART1_CR1 bis!        \ USART1_OVER8	Bit 15	 Width 1
 %1  13 lshift USART1_CR1 bis!        \ USART1_UE	Bit 13	 Width 1
 %1  12 lshift USART1_CR1 bis!        \ USART1_M	Bit 12	 Width 1
 %1  11 lshift USART1_CR1 bis!        \ USART1_WAKE	Bit 11	 Width 1
 %1  10 lshift USART1_CR1 bis!        \ USART1_PCE	Bit 10	 Width 1
 %1  9 lshift USART1_CR1 bis!        \ USART1_PS	Bit 9	 Width 1
 %1  8 lshift USART1_CR1 bis!        \ USART1_PEIE	Bit 8	 Width 1
 %1  7 lshift USART1_CR1 bis!        \ USART1_TXEIE	Bit 7	 Width 1
 %1  6 lshift USART1_CR1 bis!        \ USART1_TCIE	Bit 6	 Width 1
 %1  5 lshift USART1_CR1 bis!        \ USART1_RXNEIE	Bit 5	 Width 1
 %1  4 lshift USART1_CR1 bis!        \ USART1_IDLEIE	Bit 4	 Width 1
 %1  3 lshift USART1_CR1 bis!        \ USART1_TE	Bit 3	 Width 1
 %1  2 lshift USART1_CR1 bis!        \ USART1_RE	Bit 2	 Width 1
 %1  1 lshift USART1_CR1 bis!        \ USART1_RWU	Bit 1	 Width 1
 %1  0 lshift USART1_CR1 bis!        \ USART1_SBK	Bit 0	 Width 1
\ USART1_CR1 Register BitField Fetch Words  
: USART1_OVER8@ USART1_CR1 @ %1  15 lshift and 15 rshift ; 
: USART1_UE@ USART1_CR1 @ %1  13 lshift and 13 rshift ; 
: USART1_M@ USART1_CR1 @ %1  12 lshift and 12 rshift ; 
: USART1_WAKE@ USART1_CR1 @ %1  11 lshift and 11 rshift ; 
: USART1_PCE@ USART1_CR1 @ %1  10 lshift and 10 rshift ; 
: USART1_PS@ USART1_CR1 @ %1  9 lshift and 9 rshift ; 
: USART1_PEIE@ USART1_CR1 @ %1  8 lshift and 8 rshift ; 
: USART1_TXEIE@ USART1_CR1 @ %1  7 lshift and 7 rshift ; 
: USART1_TCIE@ USART1_CR1 @ %1  6 lshift and 6 rshift ; 
: USART1_RXNEIE@ USART1_CR1 @ %1  5 lshift and 5 rshift ; 
: USART1_IDLEIE@ USART1_CR1 @ %1  4 lshift and 4 rshift ; 
: USART1_TE@ USART1_CR1 @ %1  3 lshift and 3 rshift ; 
: USART1_RE@ USART1_CR1 @ %1  2 lshift and 2 rshift ; 
: USART1_RWU@ USART1_CR1 @ %1  1 lshift and 1 rshift ; 
: USART1_SBK@ USART1_CR1 @ %1  0 lshift and 0 rshift ; 

USART1_CR2 (read-write)
$0000 CONSTANT RESET_USART1_CR2 
 %1  14 lshift USART1_CR2 bis!        \ USART1_LINEN	Bit 14	 Width 1
 %xx  12 lshift USART1_CR2 bis!        \ USART1_STOP	Bit 12	 Width 2
 %1  11 lshift USART1_CR2 bis!        \ USART1_CLKEN	Bit 11	 Width 1
 %1  10 lshift USART1_CR2 bis!        \ USART1_CPOL	Bit 10	 Width 1
 %1  9 lshift USART1_CR2 bis!        \ USART1_CPHA	Bit 9	 Width 1
 %1  8 lshift USART1_CR2 bis!        \ USART1_LBCL	Bit 8	 Width 1
 %1  6 lshift USART1_CR2 bis!        \ USART1_LBDIE	Bit 6	 Width 1
 %1  5 lshift USART1_CR2 bis!        \ USART1_LBDL	Bit 5	 Width 1
 %xxxx  0 lshift USART1_CR2 bis!        \ USART1_ADD	Bit 0	 Width 4
\ USART1_CR2 Register BitField Fetch Words  
: USART1_LINEN@ USART1_CR2 @ %1  14 lshift and 14 rshift ; 
: USART1_STOP@ USART1_CR2 @ %11  12 lshift and 12 rshift ; 
: USART1_CLKEN@ USART1_CR2 @ %1  11 lshift and 11 rshift ; 
: USART1_CPOL@ USART1_CR2 @ %1  10 lshift and 10 rshift ; 
: USART1_CPHA@ USART1_CR2 @ %1  9 lshift and 9 rshift ; 
: USART1_LBCL@ USART1_CR2 @ %1  8 lshift and 8 rshift ; 
: USART1_LBDIE@ USART1_CR2 @ %1  6 lshift and 6 rshift ; 
: USART1_LBDL@ USART1_CR2 @ %1  5 lshift and 5 rshift ; 
: USART1_ADD@ USART1_CR2 @ %1111  0 lshift and 0 rshift ; 

USART1_CR3 (read-write)
$0000 CONSTANT RESET_USART1_CR3 
 %1  11 lshift USART1_CR3 bis!        \ USART1_ONEBIT	Bit 11	 Width 1
 %1  10 lshift USART1_CR3 bis!        \ USART1_CTSIE	Bit 10	 Width 1
 %1  9 lshift USART1_CR3 bis!        \ USART1_CTSE	Bit 9	 Width 1
 %1  8 lshift USART1_CR3 bis!        \ USART1_RTSE	Bit 8	 Width 1
 %1  7 lshift USART1_CR3 bis!        \ USART1_DMAT	Bit 7	 Width 1
 %1  6 lshift USART1_CR3 bis!        \ USART1_DMAR	Bit 6	 Width 1
 %1  5 lshift USART1_CR3 bis!        \ USART1_SCEN	Bit 5	 Width 1
 %1  4 lshift USART1_CR3 bis!        \ USART1_NACK	Bit 4	 Width 1
 %1  3 lshift USART1_CR3 bis!        \ USART1_HDSEL	Bit 3	 Width 1
 %1  2 lshift USART1_CR3 bis!        \ USART1_IRLP	Bit 2	 Width 1
 %1  1 lshift USART1_CR3 bis!        \ USART1_IREN	Bit 1	 Width 1
 %1  0 lshift USART1_CR3 bis!        \ USART1_EIE	Bit 0	 Width 1
\ USART1_CR3 Register BitField Fetch Words  
: USART1_ONEBIT@ USART1_CR3 @ %1  11 lshift and 11 rshift ; 
: USART1_CTSIE@ USART1_CR3 @ %1  10 lshift and 10 rshift ; 
: USART1_CTSE@ USART1_CR3 @ %1  9 lshift and 9 rshift ; 
: USART1_RTSE@ USART1_CR3 @ %1  8 lshift and 8 rshift ; 
: USART1_DMAT@ USART1_CR3 @ %1  7 lshift and 7 rshift ; 
: USART1_DMAR@ USART1_CR3 @ %1  6 lshift and 6 rshift ; 
: USART1_SCEN@ USART1_CR3 @ %1  5 lshift and 5 rshift ; 
: USART1_NACK@ USART1_CR3 @ %1  4 lshift and 4 rshift ; 
: USART1_HDSEL@ USART1_CR3 @ %1  3 lshift and 3 rshift ; 
: USART1_IRLP@ USART1_CR3 @ %1  2 lshift and 2 rshift ; 
: USART1_IREN@ USART1_CR3 @ %1  1 lshift and 1 rshift ; 
: USART1_EIE@ USART1_CR3 @ %1  0 lshift and 0 rshift ; 

USART1_GTPR (read-write)
$0000 CONSTANT RESET_USART1_GTPR 
 %xxxxxxxx  8 lshift USART1_GTPR bis!        \ USART1_GT	Bit 8	 Width 8
 %xxxxxxxx  0 lshift USART1_GTPR bis!        \ USART1_PSC	Bit 0	 Width 8
\ USART1_GTPR Register BitField Fetch Words  
: USART1_GT@ USART1_GTPR @ %11111111  8 lshift and 8 rshift ; 
: USART1_PSC@ USART1_GTPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### USART2 ###################################
USART2_SR ()
$00C00000 CONSTANT RESET_USART2_SR 
 %1  9 lshift USART2_SR bis!        \ USART2_CTS	Bit 9	 Width 1
 %1  8 lshift USART2_SR bis!        \ USART2_LBD	Bit 8	 Width 1
 %1  7 lshift USART2_SR bis!        \ USART2_TXE	Bit 7	 Width 1
 %1  6 lshift USART2_SR bis!        \ USART2_TC	Bit 6	 Width 1
 %1  5 lshift USART2_SR bis!        \ USART2_RXNE	Bit 5	 Width 1
 %1  4 lshift USART2_SR bis!        \ USART2_IDLE	Bit 4	 Width 1
 %1  3 lshift USART2_SR bis!        \ USART2_ORE	Bit 3	 Width 1
 %1  2 lshift USART2_SR bis!        \ USART2_NF	Bit 2	 Width 1
 %1  1 lshift USART2_SR bis!        \ USART2_FE	Bit 1	 Width 1
 %1  0 lshift USART2_SR bis!        \ USART2_PE	Bit 0	 Width 1
\ USART2_SR Register BitField Fetch Words  
: USART2_CTS@ USART2_SR @ %1  9 lshift and 9 rshift ; 
: USART2_LBD@ USART2_SR @ %1  8 lshift and 8 rshift ; 
: USART2_TXE@ USART2_SR @ %1  7 lshift and 7 rshift ; 
: USART2_TC@ USART2_SR @ %1  6 lshift and 6 rshift ; 
: USART2_RXNE@ USART2_SR @ %1  5 lshift and 5 rshift ; 
: USART2_IDLE@ USART2_SR @ %1  4 lshift and 4 rshift ; 
: USART2_ORE@ USART2_SR @ %1  3 lshift and 3 rshift ; 
: USART2_NF@ USART2_SR @ %1  2 lshift and 2 rshift ; 
: USART2_FE@ USART2_SR @ %1  1 lshift and 1 rshift ; 
: USART2_PE@ USART2_SR @ %1  0 lshift and 0 rshift ; 

USART2_DR (read-write)
$00000000 CONSTANT RESET_USART2_DR 
 %xxxxxxxxx  0 lshift USART2_DR bis!        \ USART2_DR	Bit 0	 Width 9
\ USART2_DR Register BitField Fetch Words  
: USART2_DR@ USART2_DR @ %111111111  0 lshift and 0 rshift ; 

USART2_BRR (read-write)
$0000 CONSTANT RESET_USART2_BRR 
 %xxxxxxxxxxxx  4 lshift USART2_BRR bis!        \ USART2_DIV_Mantissa	Bit 4	 Width 12
 %xxxx  0 lshift USART2_BRR bis!        \ USART2_DIV_Fraction	Bit 0	 Width 4
\ USART2_BRR Register BitField Fetch Words  
: USART2_DIV_Mantissa@ USART2_BRR @ %11111111111  4 lshift and 4 rshift ; 
: USART2_DIV_Fraction@ USART2_BRR @ %1111  0 lshift and 0 rshift ; 

USART2_CR1 (read-write)
$0000 CONSTANT RESET_USART2_CR1 
 %1  15 lshift USART2_CR1 bis!        \ USART2_OVER8	Bit 15	 Width 1
 %1  13 lshift USART2_CR1 bis!        \ USART2_UE	Bit 13	 Width 1
 %1  12 lshift USART2_CR1 bis!        \ USART2_M	Bit 12	 Width 1
 %1  11 lshift USART2_CR1 bis!        \ USART2_WAKE	Bit 11	 Width 1
 %1  10 lshift USART2_CR1 bis!        \ USART2_PCE	Bit 10	 Width 1
 %1  9 lshift USART2_CR1 bis!        \ USART2_PS	Bit 9	 Width 1
 %1  8 lshift USART2_CR1 bis!        \ USART2_PEIE	Bit 8	 Width 1
 %1  7 lshift USART2_CR1 bis!        \ USART2_TXEIE	Bit 7	 Width 1
 %1  6 lshift USART2_CR1 bis!        \ USART2_TCIE	Bit 6	 Width 1
 %1  5 lshift USART2_CR1 bis!        \ USART2_RXNEIE	Bit 5	 Width 1
 %1  4 lshift USART2_CR1 bis!        \ USART2_IDLEIE	Bit 4	 Width 1
 %1  3 lshift USART2_CR1 bis!        \ USART2_TE	Bit 3	 Width 1
 %1  2 lshift USART2_CR1 bis!        \ USART2_RE	Bit 2	 Width 1
 %1  1 lshift USART2_CR1 bis!        \ USART2_RWU	Bit 1	 Width 1
 %1  0 lshift USART2_CR1 bis!        \ USART2_SBK	Bit 0	 Width 1
\ USART2_CR1 Register BitField Fetch Words  
: USART2_OVER8@ USART2_CR1 @ %1  15 lshift and 15 rshift ; 
: USART2_UE@ USART2_CR1 @ %1  13 lshift and 13 rshift ; 
: USART2_M@ USART2_CR1 @ %1  12 lshift and 12 rshift ; 
: USART2_WAKE@ USART2_CR1 @ %1  11 lshift and 11 rshift ; 
: USART2_PCE@ USART2_CR1 @ %1  10 lshift and 10 rshift ; 
: USART2_PS@ USART2_CR1 @ %1  9 lshift and 9 rshift ; 
: USART2_PEIE@ USART2_CR1 @ %1  8 lshift and 8 rshift ; 
: USART2_TXEIE@ USART2_CR1 @ %1  7 lshift and 7 rshift ; 
: USART2_TCIE@ USART2_CR1 @ %1  6 lshift and 6 rshift ; 
: USART2_RXNEIE@ USART2_CR1 @ %1  5 lshift and 5 rshift ; 
: USART2_IDLEIE@ USART2_CR1 @ %1  4 lshift and 4 rshift ; 
: USART2_TE@ USART2_CR1 @ %1  3 lshift and 3 rshift ; 
: USART2_RE@ USART2_CR1 @ %1  2 lshift and 2 rshift ; 
: USART2_RWU@ USART2_CR1 @ %1  1 lshift and 1 rshift ; 
: USART2_SBK@ USART2_CR1 @ %1  0 lshift and 0 rshift ; 

USART2_CR2 (read-write)
$0000 CONSTANT RESET_USART2_CR2 
 %1  14 lshift USART2_CR2 bis!        \ USART2_LINEN	Bit 14	 Width 1
 %xx  12 lshift USART2_CR2 bis!        \ USART2_STOP	Bit 12	 Width 2
 %1  11 lshift USART2_CR2 bis!        \ USART2_CLKEN	Bit 11	 Width 1
 %1  10 lshift USART2_CR2 bis!        \ USART2_CPOL	Bit 10	 Width 1
 %1  9 lshift USART2_CR2 bis!        \ USART2_CPHA	Bit 9	 Width 1
 %1  8 lshift USART2_CR2 bis!        \ USART2_LBCL	Bit 8	 Width 1
 %1  6 lshift USART2_CR2 bis!        \ USART2_LBDIE	Bit 6	 Width 1
 %1  5 lshift USART2_CR2 bis!        \ USART2_LBDL	Bit 5	 Width 1
 %xxxx  0 lshift USART2_CR2 bis!        \ USART2_ADD	Bit 0	 Width 4
\ USART2_CR2 Register BitField Fetch Words  
: USART2_LINEN@ USART2_CR2 @ %1  14 lshift and 14 rshift ; 
: USART2_STOP@ USART2_CR2 @ %11  12 lshift and 12 rshift ; 
: USART2_CLKEN@ USART2_CR2 @ %1  11 lshift and 11 rshift ; 
: USART2_CPOL@ USART2_CR2 @ %1  10 lshift and 10 rshift ; 
: USART2_CPHA@ USART2_CR2 @ %1  9 lshift and 9 rshift ; 
: USART2_LBCL@ USART2_CR2 @ %1  8 lshift and 8 rshift ; 
: USART2_LBDIE@ USART2_CR2 @ %1  6 lshift and 6 rshift ; 
: USART2_LBDL@ USART2_CR2 @ %1  5 lshift and 5 rshift ; 
: USART2_ADD@ USART2_CR2 @ %1111  0 lshift and 0 rshift ; 

USART2_CR3 (read-write)
$0000 CONSTANT RESET_USART2_CR3 
 %1  11 lshift USART2_CR3 bis!        \ USART2_ONEBIT	Bit 11	 Width 1
 %1  10 lshift USART2_CR3 bis!        \ USART2_CTSIE	Bit 10	 Width 1
 %1  9 lshift USART2_CR3 bis!        \ USART2_CTSE	Bit 9	 Width 1
 %1  8 lshift USART2_CR3 bis!        \ USART2_RTSE	Bit 8	 Width 1
 %1  7 lshift USART2_CR3 bis!        \ USART2_DMAT	Bit 7	 Width 1
 %1  6 lshift USART2_CR3 bis!        \ USART2_DMAR	Bit 6	 Width 1
 %1  5 lshift USART2_CR3 bis!        \ USART2_SCEN	Bit 5	 Width 1
 %1  4 lshift USART2_CR3 bis!        \ USART2_NACK	Bit 4	 Width 1
 %1  3 lshift USART2_CR3 bis!        \ USART2_HDSEL	Bit 3	 Width 1
 %1  2 lshift USART2_CR3 bis!        \ USART2_IRLP	Bit 2	 Width 1
 %1  1 lshift USART2_CR3 bis!        \ USART2_IREN	Bit 1	 Width 1
 %1  0 lshift USART2_CR3 bis!        \ USART2_EIE	Bit 0	 Width 1
\ USART2_CR3 Register BitField Fetch Words  
: USART2_ONEBIT@ USART2_CR3 @ %1  11 lshift and 11 rshift ; 
: USART2_CTSIE@ USART2_CR3 @ %1  10 lshift and 10 rshift ; 
: USART2_CTSE@ USART2_CR3 @ %1  9 lshift and 9 rshift ; 
: USART2_RTSE@ USART2_CR3 @ %1  8 lshift and 8 rshift ; 
: USART2_DMAT@ USART2_CR3 @ %1  7 lshift and 7 rshift ; 
: USART2_DMAR@ USART2_CR3 @ %1  6 lshift and 6 rshift ; 
: USART2_SCEN@ USART2_CR3 @ %1  5 lshift and 5 rshift ; 
: USART2_NACK@ USART2_CR3 @ %1  4 lshift and 4 rshift ; 
: USART2_HDSEL@ USART2_CR3 @ %1  3 lshift and 3 rshift ; 
: USART2_IRLP@ USART2_CR3 @ %1  2 lshift and 2 rshift ; 
: USART2_IREN@ USART2_CR3 @ %1  1 lshift and 1 rshift ; 
: USART2_EIE@ USART2_CR3 @ %1  0 lshift and 0 rshift ; 

USART2_GTPR (read-write)
$0000 CONSTANT RESET_USART2_GTPR 
 %xxxxxxxx  8 lshift USART2_GTPR bis!        \ USART2_GT	Bit 8	 Width 8
 %xxxxxxxx  0 lshift USART2_GTPR bis!        \ USART2_PSC	Bit 0	 Width 8
\ USART2_GTPR Register BitField Fetch Words  
: USART2_GT@ USART2_GTPR @ %11111111  8 lshift and 8 rshift ; 
: USART2_PSC@ USART2_GTPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### USART3 ###################################
USART3_SR ()
$00C00000 CONSTANT RESET_USART3_SR 
 %1  9 lshift USART3_SR bis!        \ USART3_CTS	Bit 9	 Width 1
 %1  8 lshift USART3_SR bis!        \ USART3_LBD	Bit 8	 Width 1
 %1  7 lshift USART3_SR bis!        \ USART3_TXE	Bit 7	 Width 1
 %1  6 lshift USART3_SR bis!        \ USART3_TC	Bit 6	 Width 1
 %1  5 lshift USART3_SR bis!        \ USART3_RXNE	Bit 5	 Width 1
 %1  4 lshift USART3_SR bis!        \ USART3_IDLE	Bit 4	 Width 1
 %1  3 lshift USART3_SR bis!        \ USART3_ORE	Bit 3	 Width 1
 %1  2 lshift USART3_SR bis!        \ USART3_NF	Bit 2	 Width 1
 %1  1 lshift USART3_SR bis!        \ USART3_FE	Bit 1	 Width 1
 %1  0 lshift USART3_SR bis!        \ USART3_PE	Bit 0	 Width 1
\ USART3_SR Register BitField Fetch Words  
: USART3_CTS@ USART3_SR @ %1  9 lshift and 9 rshift ; 
: USART3_LBD@ USART3_SR @ %1  8 lshift and 8 rshift ; 
: USART3_TXE@ USART3_SR @ %1  7 lshift and 7 rshift ; 
: USART3_TC@ USART3_SR @ %1  6 lshift and 6 rshift ; 
: USART3_RXNE@ USART3_SR @ %1  5 lshift and 5 rshift ; 
: USART3_IDLE@ USART3_SR @ %1  4 lshift and 4 rshift ; 
: USART3_ORE@ USART3_SR @ %1  3 lshift and 3 rshift ; 
: USART3_NF@ USART3_SR @ %1  2 lshift and 2 rshift ; 
: USART3_FE@ USART3_SR @ %1  1 lshift and 1 rshift ; 
: USART3_PE@ USART3_SR @ %1  0 lshift and 0 rshift ; 

USART3_DR (read-write)
$00000000 CONSTANT RESET_USART3_DR 
 %xxxxxxxxx  0 lshift USART3_DR bis!        \ USART3_DR	Bit 0	 Width 9
\ USART3_DR Register BitField Fetch Words  
: USART3_DR@ USART3_DR @ %111111111  0 lshift and 0 rshift ; 

USART3_BRR (read-write)
$0000 CONSTANT RESET_USART3_BRR 
 %xxxxxxxxxxxx  4 lshift USART3_BRR bis!        \ USART3_DIV_Mantissa	Bit 4	 Width 12
 %xxxx  0 lshift USART3_BRR bis!        \ USART3_DIV_Fraction	Bit 0	 Width 4
\ USART3_BRR Register BitField Fetch Words  
: USART3_DIV_Mantissa@ USART3_BRR @ %11111111111  4 lshift and 4 rshift ; 
: USART3_DIV_Fraction@ USART3_BRR @ %1111  0 lshift and 0 rshift ; 

USART3_CR1 (read-write)
$0000 CONSTANT RESET_USART3_CR1 
 %1  15 lshift USART3_CR1 bis!        \ USART3_OVER8	Bit 15	 Width 1
 %1  13 lshift USART3_CR1 bis!        \ USART3_UE	Bit 13	 Width 1
 %1  12 lshift USART3_CR1 bis!        \ USART3_M	Bit 12	 Width 1
 %1  11 lshift USART3_CR1 bis!        \ USART3_WAKE	Bit 11	 Width 1
 %1  10 lshift USART3_CR1 bis!        \ USART3_PCE	Bit 10	 Width 1
 %1  9 lshift USART3_CR1 bis!        \ USART3_PS	Bit 9	 Width 1
 %1  8 lshift USART3_CR1 bis!        \ USART3_PEIE	Bit 8	 Width 1
 %1  7 lshift USART3_CR1 bis!        \ USART3_TXEIE	Bit 7	 Width 1
 %1  6 lshift USART3_CR1 bis!        \ USART3_TCIE	Bit 6	 Width 1
 %1  5 lshift USART3_CR1 bis!        \ USART3_RXNEIE	Bit 5	 Width 1
 %1  4 lshift USART3_CR1 bis!        \ USART3_IDLEIE	Bit 4	 Width 1
 %1  3 lshift USART3_CR1 bis!        \ USART3_TE	Bit 3	 Width 1
 %1  2 lshift USART3_CR1 bis!        \ USART3_RE	Bit 2	 Width 1
 %1  1 lshift USART3_CR1 bis!        \ USART3_RWU	Bit 1	 Width 1
 %1  0 lshift USART3_CR1 bis!        \ USART3_SBK	Bit 0	 Width 1
\ USART3_CR1 Register BitField Fetch Words  
: USART3_OVER8@ USART3_CR1 @ %1  15 lshift and 15 rshift ; 
: USART3_UE@ USART3_CR1 @ %1  13 lshift and 13 rshift ; 
: USART3_M@ USART3_CR1 @ %1  12 lshift and 12 rshift ; 
: USART3_WAKE@ USART3_CR1 @ %1  11 lshift and 11 rshift ; 
: USART3_PCE@ USART3_CR1 @ %1  10 lshift and 10 rshift ; 
: USART3_PS@ USART3_CR1 @ %1  9 lshift and 9 rshift ; 
: USART3_PEIE@ USART3_CR1 @ %1  8 lshift and 8 rshift ; 
: USART3_TXEIE@ USART3_CR1 @ %1  7 lshift and 7 rshift ; 
: USART3_TCIE@ USART3_CR1 @ %1  6 lshift and 6 rshift ; 
: USART3_RXNEIE@ USART3_CR1 @ %1  5 lshift and 5 rshift ; 
: USART3_IDLEIE@ USART3_CR1 @ %1  4 lshift and 4 rshift ; 
: USART3_TE@ USART3_CR1 @ %1  3 lshift and 3 rshift ; 
: USART3_RE@ USART3_CR1 @ %1  2 lshift and 2 rshift ; 
: USART3_RWU@ USART3_CR1 @ %1  1 lshift and 1 rshift ; 
: USART3_SBK@ USART3_CR1 @ %1  0 lshift and 0 rshift ; 

USART3_CR2 (read-write)
$0000 CONSTANT RESET_USART3_CR2 
 %1  14 lshift USART3_CR2 bis!        \ USART3_LINEN	Bit 14	 Width 1
 %xx  12 lshift USART3_CR2 bis!        \ USART3_STOP	Bit 12	 Width 2
 %1  11 lshift USART3_CR2 bis!        \ USART3_CLKEN	Bit 11	 Width 1
 %1  10 lshift USART3_CR2 bis!        \ USART3_CPOL	Bit 10	 Width 1
 %1  9 lshift USART3_CR2 bis!        \ USART3_CPHA	Bit 9	 Width 1
 %1  8 lshift USART3_CR2 bis!        \ USART3_LBCL	Bit 8	 Width 1
 %1  6 lshift USART3_CR2 bis!        \ USART3_LBDIE	Bit 6	 Width 1
 %1  5 lshift USART3_CR2 bis!        \ USART3_LBDL	Bit 5	 Width 1
 %xxxx  0 lshift USART3_CR2 bis!        \ USART3_ADD	Bit 0	 Width 4
\ USART3_CR2 Register BitField Fetch Words  
: USART3_LINEN@ USART3_CR2 @ %1  14 lshift and 14 rshift ; 
: USART3_STOP@ USART3_CR2 @ %11  12 lshift and 12 rshift ; 
: USART3_CLKEN@ USART3_CR2 @ %1  11 lshift and 11 rshift ; 
: USART3_CPOL@ USART3_CR2 @ %1  10 lshift and 10 rshift ; 
: USART3_CPHA@ USART3_CR2 @ %1  9 lshift and 9 rshift ; 
: USART3_LBCL@ USART3_CR2 @ %1  8 lshift and 8 rshift ; 
: USART3_LBDIE@ USART3_CR2 @ %1  6 lshift and 6 rshift ; 
: USART3_LBDL@ USART3_CR2 @ %1  5 lshift and 5 rshift ; 
: USART3_ADD@ USART3_CR2 @ %1111  0 lshift and 0 rshift ; 

USART3_CR3 (read-write)
$0000 CONSTANT RESET_USART3_CR3 
 %1  11 lshift USART3_CR3 bis!        \ USART3_ONEBIT	Bit 11	 Width 1
 %1  10 lshift USART3_CR3 bis!        \ USART3_CTSIE	Bit 10	 Width 1
 %1  9 lshift USART3_CR3 bis!        \ USART3_CTSE	Bit 9	 Width 1
 %1  8 lshift USART3_CR3 bis!        \ USART3_RTSE	Bit 8	 Width 1
 %1  7 lshift USART3_CR3 bis!        \ USART3_DMAT	Bit 7	 Width 1
 %1  6 lshift USART3_CR3 bis!        \ USART3_DMAR	Bit 6	 Width 1
 %1  5 lshift USART3_CR3 bis!        \ USART3_SCEN	Bit 5	 Width 1
 %1  4 lshift USART3_CR3 bis!        \ USART3_NACK	Bit 4	 Width 1
 %1  3 lshift USART3_CR3 bis!        \ USART3_HDSEL	Bit 3	 Width 1
 %1  2 lshift USART3_CR3 bis!        \ USART3_IRLP	Bit 2	 Width 1
 %1  1 lshift USART3_CR3 bis!        \ USART3_IREN	Bit 1	 Width 1
 %1  0 lshift USART3_CR3 bis!        \ USART3_EIE	Bit 0	 Width 1
\ USART3_CR3 Register BitField Fetch Words  
: USART3_ONEBIT@ USART3_CR3 @ %1  11 lshift and 11 rshift ; 
: USART3_CTSIE@ USART3_CR3 @ %1  10 lshift and 10 rshift ; 
: USART3_CTSE@ USART3_CR3 @ %1  9 lshift and 9 rshift ; 
: USART3_RTSE@ USART3_CR3 @ %1  8 lshift and 8 rshift ; 
: USART3_DMAT@ USART3_CR3 @ %1  7 lshift and 7 rshift ; 
: USART3_DMAR@ USART3_CR3 @ %1  6 lshift and 6 rshift ; 
: USART3_SCEN@ USART3_CR3 @ %1  5 lshift and 5 rshift ; 
: USART3_NACK@ USART3_CR3 @ %1  4 lshift and 4 rshift ; 
: USART3_HDSEL@ USART3_CR3 @ %1  3 lshift and 3 rshift ; 
: USART3_IRLP@ USART3_CR3 @ %1  2 lshift and 2 rshift ; 
: USART3_IREN@ USART3_CR3 @ %1  1 lshift and 1 rshift ; 
: USART3_EIE@ USART3_CR3 @ %1  0 lshift and 0 rshift ; 

USART3_GTPR (read-write)
$0000 CONSTANT RESET_USART3_GTPR 
 %xxxxxxxx  8 lshift USART3_GTPR bis!        \ USART3_GT	Bit 8	 Width 8
 %xxxxxxxx  0 lshift USART3_GTPR bis!        \ USART3_PSC	Bit 0	 Width 8
\ USART3_GTPR Register BitField Fetch Words  
: USART3_GT@ USART3_GTPR @ %11111111  8 lshift and 8 rshift ; 
: USART3_PSC@ USART3_GTPR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### DAC ###################################
DAC_CR (read-write)
$00000000 CONSTANT RESET_DAC_CR 
 %1  29 lshift DAC_CR bis!        \ DAC_DMAUDRIE2	Bit 29	 Width 1
 %1  28 lshift DAC_CR bis!        \ DAC_DMAEN2	Bit 28	 Width 1
 %xxxx  24 lshift DAC_CR bis!        \ DAC_MAMP2	Bit 24	 Width 4
 %xx  22 lshift DAC_CR bis!        \ DAC_WAVE2	Bit 22	 Width 2
 %xxx  19 lshift DAC_CR bis!        \ DAC_TSEL2	Bit 19	 Width 3
 %1  18 lshift DAC_CR bis!        \ DAC_TEN2	Bit 18	 Width 1
 %1  17 lshift DAC_CR bis!        \ DAC_BOFF2	Bit 17	 Width 1
 %1  16 lshift DAC_CR bis!        \ DAC_EN2	Bit 16	 Width 1
 %1  13 lshift DAC_CR bis!        \ DAC_DMAUDRIE1	Bit 13	 Width 1
 %1  12 lshift DAC_CR bis!        \ DAC_DMAEN1	Bit 12	 Width 1
 %xxxx  8 lshift DAC_CR bis!        \ DAC_MAMP1	Bit 8	 Width 4
 %xx  6 lshift DAC_CR bis!        \ DAC_WAVE1	Bit 6	 Width 2
 %xxx  3 lshift DAC_CR bis!        \ DAC_TSEL1	Bit 3	 Width 3
 %1  2 lshift DAC_CR bis!        \ DAC_TEN1	Bit 2	 Width 1
 %1  1 lshift DAC_CR bis!        \ DAC_BOFF1	Bit 1	 Width 1
 %1  0 lshift DAC_CR bis!        \ DAC_EN1	Bit 0	 Width 1
\ DAC_CR Register BitField Fetch Words  
: DAC_DMAUDRIE2@ DAC_CR @ %1  29 lshift and 29 rshift ; 
: DAC_DMAEN2@ DAC_CR @ %1  28 lshift and 28 rshift ; 
: DAC_MAMP2@ DAC_CR @ %1111  24 lshift and 24 rshift ; 
: DAC_WAVE2@ DAC_CR @ %11  22 lshift and 22 rshift ; 
: DAC_TSEL2@ DAC_CR @ %111  19 lshift and 19 rshift ; 
: DAC_TEN2@ DAC_CR @ %1  18 lshift and 18 rshift ; 
: DAC_BOFF2@ DAC_CR @ %1  17 lshift and 17 rshift ; 
: DAC_EN2@ DAC_CR @ %1  16 lshift and 16 rshift ; 
: DAC_DMAUDRIE1@ DAC_CR @ %1  13 lshift and 13 rshift ; 
: DAC_DMAEN1@ DAC_CR @ %1  12 lshift and 12 rshift ; 
: DAC_MAMP1@ DAC_CR @ %1111  8 lshift and 8 rshift ; 
: DAC_WAVE1@ DAC_CR @ %11  6 lshift and 6 rshift ; 
: DAC_TSEL1@ DAC_CR @ %111  3 lshift and 3 rshift ; 
: DAC_TEN1@ DAC_CR @ %1  2 lshift and 2 rshift ; 
: DAC_BOFF1@ DAC_CR @ %1  1 lshift and 1 rshift ; 
: DAC_EN1@ DAC_CR @ %1  0 lshift and 0 rshift ; 

DAC_SWTRIGR (write-only)
$00000000 CONSTANT RESET_DAC_SWTRIGR 
 %1  1 lshift DAC_SWTRIGR bis!        \ DAC_SWTRIG2	Bit 1	 Width 1
 %1  0 lshift DAC_SWTRIGR bis!        \ DAC_SWTRIG1	Bit 0	 Width 1
\ DAC_SWTRIGR Register BitField Fetch Words  
: DAC_SWTRIG2@ DAC_SWTRIGR @ %1  1 lshift and 1 rshift ; 
: DAC_SWTRIG1@ DAC_SWTRIGR @ %1  0 lshift and 0 rshift ; 

DAC_DHR12R1 (read-write)
$00000000 CONSTANT RESET_DAC_DHR12R1 
 %xxxxxxxxxxxx  0 lshift DAC_DHR12R1 bis!        \ DAC_DACC1DHR	Bit 0	 Width 12
\ DAC_DHR12R1 Register BitField Fetch Words  
: DAC_DACC1DHR@ DAC_DHR12R1 @ %11111111111  0 lshift and 0 rshift ; 

DAC_DHR12L1 (read-write)
$00000000 CONSTANT RESET_DAC_DHR12L1 
 %xxxxxxxxxxxx  4 lshift DAC_DHR12L1 bis!        \ DAC_DACC1DHR	Bit 4	 Width 12
\ DAC_DHR12L1 Register BitField Fetch Words  
: DAC_DACC1DHR@ DAC_DHR12L1 @ %11111111111  4 lshift and 4 rshift ; 

DAC_DHR8R1 (read-write)
$00000000 CONSTANT RESET_DAC_DHR8R1 
 %xxxxxxxx  0 lshift DAC_DHR8R1 bis!        \ DAC_DACC1DHR	Bit 0	 Width 8
\ DAC_DHR8R1 Register BitField Fetch Words  
: DAC_DACC1DHR@ DAC_DHR8R1 @ %11111111  0 lshift and 0 rshift ; 

DAC_DHR12R2 (read-write)
$00000000 CONSTANT RESET_DAC_DHR12R2 
 %xxxxxxxxxxxx  0 lshift DAC_DHR12R2 bis!        \ DAC_DACC2DHR	Bit 0	 Width 12
\ DAC_DHR12R2 Register BitField Fetch Words  
: DAC_DACC2DHR@ DAC_DHR12R2 @ %11111111111  0 lshift and 0 rshift ; 

DAC_DHR12L2 (read-write)
$00000000 CONSTANT RESET_DAC_DHR12L2 
 %xxxxxxxxxxxx  4 lshift DAC_DHR12L2 bis!        \ DAC_DACC2DHR	Bit 4	 Width 12
\ DAC_DHR12L2 Register BitField Fetch Words  
: DAC_DACC2DHR@ DAC_DHR12L2 @ %11111111111  4 lshift and 4 rshift ; 

DAC_DHR8R2 (read-write)
$00000000 CONSTANT RESET_DAC_DHR8R2 
 %xxxxxxxx  0 lshift DAC_DHR8R2 bis!        \ DAC_DACC2DHR	Bit 0	 Width 8
\ DAC_DHR8R2 Register BitField Fetch Words  
: DAC_DACC2DHR@ DAC_DHR8R2 @ %11111111  0 lshift and 0 rshift ; 

DAC_DHR12RD (read-write)
$00000000 CONSTANT RESET_DAC_DHR12RD 
 %xxxxxxxxxxxx  16 lshift DAC_DHR12RD bis!        \ DAC_DACC2DHR	Bit 16	 Width 12
 %xxxxxxxxxxxx  0 lshift DAC_DHR12RD bis!        \ DAC_DACC1DHR	Bit 0	 Width 12
\ DAC_DHR12RD Register BitField Fetch Words  
: DAC_DACC2DHR@ DAC_DHR12RD @ %11111111111  16 lshift and 16 rshift ; 
: DAC_DACC1DHR@ DAC_DHR12RD @ %11111111111  0 lshift and 0 rshift ; 

DAC_DHR12LD (read-write)
$00000000 CONSTANT RESET_DAC_DHR12LD 
 %xxxxxxxxxxxx  20 lshift DAC_DHR12LD bis!        \ DAC_DACC2DHR	Bit 20	 Width 12
 %xxxxxxxxxxxx  4 lshift DAC_DHR12LD bis!        \ DAC_DACC1DHR	Bit 4	 Width 12
\ DAC_DHR12LD Register BitField Fetch Words  
: DAC_DACC2DHR@ DAC_DHR12LD @ %11111111111  20 lshift and 20 rshift ; 
: DAC_DACC1DHR@ DAC_DHR12LD @ %11111111111  4 lshift and 4 rshift ; 

DAC_DHR8RD (read-write)
$00000000 CONSTANT RESET_DAC_DHR8RD 
 %xxxxxxxx  8 lshift DAC_DHR8RD bis!        \ DAC_DACC2DHR	Bit 8	 Width 8
 %xxxxxxxx  0 lshift DAC_DHR8RD bis!        \ DAC_DACC1DHR	Bit 0	 Width 8
\ DAC_DHR8RD Register BitField Fetch Words  
: DAC_DACC2DHR@ DAC_DHR8RD @ %11111111  8 lshift and 8 rshift ; 
: DAC_DACC1DHR@ DAC_DHR8RD @ %11111111  0 lshift and 0 rshift ; 

DAC_DOR1 (read-only)
$00000000 CONSTANT RESET_DAC_DOR1 
 %xxxxxxxxxxxx  0 lshift DAC_DOR1 bis!        \ DAC_DACC1DOR	Bit 0	 Width 12
\ DAC_DOR1 Register BitField Fetch Words  
: DAC_DACC1DOR@ DAC_DOR1 @ %11111111111  0 lshift and 0 rshift ; 

DAC_DOR2 (read-only)
$00000000 CONSTANT RESET_DAC_DOR2 
 %xxxxxxxxxxxx  0 lshift DAC_DOR2 bis!        \ DAC_DACC2DOR	Bit 0	 Width 12
\ DAC_DOR2 Register BitField Fetch Words  
: DAC_DACC2DOR@ DAC_DOR2 @ %11111111111  0 lshift and 0 rshift ; 

DAC_SR (read-write)
$00000000 CONSTANT RESET_DAC_SR 
 %1  29 lshift DAC_SR bis!        \ DAC_DMAUDR2	Bit 29	 Width 1
 %1  13 lshift DAC_SR bis!        \ DAC_DMAUDR1	Bit 13	 Width 1
\ DAC_SR Register BitField Fetch Words  
: DAC_DMAUDR2@ DAC_SR @ %1  29 lshift and 29 rshift ; 
: DAC_DMAUDR1@ DAC_SR @ %1  13 lshift and 13 rshift ; 

                    
################################### PWR ###################################
PWR_CR (read-write)
$00000000 CONSTANT RESET_PWR_CR 
 %1  9 lshift PWR_CR bis!        \ PWR_FPDS	Bit 9	 Width 1
 %1  8 lshift PWR_CR bis!        \ PWR_DBP	Bit 8	 Width 1
 %xxx  5 lshift PWR_CR bis!        \ PWR_PLS	Bit 5	 Width 3
 %1  4 lshift PWR_CR bis!        \ PWR_PVDE	Bit 4	 Width 1
 %1  3 lshift PWR_CR bis!        \ PWR_CSBF	Bit 3	 Width 1
 %1  2 lshift PWR_CR bis!        \ PWR_CWUF	Bit 2	 Width 1
 %1  1 lshift PWR_CR bis!        \ PWR_PDDS	Bit 1	 Width 1
 %1  0 lshift PWR_CR bis!        \ PWR_LPDS	Bit 0	 Width 1
\ PWR_CR Register BitField Fetch Words  
: PWR_FPDS@ PWR_CR @ %1  9 lshift and 9 rshift ; 
: PWR_DBP@ PWR_CR @ %1  8 lshift and 8 rshift ; 
: PWR_PLS@ PWR_CR @ %111  5 lshift and 5 rshift ; 
: PWR_PVDE@ PWR_CR @ %1  4 lshift and 4 rshift ; 
: PWR_CSBF@ PWR_CR @ %1  3 lshift and 3 rshift ; 
: PWR_CWUF@ PWR_CR @ %1  2 lshift and 2 rshift ; 
: PWR_PDDS@ PWR_CR @ %1  1 lshift and 1 rshift ; 
: PWR_LPDS@ PWR_CR @ %1  0 lshift and 0 rshift ; 

PWR_CSR ()
$00000000 CONSTANT RESET_PWR_CSR 
 %1  0 lshift PWR_CSR bis!        \ PWR_WUF	Bit 0	 Width 1
 %1  1 lshift PWR_CSR bis!        \ PWR_SBF	Bit 1	 Width 1
 %1  2 lshift PWR_CSR bis!        \ PWR_PVDO	Bit 2	 Width 1
 %1  3 lshift PWR_CSR bis!        \ PWR_BRR	Bit 3	 Width 1
 %1  8 lshift PWR_CSR bis!        \ PWR_EWUP	Bit 8	 Width 1
 %1  9 lshift PWR_CSR bis!        \ PWR_BRE	Bit 9	 Width 1
 %1  14 lshift PWR_CSR bis!        \ PWR_VOSRDY	Bit 14	 Width 1
\ PWR_CSR Register BitField Fetch Words  
: PWR_WUF@ PWR_CSR @ %1  0 lshift and 0 rshift ; 
: PWR_SBF@ PWR_CSR @ %1  1 lshift and 1 rshift ; 
: PWR_PVDO@ PWR_CSR @ %1  2 lshift and 2 rshift ; 
: PWR_BRR@ PWR_CSR @ %1  3 lshift and 3 rshift ; 
: PWR_EWUP@ PWR_CSR @ %1  8 lshift and 8 rshift ; 
: PWR_BRE@ PWR_CSR @ %1  9 lshift and 9 rshift ; 
: PWR_VOSRDY@ PWR_CSR @ %1  14 lshift and 14 rshift ; 

                    
################################### I2C3 ###################################
I2C3_CR1 (read-write)
$0000 CONSTANT RESET_I2C3_CR1 
 %1  15 lshift I2C3_CR1 bis!        \ I2C3_SWRST	Bit 15	 Width 1
 %1  13 lshift I2C3_CR1 bis!        \ I2C3_ALERT	Bit 13	 Width 1
 %1  12 lshift I2C3_CR1 bis!        \ I2C3_PEC	Bit 12	 Width 1
 %1  11 lshift I2C3_CR1 bis!        \ I2C3_POS	Bit 11	 Width 1
 %1  10 lshift I2C3_CR1 bis!        \ I2C3_ACK	Bit 10	 Width 1
 %1  9 lshift I2C3_CR1 bis!        \ I2C3_STOP	Bit 9	 Width 1
 %1  8 lshift I2C3_CR1 bis!        \ I2C3_START	Bit 8	 Width 1
 %1  7 lshift I2C3_CR1 bis!        \ I2C3_NOSTRETCH	Bit 7	 Width 1
 %1  6 lshift I2C3_CR1 bis!        \ I2C3_ENGC	Bit 6	 Width 1
 %1  5 lshift I2C3_CR1 bis!        \ I2C3_ENPEC	Bit 5	 Width 1
 %1  4 lshift I2C3_CR1 bis!        \ I2C3_ENARP	Bit 4	 Width 1
 %1  3 lshift I2C3_CR1 bis!        \ I2C3_SMBTYPE	Bit 3	 Width 1
 %1  1 lshift I2C3_CR1 bis!        \ I2C3_SMBUS	Bit 1	 Width 1
 %1  0 lshift I2C3_CR1 bis!        \ I2C3_PE	Bit 0	 Width 1
\ I2C3_CR1 Register BitField Fetch Words  
: I2C3_SWRST@ I2C3_CR1 @ %1  15 lshift and 15 rshift ; 
: I2C3_ALERT@ I2C3_CR1 @ %1  13 lshift and 13 rshift ; 
: I2C3_PEC@ I2C3_CR1 @ %1  12 lshift and 12 rshift ; 
: I2C3_POS@ I2C3_CR1 @ %1  11 lshift and 11 rshift ; 
: I2C3_ACK@ I2C3_CR1 @ %1  10 lshift and 10 rshift ; 
: I2C3_STOP@ I2C3_CR1 @ %1  9 lshift and 9 rshift ; 
: I2C3_START@ I2C3_CR1 @ %1  8 lshift and 8 rshift ; 
: I2C3_NOSTRETCH@ I2C3_CR1 @ %1  7 lshift and 7 rshift ; 
: I2C3_ENGC@ I2C3_CR1 @ %1  6 lshift and 6 rshift ; 
: I2C3_ENPEC@ I2C3_CR1 @ %1  5 lshift and 5 rshift ; 
: I2C3_ENARP@ I2C3_CR1 @ %1  4 lshift and 4 rshift ; 
: I2C3_SMBTYPE@ I2C3_CR1 @ %1  3 lshift and 3 rshift ; 
: I2C3_SMBUS@ I2C3_CR1 @ %1  1 lshift and 1 rshift ; 
: I2C3_PE@ I2C3_CR1 @ %1  0 lshift and 0 rshift ; 

I2C3_CR2 (read-write)
$0000 CONSTANT RESET_I2C3_CR2 
 %1  12 lshift I2C3_CR2 bis!        \ I2C3_LAST	Bit 12	 Width 1
 %1  11 lshift I2C3_CR2 bis!        \ I2C3_DMAEN	Bit 11	 Width 1
 %1  10 lshift I2C3_CR2 bis!        \ I2C3_ITBUFEN	Bit 10	 Width 1
 %1  9 lshift I2C3_CR2 bis!        \ I2C3_ITEVTEN	Bit 9	 Width 1
 %1  8 lshift I2C3_CR2 bis!        \ I2C3_ITERREN	Bit 8	 Width 1
 %xxxxxx  0 lshift I2C3_CR2 bis!        \ I2C3_FREQ	Bit 0	 Width 6
\ I2C3_CR2 Register BitField Fetch Words  
: I2C3_LAST@ I2C3_CR2 @ %1  12 lshift and 12 rshift ; 
: I2C3_DMAEN@ I2C3_CR2 @ %1  11 lshift and 11 rshift ; 
: I2C3_ITBUFEN@ I2C3_CR2 @ %1  10 lshift and 10 rshift ; 
: I2C3_ITEVTEN@ I2C3_CR2 @ %1  9 lshift and 9 rshift ; 
: I2C3_ITERREN@ I2C3_CR2 @ %1  8 lshift and 8 rshift ; 
: I2C3_FREQ@ I2C3_CR2 @ %111111  0 lshift and 0 rshift ; 

I2C3_OAR1 (read-write)
$0000 CONSTANT RESET_I2C3_OAR1 
 %1  15 lshift I2C3_OAR1 bis!        \ I2C3_ADDMODE	Bit 15	 Width 1
 %xx  8 lshift I2C3_OAR1 bis!        \ I2C3_ADD10	Bit 8	 Width 2
 %xxxxxxx  1 lshift I2C3_OAR1 bis!        \ I2C3_ADD7	Bit 1	 Width 7
 %1  0 lshift I2C3_OAR1 bis!        \ I2C3_ADD0	Bit 0	 Width 1
\ I2C3_OAR1 Register BitField Fetch Words  
: I2C3_ADDMODE@ I2C3_OAR1 @ %1  15 lshift and 15 rshift ; 
: I2C3_ADD10@ I2C3_OAR1 @ %11  8 lshift and 8 rshift ; 
: I2C3_ADD7@ I2C3_OAR1 @ %1111111  1 lshift and 1 rshift ; 
: I2C3_ADD0@ I2C3_OAR1 @ %1  0 lshift and 0 rshift ; 

I2C3_OAR2 (read-write)
$0000 CONSTANT RESET_I2C3_OAR2 
 %xxxxxxx  1 lshift I2C3_OAR2 bis!        \ I2C3_ADD2	Bit 1	 Width 7
 %1  0 lshift I2C3_OAR2 bis!        \ I2C3_ENDUAL	Bit 0	 Width 1
\ I2C3_OAR2 Register BitField Fetch Words  
: I2C3_ADD2@ I2C3_OAR2 @ %1111111  1 lshift and 1 rshift ; 
: I2C3_ENDUAL@ I2C3_OAR2 @ %1  0 lshift and 0 rshift ; 

I2C3_DR (read-write)
$0000 CONSTANT RESET_I2C3_DR 
 %xxxxxxxx  0 lshift I2C3_DR bis!        \ I2C3_DR	Bit 0	 Width 8
\ I2C3_DR Register BitField Fetch Words  
: I2C3_DR@ I2C3_DR @ %11111111  0 lshift and 0 rshift ; 

I2C3_SR1 ()
$0000 CONSTANT RESET_I2C3_SR1 
 %1  15 lshift I2C3_SR1 bis!        \ I2C3_SMBALERT	Bit 15	 Width 1
 %1  14 lshift I2C3_SR1 bis!        \ I2C3_TIMEOUT	Bit 14	 Width 1
 %1  12 lshift I2C3_SR1 bis!        \ I2C3_PECERR	Bit 12	 Width 1
 %1  11 lshift I2C3_SR1 bis!        \ I2C3_OVR	Bit 11	 Width 1
 %1  10 lshift I2C3_SR1 bis!        \ I2C3_AF	Bit 10	 Width 1
 %1  9 lshift I2C3_SR1 bis!        \ I2C3_ARLO	Bit 9	 Width 1
 %1  8 lshift I2C3_SR1 bis!        \ I2C3_BERR	Bit 8	 Width 1
 %1  7 lshift I2C3_SR1 bis!        \ I2C3_TxE	Bit 7	 Width 1
 %1  6 lshift I2C3_SR1 bis!        \ I2C3_RxNE	Bit 6	 Width 1
 %1  4 lshift I2C3_SR1 bis!        \ I2C3_STOPF	Bit 4	 Width 1
 %1  3 lshift I2C3_SR1 bis!        \ I2C3_ADD10	Bit 3	 Width 1
 %1  2 lshift I2C3_SR1 bis!        \ I2C3_BTF	Bit 2	 Width 1
 %1  1 lshift I2C3_SR1 bis!        \ I2C3_ADDR	Bit 1	 Width 1
 %1  0 lshift I2C3_SR1 bis!        \ I2C3_SB	Bit 0	 Width 1
\ I2C3_SR1 Register BitField Fetch Words  
: I2C3_SMBALERT@ I2C3_SR1 @ %1  15 lshift and 15 rshift ; 
: I2C3_TIMEOUT@ I2C3_SR1 @ %1  14 lshift and 14 rshift ; 
: I2C3_PECERR@ I2C3_SR1 @ %1  12 lshift and 12 rshift ; 
: I2C3_OVR@ I2C3_SR1 @ %1  11 lshift and 11 rshift ; 
: I2C3_AF@ I2C3_SR1 @ %1  10 lshift and 10 rshift ; 
: I2C3_ARLO@ I2C3_SR1 @ %1  9 lshift and 9 rshift ; 
: I2C3_BERR@ I2C3_SR1 @ %1  8 lshift and 8 rshift ; 
: I2C3_TxE@ I2C3_SR1 @ %1  7 lshift and 7 rshift ; 
: I2C3_RxNE@ I2C3_SR1 @ %1  6 lshift and 6 rshift ; 
: I2C3_STOPF@ I2C3_SR1 @ %1  4 lshift and 4 rshift ; 
: I2C3_ADD10@ I2C3_SR1 @ %1  3 lshift and 3 rshift ; 
: I2C3_BTF@ I2C3_SR1 @ %1  2 lshift and 2 rshift ; 
: I2C3_ADDR@ I2C3_SR1 @ %1  1 lshift and 1 rshift ; 
: I2C3_SB@ I2C3_SR1 @ %1  0 lshift and 0 rshift ; 

I2C3_SR2 (read-only)
$0000 CONSTANT RESET_I2C3_SR2 
 %xxxxxxxx  8 lshift I2C3_SR2 bis!        \ I2C3_PEC	Bit 8	 Width 8
 %1  7 lshift I2C3_SR2 bis!        \ I2C3_DUALF	Bit 7	 Width 1
 %1  6 lshift I2C3_SR2 bis!        \ I2C3_SMBHOST	Bit 6	 Width 1
 %1  5 lshift I2C3_SR2 bis!        \ I2C3_SMBDEFAULT	Bit 5	 Width 1
 %1  4 lshift I2C3_SR2 bis!        \ I2C3_GENCALL	Bit 4	 Width 1
 %1  2 lshift I2C3_SR2 bis!        \ I2C3_TRA	Bit 2	 Width 1
 %1  1 lshift I2C3_SR2 bis!        \ I2C3_BUSY	Bit 1	 Width 1
 %1  0 lshift I2C3_SR2 bis!        \ I2C3_MSL	Bit 0	 Width 1
\ I2C3_SR2 Register BitField Fetch Words  
: I2C3_PEC@ I2C3_SR2 @ %11111111  8 lshift and 8 rshift ; 
: I2C3_DUALF@ I2C3_SR2 @ %1  7 lshift and 7 rshift ; 
: I2C3_SMBHOST@ I2C3_SR2 @ %1  6 lshift and 6 rshift ; 
: I2C3_SMBDEFAULT@ I2C3_SR2 @ %1  5 lshift and 5 rshift ; 
: I2C3_GENCALL@ I2C3_SR2 @ %1  4 lshift and 4 rshift ; 
: I2C3_TRA@ I2C3_SR2 @ %1  2 lshift and 2 rshift ; 
: I2C3_BUSY@ I2C3_SR2 @ %1  1 lshift and 1 rshift ; 
: I2C3_MSL@ I2C3_SR2 @ %1  0 lshift and 0 rshift ; 

I2C3_CCR (read-write)
$0000 CONSTANT RESET_I2C3_CCR 
 %1  15 lshift I2C3_CCR bis!        \ I2C3_F_S	Bit 15	 Width 1
 %1  14 lshift I2C3_CCR bis!        \ I2C3_DUTY	Bit 14	 Width 1
 %xxxxxxxxxxxx  0 lshift I2C3_CCR bis!        \ I2C3_CCR	Bit 0	 Width 12
\ I2C3_CCR Register BitField Fetch Words  
: I2C3_F_S@ I2C3_CCR @ %1  15 lshift and 15 rshift ; 
: I2C3_DUTY@ I2C3_CCR @ %1  14 lshift and 14 rshift ; 
: I2C3_CCR@ I2C3_CCR @ %11111111111  0 lshift and 0 rshift ; 

I2C3_TRISE (read-write)
$0002 CONSTANT RESET_I2C3_TRISE 
 %xxxxxx  0 lshift I2C3_TRISE bis!        \ I2C3_TRISE	Bit 0	 Width 6
\ I2C3_TRISE Register BitField Fetch Words  
: I2C3_TRISE@ I2C3_TRISE @ %111111  0 lshift and 0 rshift ; 

                    
################################### I2C2 ###################################
I2C2_CR1 (read-write)
$0000 CONSTANT RESET_I2C2_CR1 
 %1  15 lshift I2C2_CR1 bis!        \ I2C2_SWRST	Bit 15	 Width 1
 %1  13 lshift I2C2_CR1 bis!        \ I2C2_ALERT	Bit 13	 Width 1
 %1  12 lshift I2C2_CR1 bis!        \ I2C2_PEC	Bit 12	 Width 1
 %1  11 lshift I2C2_CR1 bis!        \ I2C2_POS	Bit 11	 Width 1
 %1  10 lshift I2C2_CR1 bis!        \ I2C2_ACK	Bit 10	 Width 1
 %1  9 lshift I2C2_CR1 bis!        \ I2C2_STOP	Bit 9	 Width 1
 %1  8 lshift I2C2_CR1 bis!        \ I2C2_START	Bit 8	 Width 1
 %1  7 lshift I2C2_CR1 bis!        \ I2C2_NOSTRETCH	Bit 7	 Width 1
 %1  6 lshift I2C2_CR1 bis!        \ I2C2_ENGC	Bit 6	 Width 1
 %1  5 lshift I2C2_CR1 bis!        \ I2C2_ENPEC	Bit 5	 Width 1
 %1  4 lshift I2C2_CR1 bis!        \ I2C2_ENARP	Bit 4	 Width 1
 %1  3 lshift I2C2_CR1 bis!        \ I2C2_SMBTYPE	Bit 3	 Width 1
 %1  1 lshift I2C2_CR1 bis!        \ I2C2_SMBUS	Bit 1	 Width 1
 %1  0 lshift I2C2_CR1 bis!        \ I2C2_PE	Bit 0	 Width 1
\ I2C2_CR1 Register BitField Fetch Words  
: I2C2_SWRST@ I2C2_CR1 @ %1  15 lshift and 15 rshift ; 
: I2C2_ALERT@ I2C2_CR1 @ %1  13 lshift and 13 rshift ; 
: I2C2_PEC@ I2C2_CR1 @ %1  12 lshift and 12 rshift ; 
: I2C2_POS@ I2C2_CR1 @ %1  11 lshift and 11 rshift ; 
: I2C2_ACK@ I2C2_CR1 @ %1  10 lshift and 10 rshift ; 
: I2C2_STOP@ I2C2_CR1 @ %1  9 lshift and 9 rshift ; 
: I2C2_START@ I2C2_CR1 @ %1  8 lshift and 8 rshift ; 
: I2C2_NOSTRETCH@ I2C2_CR1 @ %1  7 lshift and 7 rshift ; 
: I2C2_ENGC@ I2C2_CR1 @ %1  6 lshift and 6 rshift ; 
: I2C2_ENPEC@ I2C2_CR1 @ %1  5 lshift and 5 rshift ; 
: I2C2_ENARP@ I2C2_CR1 @ %1  4 lshift and 4 rshift ; 
: I2C2_SMBTYPE@ I2C2_CR1 @ %1  3 lshift and 3 rshift ; 
: I2C2_SMBUS@ I2C2_CR1 @ %1  1 lshift and 1 rshift ; 
: I2C2_PE@ I2C2_CR1 @ %1  0 lshift and 0 rshift ; 

I2C2_CR2 (read-write)
$0000 CONSTANT RESET_I2C2_CR2 
 %1  12 lshift I2C2_CR2 bis!        \ I2C2_LAST	Bit 12	 Width 1
 %1  11 lshift I2C2_CR2 bis!        \ I2C2_DMAEN	Bit 11	 Width 1
 %1  10 lshift I2C2_CR2 bis!        \ I2C2_ITBUFEN	Bit 10	 Width 1
 %1  9 lshift I2C2_CR2 bis!        \ I2C2_ITEVTEN	Bit 9	 Width 1
 %1  8 lshift I2C2_CR2 bis!        \ I2C2_ITERREN	Bit 8	 Width 1
 %xxxxxx  0 lshift I2C2_CR2 bis!        \ I2C2_FREQ	Bit 0	 Width 6
\ I2C2_CR2 Register BitField Fetch Words  
: I2C2_LAST@ I2C2_CR2 @ %1  12 lshift and 12 rshift ; 
: I2C2_DMAEN@ I2C2_CR2 @ %1  11 lshift and 11 rshift ; 
: I2C2_ITBUFEN@ I2C2_CR2 @ %1  10 lshift and 10 rshift ; 
: I2C2_ITEVTEN@ I2C2_CR2 @ %1  9 lshift and 9 rshift ; 
: I2C2_ITERREN@ I2C2_CR2 @ %1  8 lshift and 8 rshift ; 
: I2C2_FREQ@ I2C2_CR2 @ %111111  0 lshift and 0 rshift ; 

I2C2_OAR1 (read-write)
$0000 CONSTANT RESET_I2C2_OAR1 
 %1  15 lshift I2C2_OAR1 bis!        \ I2C2_ADDMODE	Bit 15	 Width 1
 %xx  8 lshift I2C2_OAR1 bis!        \ I2C2_ADD10	Bit 8	 Width 2
 %xxxxxxx  1 lshift I2C2_OAR1 bis!        \ I2C2_ADD7	Bit 1	 Width 7
 %1  0 lshift I2C2_OAR1 bis!        \ I2C2_ADD0	Bit 0	 Width 1
\ I2C2_OAR1 Register BitField Fetch Words  
: I2C2_ADDMODE@ I2C2_OAR1 @ %1  15 lshift and 15 rshift ; 
: I2C2_ADD10@ I2C2_OAR1 @ %11  8 lshift and 8 rshift ; 
: I2C2_ADD7@ I2C2_OAR1 @ %1111111  1 lshift and 1 rshift ; 
: I2C2_ADD0@ I2C2_OAR1 @ %1  0 lshift and 0 rshift ; 

I2C2_OAR2 (read-write)
$0000 CONSTANT RESET_I2C2_OAR2 
 %xxxxxxx  1 lshift I2C2_OAR2 bis!        \ I2C2_ADD2	Bit 1	 Width 7
 %1  0 lshift I2C2_OAR2 bis!        \ I2C2_ENDUAL	Bit 0	 Width 1
\ I2C2_OAR2 Register BitField Fetch Words  
: I2C2_ADD2@ I2C2_OAR2 @ %1111111  1 lshift and 1 rshift ; 
: I2C2_ENDUAL@ I2C2_OAR2 @ %1  0 lshift and 0 rshift ; 

I2C2_DR (read-write)
$0000 CONSTANT RESET_I2C2_DR 
 %xxxxxxxx  0 lshift I2C2_DR bis!        \ I2C2_DR	Bit 0	 Width 8
\ I2C2_DR Register BitField Fetch Words  
: I2C2_DR@ I2C2_DR @ %11111111  0 lshift and 0 rshift ; 

I2C2_SR1 ()
$0000 CONSTANT RESET_I2C2_SR1 
 %1  15 lshift I2C2_SR1 bis!        \ I2C2_SMBALERT	Bit 15	 Width 1
 %1  14 lshift I2C2_SR1 bis!        \ I2C2_TIMEOUT	Bit 14	 Width 1
 %1  12 lshift I2C2_SR1 bis!        \ I2C2_PECERR	Bit 12	 Width 1
 %1  11 lshift I2C2_SR1 bis!        \ I2C2_OVR	Bit 11	 Width 1
 %1  10 lshift I2C2_SR1 bis!        \ I2C2_AF	Bit 10	 Width 1
 %1  9 lshift I2C2_SR1 bis!        \ I2C2_ARLO	Bit 9	 Width 1
 %1  8 lshift I2C2_SR1 bis!        \ I2C2_BERR	Bit 8	 Width 1
 %1  7 lshift I2C2_SR1 bis!        \ I2C2_TxE	Bit 7	 Width 1
 %1  6 lshift I2C2_SR1 bis!        \ I2C2_RxNE	Bit 6	 Width 1
 %1  4 lshift I2C2_SR1 bis!        \ I2C2_STOPF	Bit 4	 Width 1
 %1  3 lshift I2C2_SR1 bis!        \ I2C2_ADD10	Bit 3	 Width 1
 %1  2 lshift I2C2_SR1 bis!        \ I2C2_BTF	Bit 2	 Width 1
 %1  1 lshift I2C2_SR1 bis!        \ I2C2_ADDR	Bit 1	 Width 1
 %1  0 lshift I2C2_SR1 bis!        \ I2C2_SB	Bit 0	 Width 1
\ I2C2_SR1 Register BitField Fetch Words  
: I2C2_SMBALERT@ I2C2_SR1 @ %1  15 lshift and 15 rshift ; 
: I2C2_TIMEOUT@ I2C2_SR1 @ %1  14 lshift and 14 rshift ; 
: I2C2_PECERR@ I2C2_SR1 @ %1  12 lshift and 12 rshift ; 
: I2C2_OVR@ I2C2_SR1 @ %1  11 lshift and 11 rshift ; 
: I2C2_AF@ I2C2_SR1 @ %1  10 lshift and 10 rshift ; 
: I2C2_ARLO@ I2C2_SR1 @ %1  9 lshift and 9 rshift ; 
: I2C2_BERR@ I2C2_SR1 @ %1  8 lshift and 8 rshift ; 
: I2C2_TxE@ I2C2_SR1 @ %1  7 lshift and 7 rshift ; 
: I2C2_RxNE@ I2C2_SR1 @ %1  6 lshift and 6 rshift ; 
: I2C2_STOPF@ I2C2_SR1 @ %1  4 lshift and 4 rshift ; 
: I2C2_ADD10@ I2C2_SR1 @ %1  3 lshift and 3 rshift ; 
: I2C2_BTF@ I2C2_SR1 @ %1  2 lshift and 2 rshift ; 
: I2C2_ADDR@ I2C2_SR1 @ %1  1 lshift and 1 rshift ; 
: I2C2_SB@ I2C2_SR1 @ %1  0 lshift and 0 rshift ; 

I2C2_SR2 (read-only)
$0000 CONSTANT RESET_I2C2_SR2 
 %xxxxxxxx  8 lshift I2C2_SR2 bis!        \ I2C2_PEC	Bit 8	 Width 8
 %1  7 lshift I2C2_SR2 bis!        \ I2C2_DUALF	Bit 7	 Width 1
 %1  6 lshift I2C2_SR2 bis!        \ I2C2_SMBHOST	Bit 6	 Width 1
 %1  5 lshift I2C2_SR2 bis!        \ I2C2_SMBDEFAULT	Bit 5	 Width 1
 %1  4 lshift I2C2_SR2 bis!        \ I2C2_GENCALL	Bit 4	 Width 1
 %1  2 lshift I2C2_SR2 bis!        \ I2C2_TRA	Bit 2	 Width 1
 %1  1 lshift I2C2_SR2 bis!        \ I2C2_BUSY	Bit 1	 Width 1
 %1  0 lshift I2C2_SR2 bis!        \ I2C2_MSL	Bit 0	 Width 1
\ I2C2_SR2 Register BitField Fetch Words  
: I2C2_PEC@ I2C2_SR2 @ %11111111  8 lshift and 8 rshift ; 
: I2C2_DUALF@ I2C2_SR2 @ %1  7 lshift and 7 rshift ; 
: I2C2_SMBHOST@ I2C2_SR2 @ %1  6 lshift and 6 rshift ; 
: I2C2_SMBDEFAULT@ I2C2_SR2 @ %1  5 lshift and 5 rshift ; 
: I2C2_GENCALL@ I2C2_SR2 @ %1  4 lshift and 4 rshift ; 
: I2C2_TRA@ I2C2_SR2 @ %1  2 lshift and 2 rshift ; 
: I2C2_BUSY@ I2C2_SR2 @ %1  1 lshift and 1 rshift ; 
: I2C2_MSL@ I2C2_SR2 @ %1  0 lshift and 0 rshift ; 

I2C2_CCR (read-write)
$0000 CONSTANT RESET_I2C2_CCR 
 %1  15 lshift I2C2_CCR bis!        \ I2C2_F_S	Bit 15	 Width 1
 %1  14 lshift I2C2_CCR bis!        \ I2C2_DUTY	Bit 14	 Width 1
 %xxxxxxxxxxxx  0 lshift I2C2_CCR bis!        \ I2C2_CCR	Bit 0	 Width 12
\ I2C2_CCR Register BitField Fetch Words  
: I2C2_F_S@ I2C2_CCR @ %1  15 lshift and 15 rshift ; 
: I2C2_DUTY@ I2C2_CCR @ %1  14 lshift and 14 rshift ; 
: I2C2_CCR@ I2C2_CCR @ %11111111111  0 lshift and 0 rshift ; 

I2C2_TRISE (read-write)
$0002 CONSTANT RESET_I2C2_TRISE 
 %xxxxxx  0 lshift I2C2_TRISE bis!        \ I2C2_TRISE	Bit 0	 Width 6
\ I2C2_TRISE Register BitField Fetch Words  
: I2C2_TRISE@ I2C2_TRISE @ %111111  0 lshift and 0 rshift ; 

                    
################################### I2C1 ###################################
I2C1_CR1 (read-write)
$0000 CONSTANT RESET_I2C1_CR1 
 %1  15 lshift I2C1_CR1 bis!        \ I2C1_SWRST	Bit 15	 Width 1
 %1  13 lshift I2C1_CR1 bis!        \ I2C1_ALERT	Bit 13	 Width 1
 %1  12 lshift I2C1_CR1 bis!        \ I2C1_PEC	Bit 12	 Width 1
 %1  11 lshift I2C1_CR1 bis!        \ I2C1_POS	Bit 11	 Width 1
 %1  10 lshift I2C1_CR1 bis!        \ I2C1_ACK	Bit 10	 Width 1
 %1  9 lshift I2C1_CR1 bis!        \ I2C1_STOP	Bit 9	 Width 1
 %1  8 lshift I2C1_CR1 bis!        \ I2C1_START	Bit 8	 Width 1
 %1  7 lshift I2C1_CR1 bis!        \ I2C1_NOSTRETCH	Bit 7	 Width 1
 %1  6 lshift I2C1_CR1 bis!        \ I2C1_ENGC	Bit 6	 Width 1
 %1  5 lshift I2C1_CR1 bis!        \ I2C1_ENPEC	Bit 5	 Width 1
 %1  4 lshift I2C1_CR1 bis!        \ I2C1_ENARP	Bit 4	 Width 1
 %1  3 lshift I2C1_CR1 bis!        \ I2C1_SMBTYPE	Bit 3	 Width 1
 %1  1 lshift I2C1_CR1 bis!        \ I2C1_SMBUS	Bit 1	 Width 1
 %1  0 lshift I2C1_CR1 bis!        \ I2C1_PE	Bit 0	 Width 1
\ I2C1_CR1 Register BitField Fetch Words  
: I2C1_SWRST@ I2C1_CR1 @ %1  15 lshift and 15 rshift ; 
: I2C1_ALERT@ I2C1_CR1 @ %1  13 lshift and 13 rshift ; 
: I2C1_PEC@ I2C1_CR1 @ %1  12 lshift and 12 rshift ; 
: I2C1_POS@ I2C1_CR1 @ %1  11 lshift and 11 rshift ; 
: I2C1_ACK@ I2C1_CR1 @ %1  10 lshift and 10 rshift ; 
: I2C1_STOP@ I2C1_CR1 @ %1  9 lshift and 9 rshift ; 
: I2C1_START@ I2C1_CR1 @ %1  8 lshift and 8 rshift ; 
: I2C1_NOSTRETCH@ I2C1_CR1 @ %1  7 lshift and 7 rshift ; 
: I2C1_ENGC@ I2C1_CR1 @ %1  6 lshift and 6 rshift ; 
: I2C1_ENPEC@ I2C1_CR1 @ %1  5 lshift and 5 rshift ; 
: I2C1_ENARP@ I2C1_CR1 @ %1  4 lshift and 4 rshift ; 
: I2C1_SMBTYPE@ I2C1_CR1 @ %1  3 lshift and 3 rshift ; 
: I2C1_SMBUS@ I2C1_CR1 @ %1  1 lshift and 1 rshift ; 
: I2C1_PE@ I2C1_CR1 @ %1  0 lshift and 0 rshift ; 

I2C1_CR2 (read-write)
$0000 CONSTANT RESET_I2C1_CR2 
 %1  12 lshift I2C1_CR2 bis!        \ I2C1_LAST	Bit 12	 Width 1
 %1  11 lshift I2C1_CR2 bis!        \ I2C1_DMAEN	Bit 11	 Width 1
 %1  10 lshift I2C1_CR2 bis!        \ I2C1_ITBUFEN	Bit 10	 Width 1
 %1  9 lshift I2C1_CR2 bis!        \ I2C1_ITEVTEN	Bit 9	 Width 1
 %1  8 lshift I2C1_CR2 bis!        \ I2C1_ITERREN	Bit 8	 Width 1
 %xxxxxx  0 lshift I2C1_CR2 bis!        \ I2C1_FREQ	Bit 0	 Width 6
\ I2C1_CR2 Register BitField Fetch Words  
: I2C1_LAST@ I2C1_CR2 @ %1  12 lshift and 12 rshift ; 
: I2C1_DMAEN@ I2C1_CR2 @ %1  11 lshift and 11 rshift ; 
: I2C1_ITBUFEN@ I2C1_CR2 @ %1  10 lshift and 10 rshift ; 
: I2C1_ITEVTEN@ I2C1_CR2 @ %1  9 lshift and 9 rshift ; 
: I2C1_ITERREN@ I2C1_CR2 @ %1  8 lshift and 8 rshift ; 
: I2C1_FREQ@ I2C1_CR2 @ %111111  0 lshift and 0 rshift ; 

I2C1_OAR1 (read-write)
$0000 CONSTANT RESET_I2C1_OAR1 
 %1  15 lshift I2C1_OAR1 bis!        \ I2C1_ADDMODE	Bit 15	 Width 1
 %xx  8 lshift I2C1_OAR1 bis!        \ I2C1_ADD10	Bit 8	 Width 2
 %xxxxxxx  1 lshift I2C1_OAR1 bis!        \ I2C1_ADD7	Bit 1	 Width 7
 %1  0 lshift I2C1_OAR1 bis!        \ I2C1_ADD0	Bit 0	 Width 1
\ I2C1_OAR1 Register BitField Fetch Words  
: I2C1_ADDMODE@ I2C1_OAR1 @ %1  15 lshift and 15 rshift ; 
: I2C1_ADD10@ I2C1_OAR1 @ %11  8 lshift and 8 rshift ; 
: I2C1_ADD7@ I2C1_OAR1 @ %1111111  1 lshift and 1 rshift ; 
: I2C1_ADD0@ I2C1_OAR1 @ %1  0 lshift and 0 rshift ; 

I2C1_OAR2 (read-write)
$0000 CONSTANT RESET_I2C1_OAR2 
 %xxxxxxx  1 lshift I2C1_OAR2 bis!        \ I2C1_ADD2	Bit 1	 Width 7
 %1  0 lshift I2C1_OAR2 bis!        \ I2C1_ENDUAL	Bit 0	 Width 1
\ I2C1_OAR2 Register BitField Fetch Words  
: I2C1_ADD2@ I2C1_OAR2 @ %1111111  1 lshift and 1 rshift ; 
: I2C1_ENDUAL@ I2C1_OAR2 @ %1  0 lshift and 0 rshift ; 

I2C1_DR (read-write)
$0000 CONSTANT RESET_I2C1_DR 
 %xxxxxxxx  0 lshift I2C1_DR bis!        \ I2C1_DR	Bit 0	 Width 8
\ I2C1_DR Register BitField Fetch Words  
: I2C1_DR@ I2C1_DR @ %11111111  0 lshift and 0 rshift ; 

I2C1_SR1 ()
$0000 CONSTANT RESET_I2C1_SR1 
 %1  15 lshift I2C1_SR1 bis!        \ I2C1_SMBALERT	Bit 15	 Width 1
 %1  14 lshift I2C1_SR1 bis!        \ I2C1_TIMEOUT	Bit 14	 Width 1
 %1  12 lshift I2C1_SR1 bis!        \ I2C1_PECERR	Bit 12	 Width 1
 %1  11 lshift I2C1_SR1 bis!        \ I2C1_OVR	Bit 11	 Width 1
 %1  10 lshift I2C1_SR1 bis!        \ I2C1_AF	Bit 10	 Width 1
 %1  9 lshift I2C1_SR1 bis!        \ I2C1_ARLO	Bit 9	 Width 1
 %1  8 lshift I2C1_SR1 bis!        \ I2C1_BERR	Bit 8	 Width 1
 %1  7 lshift I2C1_SR1 bis!        \ I2C1_TxE	Bit 7	 Width 1
 %1  6 lshift I2C1_SR1 bis!        \ I2C1_RxNE	Bit 6	 Width 1
 %1  4 lshift I2C1_SR1 bis!        \ I2C1_STOPF	Bit 4	 Width 1
 %1  3 lshift I2C1_SR1 bis!        \ I2C1_ADD10	Bit 3	 Width 1
 %1  2 lshift I2C1_SR1 bis!        \ I2C1_BTF	Bit 2	 Width 1
 %1  1 lshift I2C1_SR1 bis!        \ I2C1_ADDR	Bit 1	 Width 1
 %1  0 lshift I2C1_SR1 bis!        \ I2C1_SB	Bit 0	 Width 1
\ I2C1_SR1 Register BitField Fetch Words  
: I2C1_SMBALERT@ I2C1_SR1 @ %1  15 lshift and 15 rshift ; 
: I2C1_TIMEOUT@ I2C1_SR1 @ %1  14 lshift and 14 rshift ; 
: I2C1_PECERR@ I2C1_SR1 @ %1  12 lshift and 12 rshift ; 
: I2C1_OVR@ I2C1_SR1 @ %1  11 lshift and 11 rshift ; 
: I2C1_AF@ I2C1_SR1 @ %1  10 lshift and 10 rshift ; 
: I2C1_ARLO@ I2C1_SR1 @ %1  9 lshift and 9 rshift ; 
: I2C1_BERR@ I2C1_SR1 @ %1  8 lshift and 8 rshift ; 
: I2C1_TxE@ I2C1_SR1 @ %1  7 lshift and 7 rshift ; 
: I2C1_RxNE@ I2C1_SR1 @ %1  6 lshift and 6 rshift ; 
: I2C1_STOPF@ I2C1_SR1 @ %1  4 lshift and 4 rshift ; 
: I2C1_ADD10@ I2C1_SR1 @ %1  3 lshift and 3 rshift ; 
: I2C1_BTF@ I2C1_SR1 @ %1  2 lshift and 2 rshift ; 
: I2C1_ADDR@ I2C1_SR1 @ %1  1 lshift and 1 rshift ; 
: I2C1_SB@ I2C1_SR1 @ %1  0 lshift and 0 rshift ; 

I2C1_SR2 (read-only)
$0000 CONSTANT RESET_I2C1_SR2 
 %xxxxxxxx  8 lshift I2C1_SR2 bis!        \ I2C1_PEC	Bit 8	 Width 8
 %1  7 lshift I2C1_SR2 bis!        \ I2C1_DUALF	Bit 7	 Width 1
 %1  6 lshift I2C1_SR2 bis!        \ I2C1_SMBHOST	Bit 6	 Width 1
 %1  5 lshift I2C1_SR2 bis!        \ I2C1_SMBDEFAULT	Bit 5	 Width 1
 %1  4 lshift I2C1_SR2 bis!        \ I2C1_GENCALL	Bit 4	 Width 1
 %1  2 lshift I2C1_SR2 bis!        \ I2C1_TRA	Bit 2	 Width 1
 %1  1 lshift I2C1_SR2 bis!        \ I2C1_BUSY	Bit 1	 Width 1
 %1  0 lshift I2C1_SR2 bis!        \ I2C1_MSL	Bit 0	 Width 1
\ I2C1_SR2 Register BitField Fetch Words  
: I2C1_PEC@ I2C1_SR2 @ %11111111  8 lshift and 8 rshift ; 
: I2C1_DUALF@ I2C1_SR2 @ %1  7 lshift and 7 rshift ; 
: I2C1_SMBHOST@ I2C1_SR2 @ %1  6 lshift and 6 rshift ; 
: I2C1_SMBDEFAULT@ I2C1_SR2 @ %1  5 lshift and 5 rshift ; 
: I2C1_GENCALL@ I2C1_SR2 @ %1  4 lshift and 4 rshift ; 
: I2C1_TRA@ I2C1_SR2 @ %1  2 lshift and 2 rshift ; 
: I2C1_BUSY@ I2C1_SR2 @ %1  1 lshift and 1 rshift ; 
: I2C1_MSL@ I2C1_SR2 @ %1  0 lshift and 0 rshift ; 

I2C1_CCR (read-write)
$0000 CONSTANT RESET_I2C1_CCR 
 %1  15 lshift I2C1_CCR bis!        \ I2C1_F_S	Bit 15	 Width 1
 %1  14 lshift I2C1_CCR bis!        \ I2C1_DUTY	Bit 14	 Width 1
 %xxxxxxxxxxxx  0 lshift I2C1_CCR bis!        \ I2C1_CCR	Bit 0	 Width 12
\ I2C1_CCR Register BitField Fetch Words  
: I2C1_F_S@ I2C1_CCR @ %1  15 lshift and 15 rshift ; 
: I2C1_DUTY@ I2C1_CCR @ %1  14 lshift and 14 rshift ; 
: I2C1_CCR@ I2C1_CCR @ %11111111111  0 lshift and 0 rshift ; 

I2C1_TRISE (read-write)
$0002 CONSTANT RESET_I2C1_TRISE 
 %xxxxxx  0 lshift I2C1_TRISE bis!        \ I2C1_TRISE	Bit 0	 Width 6
\ I2C1_TRISE Register BitField Fetch Words  
: I2C1_TRISE@ I2C1_TRISE @ %111111  0 lshift and 0 rshift ; 

                    
################################### IWDG ###################################
IWDG_KR (write-only)
$00000000 CONSTANT RESET_IWDG_KR 
 %xxxxxxxxxxxxxxxx  0 lshift IWDG_KR bis!        \ IWDG_KEY	Bit 0	 Width 16
\ IWDG_KR Register BitField Fetch Words  
: IWDG_KEY@ IWDG_KR @ %1111111111111111  0 lshift and 0 rshift ; 

IWDG_PR (read-write)
$00000000 CONSTANT RESET_IWDG_PR 
 %xxx  0 lshift IWDG_PR bis!        \ IWDG_PR	Bit 0	 Width 3
\ IWDG_PR Register BitField Fetch Words  
: IWDG_PR@ IWDG_PR @ %111  0 lshift and 0 rshift ; 

IWDG_RLR (read-write)
$00000FFF CONSTANT RESET_IWDG_RLR 
 %xxxxxxxxxxxx  0 lshift IWDG_RLR bis!        \ IWDG_RL	Bit 0	 Width 12
\ IWDG_RLR Register BitField Fetch Words  
: IWDG_RL@ IWDG_RLR @ %11111111111  0 lshift and 0 rshift ; 

IWDG_SR (read-only)
$00000000 CONSTANT RESET_IWDG_SR 
 %1  1 lshift IWDG_SR bis!        \ IWDG_RVU	Bit 1	 Width 1
 %1  0 lshift IWDG_SR bis!        \ IWDG_PVU	Bit 0	 Width 1
\ IWDG_SR Register BitField Fetch Words  
: IWDG_RVU@ IWDG_SR @ %1  1 lshift and 1 rshift ; 
: IWDG_PVU@ IWDG_SR @ %1  0 lshift and 0 rshift ; 

                    
################################### WWDG ###################################
WWDG_CR (read-write)
$7F CONSTANT RESET_WWDG_CR 
 %1  7 lshift WWDG_CR bis!        \ WWDG_WDGA	Bit 7	 Width 1
 %xxxxxxx  0 lshift WWDG_CR bis!        \ WWDG_T	Bit 0	 Width 7
\ WWDG_CR Register BitField Fetch Words  
: WWDG_WDGA@ WWDG_CR @ %1  7 lshift and 7 rshift ; 
: WWDG_T@ WWDG_CR @ %1111111  0 lshift and 0 rshift ; 

WWDG_CFR (read-write)
$7F CONSTANT RESET_WWDG_CFR 
 %1  9 lshift WWDG_CFR bis!        \ WWDG_EWI	Bit 9	 Width 1
 %1  8 lshift WWDG_CFR bis!        \ WWDG_WDGTB1	Bit 8	 Width 1
 %1  7 lshift WWDG_CFR bis!        \ WWDG_WDGTB0	Bit 7	 Width 1
 %xxxxxxx  0 lshift WWDG_CFR bis!        \ WWDG_W	Bit 0	 Width 7
\ WWDG_CFR Register BitField Fetch Words  
: WWDG_EWI@ WWDG_CFR @ %1  9 lshift and 9 rshift ; 
: WWDG_WDGTB1@ WWDG_CFR @ %1  8 lshift and 8 rshift ; 
: WWDG_WDGTB0@ WWDG_CFR @ %1  7 lshift and 7 rshift ; 
: WWDG_W@ WWDG_CFR @ %1111111  0 lshift and 0 rshift ; 

WWDG_SR (read-write)
$00 CONSTANT RESET_WWDG_SR 
 %1  0 lshift WWDG_SR bis!        \ WWDG_EWIF	Bit 0	 Width 1
\ WWDG_SR Register BitField Fetch Words  
: WWDG_EWIF@ WWDG_SR @ %1  0 lshift and 0 rshift ; 

                    
################################### RTC ###################################
RTC_TR (read-write)
$00000000 CONSTANT RESET_RTC_TR 
 %1  22 lshift RTC_TR bis!        \ RTC_PM	Bit 22	 Width 1
 %xx  20 lshift RTC_TR bis!        \ RTC_HT	Bit 20	 Width 2
 %xxxx  16 lshift RTC_TR bis!        \ RTC_HU	Bit 16	 Width 4
 %xxx  12 lshift RTC_TR bis!        \ RTC_MNT	Bit 12	 Width 3
 %xxxx  8 lshift RTC_TR bis!        \ RTC_MNU	Bit 8	 Width 4
 %xxx  4 lshift RTC_TR bis!        \ RTC_ST	Bit 4	 Width 3
 %xxxx  0 lshift RTC_TR bis!        \ RTC_SU	Bit 0	 Width 4
\ RTC_TR Register BitField Fetch Words  
: RTC_PM@ RTC_TR @ %1  22 lshift and 22 rshift ; 
: RTC_HT@ RTC_TR @ %11  20 lshift and 20 rshift ; 
: RTC_HU@ RTC_TR @ %1111  16 lshift and 16 rshift ; 
: RTC_MNT@ RTC_TR @ %111  12 lshift and 12 rshift ; 
: RTC_MNU@ RTC_TR @ %1111  8 lshift and 8 rshift ; 
: RTC_ST@ RTC_TR @ %111  4 lshift and 4 rshift ; 
: RTC_SU@ RTC_TR @ %1111  0 lshift and 0 rshift ; 

RTC_DR (read-write)
$00002101 CONSTANT RESET_RTC_DR 
 %xxxx  20 lshift RTC_DR bis!        \ RTC_YT	Bit 20	 Width 4
 %xxxx  16 lshift RTC_DR bis!        \ RTC_YU	Bit 16	 Width 4
 %xxx  13 lshift RTC_DR bis!        \ RTC_WDU	Bit 13	 Width 3
 %1  12 lshift RTC_DR bis!        \ RTC_MT	Bit 12	 Width 1
 %xxxx  8 lshift RTC_DR bis!        \ RTC_MU	Bit 8	 Width 4
 %xx  4 lshift RTC_DR bis!        \ RTC_DT	Bit 4	 Width 2
 %xxxx  0 lshift RTC_DR bis!        \ RTC_DU	Bit 0	 Width 4
\ RTC_DR Register BitField Fetch Words  
: RTC_YT@ RTC_DR @ %1111  20 lshift and 20 rshift ; 
: RTC_YU@ RTC_DR @ %1111  16 lshift and 16 rshift ; 
: RTC_WDU@ RTC_DR @ %111  13 lshift and 13 rshift ; 
: RTC_MT@ RTC_DR @ %1  12 lshift and 12 rshift ; 
: RTC_MU@ RTC_DR @ %1111  8 lshift and 8 rshift ; 
: RTC_DT@ RTC_DR @ %11  4 lshift and 4 rshift ; 
: RTC_DU@ RTC_DR @ %1111  0 lshift and 0 rshift ; 

RTC_CR (read-write)
$00000000 CONSTANT RESET_RTC_CR 
 %1  23 lshift RTC_CR bis!        \ RTC_COE	Bit 23	 Width 1
 %xx  21 lshift RTC_CR bis!        \ RTC_OSEL	Bit 21	 Width 2
 %1  20 lshift RTC_CR bis!        \ RTC_POL	Bit 20	 Width 1
 %1  18 lshift RTC_CR bis!        \ RTC_BKP	Bit 18	 Width 1
 %1  17 lshift RTC_CR bis!        \ RTC_SUB1H	Bit 17	 Width 1
 %1  16 lshift RTC_CR bis!        \ RTC_ADD1H	Bit 16	 Width 1
 %1  15 lshift RTC_CR bis!        \ RTC_TSIE	Bit 15	 Width 1
 %1  14 lshift RTC_CR bis!        \ RTC_WUTIE	Bit 14	 Width 1
 %1  13 lshift RTC_CR bis!        \ RTC_ALRBIE	Bit 13	 Width 1
 %1  12 lshift RTC_CR bis!        \ RTC_ALRAIE	Bit 12	 Width 1
 %1  11 lshift RTC_CR bis!        \ RTC_TSE	Bit 11	 Width 1
 %1  10 lshift RTC_CR bis!        \ RTC_WUTE	Bit 10	 Width 1
 %1  9 lshift RTC_CR bis!        \ RTC_ALRBE	Bit 9	 Width 1
 %1  8 lshift RTC_CR bis!        \ RTC_ALRAE	Bit 8	 Width 1
 %1  7 lshift RTC_CR bis!        \ RTC_DCE	Bit 7	 Width 1
 %1  6 lshift RTC_CR bis!        \ RTC_FMT	Bit 6	 Width 1
 %1  4 lshift RTC_CR bis!        \ RTC_REFCKON	Bit 4	 Width 1
 %1  3 lshift RTC_CR bis!        \ RTC_TSEDGE	Bit 3	 Width 1
 %xxx  0 lshift RTC_CR bis!        \ RTC_WCKSEL	Bit 0	 Width 3
\ RTC_CR Register BitField Fetch Words  
: RTC_COE@ RTC_CR @ %1  23 lshift and 23 rshift ; 
: RTC_OSEL@ RTC_CR @ %11  21 lshift and 21 rshift ; 
: RTC_POL@ RTC_CR @ %1  20 lshift and 20 rshift ; 
: RTC_BKP@ RTC_CR @ %1  18 lshift and 18 rshift ; 
: RTC_SUB1H@ RTC_CR @ %1  17 lshift and 17 rshift ; 
: RTC_ADD1H@ RTC_CR @ %1  16 lshift and 16 rshift ; 
: RTC_TSIE@ RTC_CR @ %1  15 lshift and 15 rshift ; 
: RTC_WUTIE@ RTC_CR @ %1  14 lshift and 14 rshift ; 
: RTC_ALRBIE@ RTC_CR @ %1  13 lshift and 13 rshift ; 
: RTC_ALRAIE@ RTC_CR @ %1  12 lshift and 12 rshift ; 
: RTC_TSE@ RTC_CR @ %1  11 lshift and 11 rshift ; 
: RTC_WUTE@ RTC_CR @ %1  10 lshift and 10 rshift ; 
: RTC_ALRBE@ RTC_CR @ %1  9 lshift and 9 rshift ; 
: RTC_ALRAE@ RTC_CR @ %1  8 lshift and 8 rshift ; 
: RTC_DCE@ RTC_CR @ %1  7 lshift and 7 rshift ; 
: RTC_FMT@ RTC_CR @ %1  6 lshift and 6 rshift ; 
: RTC_REFCKON@ RTC_CR @ %1  4 lshift and 4 rshift ; 
: RTC_TSEDGE@ RTC_CR @ %1  3 lshift and 3 rshift ; 
: RTC_WCKSEL@ RTC_CR @ %111  0 lshift and 0 rshift ; 

RTC_ISR ()
$00000007 CONSTANT RESET_RTC_ISR 
 %1  0 lshift RTC_ISR bis!        \ RTC_ALRAWF	Bit 0	 Width 1
 %1  1 lshift RTC_ISR bis!        \ RTC_ALRBWF	Bit 1	 Width 1
 %1  2 lshift RTC_ISR bis!        \ RTC_WUTWF	Bit 2	 Width 1
 %1  3 lshift RTC_ISR bis!        \ RTC_SHPF	Bit 3	 Width 1
 %1  4 lshift RTC_ISR bis!        \ RTC_INITS	Bit 4	 Width 1
 %1  5 lshift RTC_ISR bis!        \ RTC_RSF	Bit 5	 Width 1
 %1  6 lshift RTC_ISR bis!        \ RTC_INITF	Bit 6	 Width 1
 %1  7 lshift RTC_ISR bis!        \ RTC_INIT	Bit 7	 Width 1
 %1  8 lshift RTC_ISR bis!        \ RTC_ALRAF	Bit 8	 Width 1
 %1  9 lshift RTC_ISR bis!        \ RTC_ALRBF	Bit 9	 Width 1
 %1  10 lshift RTC_ISR bis!        \ RTC_WUTF	Bit 10	 Width 1
 %1  11 lshift RTC_ISR bis!        \ RTC_TSF	Bit 11	 Width 1
 %1  12 lshift RTC_ISR bis!        \ RTC_TSOVF	Bit 12	 Width 1
 %1  13 lshift RTC_ISR bis!        \ RTC_TAMP1F	Bit 13	 Width 1
 %1  14 lshift RTC_ISR bis!        \ RTC_TAMP2F	Bit 14	 Width 1
 %1  16 lshift RTC_ISR bis!        \ RTC_RECALPF	Bit 16	 Width 1
\ RTC_ISR Register BitField Fetch Words  
: RTC_ALRAWF@ RTC_ISR @ %1  0 lshift and 0 rshift ; 
: RTC_ALRBWF@ RTC_ISR @ %1  1 lshift and 1 rshift ; 
: RTC_WUTWF@ RTC_ISR @ %1  2 lshift and 2 rshift ; 
: RTC_SHPF@ RTC_ISR @ %1  3 lshift and 3 rshift ; 
: RTC_INITS@ RTC_ISR @ %1  4 lshift and 4 rshift ; 
: RTC_RSF@ RTC_ISR @ %1  5 lshift and 5 rshift ; 
: RTC_INITF@ RTC_ISR @ %1  6 lshift and 6 rshift ; 
: RTC_INIT@ RTC_ISR @ %1  7 lshift and 7 rshift ; 
: RTC_ALRAF@ RTC_ISR @ %1  8 lshift and 8 rshift ; 
: RTC_ALRBF@ RTC_ISR @ %1  9 lshift and 9 rshift ; 
: RTC_WUTF@ RTC_ISR @ %1  10 lshift and 10 rshift ; 
: RTC_TSF@ RTC_ISR @ %1  11 lshift and 11 rshift ; 
: RTC_TSOVF@ RTC_ISR @ %1  12 lshift and 12 rshift ; 
: RTC_TAMP1F@ RTC_ISR @ %1  13 lshift and 13 rshift ; 
: RTC_TAMP2F@ RTC_ISR @ %1  14 lshift and 14 rshift ; 
: RTC_RECALPF@ RTC_ISR @ %1  16 lshift and 16 rshift ; 

RTC_PRER (read-write)
$007F00FF CONSTANT RESET_RTC_PRER 
 %xxxxxxx  16 lshift RTC_PRER bis!        \ RTC_PREDIV_A	Bit 16	 Width 7
 %xxxxxxxxxxxxxxx  0 lshift RTC_PRER bis!        \ RTC_PREDIV_S	Bit 0	 Width 15
\ RTC_PRER Register BitField Fetch Words  
: RTC_PREDIV_A@ RTC_PRER @ %1111111  16 lshift and 16 rshift ; 
: RTC_PREDIV_S@ RTC_PRER @ %111111111111111  0 lshift and 0 rshift ; 

RTC_WUTR (read-write)
$0000FFFF CONSTANT RESET_RTC_WUTR 
 %xxxxxxxxxxxxxxxx  0 lshift RTC_WUTR bis!        \ RTC_WUT	Bit 0	 Width 16
\ RTC_WUTR Register BitField Fetch Words  
: RTC_WUT@ RTC_WUTR @ %1111111111111111  0 lshift and 0 rshift ; 

RTC_CALIBR (read-write)
$00000000 CONSTANT RESET_RTC_CALIBR 
 %1  7 lshift RTC_CALIBR bis!        \ RTC_DCS	Bit 7	 Width 1
 %xxxxx  0 lshift RTC_CALIBR bis!        \ RTC_DC	Bit 0	 Width 5
\ RTC_CALIBR Register BitField Fetch Words  
: RTC_DCS@ RTC_CALIBR @ %1  7 lshift and 7 rshift ; 
: RTC_DC@ RTC_CALIBR @ %11111  0 lshift and 0 rshift ; 

RTC_ALRMAR (read-write)
$00000000 CONSTANT RESET_RTC_ALRMAR 
 %1  31 lshift RTC_ALRMAR bis!        \ RTC_MSK4	Bit 31	 Width 1
 %1  30 lshift RTC_ALRMAR bis!        \ RTC_WDSEL	Bit 30	 Width 1
 %xx  28 lshift RTC_ALRMAR bis!        \ RTC_DT	Bit 28	 Width 2
 %xxxx  24 lshift RTC_ALRMAR bis!        \ RTC_DU	Bit 24	 Width 4
 %1  23 lshift RTC_ALRMAR bis!        \ RTC_MSK3	Bit 23	 Width 1
 %1  22 lshift RTC_ALRMAR bis!        \ RTC_PM	Bit 22	 Width 1
 %xx  20 lshift RTC_ALRMAR bis!        \ RTC_HT	Bit 20	 Width 2
 %xxxx  16 lshift RTC_ALRMAR bis!        \ RTC_HU	Bit 16	 Width 4
 %1  15 lshift RTC_ALRMAR bis!        \ RTC_MSK2	Bit 15	 Width 1
 %xxx  12 lshift RTC_ALRMAR bis!        \ RTC_MNT	Bit 12	 Width 3
 %xxxx  8 lshift RTC_ALRMAR bis!        \ RTC_MNU	Bit 8	 Width 4
 %1  7 lshift RTC_ALRMAR bis!        \ RTC_MSK1	Bit 7	 Width 1
 %xxx  4 lshift RTC_ALRMAR bis!        \ RTC_ST	Bit 4	 Width 3
 %xxxx  0 lshift RTC_ALRMAR bis!        \ RTC_SU	Bit 0	 Width 4
\ RTC_ALRMAR Register BitField Fetch Words  
: RTC_MSK4@ RTC_ALRMAR @ %1  31 lshift and 31 rshift ; 
: RTC_WDSEL@ RTC_ALRMAR @ %1  30 lshift and 30 rshift ; 
: RTC_DT@ RTC_ALRMAR @ %11  28 lshift and 28 rshift ; 
: RTC_DU@ RTC_ALRMAR @ %1111  24 lshift and 24 rshift ; 
: RTC_MSK3@ RTC_ALRMAR @ %1  23 lshift and 23 rshift ; 
: RTC_PM@ RTC_ALRMAR @ %1  22 lshift and 22 rshift ; 
: RTC_HT@ RTC_ALRMAR @ %11  20 lshift and 20 rshift ; 
: RTC_HU@ RTC_ALRMAR @ %1111  16 lshift and 16 rshift ; 
: RTC_MSK2@ RTC_ALRMAR @ %1  15 lshift and 15 rshift ; 
: RTC_MNT@ RTC_ALRMAR @ %111  12 lshift and 12 rshift ; 
: RTC_MNU@ RTC_ALRMAR @ %1111  8 lshift and 8 rshift ; 
: RTC_MSK1@ RTC_ALRMAR @ %1  7 lshift and 7 rshift ; 
: RTC_ST@ RTC_ALRMAR @ %111  4 lshift and 4 rshift ; 
: RTC_SU@ RTC_ALRMAR @ %1111  0 lshift and 0 rshift ; 

RTC_ALRMBR (read-write)
$00000000 CONSTANT RESET_RTC_ALRMBR 
 %1  31 lshift RTC_ALRMBR bis!        \ RTC_MSK4	Bit 31	 Width 1
 %1  30 lshift RTC_ALRMBR bis!        \ RTC_WDSEL	Bit 30	 Width 1
 %xx  28 lshift RTC_ALRMBR bis!        \ RTC_DT	Bit 28	 Width 2
 %xxxx  24 lshift RTC_ALRMBR bis!        \ RTC_DU	Bit 24	 Width 4
 %1  23 lshift RTC_ALRMBR bis!        \ RTC_MSK3	Bit 23	 Width 1
 %1  22 lshift RTC_ALRMBR bis!        \ RTC_PM	Bit 22	 Width 1
 %xx  20 lshift RTC_ALRMBR bis!        \ RTC_HT	Bit 20	 Width 2
 %xxxx  16 lshift RTC_ALRMBR bis!        \ RTC_HU	Bit 16	 Width 4
 %1  15 lshift RTC_ALRMBR bis!        \ RTC_MSK2	Bit 15	 Width 1
 %xxx  12 lshift RTC_ALRMBR bis!        \ RTC_MNT	Bit 12	 Width 3
 %xxxx  8 lshift RTC_ALRMBR bis!        \ RTC_MNU	Bit 8	 Width 4
 %1  7 lshift RTC_ALRMBR bis!        \ RTC_MSK1	Bit 7	 Width 1
 %xxx  4 lshift RTC_ALRMBR bis!        \ RTC_ST	Bit 4	 Width 3
 %xxxx  0 lshift RTC_ALRMBR bis!        \ RTC_SU	Bit 0	 Width 4
\ RTC_ALRMBR Register BitField Fetch Words  
: RTC_MSK4@ RTC_ALRMBR @ %1  31 lshift and 31 rshift ; 
: RTC_WDSEL@ RTC_ALRMBR @ %1  30 lshift and 30 rshift ; 
: RTC_DT@ RTC_ALRMBR @ %11  28 lshift and 28 rshift ; 
: RTC_DU@ RTC_ALRMBR @ %1111  24 lshift and 24 rshift ; 
: RTC_MSK3@ RTC_ALRMBR @ %1  23 lshift and 23 rshift ; 
: RTC_PM@ RTC_ALRMBR @ %1  22 lshift and 22 rshift ; 
: RTC_HT@ RTC_ALRMBR @ %11  20 lshift and 20 rshift ; 
: RTC_HU@ RTC_ALRMBR @ %1111  16 lshift and 16 rshift ; 
: RTC_MSK2@ RTC_ALRMBR @ %1  15 lshift and 15 rshift ; 
: RTC_MNT@ RTC_ALRMBR @ %111  12 lshift and 12 rshift ; 
: RTC_MNU@ RTC_ALRMBR @ %1111  8 lshift and 8 rshift ; 
: RTC_MSK1@ RTC_ALRMBR @ %1  7 lshift and 7 rshift ; 
: RTC_ST@ RTC_ALRMBR @ %111  4 lshift and 4 rshift ; 
: RTC_SU@ RTC_ALRMBR @ %1111  0 lshift and 0 rshift ; 

RTC_WPR (write-only)
$00000000 CONSTANT RESET_RTC_WPR 
 %xxxxxxxx  0 lshift RTC_WPR bis!        \ RTC_KEY	Bit 0	 Width 8
\ RTC_WPR Register BitField Fetch Words  
: RTC_KEY@ RTC_WPR @ %11111111  0 lshift and 0 rshift ; 

RTC_SSR (read-only)
$00000000 CONSTANT RESET_RTC_SSR 
 %xxxxxxxxxxxxxxxx  0 lshift RTC_SSR bis!        \ RTC_SS	Bit 0	 Width 16
\ RTC_SSR Register BitField Fetch Words  
: RTC_SS@ RTC_SSR @ %1111111111111111  0 lshift and 0 rshift ; 

RTC_SHIFTR (write-only)
$00000000 CONSTANT RESET_RTC_SHIFTR 
 %1  31 lshift RTC_SHIFTR bis!        \ RTC_ADD1S	Bit 31	 Width 1
 %xxxxxxxxxxxxxxx  0 lshift RTC_SHIFTR bis!        \ RTC_SUBFS	Bit 0	 Width 15
\ RTC_SHIFTR Register BitField Fetch Words  
: RTC_ADD1S@ RTC_SHIFTR @ %1  31 lshift and 31 rshift ; 
: RTC_SUBFS@ RTC_SHIFTR @ %111111111111111  0 lshift and 0 rshift ; 

RTC_TSTR (read-only)
$00000000 CONSTANT RESET_RTC_TSTR 
 %1  18 lshift RTC_TSTR bis!        \ RTC_ALARMOUTTYPE	Bit 18	 Width 1
 %1  17 lshift RTC_TSTR bis!        \ RTC_TSINSEL	Bit 17	 Width 1
 %1  16 lshift RTC_TSTR bis!        \ RTC_TAMP1INSEL	Bit 16	 Width 1
 %1  2 lshift RTC_TSTR bis!        \ RTC_TAMPIE	Bit 2	 Width 1
 %1  1 lshift RTC_TSTR bis!        \ RTC_TAMP1TRG	Bit 1	 Width 1
 %1  0 lshift RTC_TSTR bis!        \ RTC_TAMP1E	Bit 0	 Width 1
\ RTC_TSTR Register BitField Fetch Words  
: RTC_ALARMOUTTYPE@ RTC_TSTR @ %1  18 lshift and 18 rshift ; 
: RTC_TSINSEL@ RTC_TSTR @ %1  17 lshift and 17 rshift ; 
: RTC_TAMP1INSEL@ RTC_TSTR @ %1  16 lshift and 16 rshift ; 
: RTC_TAMPIE@ RTC_TSTR @ %1  2 lshift and 2 rshift ; 
: RTC_TAMP1TRG@ RTC_TSTR @ %1  1 lshift and 1 rshift ; 
: RTC_TAMP1E@ RTC_TSTR @ %1  0 lshift and 0 rshift ; 

RTC_TSDR (read-only)
$00000000 CONSTANT RESET_RTC_TSDR 
 %xxx  13 lshift RTC_TSDR bis!        \ RTC_WDU	Bit 13	 Width 3
 %1  12 lshift RTC_TSDR bis!        \ RTC_MT	Bit 12	 Width 1
 %xxxx  8 lshift RTC_TSDR bis!        \ RTC_MU	Bit 8	 Width 4
 %xx  4 lshift RTC_TSDR bis!        \ RTC_DT	Bit 4	 Width 2
 %xxxx  0 lshift RTC_TSDR bis!        \ RTC_DU	Bit 0	 Width 4
\ RTC_TSDR Register BitField Fetch Words  
: RTC_WDU@ RTC_TSDR @ %111  13 lshift and 13 rshift ; 
: RTC_MT@ RTC_TSDR @ %1  12 lshift and 12 rshift ; 
: RTC_MU@ RTC_TSDR @ %1111  8 lshift and 8 rshift ; 
: RTC_DT@ RTC_TSDR @ %11  4 lshift and 4 rshift ; 
: RTC_DU@ RTC_TSDR @ %1111  0 lshift and 0 rshift ; 

RTC_TSSSR (read-only)
$00000000 CONSTANT RESET_RTC_TSSSR 
 %xxxxxxxxxxxxxxxx  0 lshift RTC_TSSSR bis!        \ RTC_SS	Bit 0	 Width 16
\ RTC_TSSSR Register BitField Fetch Words  
: RTC_SS@ RTC_TSSSR @ %1111111111111111  0 lshift and 0 rshift ; 

RTC_CALR (read-write)
$00000000 CONSTANT RESET_RTC_CALR 
 %1  15 lshift RTC_CALR bis!        \ RTC_CALP	Bit 15	 Width 1
 %1  14 lshift RTC_CALR bis!        \ RTC_CALW8	Bit 14	 Width 1
 %1  13 lshift RTC_CALR bis!        \ RTC_CALW16	Bit 13	 Width 1
 %xxxxxxxxx  0 lshift RTC_CALR bis!        \ RTC_CALM	Bit 0	 Width 9
\ RTC_CALR Register BitField Fetch Words  
: RTC_CALP@ RTC_CALR @ %1  15 lshift and 15 rshift ; 
: RTC_CALW8@ RTC_CALR @ %1  14 lshift and 14 rshift ; 
: RTC_CALW16@ RTC_CALR @ %1  13 lshift and 13 rshift ; 
: RTC_CALM@ RTC_CALR @ %111111111  0 lshift and 0 rshift ; 

RTC_TAFCR (read-write)
$00000000 CONSTANT RESET_RTC_TAFCR 
 %1  18 lshift RTC_TAFCR bis!        \ RTC_ALARMOUTTYPE	Bit 18	 Width 1
 %1  17 lshift RTC_TAFCR bis!        \ RTC_TSINSEL	Bit 17	 Width 1
 %1  16 lshift RTC_TAFCR bis!        \ RTC_TAMP1INSEL	Bit 16	 Width 1
 %1  15 lshift RTC_TAFCR bis!        \ RTC_TAMPPUDIS	Bit 15	 Width 1
 %xx  13 lshift RTC_TAFCR bis!        \ RTC_TAMPPRCH	Bit 13	 Width 2
 %xx  11 lshift RTC_TAFCR bis!        \ RTC_TAMPFLT	Bit 11	 Width 2
 %xxx  8 lshift RTC_TAFCR bis!        \ RTC_TAMPFREQ	Bit 8	 Width 3
 %1  7 lshift RTC_TAFCR bis!        \ RTC_TAMPTS	Bit 7	 Width 1
 %1  4 lshift RTC_TAFCR bis!        \ RTC_TAMP2TRG	Bit 4	 Width 1
 %1  3 lshift RTC_TAFCR bis!        \ RTC_TAMP2E	Bit 3	 Width 1
 %1  2 lshift RTC_TAFCR bis!        \ RTC_TAMPIE	Bit 2	 Width 1
 %1  1 lshift RTC_TAFCR bis!        \ RTC_TAMP1TRG	Bit 1	 Width 1
 %1  0 lshift RTC_TAFCR bis!        \ RTC_TAMP1E	Bit 0	 Width 1
\ RTC_TAFCR Register BitField Fetch Words  
: RTC_ALARMOUTTYPE@ RTC_TAFCR @ %1  18 lshift and 18 rshift ; 
: RTC_TSINSEL@ RTC_TAFCR @ %1  17 lshift and 17 rshift ; 
: RTC_TAMP1INSEL@ RTC_TAFCR @ %1  16 lshift and 16 rshift ; 
: RTC_TAMPPUDIS@ RTC_TAFCR @ %1  15 lshift and 15 rshift ; 
: RTC_TAMPPRCH@ RTC_TAFCR @ %11  13 lshift and 13 rshift ; 
: RTC_TAMPFLT@ RTC_TAFCR @ %11  11 lshift and 11 rshift ; 
: RTC_TAMPFREQ@ RTC_TAFCR @ %111  8 lshift and 8 rshift ; 
: RTC_TAMPTS@ RTC_TAFCR @ %1  7 lshift and 7 rshift ; 
: RTC_TAMP2TRG@ RTC_TAFCR @ %1  4 lshift and 4 rshift ; 
: RTC_TAMP2E@ RTC_TAFCR @ %1  3 lshift and 3 rshift ; 
: RTC_TAMPIE@ RTC_TAFCR @ %1  2 lshift and 2 rshift ; 
: RTC_TAMP1TRG@ RTC_TAFCR @ %1  1 lshift and 1 rshift ; 
: RTC_TAMP1E@ RTC_TAFCR @ %1  0 lshift and 0 rshift ; 

RTC_ALRMASSR (read-write)
$00000000 CONSTANT RESET_RTC_ALRMASSR 
 %xxxx  24 lshift RTC_ALRMASSR bis!        \ RTC_MASKSS	Bit 24	 Width 4
 %xxxxxxxxxxxxxxx  0 lshift RTC_ALRMASSR bis!        \ RTC_SS	Bit 0	 Width 15
\ RTC_ALRMASSR Register BitField Fetch Words  
: RTC_MASKSS@ RTC_ALRMASSR @ %1111  24 lshift and 24 rshift ; 
: RTC_SS@ RTC_ALRMASSR @ %111111111111111  0 lshift and 0 rshift ; 

RTC_ALRMBSSR (read-write)
$00000000 CONSTANT RESET_RTC_ALRMBSSR 
 %xxxx  24 lshift RTC_ALRMBSSR bis!        \ RTC_MASKSS	Bit 24	 Width 4
 %xxxxxxxxxxxxxxx  0 lshift RTC_ALRMBSSR bis!        \ RTC_SS	Bit 0	 Width 15
\ RTC_ALRMBSSR Register BitField Fetch Words  
: RTC_MASKSS@ RTC_ALRMBSSR @ %1111  24 lshift and 24 rshift ; 
: RTC_SS@ RTC_ALRMBSSR @ %111111111111111  0 lshift and 0 rshift ; 

RTC_BKP0R (read-write)
$00000000 CONSTANT RESET_RTC_BKP0R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP0R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP0R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP0R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP1R (read-write)
$00000000 CONSTANT RESET_RTC_BKP1R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP1R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP1R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP1R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP2R (read-write)
$00000000 CONSTANT RESET_RTC_BKP2R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP2R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP2R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP2R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP3R (read-write)
$00000000 CONSTANT RESET_RTC_BKP3R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP3R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP3R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP3R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP4R (read-write)
$00000000 CONSTANT RESET_RTC_BKP4R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP4R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP4R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP4R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP5R (read-write)
$00000000 CONSTANT RESET_RTC_BKP5R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP5R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP5R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP5R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP6R (read-write)
$00000000 CONSTANT RESET_RTC_BKP6R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP6R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP6R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP6R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP7R (read-write)
$00000000 CONSTANT RESET_RTC_BKP7R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP7R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP7R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP7R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP8R (read-write)
$00000000 CONSTANT RESET_RTC_BKP8R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP8R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP8R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP8R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP9R (read-write)
$00000000 CONSTANT RESET_RTC_BKP9R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP9R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP9R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP9R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP10R (read-write)
$00000000 CONSTANT RESET_RTC_BKP10R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP10R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP10R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP10R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP11R (read-write)
$00000000 CONSTANT RESET_RTC_BKP11R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP11R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP11R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP11R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP12R (read-write)
$00000000 CONSTANT RESET_RTC_BKP12R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP12R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP12R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP12R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP13R (read-write)
$00000000 CONSTANT RESET_RTC_BKP13R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP13R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP13R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP13R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP14R (read-write)
$00000000 CONSTANT RESET_RTC_BKP14R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP14R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP14R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP14R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP15R (read-write)
$00000000 CONSTANT RESET_RTC_BKP15R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP15R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP15R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP15R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP16R (read-write)
$00000000 CONSTANT RESET_RTC_BKP16R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP16R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP16R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP16R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP17R (read-write)
$00000000 CONSTANT RESET_RTC_BKP17R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP17R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP17R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP17R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP18R (read-write)
$00000000 CONSTANT RESET_RTC_BKP18R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP18R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP18R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP18R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

RTC_BKP19R (read-write)
$00000000 CONSTANT RESET_RTC_BKP19R 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift RTC_BKP19R bis!        \ RTC_BKP	Bit 0	 Width 32
\ RTC_BKP19R Register BitField Fetch Words  
: RTC_BKP@ RTC_BKP19R @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### UART4 ###################################
UART4_SR ()
$00C00000 CONSTANT RESET_UART4_SR 
 %1  8 lshift UART4_SR bis!        \ UART4_LBD	Bit 8	 Width 1
 %1  7 lshift UART4_SR bis!        \ UART4_TXE	Bit 7	 Width 1
 %1  6 lshift UART4_SR bis!        \ UART4_TC	Bit 6	 Width 1
 %1  5 lshift UART4_SR bis!        \ UART4_RXNE	Bit 5	 Width 1
 %1  4 lshift UART4_SR bis!        \ UART4_IDLE	Bit 4	 Width 1
 %1  3 lshift UART4_SR bis!        \ UART4_ORE	Bit 3	 Width 1
 %1  2 lshift UART4_SR bis!        \ UART4_NF	Bit 2	 Width 1
 %1  1 lshift UART4_SR bis!        \ UART4_FE	Bit 1	 Width 1
 %1  0 lshift UART4_SR bis!        \ UART4_PE	Bit 0	 Width 1
\ UART4_SR Register BitField Fetch Words  
: UART4_LBD@ UART4_SR @ %1  8 lshift and 8 rshift ; 
: UART4_TXE@ UART4_SR @ %1  7 lshift and 7 rshift ; 
: UART4_TC@ UART4_SR @ %1  6 lshift and 6 rshift ; 
: UART4_RXNE@ UART4_SR @ %1  5 lshift and 5 rshift ; 
: UART4_IDLE@ UART4_SR @ %1  4 lshift and 4 rshift ; 
: UART4_ORE@ UART4_SR @ %1  3 lshift and 3 rshift ; 
: UART4_NF@ UART4_SR @ %1  2 lshift and 2 rshift ; 
: UART4_FE@ UART4_SR @ %1  1 lshift and 1 rshift ; 
: UART4_PE@ UART4_SR @ %1  0 lshift and 0 rshift ; 

UART4_DR (read-write)
$00000000 CONSTANT RESET_UART4_DR 
 %xxxxxxxxx  0 lshift UART4_DR bis!        \ UART4_DR	Bit 0	 Width 9
\ UART4_DR Register BitField Fetch Words  
: UART4_DR@ UART4_DR @ %111111111  0 lshift and 0 rshift ; 

UART4_BRR (read-write)
$0000 CONSTANT RESET_UART4_BRR 
 %xxxxxxxxxxxx  4 lshift UART4_BRR bis!        \ UART4_DIV_Mantissa	Bit 4	 Width 12
 %xxxx  0 lshift UART4_BRR bis!        \ UART4_DIV_Fraction	Bit 0	 Width 4
\ UART4_BRR Register BitField Fetch Words  
: UART4_DIV_Mantissa@ UART4_BRR @ %11111111111  4 lshift and 4 rshift ; 
: UART4_DIV_Fraction@ UART4_BRR @ %1111  0 lshift and 0 rshift ; 

UART4_CR1 (read-write)
$0000 CONSTANT RESET_UART4_CR1 
 %1  15 lshift UART4_CR1 bis!        \ UART4_OVER8	Bit 15	 Width 1
 %1  13 lshift UART4_CR1 bis!        \ UART4_UE	Bit 13	 Width 1
 %1  12 lshift UART4_CR1 bis!        \ UART4_M	Bit 12	 Width 1
 %1  11 lshift UART4_CR1 bis!        \ UART4_WAKE	Bit 11	 Width 1
 %1  10 lshift UART4_CR1 bis!        \ UART4_PCE	Bit 10	 Width 1
 %1  9 lshift UART4_CR1 bis!        \ UART4_PS	Bit 9	 Width 1
 %1  8 lshift UART4_CR1 bis!        \ UART4_PEIE	Bit 8	 Width 1
 %1  7 lshift UART4_CR1 bis!        \ UART4_TXEIE	Bit 7	 Width 1
 %1  6 lshift UART4_CR1 bis!        \ UART4_TCIE	Bit 6	 Width 1
 %1  5 lshift UART4_CR1 bis!        \ UART4_RXNEIE	Bit 5	 Width 1
 %1  4 lshift UART4_CR1 bis!        \ UART4_IDLEIE	Bit 4	 Width 1
 %1  3 lshift UART4_CR1 bis!        \ UART4_TE	Bit 3	 Width 1
 %1  2 lshift UART4_CR1 bis!        \ UART4_RE	Bit 2	 Width 1
 %1  1 lshift UART4_CR1 bis!        \ UART4_RWU	Bit 1	 Width 1
 %1  0 lshift UART4_CR1 bis!        \ UART4_SBK	Bit 0	 Width 1
\ UART4_CR1 Register BitField Fetch Words  
: UART4_OVER8@ UART4_CR1 @ %1  15 lshift and 15 rshift ; 
: UART4_UE@ UART4_CR1 @ %1  13 lshift and 13 rshift ; 
: UART4_M@ UART4_CR1 @ %1  12 lshift and 12 rshift ; 
: UART4_WAKE@ UART4_CR1 @ %1  11 lshift and 11 rshift ; 
: UART4_PCE@ UART4_CR1 @ %1  10 lshift and 10 rshift ; 
: UART4_PS@ UART4_CR1 @ %1  9 lshift and 9 rshift ; 
: UART4_PEIE@ UART4_CR1 @ %1  8 lshift and 8 rshift ; 
: UART4_TXEIE@ UART4_CR1 @ %1  7 lshift and 7 rshift ; 
: UART4_TCIE@ UART4_CR1 @ %1  6 lshift and 6 rshift ; 
: UART4_RXNEIE@ UART4_CR1 @ %1  5 lshift and 5 rshift ; 
: UART4_IDLEIE@ UART4_CR1 @ %1  4 lshift and 4 rshift ; 
: UART4_TE@ UART4_CR1 @ %1  3 lshift and 3 rshift ; 
: UART4_RE@ UART4_CR1 @ %1  2 lshift and 2 rshift ; 
: UART4_RWU@ UART4_CR1 @ %1  1 lshift and 1 rshift ; 
: UART4_SBK@ UART4_CR1 @ %1  0 lshift and 0 rshift ; 

UART4_CR2 (read-write)
$0000 CONSTANT RESET_UART4_CR2 
 %1  14 lshift UART4_CR2 bis!        \ UART4_LINEN	Bit 14	 Width 1
 %xx  12 lshift UART4_CR2 bis!        \ UART4_STOP	Bit 12	 Width 2
 %1  6 lshift UART4_CR2 bis!        \ UART4_LBDIE	Bit 6	 Width 1
 %1  5 lshift UART4_CR2 bis!        \ UART4_LBDL	Bit 5	 Width 1
 %xxxx  0 lshift UART4_CR2 bis!        \ UART4_ADD	Bit 0	 Width 4
\ UART4_CR2 Register BitField Fetch Words  
: UART4_LINEN@ UART4_CR2 @ %1  14 lshift and 14 rshift ; 
: UART4_STOP@ UART4_CR2 @ %11  12 lshift and 12 rshift ; 
: UART4_LBDIE@ UART4_CR2 @ %1  6 lshift and 6 rshift ; 
: UART4_LBDL@ UART4_CR2 @ %1  5 lshift and 5 rshift ; 
: UART4_ADD@ UART4_CR2 @ %1111  0 lshift and 0 rshift ; 

UART4_CR3 (read-write)
$0000 CONSTANT RESET_UART4_CR3 
 %1  11 lshift UART4_CR3 bis!        \ UART4_ONEBIT	Bit 11	 Width 1
 %1  7 lshift UART4_CR3 bis!        \ UART4_DMAT	Bit 7	 Width 1
 %1  6 lshift UART4_CR3 bis!        \ UART4_DMAR	Bit 6	 Width 1
 %1  3 lshift UART4_CR3 bis!        \ UART4_HDSEL	Bit 3	 Width 1
 %1  2 lshift UART4_CR3 bis!        \ UART4_IRLP	Bit 2	 Width 1
 %1  1 lshift UART4_CR3 bis!        \ UART4_IREN	Bit 1	 Width 1
 %1  0 lshift UART4_CR3 bis!        \ UART4_EIE	Bit 0	 Width 1
\ UART4_CR3 Register BitField Fetch Words  
: UART4_ONEBIT@ UART4_CR3 @ %1  11 lshift and 11 rshift ; 
: UART4_DMAT@ UART4_CR3 @ %1  7 lshift and 7 rshift ; 
: UART4_DMAR@ UART4_CR3 @ %1  6 lshift and 6 rshift ; 
: UART4_HDSEL@ UART4_CR3 @ %1  3 lshift and 3 rshift ; 
: UART4_IRLP@ UART4_CR3 @ %1  2 lshift and 2 rshift ; 
: UART4_IREN@ UART4_CR3 @ %1  1 lshift and 1 rshift ; 
: UART4_EIE@ UART4_CR3 @ %1  0 lshift and 0 rshift ; 

                    
################################### UART5 ###################################
UART5_SR ()
$00C00000 CONSTANT RESET_UART5_SR 
 %1  8 lshift UART5_SR bis!        \ UART5_LBD	Bit 8	 Width 1
 %1  7 lshift UART5_SR bis!        \ UART5_TXE	Bit 7	 Width 1
 %1  6 lshift UART5_SR bis!        \ UART5_TC	Bit 6	 Width 1
 %1  5 lshift UART5_SR bis!        \ UART5_RXNE	Bit 5	 Width 1
 %1  4 lshift UART5_SR bis!        \ UART5_IDLE	Bit 4	 Width 1
 %1  3 lshift UART5_SR bis!        \ UART5_ORE	Bit 3	 Width 1
 %1  2 lshift UART5_SR bis!        \ UART5_NF	Bit 2	 Width 1
 %1  1 lshift UART5_SR bis!        \ UART5_FE	Bit 1	 Width 1
 %1  0 lshift UART5_SR bis!        \ UART5_PE	Bit 0	 Width 1
\ UART5_SR Register BitField Fetch Words  
: UART5_LBD@ UART5_SR @ %1  8 lshift and 8 rshift ; 
: UART5_TXE@ UART5_SR @ %1  7 lshift and 7 rshift ; 
: UART5_TC@ UART5_SR @ %1  6 lshift and 6 rshift ; 
: UART5_RXNE@ UART5_SR @ %1  5 lshift and 5 rshift ; 
: UART5_IDLE@ UART5_SR @ %1  4 lshift and 4 rshift ; 
: UART5_ORE@ UART5_SR @ %1  3 lshift and 3 rshift ; 
: UART5_NF@ UART5_SR @ %1  2 lshift and 2 rshift ; 
: UART5_FE@ UART5_SR @ %1  1 lshift and 1 rshift ; 
: UART5_PE@ UART5_SR @ %1  0 lshift and 0 rshift ; 

UART5_DR (read-write)
$00000000 CONSTANT RESET_UART5_DR 
 %xxxxxxxxx  0 lshift UART5_DR bis!        \ UART5_DR	Bit 0	 Width 9
\ UART5_DR Register BitField Fetch Words  
: UART5_DR@ UART5_DR @ %111111111  0 lshift and 0 rshift ; 

UART5_BRR (read-write)
$0000 CONSTANT RESET_UART5_BRR 
 %xxxxxxxxxxxx  4 lshift UART5_BRR bis!        \ UART5_DIV_Mantissa	Bit 4	 Width 12
 %xxxx  0 lshift UART5_BRR bis!        \ UART5_DIV_Fraction	Bit 0	 Width 4
\ UART5_BRR Register BitField Fetch Words  
: UART5_DIV_Mantissa@ UART5_BRR @ %11111111111  4 lshift and 4 rshift ; 
: UART5_DIV_Fraction@ UART5_BRR @ %1111  0 lshift and 0 rshift ; 

UART5_CR1 (read-write)
$0000 CONSTANT RESET_UART5_CR1 
 %1  15 lshift UART5_CR1 bis!        \ UART5_OVER8	Bit 15	 Width 1
 %1  13 lshift UART5_CR1 bis!        \ UART5_UE	Bit 13	 Width 1
 %1  12 lshift UART5_CR1 bis!        \ UART5_M	Bit 12	 Width 1
 %1  11 lshift UART5_CR1 bis!        \ UART5_WAKE	Bit 11	 Width 1
 %1  10 lshift UART5_CR1 bis!        \ UART5_PCE	Bit 10	 Width 1
 %1  9 lshift UART5_CR1 bis!        \ UART5_PS	Bit 9	 Width 1
 %1  8 lshift UART5_CR1 bis!        \ UART5_PEIE	Bit 8	 Width 1
 %1  7 lshift UART5_CR1 bis!        \ UART5_TXEIE	Bit 7	 Width 1
 %1  6 lshift UART5_CR1 bis!        \ UART5_TCIE	Bit 6	 Width 1
 %1  5 lshift UART5_CR1 bis!        \ UART5_RXNEIE	Bit 5	 Width 1
 %1  4 lshift UART5_CR1 bis!        \ UART5_IDLEIE	Bit 4	 Width 1
 %1  3 lshift UART5_CR1 bis!        \ UART5_TE	Bit 3	 Width 1
 %1  2 lshift UART5_CR1 bis!        \ UART5_RE	Bit 2	 Width 1
 %1  1 lshift UART5_CR1 bis!        \ UART5_RWU	Bit 1	 Width 1
 %1  0 lshift UART5_CR1 bis!        \ UART5_SBK	Bit 0	 Width 1
\ UART5_CR1 Register BitField Fetch Words  
: UART5_OVER8@ UART5_CR1 @ %1  15 lshift and 15 rshift ; 
: UART5_UE@ UART5_CR1 @ %1  13 lshift and 13 rshift ; 
: UART5_M@ UART5_CR1 @ %1  12 lshift and 12 rshift ; 
: UART5_WAKE@ UART5_CR1 @ %1  11 lshift and 11 rshift ; 
: UART5_PCE@ UART5_CR1 @ %1  10 lshift and 10 rshift ; 
: UART5_PS@ UART5_CR1 @ %1  9 lshift and 9 rshift ; 
: UART5_PEIE@ UART5_CR1 @ %1  8 lshift and 8 rshift ; 
: UART5_TXEIE@ UART5_CR1 @ %1  7 lshift and 7 rshift ; 
: UART5_TCIE@ UART5_CR1 @ %1  6 lshift and 6 rshift ; 
: UART5_RXNEIE@ UART5_CR1 @ %1  5 lshift and 5 rshift ; 
: UART5_IDLEIE@ UART5_CR1 @ %1  4 lshift and 4 rshift ; 
: UART5_TE@ UART5_CR1 @ %1  3 lshift and 3 rshift ; 
: UART5_RE@ UART5_CR1 @ %1  2 lshift and 2 rshift ; 
: UART5_RWU@ UART5_CR1 @ %1  1 lshift and 1 rshift ; 
: UART5_SBK@ UART5_CR1 @ %1  0 lshift and 0 rshift ; 

UART5_CR2 (read-write)
$0000 CONSTANT RESET_UART5_CR2 
 %1  14 lshift UART5_CR2 bis!        \ UART5_LINEN	Bit 14	 Width 1
 %xx  12 lshift UART5_CR2 bis!        \ UART5_STOP	Bit 12	 Width 2
 %1  6 lshift UART5_CR2 bis!        \ UART5_LBDIE	Bit 6	 Width 1
 %1  5 lshift UART5_CR2 bis!        \ UART5_LBDL	Bit 5	 Width 1
 %xxxx  0 lshift UART5_CR2 bis!        \ UART5_ADD	Bit 0	 Width 4
\ UART5_CR2 Register BitField Fetch Words  
: UART5_LINEN@ UART5_CR2 @ %1  14 lshift and 14 rshift ; 
: UART5_STOP@ UART5_CR2 @ %11  12 lshift and 12 rshift ; 
: UART5_LBDIE@ UART5_CR2 @ %1  6 lshift and 6 rshift ; 
: UART5_LBDL@ UART5_CR2 @ %1  5 lshift and 5 rshift ; 
: UART5_ADD@ UART5_CR2 @ %1111  0 lshift and 0 rshift ; 

UART5_CR3 (read-write)
$0000 CONSTANT RESET_UART5_CR3 
 %1  11 lshift UART5_CR3 bis!        \ UART5_ONEBIT	Bit 11	 Width 1
 %1  7 lshift UART5_CR3 bis!        \ UART5_DMAT	Bit 7	 Width 1
 %1  6 lshift UART5_CR3 bis!        \ UART5_DMAR	Bit 6	 Width 1
 %1  3 lshift UART5_CR3 bis!        \ UART5_HDSEL	Bit 3	 Width 1
 %1  2 lshift UART5_CR3 bis!        \ UART5_IRLP	Bit 2	 Width 1
 %1  1 lshift UART5_CR3 bis!        \ UART5_IREN	Bit 1	 Width 1
 %1  0 lshift UART5_CR3 bis!        \ UART5_EIE	Bit 0	 Width 1
\ UART5_CR3 Register BitField Fetch Words  
: UART5_ONEBIT@ UART5_CR3 @ %1  11 lshift and 11 rshift ; 
: UART5_DMAT@ UART5_CR3 @ %1  7 lshift and 7 rshift ; 
: UART5_DMAR@ UART5_CR3 @ %1  6 lshift and 6 rshift ; 
: UART5_HDSEL@ UART5_CR3 @ %1  3 lshift and 3 rshift ; 
: UART5_IRLP@ UART5_CR3 @ %1  2 lshift and 2 rshift ; 
: UART5_IREN@ UART5_CR3 @ %1  1 lshift and 1 rshift ; 
: UART5_EIE@ UART5_CR3 @ %1  0 lshift and 0 rshift ; 

                    
################################### C_ADC ###################################
C_ADC_CSR (read-only)
$00000000 CONSTANT RESET_C_ADC_CSR 
 %1  21 lshift C_ADC_CSR bis!        \ C_ADC_OVR3	Bit 21	 Width 1
 %1  20 lshift C_ADC_CSR bis!        \ C_ADC_STRT3	Bit 20	 Width 1
 %1  19 lshift C_ADC_CSR bis!        \ C_ADC_JSTRT3	Bit 19	 Width 1
 %1  18 lshift C_ADC_CSR bis!        \ C_ADC_JEOC3	Bit 18	 Width 1
 %1  17 lshift C_ADC_CSR bis!        \ C_ADC_EOC3	Bit 17	 Width 1
 %1  16 lshift C_ADC_CSR bis!        \ C_ADC_AWD3	Bit 16	 Width 1
 %1  13 lshift C_ADC_CSR bis!        \ C_ADC_OVR2	Bit 13	 Width 1
 %1  12 lshift C_ADC_CSR bis!        \ C_ADC_STRT2	Bit 12	 Width 1
 %1  11 lshift C_ADC_CSR bis!        \ C_ADC_JSTRT2	Bit 11	 Width 1
 %1  10 lshift C_ADC_CSR bis!        \ C_ADC_JEOC2	Bit 10	 Width 1
 %1  9 lshift C_ADC_CSR bis!        \ C_ADC_EOC2	Bit 9	 Width 1
 %1  8 lshift C_ADC_CSR bis!        \ C_ADC_AWD2	Bit 8	 Width 1
 %1  5 lshift C_ADC_CSR bis!        \ C_ADC_OVR1	Bit 5	 Width 1
 %1  4 lshift C_ADC_CSR bis!        \ C_ADC_STRT1	Bit 4	 Width 1
 %1  3 lshift C_ADC_CSR bis!        \ C_ADC_JSTRT1	Bit 3	 Width 1
 %1  2 lshift C_ADC_CSR bis!        \ C_ADC_JEOC1	Bit 2	 Width 1
 %1  1 lshift C_ADC_CSR bis!        \ C_ADC_EOC1	Bit 1	 Width 1
 %1  0 lshift C_ADC_CSR bis!        \ C_ADC_AWD1	Bit 0	 Width 1
\ C_ADC_CSR Register BitField Fetch Words  
: C_ADC_OVR3@ C_ADC_CSR @ %1  21 lshift and 21 rshift ; 
: C_ADC_STRT3@ C_ADC_CSR @ %1  20 lshift and 20 rshift ; 
: C_ADC_JSTRT3@ C_ADC_CSR @ %1  19 lshift and 19 rshift ; 
: C_ADC_JEOC3@ C_ADC_CSR @ %1  18 lshift and 18 rshift ; 
: C_ADC_EOC3@ C_ADC_CSR @ %1  17 lshift and 17 rshift ; 
: C_ADC_AWD3@ C_ADC_CSR @ %1  16 lshift and 16 rshift ; 
: C_ADC_OVR2@ C_ADC_CSR @ %1  13 lshift and 13 rshift ; 
: C_ADC_STRT2@ C_ADC_CSR @ %1  12 lshift and 12 rshift ; 
: C_ADC_JSTRT2@ C_ADC_CSR @ %1  11 lshift and 11 rshift ; 
: C_ADC_JEOC2@ C_ADC_CSR @ %1  10 lshift and 10 rshift ; 
: C_ADC_EOC2@ C_ADC_CSR @ %1  9 lshift and 9 rshift ; 
: C_ADC_AWD2@ C_ADC_CSR @ %1  8 lshift and 8 rshift ; 
: C_ADC_OVR1@ C_ADC_CSR @ %1  5 lshift and 5 rshift ; 
: C_ADC_STRT1@ C_ADC_CSR @ %1  4 lshift and 4 rshift ; 
: C_ADC_JSTRT1@ C_ADC_CSR @ %1  3 lshift and 3 rshift ; 
: C_ADC_JEOC1@ C_ADC_CSR @ %1  2 lshift and 2 rshift ; 
: C_ADC_EOC1@ C_ADC_CSR @ %1  1 lshift and 1 rshift ; 
: C_ADC_AWD1@ C_ADC_CSR @ %1  0 lshift and 0 rshift ; 

C_ADC_CCR (read-write)
$00000000 CONSTANT RESET_C_ADC_CCR 
 %1  23 lshift C_ADC_CCR bis!        \ C_ADC_TSVREFE	Bit 23	 Width 1
 %1  22 lshift C_ADC_CCR bis!        \ C_ADC_VBATE	Bit 22	 Width 1
 %xx  16 lshift C_ADC_CCR bis!        \ C_ADC_ADCPRE	Bit 16	 Width 2
 %xx  14 lshift C_ADC_CCR bis!        \ C_ADC_DMA	Bit 14	 Width 2
 %1  13 lshift C_ADC_CCR bis!        \ C_ADC_DDS	Bit 13	 Width 1
 %xxxx  8 lshift C_ADC_CCR bis!        \ C_ADC_DELAY	Bit 8	 Width 4
 %xxxxx  0 lshift C_ADC_CCR bis!        \ C_ADC_MULT	Bit 0	 Width 5
\ C_ADC_CCR Register BitField Fetch Words  
: C_ADC_TSVREFE@ C_ADC_CCR @ %1  23 lshift and 23 rshift ; 
: C_ADC_VBATE@ C_ADC_CCR @ %1  22 lshift and 22 rshift ; 
: C_ADC_ADCPRE@ C_ADC_CCR @ %11  16 lshift and 16 rshift ; 
: C_ADC_DMA@ C_ADC_CCR @ %11  14 lshift and 14 rshift ; 
: C_ADC_DDS@ C_ADC_CCR @ %1  13 lshift and 13 rshift ; 
: C_ADC_DELAY@ C_ADC_CCR @ %1111  8 lshift and 8 rshift ; 
: C_ADC_MULT@ C_ADC_CCR @ %11111  0 lshift and 0 rshift ; 

C_ADC_CDR (read-only)
$00000000 CONSTANT RESET_C_ADC_CDR 
 %xxxxxxxxxxxxxxxx  16 lshift C_ADC_CDR bis!        \ C_ADC_DATA2	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift C_ADC_CDR bis!        \ C_ADC_DATA1	Bit 0	 Width 16
\ C_ADC_CDR Register BitField Fetch Words  
: C_ADC_DATA2@ C_ADC_CDR @ %1111111111111111  16 lshift and 16 rshift ; 
: C_ADC_DATA1@ C_ADC_CDR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM1 ###################################
TIM1_CR1 (read-write)
$0000 CONSTANT RESET_TIM1_CR1 
 %xx  8 lshift TIM1_CR1 bis!        \ TIM1_CKD	Bit 8	 Width 2
 %1  7 lshift TIM1_CR1 bis!        \ TIM1_ARPE	Bit 7	 Width 1
 %xx  5 lshift TIM1_CR1 bis!        \ TIM1_CMS	Bit 5	 Width 2
 %1  4 lshift TIM1_CR1 bis!        \ TIM1_DIR	Bit 4	 Width 1
 %1  3 lshift TIM1_CR1 bis!        \ TIM1_OPM	Bit 3	 Width 1
 %1  2 lshift TIM1_CR1 bis!        \ TIM1_URS	Bit 2	 Width 1
 %1  1 lshift TIM1_CR1 bis!        \ TIM1_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM1_CR1 bis!        \ TIM1_CEN	Bit 0	 Width 1
\ TIM1_CR1 Register BitField Fetch Words  
: TIM1_CKD@ TIM1_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM1_ARPE@ TIM1_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM1_CMS@ TIM1_CR1 @ %11  5 lshift and 5 rshift ; 
: TIM1_DIR@ TIM1_CR1 @ %1  4 lshift and 4 rshift ; 
: TIM1_OPM@ TIM1_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM1_URS@ TIM1_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM1_UDIS@ TIM1_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM1_CEN@ TIM1_CR1 @ %1  0 lshift and 0 rshift ; 

TIM1_CR2 (read-write)
$0000 CONSTANT RESET_TIM1_CR2 
 %1  14 lshift TIM1_CR2 bis!        \ TIM1_OIS4	Bit 14	 Width 1
 %1  13 lshift TIM1_CR2 bis!        \ TIM1_OIS3N	Bit 13	 Width 1
 %1  12 lshift TIM1_CR2 bis!        \ TIM1_OIS3	Bit 12	 Width 1
 %1  11 lshift TIM1_CR2 bis!        \ TIM1_OIS2N	Bit 11	 Width 1
 %1  10 lshift TIM1_CR2 bis!        \ TIM1_OIS2	Bit 10	 Width 1
 %1  9 lshift TIM1_CR2 bis!        \ TIM1_OIS1N	Bit 9	 Width 1
 %1  8 lshift TIM1_CR2 bis!        \ TIM1_OIS1	Bit 8	 Width 1
 %1  7 lshift TIM1_CR2 bis!        \ TIM1_TI1S	Bit 7	 Width 1
 %xxx  4 lshift TIM1_CR2 bis!        \ TIM1_MMS	Bit 4	 Width 3
 %1  3 lshift TIM1_CR2 bis!        \ TIM1_CCDS	Bit 3	 Width 1
 %1  2 lshift TIM1_CR2 bis!        \ TIM1_CCUS	Bit 2	 Width 1
 %1  0 lshift TIM1_CR2 bis!        \ TIM1_CCPC	Bit 0	 Width 1
\ TIM1_CR2 Register BitField Fetch Words  
: TIM1_OIS4@ TIM1_CR2 @ %1  14 lshift and 14 rshift ; 
: TIM1_OIS3N@ TIM1_CR2 @ %1  13 lshift and 13 rshift ; 
: TIM1_OIS3@ TIM1_CR2 @ %1  12 lshift and 12 rshift ; 
: TIM1_OIS2N@ TIM1_CR2 @ %1  11 lshift and 11 rshift ; 
: TIM1_OIS2@ TIM1_CR2 @ %1  10 lshift and 10 rshift ; 
: TIM1_OIS1N@ TIM1_CR2 @ %1  9 lshift and 9 rshift ; 
: TIM1_OIS1@ TIM1_CR2 @ %1  8 lshift and 8 rshift ; 
: TIM1_TI1S@ TIM1_CR2 @ %1  7 lshift and 7 rshift ; 
: TIM1_MMS@ TIM1_CR2 @ %111  4 lshift and 4 rshift ; 
: TIM1_CCDS@ TIM1_CR2 @ %1  3 lshift and 3 rshift ; 
: TIM1_CCUS@ TIM1_CR2 @ %1  2 lshift and 2 rshift ; 
: TIM1_CCPC@ TIM1_CR2 @ %1  0 lshift and 0 rshift ; 

TIM1_SMCR (read-write)
$0000 CONSTANT RESET_TIM1_SMCR 
 %1  15 lshift TIM1_SMCR bis!        \ TIM1_ETP	Bit 15	 Width 1
 %1  14 lshift TIM1_SMCR bis!        \ TIM1_ECE	Bit 14	 Width 1
 %xx  12 lshift TIM1_SMCR bis!        \ TIM1_ETPS	Bit 12	 Width 2
 %xxxx  8 lshift TIM1_SMCR bis!        \ TIM1_ETF	Bit 8	 Width 4
 %1  7 lshift TIM1_SMCR bis!        \ TIM1_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM1_SMCR bis!        \ TIM1_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM1_SMCR bis!        \ TIM1_SMS	Bit 0	 Width 3
\ TIM1_SMCR Register BitField Fetch Words  
: TIM1_ETP@ TIM1_SMCR @ %1  15 lshift and 15 rshift ; 
: TIM1_ECE@ TIM1_SMCR @ %1  14 lshift and 14 rshift ; 
: TIM1_ETPS@ TIM1_SMCR @ %11  12 lshift and 12 rshift ; 
: TIM1_ETF@ TIM1_SMCR @ %1111  8 lshift and 8 rshift ; 
: TIM1_MSM@ TIM1_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM1_TS@ TIM1_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM1_SMS@ TIM1_SMCR @ %111  0 lshift and 0 rshift ; 

TIM1_DIER (read-write)
$0000 CONSTANT RESET_TIM1_DIER 
 %1  14 lshift TIM1_DIER bis!        \ TIM1_TDE	Bit 14	 Width 1
 %1  13 lshift TIM1_DIER bis!        \ TIM1_COMDE	Bit 13	 Width 1
 %1  12 lshift TIM1_DIER bis!        \ TIM1_CC4DE	Bit 12	 Width 1
 %1  11 lshift TIM1_DIER bis!        \ TIM1_CC3DE	Bit 11	 Width 1
 %1  10 lshift TIM1_DIER bis!        \ TIM1_CC2DE	Bit 10	 Width 1
 %1  9 lshift TIM1_DIER bis!        \ TIM1_CC1DE	Bit 9	 Width 1
 %1  8 lshift TIM1_DIER bis!        \ TIM1_UDE	Bit 8	 Width 1
 %1  6 lshift TIM1_DIER bis!        \ TIM1_TIE	Bit 6	 Width 1
 %1  4 lshift TIM1_DIER bis!        \ TIM1_CC4IE	Bit 4	 Width 1
 %1  3 lshift TIM1_DIER bis!        \ TIM1_CC3IE	Bit 3	 Width 1
 %1  2 lshift TIM1_DIER bis!        \ TIM1_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM1_DIER bis!        \ TIM1_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM1_DIER bis!        \ TIM1_UIE	Bit 0	 Width 1
 %1  7 lshift TIM1_DIER bis!        \ TIM1_BIE	Bit 7	 Width 1
 %1  5 lshift TIM1_DIER bis!        \ TIM1_COMIE	Bit 5	 Width 1
\ TIM1_DIER Register BitField Fetch Words  
: TIM1_TDE@ TIM1_DIER @ %1  14 lshift and 14 rshift ; 
: TIM1_COMDE@ TIM1_DIER @ %1  13 lshift and 13 rshift ; 
: TIM1_CC4DE@ TIM1_DIER @ %1  12 lshift and 12 rshift ; 
: TIM1_CC3DE@ TIM1_DIER @ %1  11 lshift and 11 rshift ; 
: TIM1_CC2DE@ TIM1_DIER @ %1  10 lshift and 10 rshift ; 
: TIM1_CC1DE@ TIM1_DIER @ %1  9 lshift and 9 rshift ; 
: TIM1_UDE@ TIM1_DIER @ %1  8 lshift and 8 rshift ; 
: TIM1_TIE@ TIM1_DIER @ %1  6 lshift and 6 rshift ; 
: TIM1_CC4IE@ TIM1_DIER @ %1  4 lshift and 4 rshift ; 
: TIM1_CC3IE@ TIM1_DIER @ %1  3 lshift and 3 rshift ; 
: TIM1_CC2IE@ TIM1_DIER @ %1  2 lshift and 2 rshift ; 
: TIM1_CC1IE@ TIM1_DIER @ %1  1 lshift and 1 rshift ; 
: TIM1_UIE@ TIM1_DIER @ %1  0 lshift and 0 rshift ; 
: TIM1_BIE@ TIM1_DIER @ %1  7 lshift and 7 rshift ; 
: TIM1_COMIE@ TIM1_DIER @ %1  5 lshift and 5 rshift ; 

TIM1_SR (read-write)
$0000 CONSTANT RESET_TIM1_SR 
 %1  12 lshift TIM1_SR bis!        \ TIM1_CC4OF	Bit 12	 Width 1
 %1  11 lshift TIM1_SR bis!        \ TIM1_CC3OF	Bit 11	 Width 1
 %1  10 lshift TIM1_SR bis!        \ TIM1_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM1_SR bis!        \ TIM1_CC1OF	Bit 9	 Width 1
 %1  7 lshift TIM1_SR bis!        \ TIM1_BIF	Bit 7	 Width 1
 %1  6 lshift TIM1_SR bis!        \ TIM1_TIF	Bit 6	 Width 1
 %1  5 lshift TIM1_SR bis!        \ TIM1_COMIF	Bit 5	 Width 1
 %1  4 lshift TIM1_SR bis!        \ TIM1_CC4IF	Bit 4	 Width 1
 %1  3 lshift TIM1_SR bis!        \ TIM1_CC3IF	Bit 3	 Width 1
 %1  2 lshift TIM1_SR bis!        \ TIM1_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM1_SR bis!        \ TIM1_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM1_SR bis!        \ TIM1_UIF	Bit 0	 Width 1
\ TIM1_SR Register BitField Fetch Words  
: TIM1_CC4OF@ TIM1_SR @ %1  12 lshift and 12 rshift ; 
: TIM1_CC3OF@ TIM1_SR @ %1  11 lshift and 11 rshift ; 
: TIM1_CC2OF@ TIM1_SR @ %1  10 lshift and 10 rshift ; 
: TIM1_CC1OF@ TIM1_SR @ %1  9 lshift and 9 rshift ; 
: TIM1_BIF@ TIM1_SR @ %1  7 lshift and 7 rshift ; 
: TIM1_TIF@ TIM1_SR @ %1  6 lshift and 6 rshift ; 
: TIM1_COMIF@ TIM1_SR @ %1  5 lshift and 5 rshift ; 
: TIM1_CC4IF@ TIM1_SR @ %1  4 lshift and 4 rshift ; 
: TIM1_CC3IF@ TIM1_SR @ %1  3 lshift and 3 rshift ; 
: TIM1_CC2IF@ TIM1_SR @ %1  2 lshift and 2 rshift ; 
: TIM1_CC1IF@ TIM1_SR @ %1  1 lshift and 1 rshift ; 
: TIM1_UIF@ TIM1_SR @ %1  0 lshift and 0 rshift ; 

TIM1_EGR (write-only)
$0000 CONSTANT RESET_TIM1_EGR 
 %1  7 lshift TIM1_EGR bis!        \ TIM1_BG	Bit 7	 Width 1
 %1  6 lshift TIM1_EGR bis!        \ TIM1_TG	Bit 6	 Width 1
 %1  5 lshift TIM1_EGR bis!        \ TIM1_COMG	Bit 5	 Width 1
 %1  4 lshift TIM1_EGR bis!        \ TIM1_CC4G	Bit 4	 Width 1
 %1  3 lshift TIM1_EGR bis!        \ TIM1_CC3G	Bit 3	 Width 1
 %1  2 lshift TIM1_EGR bis!        \ TIM1_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM1_EGR bis!        \ TIM1_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM1_EGR bis!        \ TIM1_UG	Bit 0	 Width 1
\ TIM1_EGR Register BitField Fetch Words  
: TIM1_BG@ TIM1_EGR @ %1  7 lshift and 7 rshift ; 
: TIM1_TG@ TIM1_EGR @ %1  6 lshift and 6 rshift ; 
: TIM1_COMG@ TIM1_EGR @ %1  5 lshift and 5 rshift ; 
: TIM1_CC4G@ TIM1_EGR @ %1  4 lshift and 4 rshift ; 
: TIM1_CC3G@ TIM1_EGR @ %1  3 lshift and 3 rshift ; 
: TIM1_CC2G@ TIM1_EGR @ %1  2 lshift and 2 rshift ; 
: TIM1_CC1G@ TIM1_EGR @ %1  1 lshift and 1 rshift ; 
: TIM1_UG@ TIM1_EGR @ %1  0 lshift and 0 rshift ; 

TIM1_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM1_CCMR1_Output 
 %1  15 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC2CE	Bit 15	 Width 1
 %xxx  12 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM1_CCMR1_Output bis!        \ TIM1_CC2S	Bit 8	 Width 2
 %1  7 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC1CE	Bit 7	 Width 1
 %xxx  4 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM1_CCMR1_Output bis!        \ TIM1_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM1_CCMR1_Output bis!        \ TIM1_CC1S	Bit 0	 Width 2
\ TIM1_CCMR1_Output Register BitField Fetch Words  
: TIM1_OC2CE@ TIM1_CCMR1_Output @ %1  15 lshift and 15 rshift ; 
: TIM1_OC2M@ TIM1_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM1_OC2PE@ TIM1_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM1_OC2FE@ TIM1_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM1_CC2S@ TIM1_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM1_OC1CE@ TIM1_CCMR1_Output @ %1  7 lshift and 7 rshift ; 
: TIM1_OC1M@ TIM1_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM1_OC1PE@ TIM1_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM1_OC1FE@ TIM1_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM1_CC1S@ TIM1_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM1_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM1_CCMR1_Input 
 %xxxx  12 lshift TIM1_CCMR1_Input bis!        \ TIM1_IC2F	Bit 12	 Width 4
 %xx  10 lshift TIM1_CCMR1_Input bis!        \ TIM1_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM1_CCMR1_Input bis!        \ TIM1_CC2S	Bit 8	 Width 2
 %xxxx  4 lshift TIM1_CCMR1_Input bis!        \ TIM1_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM1_CCMR1_Input bis!        \ TIM1_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM1_CCMR1_Input bis!        \ TIM1_CC1S	Bit 0	 Width 2
\ TIM1_CCMR1_Input Register BitField Fetch Words  
: TIM1_IC2F@ TIM1_CCMR1_Input @ %1111  12 lshift and 12 rshift ; 
: TIM1_IC2PCS@ TIM1_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM1_CC2S@ TIM1_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM1_IC1F@ TIM1_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM1_ICPCS@ TIM1_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM1_CC1S@ TIM1_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM1_CCMR2_Output (read-write)
$00000000 CONSTANT RESET_TIM1_CCMR2_Output 
 %1  15 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC4CE	Bit 15	 Width 1
 %xxx  12 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC4M	Bit 12	 Width 3
 %1  11 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC4PE	Bit 11	 Width 1
 %1  10 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC4FE	Bit 10	 Width 1
 %xx  8 lshift TIM1_CCMR2_Output bis!        \ TIM1_CC4S	Bit 8	 Width 2
 %1  7 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC3CE	Bit 7	 Width 1
 %xxx  4 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC3M	Bit 4	 Width 3
 %1  3 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC3PE	Bit 3	 Width 1
 %1  2 lshift TIM1_CCMR2_Output bis!        \ TIM1_OC3FE	Bit 2	 Width 1
 %xx  0 lshift TIM1_CCMR2_Output bis!        \ TIM1_CC3S	Bit 0	 Width 2
\ TIM1_CCMR2_Output Register BitField Fetch Words  
: TIM1_OC4CE@ TIM1_CCMR2_Output @ %1  15 lshift and 15 rshift ; 
: TIM1_OC4M@ TIM1_CCMR2_Output @ %111  12 lshift and 12 rshift ; 
: TIM1_OC4PE@ TIM1_CCMR2_Output @ %1  11 lshift and 11 rshift ; 
: TIM1_OC4FE@ TIM1_CCMR2_Output @ %1  10 lshift and 10 rshift ; 
: TIM1_CC4S@ TIM1_CCMR2_Output @ %11  8 lshift and 8 rshift ; 
: TIM1_OC3CE@ TIM1_CCMR2_Output @ %1  7 lshift and 7 rshift ; 
: TIM1_OC3M@ TIM1_CCMR2_Output @ %111  4 lshift and 4 rshift ; 
: TIM1_OC3PE@ TIM1_CCMR2_Output @ %1  3 lshift and 3 rshift ; 
: TIM1_OC3FE@ TIM1_CCMR2_Output @ %1  2 lshift and 2 rshift ; 
: TIM1_CC3S@ TIM1_CCMR2_Output @ %11  0 lshift and 0 rshift ; 

TIM1_CCMR2_Input (read-write)
$00000000 CONSTANT RESET_TIM1_CCMR2_Input 
 %xxxx  12 lshift TIM1_CCMR2_Input bis!        \ TIM1_IC4F	Bit 12	 Width 4
 %xx  10 lshift TIM1_CCMR2_Input bis!        \ TIM1_IC4PSC	Bit 10	 Width 2
 %xx  8 lshift TIM1_CCMR2_Input bis!        \ TIM1_CC4S	Bit 8	 Width 2
 %xxxx  4 lshift TIM1_CCMR2_Input bis!        \ TIM1_IC3F	Bit 4	 Width 4
 %xx  2 lshift TIM1_CCMR2_Input bis!        \ TIM1_IC3PSC	Bit 2	 Width 2
 %xx  0 lshift TIM1_CCMR2_Input bis!        \ TIM1_CC3S	Bit 0	 Width 2
\ TIM1_CCMR2_Input Register BitField Fetch Words  
: TIM1_IC4F@ TIM1_CCMR2_Input @ %1111  12 lshift and 12 rshift ; 
: TIM1_IC4PSC@ TIM1_CCMR2_Input @ %11  10 lshift and 10 rshift ; 
: TIM1_CC4S@ TIM1_CCMR2_Input @ %11  8 lshift and 8 rshift ; 
: TIM1_IC3F@ TIM1_CCMR2_Input @ %1111  4 lshift and 4 rshift ; 
: TIM1_IC3PSC@ TIM1_CCMR2_Input @ %11  2 lshift and 2 rshift ; 
: TIM1_CC3S@ TIM1_CCMR2_Input @ %11  0 lshift and 0 rshift ; 

TIM1_CCER (read-write)
$0000 CONSTANT RESET_TIM1_CCER 
 %1  13 lshift TIM1_CCER bis!        \ TIM1_CC4P	Bit 13	 Width 1
 %1  12 lshift TIM1_CCER bis!        \ TIM1_CC4E	Bit 12	 Width 1
 %1  11 lshift TIM1_CCER bis!        \ TIM1_CC3NP	Bit 11	 Width 1
 %1  10 lshift TIM1_CCER bis!        \ TIM1_CC3NE	Bit 10	 Width 1
 %1  9 lshift TIM1_CCER bis!        \ TIM1_CC3P	Bit 9	 Width 1
 %1  8 lshift TIM1_CCER bis!        \ TIM1_CC3E	Bit 8	 Width 1
 %1  7 lshift TIM1_CCER bis!        \ TIM1_CC2NP	Bit 7	 Width 1
 %1  6 lshift TIM1_CCER bis!        \ TIM1_CC2NE	Bit 6	 Width 1
 %1  5 lshift TIM1_CCER bis!        \ TIM1_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM1_CCER bis!        \ TIM1_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM1_CCER bis!        \ TIM1_CC1NP	Bit 3	 Width 1
 %1  2 lshift TIM1_CCER bis!        \ TIM1_CC1NE	Bit 2	 Width 1
 %1  1 lshift TIM1_CCER bis!        \ TIM1_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM1_CCER bis!        \ TIM1_CC1E	Bit 0	 Width 1
\ TIM1_CCER Register BitField Fetch Words  
: TIM1_CC4P@ TIM1_CCER @ %1  13 lshift and 13 rshift ; 
: TIM1_CC4E@ TIM1_CCER @ %1  12 lshift and 12 rshift ; 
: TIM1_CC3NP@ TIM1_CCER @ %1  11 lshift and 11 rshift ; 
: TIM1_CC3NE@ TIM1_CCER @ %1  10 lshift and 10 rshift ; 
: TIM1_CC3P@ TIM1_CCER @ %1  9 lshift and 9 rshift ; 
: TIM1_CC3E@ TIM1_CCER @ %1  8 lshift and 8 rshift ; 
: TIM1_CC2NP@ TIM1_CCER @ %1  7 lshift and 7 rshift ; 
: TIM1_CC2NE@ TIM1_CCER @ %1  6 lshift and 6 rshift ; 
: TIM1_CC2P@ TIM1_CCER @ %1  5 lshift and 5 rshift ; 
: TIM1_CC2E@ TIM1_CCER @ %1  4 lshift and 4 rshift ; 
: TIM1_CC1NP@ TIM1_CCER @ %1  3 lshift and 3 rshift ; 
: TIM1_CC1NE@ TIM1_CCER @ %1  2 lshift and 2 rshift ; 
: TIM1_CC1P@ TIM1_CCER @ %1  1 lshift and 1 rshift ; 
: TIM1_CC1E@ TIM1_CCER @ %1  0 lshift and 0 rshift ; 

TIM1_CNT (read-write)
$00000000 CONSTANT RESET_TIM1_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_CNT bis!        \ TIM1_CNT	Bit 0	 Width 16
\ TIM1_CNT Register BitField Fetch Words  
: TIM1_CNT@ TIM1_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_PSC (read-write)
$0000 CONSTANT RESET_TIM1_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_PSC bis!        \ TIM1_PSC	Bit 0	 Width 16
\ TIM1_PSC Register BitField Fetch Words  
: TIM1_PSC@ TIM1_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_ARR (read-write)
$00000000 CONSTANT RESET_TIM1_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_ARR bis!        \ TIM1_ARR	Bit 0	 Width 16
\ TIM1_ARR Register BitField Fetch Words  
: TIM1_ARR@ TIM1_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM1_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_CCR1 bis!        \ TIM1_CCR1	Bit 0	 Width 16
\ TIM1_CCR1 Register BitField Fetch Words  
: TIM1_CCR1@ TIM1_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM1_CCR2 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_CCR2 bis!        \ TIM1_CCR2	Bit 0	 Width 16
\ TIM1_CCR2 Register BitField Fetch Words  
: TIM1_CCR2@ TIM1_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_CCR3 (read-write)
$00000000 CONSTANT RESET_TIM1_CCR3 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_CCR3 bis!        \ TIM1_CCR3	Bit 0	 Width 16
\ TIM1_CCR3 Register BitField Fetch Words  
: TIM1_CCR3@ TIM1_CCR3 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_CCR4 (read-write)
$00000000 CONSTANT RESET_TIM1_CCR4 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_CCR4 bis!        \ TIM1_CCR4	Bit 0	 Width 16
\ TIM1_CCR4 Register BitField Fetch Words  
: TIM1_CCR4@ TIM1_CCR4 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_DCR (read-write)
$0000 CONSTANT RESET_TIM1_DCR 
 %xxxxx  8 lshift TIM1_DCR bis!        \ TIM1_DBL	Bit 8	 Width 5
 %xxxxx  0 lshift TIM1_DCR bis!        \ TIM1_DBA	Bit 0	 Width 5
\ TIM1_DCR Register BitField Fetch Words  
: TIM1_DBL@ TIM1_DCR @ %11111  8 lshift and 8 rshift ; 
: TIM1_DBA@ TIM1_DCR @ %11111  0 lshift and 0 rshift ; 

TIM1_DMAR (read-write)
$0000 CONSTANT RESET_TIM1_DMAR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM1_DMAR bis!        \ TIM1_DMAB	Bit 0	 Width 16
\ TIM1_DMAR Register BitField Fetch Words  
: TIM1_DMAB@ TIM1_DMAR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM1_RCR (read-write)
$0000 CONSTANT RESET_TIM1_RCR 
 %xxxxxxxx  0 lshift TIM1_RCR bis!        \ TIM1_REP	Bit 0	 Width 8
\ TIM1_RCR Register BitField Fetch Words  
: TIM1_REP@ TIM1_RCR @ %11111111  0 lshift and 0 rshift ; 

TIM1_BDTR (read-write)
$0000 CONSTANT RESET_TIM1_BDTR 
 %1  15 lshift TIM1_BDTR bis!        \ TIM1_MOE	Bit 15	 Width 1
 %1  14 lshift TIM1_BDTR bis!        \ TIM1_AOE	Bit 14	 Width 1
 %1  13 lshift TIM1_BDTR bis!        \ TIM1_BKP	Bit 13	 Width 1
 %1  12 lshift TIM1_BDTR bis!        \ TIM1_BKE	Bit 12	 Width 1
 %1  11 lshift TIM1_BDTR bis!        \ TIM1_OSSR	Bit 11	 Width 1
 %1  10 lshift TIM1_BDTR bis!        \ TIM1_OSSI	Bit 10	 Width 1
 %xx  8 lshift TIM1_BDTR bis!        \ TIM1_LOCK	Bit 8	 Width 2
 %xxxxxxxx  0 lshift TIM1_BDTR bis!        \ TIM1_DTG	Bit 0	 Width 8
\ TIM1_BDTR Register BitField Fetch Words  
: TIM1_MOE@ TIM1_BDTR @ %1  15 lshift and 15 rshift ; 
: TIM1_AOE@ TIM1_BDTR @ %1  14 lshift and 14 rshift ; 
: TIM1_BKP@ TIM1_BDTR @ %1  13 lshift and 13 rshift ; 
: TIM1_BKE@ TIM1_BDTR @ %1  12 lshift and 12 rshift ; 
: TIM1_OSSR@ TIM1_BDTR @ %1  11 lshift and 11 rshift ; 
: TIM1_OSSI@ TIM1_BDTR @ %1  10 lshift and 10 rshift ; 
: TIM1_LOCK@ TIM1_BDTR @ %11  8 lshift and 8 rshift ; 
: TIM1_DTG@ TIM1_BDTR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### TIM8 ###################################
TIM8_CR1 (read-write)
$0000 CONSTANT RESET_TIM8_CR1 
 %xx  8 lshift TIM8_CR1 bis!        \ TIM8_CKD	Bit 8	 Width 2
 %1  7 lshift TIM8_CR1 bis!        \ TIM8_ARPE	Bit 7	 Width 1
 %xx  5 lshift TIM8_CR1 bis!        \ TIM8_CMS	Bit 5	 Width 2
 %1  4 lshift TIM8_CR1 bis!        \ TIM8_DIR	Bit 4	 Width 1
 %1  3 lshift TIM8_CR1 bis!        \ TIM8_OPM	Bit 3	 Width 1
 %1  2 lshift TIM8_CR1 bis!        \ TIM8_URS	Bit 2	 Width 1
 %1  1 lshift TIM8_CR1 bis!        \ TIM8_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM8_CR1 bis!        \ TIM8_CEN	Bit 0	 Width 1
\ TIM8_CR1 Register BitField Fetch Words  
: TIM8_CKD@ TIM8_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM8_ARPE@ TIM8_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM8_CMS@ TIM8_CR1 @ %11  5 lshift and 5 rshift ; 
: TIM8_DIR@ TIM8_CR1 @ %1  4 lshift and 4 rshift ; 
: TIM8_OPM@ TIM8_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM8_URS@ TIM8_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM8_UDIS@ TIM8_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM8_CEN@ TIM8_CR1 @ %1  0 lshift and 0 rshift ; 

TIM8_CR2 (read-write)
$0000 CONSTANT RESET_TIM8_CR2 
 %1  14 lshift TIM8_CR2 bis!        \ TIM8_OIS4	Bit 14	 Width 1
 %1  13 lshift TIM8_CR2 bis!        \ TIM8_OIS3N	Bit 13	 Width 1
 %1  12 lshift TIM8_CR2 bis!        \ TIM8_OIS3	Bit 12	 Width 1
 %1  11 lshift TIM8_CR2 bis!        \ TIM8_OIS2N	Bit 11	 Width 1
 %1  10 lshift TIM8_CR2 bis!        \ TIM8_OIS2	Bit 10	 Width 1
 %1  9 lshift TIM8_CR2 bis!        \ TIM8_OIS1N	Bit 9	 Width 1
 %1  8 lshift TIM8_CR2 bis!        \ TIM8_OIS1	Bit 8	 Width 1
 %1  7 lshift TIM8_CR2 bis!        \ TIM8_TI1S	Bit 7	 Width 1
 %xxx  4 lshift TIM8_CR2 bis!        \ TIM8_MMS	Bit 4	 Width 3
 %1  3 lshift TIM8_CR2 bis!        \ TIM8_CCDS	Bit 3	 Width 1
 %1  2 lshift TIM8_CR2 bis!        \ TIM8_CCUS	Bit 2	 Width 1
 %1  0 lshift TIM8_CR2 bis!        \ TIM8_CCPC	Bit 0	 Width 1
\ TIM8_CR2 Register BitField Fetch Words  
: TIM8_OIS4@ TIM8_CR2 @ %1  14 lshift and 14 rshift ; 
: TIM8_OIS3N@ TIM8_CR2 @ %1  13 lshift and 13 rshift ; 
: TIM8_OIS3@ TIM8_CR2 @ %1  12 lshift and 12 rshift ; 
: TIM8_OIS2N@ TIM8_CR2 @ %1  11 lshift and 11 rshift ; 
: TIM8_OIS2@ TIM8_CR2 @ %1  10 lshift and 10 rshift ; 
: TIM8_OIS1N@ TIM8_CR2 @ %1  9 lshift and 9 rshift ; 
: TIM8_OIS1@ TIM8_CR2 @ %1  8 lshift and 8 rshift ; 
: TIM8_TI1S@ TIM8_CR2 @ %1  7 lshift and 7 rshift ; 
: TIM8_MMS@ TIM8_CR2 @ %111  4 lshift and 4 rshift ; 
: TIM8_CCDS@ TIM8_CR2 @ %1  3 lshift and 3 rshift ; 
: TIM8_CCUS@ TIM8_CR2 @ %1  2 lshift and 2 rshift ; 
: TIM8_CCPC@ TIM8_CR2 @ %1  0 lshift and 0 rshift ; 

TIM8_SMCR (read-write)
$0000 CONSTANT RESET_TIM8_SMCR 
 %1  15 lshift TIM8_SMCR bis!        \ TIM8_ETP	Bit 15	 Width 1
 %1  14 lshift TIM8_SMCR bis!        \ TIM8_ECE	Bit 14	 Width 1
 %xx  12 lshift TIM8_SMCR bis!        \ TIM8_ETPS	Bit 12	 Width 2
 %xxxx  8 lshift TIM8_SMCR bis!        \ TIM8_ETF	Bit 8	 Width 4
 %1  7 lshift TIM8_SMCR bis!        \ TIM8_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM8_SMCR bis!        \ TIM8_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM8_SMCR bis!        \ TIM8_SMS	Bit 0	 Width 3
\ TIM8_SMCR Register BitField Fetch Words  
: TIM8_ETP@ TIM8_SMCR @ %1  15 lshift and 15 rshift ; 
: TIM8_ECE@ TIM8_SMCR @ %1  14 lshift and 14 rshift ; 
: TIM8_ETPS@ TIM8_SMCR @ %11  12 lshift and 12 rshift ; 
: TIM8_ETF@ TIM8_SMCR @ %1111  8 lshift and 8 rshift ; 
: TIM8_MSM@ TIM8_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM8_TS@ TIM8_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM8_SMS@ TIM8_SMCR @ %111  0 lshift and 0 rshift ; 

TIM8_DIER (read-write)
$0000 CONSTANT RESET_TIM8_DIER 
 %1  14 lshift TIM8_DIER bis!        \ TIM8_TDE	Bit 14	 Width 1
 %1  13 lshift TIM8_DIER bis!        \ TIM8_COMDE	Bit 13	 Width 1
 %1  12 lshift TIM8_DIER bis!        \ TIM8_CC4DE	Bit 12	 Width 1
 %1  11 lshift TIM8_DIER bis!        \ TIM8_CC3DE	Bit 11	 Width 1
 %1  10 lshift TIM8_DIER bis!        \ TIM8_CC2DE	Bit 10	 Width 1
 %1  9 lshift TIM8_DIER bis!        \ TIM8_CC1DE	Bit 9	 Width 1
 %1  8 lshift TIM8_DIER bis!        \ TIM8_UDE	Bit 8	 Width 1
 %1  6 lshift TIM8_DIER bis!        \ TIM8_TIE	Bit 6	 Width 1
 %1  4 lshift TIM8_DIER bis!        \ TIM8_CC4IE	Bit 4	 Width 1
 %1  3 lshift TIM8_DIER bis!        \ TIM8_CC3IE	Bit 3	 Width 1
 %1  2 lshift TIM8_DIER bis!        \ TIM8_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM8_DIER bis!        \ TIM8_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM8_DIER bis!        \ TIM8_UIE	Bit 0	 Width 1
 %1  7 lshift TIM8_DIER bis!        \ TIM8_BIE	Bit 7	 Width 1
 %1  5 lshift TIM8_DIER bis!        \ TIM8_COMIE	Bit 5	 Width 1
\ TIM8_DIER Register BitField Fetch Words  
: TIM8_TDE@ TIM8_DIER @ %1  14 lshift and 14 rshift ; 
: TIM8_COMDE@ TIM8_DIER @ %1  13 lshift and 13 rshift ; 
: TIM8_CC4DE@ TIM8_DIER @ %1  12 lshift and 12 rshift ; 
: TIM8_CC3DE@ TIM8_DIER @ %1  11 lshift and 11 rshift ; 
: TIM8_CC2DE@ TIM8_DIER @ %1  10 lshift and 10 rshift ; 
: TIM8_CC1DE@ TIM8_DIER @ %1  9 lshift and 9 rshift ; 
: TIM8_UDE@ TIM8_DIER @ %1  8 lshift and 8 rshift ; 
: TIM8_TIE@ TIM8_DIER @ %1  6 lshift and 6 rshift ; 
: TIM8_CC4IE@ TIM8_DIER @ %1  4 lshift and 4 rshift ; 
: TIM8_CC3IE@ TIM8_DIER @ %1  3 lshift and 3 rshift ; 
: TIM8_CC2IE@ TIM8_DIER @ %1  2 lshift and 2 rshift ; 
: TIM8_CC1IE@ TIM8_DIER @ %1  1 lshift and 1 rshift ; 
: TIM8_UIE@ TIM8_DIER @ %1  0 lshift and 0 rshift ; 
: TIM8_BIE@ TIM8_DIER @ %1  7 lshift and 7 rshift ; 
: TIM8_COMIE@ TIM8_DIER @ %1  5 lshift and 5 rshift ; 

TIM8_SR (read-write)
$0000 CONSTANT RESET_TIM8_SR 
 %1  12 lshift TIM8_SR bis!        \ TIM8_CC4OF	Bit 12	 Width 1
 %1  11 lshift TIM8_SR bis!        \ TIM8_CC3OF	Bit 11	 Width 1
 %1  10 lshift TIM8_SR bis!        \ TIM8_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM8_SR bis!        \ TIM8_CC1OF	Bit 9	 Width 1
 %1  7 lshift TIM8_SR bis!        \ TIM8_BIF	Bit 7	 Width 1
 %1  6 lshift TIM8_SR bis!        \ TIM8_TIF	Bit 6	 Width 1
 %1  5 lshift TIM8_SR bis!        \ TIM8_COMIF	Bit 5	 Width 1
 %1  4 lshift TIM8_SR bis!        \ TIM8_CC4IF	Bit 4	 Width 1
 %1  3 lshift TIM8_SR bis!        \ TIM8_CC3IF	Bit 3	 Width 1
 %1  2 lshift TIM8_SR bis!        \ TIM8_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM8_SR bis!        \ TIM8_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM8_SR bis!        \ TIM8_UIF	Bit 0	 Width 1
\ TIM8_SR Register BitField Fetch Words  
: TIM8_CC4OF@ TIM8_SR @ %1  12 lshift and 12 rshift ; 
: TIM8_CC3OF@ TIM8_SR @ %1  11 lshift and 11 rshift ; 
: TIM8_CC2OF@ TIM8_SR @ %1  10 lshift and 10 rshift ; 
: TIM8_CC1OF@ TIM8_SR @ %1  9 lshift and 9 rshift ; 
: TIM8_BIF@ TIM8_SR @ %1  7 lshift and 7 rshift ; 
: TIM8_TIF@ TIM8_SR @ %1  6 lshift and 6 rshift ; 
: TIM8_COMIF@ TIM8_SR @ %1  5 lshift and 5 rshift ; 
: TIM8_CC4IF@ TIM8_SR @ %1  4 lshift and 4 rshift ; 
: TIM8_CC3IF@ TIM8_SR @ %1  3 lshift and 3 rshift ; 
: TIM8_CC2IF@ TIM8_SR @ %1  2 lshift and 2 rshift ; 
: TIM8_CC1IF@ TIM8_SR @ %1  1 lshift and 1 rshift ; 
: TIM8_UIF@ TIM8_SR @ %1  0 lshift and 0 rshift ; 

TIM8_EGR (write-only)
$0000 CONSTANT RESET_TIM8_EGR 
 %1  7 lshift TIM8_EGR bis!        \ TIM8_BG	Bit 7	 Width 1
 %1  6 lshift TIM8_EGR bis!        \ TIM8_TG	Bit 6	 Width 1
 %1  5 lshift TIM8_EGR bis!        \ TIM8_COMG	Bit 5	 Width 1
 %1  4 lshift TIM8_EGR bis!        \ TIM8_CC4G	Bit 4	 Width 1
 %1  3 lshift TIM8_EGR bis!        \ TIM8_CC3G	Bit 3	 Width 1
 %1  2 lshift TIM8_EGR bis!        \ TIM8_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM8_EGR bis!        \ TIM8_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM8_EGR bis!        \ TIM8_UG	Bit 0	 Width 1
\ TIM8_EGR Register BitField Fetch Words  
: TIM8_BG@ TIM8_EGR @ %1  7 lshift and 7 rshift ; 
: TIM8_TG@ TIM8_EGR @ %1  6 lshift and 6 rshift ; 
: TIM8_COMG@ TIM8_EGR @ %1  5 lshift and 5 rshift ; 
: TIM8_CC4G@ TIM8_EGR @ %1  4 lshift and 4 rshift ; 
: TIM8_CC3G@ TIM8_EGR @ %1  3 lshift and 3 rshift ; 
: TIM8_CC2G@ TIM8_EGR @ %1  2 lshift and 2 rshift ; 
: TIM8_CC1G@ TIM8_EGR @ %1  1 lshift and 1 rshift ; 
: TIM8_UG@ TIM8_EGR @ %1  0 lshift and 0 rshift ; 

TIM8_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM8_CCMR1_Output 
 %1  15 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC2CE	Bit 15	 Width 1
 %xxx  12 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM8_CCMR1_Output bis!        \ TIM8_CC2S	Bit 8	 Width 2
 %1  7 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC1CE	Bit 7	 Width 1
 %xxx  4 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM8_CCMR1_Output bis!        \ TIM8_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM8_CCMR1_Output bis!        \ TIM8_CC1S	Bit 0	 Width 2
\ TIM8_CCMR1_Output Register BitField Fetch Words  
: TIM8_OC2CE@ TIM8_CCMR1_Output @ %1  15 lshift and 15 rshift ; 
: TIM8_OC2M@ TIM8_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM8_OC2PE@ TIM8_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM8_OC2FE@ TIM8_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM8_CC2S@ TIM8_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM8_OC1CE@ TIM8_CCMR1_Output @ %1  7 lshift and 7 rshift ; 
: TIM8_OC1M@ TIM8_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM8_OC1PE@ TIM8_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM8_OC1FE@ TIM8_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM8_CC1S@ TIM8_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM8_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM8_CCMR1_Input 
 %xxxx  12 lshift TIM8_CCMR1_Input bis!        \ TIM8_IC2F	Bit 12	 Width 4
 %xx  10 lshift TIM8_CCMR1_Input bis!        \ TIM8_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM8_CCMR1_Input bis!        \ TIM8_CC2S	Bit 8	 Width 2
 %xxxx  4 lshift TIM8_CCMR1_Input bis!        \ TIM8_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM8_CCMR1_Input bis!        \ TIM8_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM8_CCMR1_Input bis!        \ TIM8_CC1S	Bit 0	 Width 2
\ TIM8_CCMR1_Input Register BitField Fetch Words  
: TIM8_IC2F@ TIM8_CCMR1_Input @ %1111  12 lshift and 12 rshift ; 
: TIM8_IC2PCS@ TIM8_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM8_CC2S@ TIM8_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM8_IC1F@ TIM8_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM8_ICPCS@ TIM8_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM8_CC1S@ TIM8_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM8_CCMR2_Output (read-write)
$00000000 CONSTANT RESET_TIM8_CCMR2_Output 
 %1  15 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC4CE	Bit 15	 Width 1
 %xxx  12 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC4M	Bit 12	 Width 3
 %1  11 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC4PE	Bit 11	 Width 1
 %1  10 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC4FE	Bit 10	 Width 1
 %xx  8 lshift TIM8_CCMR2_Output bis!        \ TIM8_CC4S	Bit 8	 Width 2
 %1  7 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC3CE	Bit 7	 Width 1
 %xxx  4 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC3M	Bit 4	 Width 3
 %1  3 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC3PE	Bit 3	 Width 1
 %1  2 lshift TIM8_CCMR2_Output bis!        \ TIM8_OC3FE	Bit 2	 Width 1
 %xx  0 lshift TIM8_CCMR2_Output bis!        \ TIM8_CC3S	Bit 0	 Width 2
\ TIM8_CCMR2_Output Register BitField Fetch Words  
: TIM8_OC4CE@ TIM8_CCMR2_Output @ %1  15 lshift and 15 rshift ; 
: TIM8_OC4M@ TIM8_CCMR2_Output @ %111  12 lshift and 12 rshift ; 
: TIM8_OC4PE@ TIM8_CCMR2_Output @ %1  11 lshift and 11 rshift ; 
: TIM8_OC4FE@ TIM8_CCMR2_Output @ %1  10 lshift and 10 rshift ; 
: TIM8_CC4S@ TIM8_CCMR2_Output @ %11  8 lshift and 8 rshift ; 
: TIM8_OC3CE@ TIM8_CCMR2_Output @ %1  7 lshift and 7 rshift ; 
: TIM8_OC3M@ TIM8_CCMR2_Output @ %111  4 lshift and 4 rshift ; 
: TIM8_OC3PE@ TIM8_CCMR2_Output @ %1  3 lshift and 3 rshift ; 
: TIM8_OC3FE@ TIM8_CCMR2_Output @ %1  2 lshift and 2 rshift ; 
: TIM8_CC3S@ TIM8_CCMR2_Output @ %11  0 lshift and 0 rshift ; 

TIM8_CCMR2_Input (read-write)
$00000000 CONSTANT RESET_TIM8_CCMR2_Input 
 %xxxx  12 lshift TIM8_CCMR2_Input bis!        \ TIM8_IC4F	Bit 12	 Width 4
 %xx  10 lshift TIM8_CCMR2_Input bis!        \ TIM8_IC4PSC	Bit 10	 Width 2
 %xx  8 lshift TIM8_CCMR2_Input bis!        \ TIM8_CC4S	Bit 8	 Width 2
 %xxxx  4 lshift TIM8_CCMR2_Input bis!        \ TIM8_IC3F	Bit 4	 Width 4
 %xx  2 lshift TIM8_CCMR2_Input bis!        \ TIM8_IC3PSC	Bit 2	 Width 2
 %xx  0 lshift TIM8_CCMR2_Input bis!        \ TIM8_CC3S	Bit 0	 Width 2
\ TIM8_CCMR2_Input Register BitField Fetch Words  
: TIM8_IC4F@ TIM8_CCMR2_Input @ %1111  12 lshift and 12 rshift ; 
: TIM8_IC4PSC@ TIM8_CCMR2_Input @ %11  10 lshift and 10 rshift ; 
: TIM8_CC4S@ TIM8_CCMR2_Input @ %11  8 lshift and 8 rshift ; 
: TIM8_IC3F@ TIM8_CCMR2_Input @ %1111  4 lshift and 4 rshift ; 
: TIM8_IC3PSC@ TIM8_CCMR2_Input @ %11  2 lshift and 2 rshift ; 
: TIM8_CC3S@ TIM8_CCMR2_Input @ %11  0 lshift and 0 rshift ; 

TIM8_CCER (read-write)
$0000 CONSTANT RESET_TIM8_CCER 
 %1  13 lshift TIM8_CCER bis!        \ TIM8_CC4P	Bit 13	 Width 1
 %1  12 lshift TIM8_CCER bis!        \ TIM8_CC4E	Bit 12	 Width 1
 %1  11 lshift TIM8_CCER bis!        \ TIM8_CC3NP	Bit 11	 Width 1
 %1  10 lshift TIM8_CCER bis!        \ TIM8_CC3NE	Bit 10	 Width 1
 %1  9 lshift TIM8_CCER bis!        \ TIM8_CC3P	Bit 9	 Width 1
 %1  8 lshift TIM8_CCER bis!        \ TIM8_CC3E	Bit 8	 Width 1
 %1  7 lshift TIM8_CCER bis!        \ TIM8_CC2NP	Bit 7	 Width 1
 %1  6 lshift TIM8_CCER bis!        \ TIM8_CC2NE	Bit 6	 Width 1
 %1  5 lshift TIM8_CCER bis!        \ TIM8_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM8_CCER bis!        \ TIM8_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM8_CCER bis!        \ TIM8_CC1NP	Bit 3	 Width 1
 %1  2 lshift TIM8_CCER bis!        \ TIM8_CC1NE	Bit 2	 Width 1
 %1  1 lshift TIM8_CCER bis!        \ TIM8_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM8_CCER bis!        \ TIM8_CC1E	Bit 0	 Width 1
\ TIM8_CCER Register BitField Fetch Words  
: TIM8_CC4P@ TIM8_CCER @ %1  13 lshift and 13 rshift ; 
: TIM8_CC4E@ TIM8_CCER @ %1  12 lshift and 12 rshift ; 
: TIM8_CC3NP@ TIM8_CCER @ %1  11 lshift and 11 rshift ; 
: TIM8_CC3NE@ TIM8_CCER @ %1  10 lshift and 10 rshift ; 
: TIM8_CC3P@ TIM8_CCER @ %1  9 lshift and 9 rshift ; 
: TIM8_CC3E@ TIM8_CCER @ %1  8 lshift and 8 rshift ; 
: TIM8_CC2NP@ TIM8_CCER @ %1  7 lshift and 7 rshift ; 
: TIM8_CC2NE@ TIM8_CCER @ %1  6 lshift and 6 rshift ; 
: TIM8_CC2P@ TIM8_CCER @ %1  5 lshift and 5 rshift ; 
: TIM8_CC2E@ TIM8_CCER @ %1  4 lshift and 4 rshift ; 
: TIM8_CC1NP@ TIM8_CCER @ %1  3 lshift and 3 rshift ; 
: TIM8_CC1NE@ TIM8_CCER @ %1  2 lshift and 2 rshift ; 
: TIM8_CC1P@ TIM8_CCER @ %1  1 lshift and 1 rshift ; 
: TIM8_CC1E@ TIM8_CCER @ %1  0 lshift and 0 rshift ; 

TIM8_CNT (read-write)
$00000000 CONSTANT RESET_TIM8_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_CNT bis!        \ TIM8_CNT	Bit 0	 Width 16
\ TIM8_CNT Register BitField Fetch Words  
: TIM8_CNT@ TIM8_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_PSC (read-write)
$0000 CONSTANT RESET_TIM8_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_PSC bis!        \ TIM8_PSC	Bit 0	 Width 16
\ TIM8_PSC Register BitField Fetch Words  
: TIM8_PSC@ TIM8_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_ARR (read-write)
$00000000 CONSTANT RESET_TIM8_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_ARR bis!        \ TIM8_ARR	Bit 0	 Width 16
\ TIM8_ARR Register BitField Fetch Words  
: TIM8_ARR@ TIM8_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM8_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_CCR1 bis!        \ TIM8_CCR1	Bit 0	 Width 16
\ TIM8_CCR1 Register BitField Fetch Words  
: TIM8_CCR1@ TIM8_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM8_CCR2 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_CCR2 bis!        \ TIM8_CCR2	Bit 0	 Width 16
\ TIM8_CCR2 Register BitField Fetch Words  
: TIM8_CCR2@ TIM8_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_CCR3 (read-write)
$00000000 CONSTANT RESET_TIM8_CCR3 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_CCR3 bis!        \ TIM8_CCR3	Bit 0	 Width 16
\ TIM8_CCR3 Register BitField Fetch Words  
: TIM8_CCR3@ TIM8_CCR3 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_CCR4 (read-write)
$00000000 CONSTANT RESET_TIM8_CCR4 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_CCR4 bis!        \ TIM8_CCR4	Bit 0	 Width 16
\ TIM8_CCR4 Register BitField Fetch Words  
: TIM8_CCR4@ TIM8_CCR4 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_DCR (read-write)
$0000 CONSTANT RESET_TIM8_DCR 
 %xxxxx  8 lshift TIM8_DCR bis!        \ TIM8_DBL	Bit 8	 Width 5
 %xxxxx  0 lshift TIM8_DCR bis!        \ TIM8_DBA	Bit 0	 Width 5
\ TIM8_DCR Register BitField Fetch Words  
: TIM8_DBL@ TIM8_DCR @ %11111  8 lshift and 8 rshift ; 
: TIM8_DBA@ TIM8_DCR @ %11111  0 lshift and 0 rshift ; 

TIM8_DMAR (read-write)
$0000 CONSTANT RESET_TIM8_DMAR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM8_DMAR bis!        \ TIM8_DMAB	Bit 0	 Width 16
\ TIM8_DMAR Register BitField Fetch Words  
: TIM8_DMAB@ TIM8_DMAR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM8_RCR (read-write)
$0000 CONSTANT RESET_TIM8_RCR 
 %xxxxxxxx  0 lshift TIM8_RCR bis!        \ TIM8_REP	Bit 0	 Width 8
\ TIM8_RCR Register BitField Fetch Words  
: TIM8_REP@ TIM8_RCR @ %11111111  0 lshift and 0 rshift ; 

TIM8_BDTR (read-write)
$0000 CONSTANT RESET_TIM8_BDTR 
 %1  15 lshift TIM8_BDTR bis!        \ TIM8_MOE	Bit 15	 Width 1
 %1  14 lshift TIM8_BDTR bis!        \ TIM8_AOE	Bit 14	 Width 1
 %1  13 lshift TIM8_BDTR bis!        \ TIM8_BKP	Bit 13	 Width 1
 %1  12 lshift TIM8_BDTR bis!        \ TIM8_BKE	Bit 12	 Width 1
 %1  11 lshift TIM8_BDTR bis!        \ TIM8_OSSR	Bit 11	 Width 1
 %1  10 lshift TIM8_BDTR bis!        \ TIM8_OSSI	Bit 10	 Width 1
 %xx  8 lshift TIM8_BDTR bis!        \ TIM8_LOCK	Bit 8	 Width 2
 %xxxxxxxx  0 lshift TIM8_BDTR bis!        \ TIM8_DTG	Bit 0	 Width 8
\ TIM8_BDTR Register BitField Fetch Words  
: TIM8_MOE@ TIM8_BDTR @ %1  15 lshift and 15 rshift ; 
: TIM8_AOE@ TIM8_BDTR @ %1  14 lshift and 14 rshift ; 
: TIM8_BKP@ TIM8_BDTR @ %1  13 lshift and 13 rshift ; 
: TIM8_BKE@ TIM8_BDTR @ %1  12 lshift and 12 rshift ; 
: TIM8_OSSR@ TIM8_BDTR @ %1  11 lshift and 11 rshift ; 
: TIM8_OSSI@ TIM8_BDTR @ %1  10 lshift and 10 rshift ; 
: TIM8_LOCK@ TIM8_BDTR @ %11  8 lshift and 8 rshift ; 
: TIM8_DTG@ TIM8_BDTR @ %11111111  0 lshift and 0 rshift ; 

                    
################################### TIM2 ###################################
TIM2_CR1 (read-write)
$0000 CONSTANT RESET_TIM2_CR1 
 %xx  8 lshift TIM2_CR1 bis!        \ TIM2_CKD	Bit 8	 Width 2
 %1  7 lshift TIM2_CR1 bis!        \ TIM2_ARPE	Bit 7	 Width 1
 %xx  5 lshift TIM2_CR1 bis!        \ TIM2_CMS	Bit 5	 Width 2
 %1  4 lshift TIM2_CR1 bis!        \ TIM2_DIR	Bit 4	 Width 1
 %1  3 lshift TIM2_CR1 bis!        \ TIM2_OPM	Bit 3	 Width 1
 %1  2 lshift TIM2_CR1 bis!        \ TIM2_URS	Bit 2	 Width 1
 %1  1 lshift TIM2_CR1 bis!        \ TIM2_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM2_CR1 bis!        \ TIM2_CEN	Bit 0	 Width 1
\ TIM2_CR1 Register BitField Fetch Words  
: TIM2_CKD@ TIM2_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM2_ARPE@ TIM2_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM2_CMS@ TIM2_CR1 @ %11  5 lshift and 5 rshift ; 
: TIM2_DIR@ TIM2_CR1 @ %1  4 lshift and 4 rshift ; 
: TIM2_OPM@ TIM2_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM2_URS@ TIM2_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM2_UDIS@ TIM2_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM2_CEN@ TIM2_CR1 @ %1  0 lshift and 0 rshift ; 

TIM2_CR2 (read-write)
$0000 CONSTANT RESET_TIM2_CR2 
 %1  7 lshift TIM2_CR2 bis!        \ TIM2_TI1S	Bit 7	 Width 1
 %xxx  4 lshift TIM2_CR2 bis!        \ TIM2_MMS	Bit 4	 Width 3
 %1  3 lshift TIM2_CR2 bis!        \ TIM2_CCDS	Bit 3	 Width 1
\ TIM2_CR2 Register BitField Fetch Words  
: TIM2_TI1S@ TIM2_CR2 @ %1  7 lshift and 7 rshift ; 
: TIM2_MMS@ TIM2_CR2 @ %111  4 lshift and 4 rshift ; 
: TIM2_CCDS@ TIM2_CR2 @ %1  3 lshift and 3 rshift ; 

TIM2_SMCR (read-write)
$0000 CONSTANT RESET_TIM2_SMCR 
 %1  15 lshift TIM2_SMCR bis!        \ TIM2_ETP	Bit 15	 Width 1
 %1  14 lshift TIM2_SMCR bis!        \ TIM2_ECE	Bit 14	 Width 1
 %xx  12 lshift TIM2_SMCR bis!        \ TIM2_ETPS	Bit 12	 Width 2
 %xxxx  8 lshift TIM2_SMCR bis!        \ TIM2_ETF	Bit 8	 Width 4
 %1  7 lshift TIM2_SMCR bis!        \ TIM2_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM2_SMCR bis!        \ TIM2_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM2_SMCR bis!        \ TIM2_SMS	Bit 0	 Width 3
\ TIM2_SMCR Register BitField Fetch Words  
: TIM2_ETP@ TIM2_SMCR @ %1  15 lshift and 15 rshift ; 
: TIM2_ECE@ TIM2_SMCR @ %1  14 lshift and 14 rshift ; 
: TIM2_ETPS@ TIM2_SMCR @ %11  12 lshift and 12 rshift ; 
: TIM2_ETF@ TIM2_SMCR @ %1111  8 lshift and 8 rshift ; 
: TIM2_MSM@ TIM2_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM2_TS@ TIM2_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM2_SMS@ TIM2_SMCR @ %111  0 lshift and 0 rshift ; 

TIM2_DIER (read-write)
$0000 CONSTANT RESET_TIM2_DIER 
 %1  14 lshift TIM2_DIER bis!        \ TIM2_TDE	Bit 14	 Width 1
 %1  12 lshift TIM2_DIER bis!        \ TIM2_CC4DE	Bit 12	 Width 1
 %1  11 lshift TIM2_DIER bis!        \ TIM2_CC3DE	Bit 11	 Width 1
 %1  10 lshift TIM2_DIER bis!        \ TIM2_CC2DE	Bit 10	 Width 1
 %1  9 lshift TIM2_DIER bis!        \ TIM2_CC1DE	Bit 9	 Width 1
 %1  8 lshift TIM2_DIER bis!        \ TIM2_UDE	Bit 8	 Width 1
 %1  6 lshift TIM2_DIER bis!        \ TIM2_TIE	Bit 6	 Width 1
 %1  4 lshift TIM2_DIER bis!        \ TIM2_CC4IE	Bit 4	 Width 1
 %1  3 lshift TIM2_DIER bis!        \ TIM2_CC3IE	Bit 3	 Width 1
 %1  2 lshift TIM2_DIER bis!        \ TIM2_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM2_DIER bis!        \ TIM2_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM2_DIER bis!        \ TIM2_UIE	Bit 0	 Width 1
\ TIM2_DIER Register BitField Fetch Words  
: TIM2_TDE@ TIM2_DIER @ %1  14 lshift and 14 rshift ; 
: TIM2_CC4DE@ TIM2_DIER @ %1  12 lshift and 12 rshift ; 
: TIM2_CC3DE@ TIM2_DIER @ %1  11 lshift and 11 rshift ; 
: TIM2_CC2DE@ TIM2_DIER @ %1  10 lshift and 10 rshift ; 
: TIM2_CC1DE@ TIM2_DIER @ %1  9 lshift and 9 rshift ; 
: TIM2_UDE@ TIM2_DIER @ %1  8 lshift and 8 rshift ; 
: TIM2_TIE@ TIM2_DIER @ %1  6 lshift and 6 rshift ; 
: TIM2_CC4IE@ TIM2_DIER @ %1  4 lshift and 4 rshift ; 
: TIM2_CC3IE@ TIM2_DIER @ %1  3 lshift and 3 rshift ; 
: TIM2_CC2IE@ TIM2_DIER @ %1  2 lshift and 2 rshift ; 
: TIM2_CC1IE@ TIM2_DIER @ %1  1 lshift and 1 rshift ; 
: TIM2_UIE@ TIM2_DIER @ %1  0 lshift and 0 rshift ; 

TIM2_SR (read-write)
$0000 CONSTANT RESET_TIM2_SR 
 %1  12 lshift TIM2_SR bis!        \ TIM2_CC4OF	Bit 12	 Width 1
 %1  11 lshift TIM2_SR bis!        \ TIM2_CC3OF	Bit 11	 Width 1
 %1  10 lshift TIM2_SR bis!        \ TIM2_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM2_SR bis!        \ TIM2_CC1OF	Bit 9	 Width 1
 %1  6 lshift TIM2_SR bis!        \ TIM2_TIF	Bit 6	 Width 1
 %1  4 lshift TIM2_SR bis!        \ TIM2_CC4IF	Bit 4	 Width 1
 %1  3 lshift TIM2_SR bis!        \ TIM2_CC3IF	Bit 3	 Width 1
 %1  2 lshift TIM2_SR bis!        \ TIM2_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM2_SR bis!        \ TIM2_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM2_SR bis!        \ TIM2_UIF	Bit 0	 Width 1
\ TIM2_SR Register BitField Fetch Words  
: TIM2_CC4OF@ TIM2_SR @ %1  12 lshift and 12 rshift ; 
: TIM2_CC3OF@ TIM2_SR @ %1  11 lshift and 11 rshift ; 
: TIM2_CC2OF@ TIM2_SR @ %1  10 lshift and 10 rshift ; 
: TIM2_CC1OF@ TIM2_SR @ %1  9 lshift and 9 rshift ; 
: TIM2_TIF@ TIM2_SR @ %1  6 lshift and 6 rshift ; 
: TIM2_CC4IF@ TIM2_SR @ %1  4 lshift and 4 rshift ; 
: TIM2_CC3IF@ TIM2_SR @ %1  3 lshift and 3 rshift ; 
: TIM2_CC2IF@ TIM2_SR @ %1  2 lshift and 2 rshift ; 
: TIM2_CC1IF@ TIM2_SR @ %1  1 lshift and 1 rshift ; 
: TIM2_UIF@ TIM2_SR @ %1  0 lshift and 0 rshift ; 

TIM2_EGR (write-only)
$0000 CONSTANT RESET_TIM2_EGR 
 %1  6 lshift TIM2_EGR bis!        \ TIM2_TG	Bit 6	 Width 1
 %1  4 lshift TIM2_EGR bis!        \ TIM2_CC4G	Bit 4	 Width 1
 %1  3 lshift TIM2_EGR bis!        \ TIM2_CC3G	Bit 3	 Width 1
 %1  2 lshift TIM2_EGR bis!        \ TIM2_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM2_EGR bis!        \ TIM2_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM2_EGR bis!        \ TIM2_UG	Bit 0	 Width 1
\ TIM2_EGR Register BitField Fetch Words  
: TIM2_TG@ TIM2_EGR @ %1  6 lshift and 6 rshift ; 
: TIM2_CC4G@ TIM2_EGR @ %1  4 lshift and 4 rshift ; 
: TIM2_CC3G@ TIM2_EGR @ %1  3 lshift and 3 rshift ; 
: TIM2_CC2G@ TIM2_EGR @ %1  2 lshift and 2 rshift ; 
: TIM2_CC1G@ TIM2_EGR @ %1  1 lshift and 1 rshift ; 
: TIM2_UG@ TIM2_EGR @ %1  0 lshift and 0 rshift ; 

TIM2_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM2_CCMR1_Output 
 %1  15 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC2CE	Bit 15	 Width 1
 %xxx  12 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM2_CCMR1_Output bis!        \ TIM2_CC2S	Bit 8	 Width 2
 %1  7 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC1CE	Bit 7	 Width 1
 %xxx  4 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM2_CCMR1_Output bis!        \ TIM2_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM2_CCMR1_Output bis!        \ TIM2_CC1S	Bit 0	 Width 2
\ TIM2_CCMR1_Output Register BitField Fetch Words  
: TIM2_OC2CE@ TIM2_CCMR1_Output @ %1  15 lshift and 15 rshift ; 
: TIM2_OC2M@ TIM2_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM2_OC2PE@ TIM2_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM2_OC2FE@ TIM2_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM2_CC2S@ TIM2_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM2_OC1CE@ TIM2_CCMR1_Output @ %1  7 lshift and 7 rshift ; 
: TIM2_OC1M@ TIM2_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM2_OC1PE@ TIM2_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM2_OC1FE@ TIM2_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM2_CC1S@ TIM2_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM2_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM2_CCMR1_Input 
 %xxxx  12 lshift TIM2_CCMR1_Input bis!        \ TIM2_IC2F	Bit 12	 Width 4
 %xx  10 lshift TIM2_CCMR1_Input bis!        \ TIM2_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM2_CCMR1_Input bis!        \ TIM2_CC2S	Bit 8	 Width 2
 %xxxx  4 lshift TIM2_CCMR1_Input bis!        \ TIM2_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM2_CCMR1_Input bis!        \ TIM2_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM2_CCMR1_Input bis!        \ TIM2_CC1S	Bit 0	 Width 2
\ TIM2_CCMR1_Input Register BitField Fetch Words  
: TIM2_IC2F@ TIM2_CCMR1_Input @ %1111  12 lshift and 12 rshift ; 
: TIM2_IC2PCS@ TIM2_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM2_CC2S@ TIM2_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM2_IC1F@ TIM2_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM2_ICPCS@ TIM2_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM2_CC1S@ TIM2_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM2_CCMR2_Output (read-write)
$00000000 CONSTANT RESET_TIM2_CCMR2_Output 
 %1  15 lshift TIM2_CCMR2_Output bis!        \ TIM2_O24CE	Bit 15	 Width 1
 %xxx  12 lshift TIM2_CCMR2_Output bis!        \ TIM2_OC4M	Bit 12	 Width 3
 %1  11 lshift TIM2_CCMR2_Output bis!        \ TIM2_OC4PE	Bit 11	 Width 1
 %1  10 lshift TIM2_CCMR2_Output bis!        \ TIM2_OC4FE	Bit 10	 Width 1
 %xx  8 lshift TIM2_CCMR2_Output bis!        \ TIM2_CC4S	Bit 8	 Width 2
 %1  7 lshift TIM2_CCMR2_Output bis!        \ TIM2_OC3CE	Bit 7	 Width 1
 %xxx  4 lshift TIM2_CCMR2_Output bis!        \ TIM2_OC3M	Bit 4	 Width 3
 %1  3 lshift TIM2_CCMR2_Output bis!        \ TIM2_OC3PE	Bit 3	 Width 1
 %1  2 lshift TIM2_CCMR2_Output bis!        \ TIM2_OC3FE	Bit 2	 Width 1
 %xx  0 lshift TIM2_CCMR2_Output bis!        \ TIM2_CC3S	Bit 0	 Width 2
\ TIM2_CCMR2_Output Register BitField Fetch Words  
: TIM2_O24CE@ TIM2_CCMR2_Output @ %1  15 lshift and 15 rshift ; 
: TIM2_OC4M@ TIM2_CCMR2_Output @ %111  12 lshift and 12 rshift ; 
: TIM2_OC4PE@ TIM2_CCMR2_Output @ %1  11 lshift and 11 rshift ; 
: TIM2_OC4FE@ TIM2_CCMR2_Output @ %1  10 lshift and 10 rshift ; 
: TIM2_CC4S@ TIM2_CCMR2_Output @ %11  8 lshift and 8 rshift ; 
: TIM2_OC3CE@ TIM2_CCMR2_Output @ %1  7 lshift and 7 rshift ; 
: TIM2_OC3M@ TIM2_CCMR2_Output @ %111  4 lshift and 4 rshift ; 
: TIM2_OC3PE@ TIM2_CCMR2_Output @ %1  3 lshift and 3 rshift ; 
: TIM2_OC3FE@ TIM2_CCMR2_Output @ %1  2 lshift and 2 rshift ; 
: TIM2_CC3S@ TIM2_CCMR2_Output @ %11  0 lshift and 0 rshift ; 

TIM2_CCMR2_Input (read-write)
$00000000 CONSTANT RESET_TIM2_CCMR2_Input 
 %xxxx  12 lshift TIM2_CCMR2_Input bis!        \ TIM2_IC4F	Bit 12	 Width 4
 %xx  10 lshift TIM2_CCMR2_Input bis!        \ TIM2_IC4PSC	Bit 10	 Width 2
 %xx  8 lshift TIM2_CCMR2_Input bis!        \ TIM2_CC4S	Bit 8	 Width 2
 %xxxx  4 lshift TIM2_CCMR2_Input bis!        \ TIM2_IC3F	Bit 4	 Width 4
 %xx  2 lshift TIM2_CCMR2_Input bis!        \ TIM2_IC3PSC	Bit 2	 Width 2
 %xx  0 lshift TIM2_CCMR2_Input bis!        \ TIM2_CC3S	Bit 0	 Width 2
\ TIM2_CCMR2_Input Register BitField Fetch Words  
: TIM2_IC4F@ TIM2_CCMR2_Input @ %1111  12 lshift and 12 rshift ; 
: TIM2_IC4PSC@ TIM2_CCMR2_Input @ %11  10 lshift and 10 rshift ; 
: TIM2_CC4S@ TIM2_CCMR2_Input @ %11  8 lshift and 8 rshift ; 
: TIM2_IC3F@ TIM2_CCMR2_Input @ %1111  4 lshift and 4 rshift ; 
: TIM2_IC3PSC@ TIM2_CCMR2_Input @ %11  2 lshift and 2 rshift ; 
: TIM2_CC3S@ TIM2_CCMR2_Input @ %11  0 lshift and 0 rshift ; 

TIM2_CCER (read-write)
$0000 CONSTANT RESET_TIM2_CCER 
 %1  15 lshift TIM2_CCER bis!        \ TIM2_CC4NP	Bit 15	 Width 1
 %1  13 lshift TIM2_CCER bis!        \ TIM2_CC4P	Bit 13	 Width 1
 %1  12 lshift TIM2_CCER bis!        \ TIM2_CC4E	Bit 12	 Width 1
 %1  11 lshift TIM2_CCER bis!        \ TIM2_CC3NP	Bit 11	 Width 1
 %1  9 lshift TIM2_CCER bis!        \ TIM2_CC3P	Bit 9	 Width 1
 %1  8 lshift TIM2_CCER bis!        \ TIM2_CC3E	Bit 8	 Width 1
 %1  7 lshift TIM2_CCER bis!        \ TIM2_CC2NP	Bit 7	 Width 1
 %1  5 lshift TIM2_CCER bis!        \ TIM2_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM2_CCER bis!        \ TIM2_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM2_CCER bis!        \ TIM2_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM2_CCER bis!        \ TIM2_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM2_CCER bis!        \ TIM2_CC1E	Bit 0	 Width 1
\ TIM2_CCER Register BitField Fetch Words  
: TIM2_CC4NP@ TIM2_CCER @ %1  15 lshift and 15 rshift ; 
: TIM2_CC4P@ TIM2_CCER @ %1  13 lshift and 13 rshift ; 
: TIM2_CC4E@ TIM2_CCER @ %1  12 lshift and 12 rshift ; 
: TIM2_CC3NP@ TIM2_CCER @ %1  11 lshift and 11 rshift ; 
: TIM2_CC3P@ TIM2_CCER @ %1  9 lshift and 9 rshift ; 
: TIM2_CC3E@ TIM2_CCER @ %1  8 lshift and 8 rshift ; 
: TIM2_CC2NP@ TIM2_CCER @ %1  7 lshift and 7 rshift ; 
: TIM2_CC2P@ TIM2_CCER @ %1  5 lshift and 5 rshift ; 
: TIM2_CC2E@ TIM2_CCER @ %1  4 lshift and 4 rshift ; 
: TIM2_CC1NP@ TIM2_CCER @ %1  3 lshift and 3 rshift ; 
: TIM2_CC1P@ TIM2_CCER @ %1  1 lshift and 1 rshift ; 
: TIM2_CC1E@ TIM2_CCER @ %1  0 lshift and 0 rshift ; 

TIM2_CNT (read-write)
$00000000 CONSTANT RESET_TIM2_CNT 
 %xxxxxxxxxxxxxxxx  16 lshift TIM2_CNT bis!        \ TIM2_CNT_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_CNT bis!        \ TIM2_CNT_L	Bit 0	 Width 16
\ TIM2_CNT Register BitField Fetch Words  
: TIM2_CNT_H@ TIM2_CNT @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM2_CNT_L@ TIM2_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_PSC (read-write)
$0000 CONSTANT RESET_TIM2_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_PSC bis!        \ TIM2_PSC	Bit 0	 Width 16
\ TIM2_PSC Register BitField Fetch Words  
: TIM2_PSC@ TIM2_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_ARR (read-write)
$00000000 CONSTANT RESET_TIM2_ARR 
 %xxxxxxxxxxxxxxxx  16 lshift TIM2_ARR bis!        \ TIM2_ARR_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_ARR bis!        \ TIM2_ARR_L	Bit 0	 Width 16
\ TIM2_ARR Register BitField Fetch Words  
: TIM2_ARR_H@ TIM2_ARR @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM2_ARR_L@ TIM2_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM2_CCR1 
 %xxxxxxxxxxxxxxxx  16 lshift TIM2_CCR1 bis!        \ TIM2_CCR1_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_CCR1 bis!        \ TIM2_CCR1_L	Bit 0	 Width 16
\ TIM2_CCR1 Register BitField Fetch Words  
: TIM2_CCR1_H@ TIM2_CCR1 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM2_CCR1_L@ TIM2_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM2_CCR2 
 %xxxxxxxxxxxxxxxx  16 lshift TIM2_CCR2 bis!        \ TIM2_CCR2_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_CCR2 bis!        \ TIM2_CCR2_L	Bit 0	 Width 16
\ TIM2_CCR2 Register BitField Fetch Words  
: TIM2_CCR2_H@ TIM2_CCR2 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM2_CCR2_L@ TIM2_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_CCR3 (read-write)
$00000000 CONSTANT RESET_TIM2_CCR3 
 %xxxxxxxxxxxxxxxx  16 lshift TIM2_CCR3 bis!        \ TIM2_CCR3_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_CCR3 bis!        \ TIM2_CCR3_L	Bit 0	 Width 16
\ TIM2_CCR3 Register BitField Fetch Words  
: TIM2_CCR3_H@ TIM2_CCR3 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM2_CCR3_L@ TIM2_CCR3 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_CCR4 (read-write)
$00000000 CONSTANT RESET_TIM2_CCR4 
 %xxxxxxxxxxxxxxxx  16 lshift TIM2_CCR4 bis!        \ TIM2_CCR4_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_CCR4 bis!        \ TIM2_CCR4_L	Bit 0	 Width 16
\ TIM2_CCR4 Register BitField Fetch Words  
: TIM2_CCR4_H@ TIM2_CCR4 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM2_CCR4_L@ TIM2_CCR4 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_DCR (read-write)
$0000 CONSTANT RESET_TIM2_DCR 
 %xxxxx  8 lshift TIM2_DCR bis!        \ TIM2_DBL	Bit 8	 Width 5
 %xxxxx  0 lshift TIM2_DCR bis!        \ TIM2_DBA	Bit 0	 Width 5
\ TIM2_DCR Register BitField Fetch Words  
: TIM2_DBL@ TIM2_DCR @ %11111  8 lshift and 8 rshift ; 
: TIM2_DBA@ TIM2_DCR @ %11111  0 lshift and 0 rshift ; 

TIM2_DMAR (read-write)
$0000 CONSTANT RESET_TIM2_DMAR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM2_DMAR bis!        \ TIM2_DMAB	Bit 0	 Width 16
\ TIM2_DMAR Register BitField Fetch Words  
: TIM2_DMAB@ TIM2_DMAR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM2_OR (read-write)
$0000 CONSTANT RESET_TIM2_OR 
 %xx  10 lshift TIM2_OR bis!        \ TIM2_ITR1_RMP	Bit 10	 Width 2
\ TIM2_OR Register BitField Fetch Words  
: TIM2_ITR1_RMP@ TIM2_OR @ %11  10 lshift and 10 rshift ; 

                    
################################### TIM3 ###################################
TIM3_CR1 (read-write)
$0000 CONSTANT RESET_TIM3_CR1 
 %xx  8 lshift TIM3_CR1 bis!        \ TIM3_CKD	Bit 8	 Width 2
 %1  7 lshift TIM3_CR1 bis!        \ TIM3_ARPE	Bit 7	 Width 1
 %xx  5 lshift TIM3_CR1 bis!        \ TIM3_CMS	Bit 5	 Width 2
 %1  4 lshift TIM3_CR1 bis!        \ TIM3_DIR	Bit 4	 Width 1
 %1  3 lshift TIM3_CR1 bis!        \ TIM3_OPM	Bit 3	 Width 1
 %1  2 lshift TIM3_CR1 bis!        \ TIM3_URS	Bit 2	 Width 1
 %1  1 lshift TIM3_CR1 bis!        \ TIM3_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM3_CR1 bis!        \ TIM3_CEN	Bit 0	 Width 1
\ TIM3_CR1 Register BitField Fetch Words  
: TIM3_CKD@ TIM3_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM3_ARPE@ TIM3_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM3_CMS@ TIM3_CR1 @ %11  5 lshift and 5 rshift ; 
: TIM3_DIR@ TIM3_CR1 @ %1  4 lshift and 4 rshift ; 
: TIM3_OPM@ TIM3_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM3_URS@ TIM3_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM3_UDIS@ TIM3_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM3_CEN@ TIM3_CR1 @ %1  0 lshift and 0 rshift ; 

TIM3_CR2 (read-write)
$0000 CONSTANT RESET_TIM3_CR2 
 %1  7 lshift TIM3_CR2 bis!        \ TIM3_TI1S	Bit 7	 Width 1
 %xxx  4 lshift TIM3_CR2 bis!        \ TIM3_MMS	Bit 4	 Width 3
 %1  3 lshift TIM3_CR2 bis!        \ TIM3_CCDS	Bit 3	 Width 1
\ TIM3_CR2 Register BitField Fetch Words  
: TIM3_TI1S@ TIM3_CR2 @ %1  7 lshift and 7 rshift ; 
: TIM3_MMS@ TIM3_CR2 @ %111  4 lshift and 4 rshift ; 
: TIM3_CCDS@ TIM3_CR2 @ %1  3 lshift and 3 rshift ; 

TIM3_SMCR (read-write)
$0000 CONSTANT RESET_TIM3_SMCR 
 %1  15 lshift TIM3_SMCR bis!        \ TIM3_ETP	Bit 15	 Width 1
 %1  14 lshift TIM3_SMCR bis!        \ TIM3_ECE	Bit 14	 Width 1
 %xx  12 lshift TIM3_SMCR bis!        \ TIM3_ETPS	Bit 12	 Width 2
 %xxxx  8 lshift TIM3_SMCR bis!        \ TIM3_ETF	Bit 8	 Width 4
 %1  7 lshift TIM3_SMCR bis!        \ TIM3_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM3_SMCR bis!        \ TIM3_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM3_SMCR bis!        \ TIM3_SMS	Bit 0	 Width 3
\ TIM3_SMCR Register BitField Fetch Words  
: TIM3_ETP@ TIM3_SMCR @ %1  15 lshift and 15 rshift ; 
: TIM3_ECE@ TIM3_SMCR @ %1  14 lshift and 14 rshift ; 
: TIM3_ETPS@ TIM3_SMCR @ %11  12 lshift and 12 rshift ; 
: TIM3_ETF@ TIM3_SMCR @ %1111  8 lshift and 8 rshift ; 
: TIM3_MSM@ TIM3_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM3_TS@ TIM3_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM3_SMS@ TIM3_SMCR @ %111  0 lshift and 0 rshift ; 

TIM3_DIER (read-write)
$0000 CONSTANT RESET_TIM3_DIER 
 %1  14 lshift TIM3_DIER bis!        \ TIM3_TDE	Bit 14	 Width 1
 %1  12 lshift TIM3_DIER bis!        \ TIM3_CC4DE	Bit 12	 Width 1
 %1  11 lshift TIM3_DIER bis!        \ TIM3_CC3DE	Bit 11	 Width 1
 %1  10 lshift TIM3_DIER bis!        \ TIM3_CC2DE	Bit 10	 Width 1
 %1  9 lshift TIM3_DIER bis!        \ TIM3_CC1DE	Bit 9	 Width 1
 %1  8 lshift TIM3_DIER bis!        \ TIM3_UDE	Bit 8	 Width 1
 %1  6 lshift TIM3_DIER bis!        \ TIM3_TIE	Bit 6	 Width 1
 %1  4 lshift TIM3_DIER bis!        \ TIM3_CC4IE	Bit 4	 Width 1
 %1  3 lshift TIM3_DIER bis!        \ TIM3_CC3IE	Bit 3	 Width 1
 %1  2 lshift TIM3_DIER bis!        \ TIM3_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM3_DIER bis!        \ TIM3_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM3_DIER bis!        \ TIM3_UIE	Bit 0	 Width 1
\ TIM3_DIER Register BitField Fetch Words  
: TIM3_TDE@ TIM3_DIER @ %1  14 lshift and 14 rshift ; 
: TIM3_CC4DE@ TIM3_DIER @ %1  12 lshift and 12 rshift ; 
: TIM3_CC3DE@ TIM3_DIER @ %1  11 lshift and 11 rshift ; 
: TIM3_CC2DE@ TIM3_DIER @ %1  10 lshift and 10 rshift ; 
: TIM3_CC1DE@ TIM3_DIER @ %1  9 lshift and 9 rshift ; 
: TIM3_UDE@ TIM3_DIER @ %1  8 lshift and 8 rshift ; 
: TIM3_TIE@ TIM3_DIER @ %1  6 lshift and 6 rshift ; 
: TIM3_CC4IE@ TIM3_DIER @ %1  4 lshift and 4 rshift ; 
: TIM3_CC3IE@ TIM3_DIER @ %1  3 lshift and 3 rshift ; 
: TIM3_CC2IE@ TIM3_DIER @ %1  2 lshift and 2 rshift ; 
: TIM3_CC1IE@ TIM3_DIER @ %1  1 lshift and 1 rshift ; 
: TIM3_UIE@ TIM3_DIER @ %1  0 lshift and 0 rshift ; 

TIM3_SR (read-write)
$0000 CONSTANT RESET_TIM3_SR 
 %1  12 lshift TIM3_SR bis!        \ TIM3_CC4OF	Bit 12	 Width 1
 %1  11 lshift TIM3_SR bis!        \ TIM3_CC3OF	Bit 11	 Width 1
 %1  10 lshift TIM3_SR bis!        \ TIM3_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM3_SR bis!        \ TIM3_CC1OF	Bit 9	 Width 1
 %1  6 lshift TIM3_SR bis!        \ TIM3_TIF	Bit 6	 Width 1
 %1  4 lshift TIM3_SR bis!        \ TIM3_CC4IF	Bit 4	 Width 1
 %1  3 lshift TIM3_SR bis!        \ TIM3_CC3IF	Bit 3	 Width 1
 %1  2 lshift TIM3_SR bis!        \ TIM3_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM3_SR bis!        \ TIM3_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM3_SR bis!        \ TIM3_UIF	Bit 0	 Width 1
\ TIM3_SR Register BitField Fetch Words  
: TIM3_CC4OF@ TIM3_SR @ %1  12 lshift and 12 rshift ; 
: TIM3_CC3OF@ TIM3_SR @ %1  11 lshift and 11 rshift ; 
: TIM3_CC2OF@ TIM3_SR @ %1  10 lshift and 10 rshift ; 
: TIM3_CC1OF@ TIM3_SR @ %1  9 lshift and 9 rshift ; 
: TIM3_TIF@ TIM3_SR @ %1  6 lshift and 6 rshift ; 
: TIM3_CC4IF@ TIM3_SR @ %1  4 lshift and 4 rshift ; 
: TIM3_CC3IF@ TIM3_SR @ %1  3 lshift and 3 rshift ; 
: TIM3_CC2IF@ TIM3_SR @ %1  2 lshift and 2 rshift ; 
: TIM3_CC1IF@ TIM3_SR @ %1  1 lshift and 1 rshift ; 
: TIM3_UIF@ TIM3_SR @ %1  0 lshift and 0 rshift ; 

TIM3_EGR (write-only)
$0000 CONSTANT RESET_TIM3_EGR 
 %1  6 lshift TIM3_EGR bis!        \ TIM3_TG	Bit 6	 Width 1
 %1  4 lshift TIM3_EGR bis!        \ TIM3_CC4G	Bit 4	 Width 1
 %1  3 lshift TIM3_EGR bis!        \ TIM3_CC3G	Bit 3	 Width 1
 %1  2 lshift TIM3_EGR bis!        \ TIM3_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM3_EGR bis!        \ TIM3_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM3_EGR bis!        \ TIM3_UG	Bit 0	 Width 1
\ TIM3_EGR Register BitField Fetch Words  
: TIM3_TG@ TIM3_EGR @ %1  6 lshift and 6 rshift ; 
: TIM3_CC4G@ TIM3_EGR @ %1  4 lshift and 4 rshift ; 
: TIM3_CC3G@ TIM3_EGR @ %1  3 lshift and 3 rshift ; 
: TIM3_CC2G@ TIM3_EGR @ %1  2 lshift and 2 rshift ; 
: TIM3_CC1G@ TIM3_EGR @ %1  1 lshift and 1 rshift ; 
: TIM3_UG@ TIM3_EGR @ %1  0 lshift and 0 rshift ; 

TIM3_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM3_CCMR1_Output 
 %1  15 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC2CE	Bit 15	 Width 1
 %xxx  12 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM3_CCMR1_Output bis!        \ TIM3_CC2S	Bit 8	 Width 2
 %1  7 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC1CE	Bit 7	 Width 1
 %xxx  4 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM3_CCMR1_Output bis!        \ TIM3_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM3_CCMR1_Output bis!        \ TIM3_CC1S	Bit 0	 Width 2
\ TIM3_CCMR1_Output Register BitField Fetch Words  
: TIM3_OC2CE@ TIM3_CCMR1_Output @ %1  15 lshift and 15 rshift ; 
: TIM3_OC2M@ TIM3_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM3_OC2PE@ TIM3_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM3_OC2FE@ TIM3_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM3_CC2S@ TIM3_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM3_OC1CE@ TIM3_CCMR1_Output @ %1  7 lshift and 7 rshift ; 
: TIM3_OC1M@ TIM3_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM3_OC1PE@ TIM3_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM3_OC1FE@ TIM3_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM3_CC1S@ TIM3_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM3_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM3_CCMR1_Input 
 %xxxx  12 lshift TIM3_CCMR1_Input bis!        \ TIM3_IC2F	Bit 12	 Width 4
 %xx  10 lshift TIM3_CCMR1_Input bis!        \ TIM3_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM3_CCMR1_Input bis!        \ TIM3_CC2S	Bit 8	 Width 2
 %xxxx  4 lshift TIM3_CCMR1_Input bis!        \ TIM3_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM3_CCMR1_Input bis!        \ TIM3_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM3_CCMR1_Input bis!        \ TIM3_CC1S	Bit 0	 Width 2
\ TIM3_CCMR1_Input Register BitField Fetch Words  
: TIM3_IC2F@ TIM3_CCMR1_Input @ %1111  12 lshift and 12 rshift ; 
: TIM3_IC2PCS@ TIM3_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM3_CC2S@ TIM3_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM3_IC1F@ TIM3_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM3_ICPCS@ TIM3_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM3_CC1S@ TIM3_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM3_CCMR2_Output (read-write)
$00000000 CONSTANT RESET_TIM3_CCMR2_Output 
 %1  15 lshift TIM3_CCMR2_Output bis!        \ TIM3_O24CE	Bit 15	 Width 1
 %xxx  12 lshift TIM3_CCMR2_Output bis!        \ TIM3_OC4M	Bit 12	 Width 3
 %1  11 lshift TIM3_CCMR2_Output bis!        \ TIM3_OC4PE	Bit 11	 Width 1
 %1  10 lshift TIM3_CCMR2_Output bis!        \ TIM3_OC4FE	Bit 10	 Width 1
 %xx  8 lshift TIM3_CCMR2_Output bis!        \ TIM3_CC4S	Bit 8	 Width 2
 %1  7 lshift TIM3_CCMR2_Output bis!        \ TIM3_OC3CE	Bit 7	 Width 1
 %xxx  4 lshift TIM3_CCMR2_Output bis!        \ TIM3_OC3M	Bit 4	 Width 3
 %1  3 lshift TIM3_CCMR2_Output bis!        \ TIM3_OC3PE	Bit 3	 Width 1
 %1  2 lshift TIM3_CCMR2_Output bis!        \ TIM3_OC3FE	Bit 2	 Width 1
 %xx  0 lshift TIM3_CCMR2_Output bis!        \ TIM3_CC3S	Bit 0	 Width 2
\ TIM3_CCMR2_Output Register BitField Fetch Words  
: TIM3_O24CE@ TIM3_CCMR2_Output @ %1  15 lshift and 15 rshift ; 
: TIM3_OC4M@ TIM3_CCMR2_Output @ %111  12 lshift and 12 rshift ; 
: TIM3_OC4PE@ TIM3_CCMR2_Output @ %1  11 lshift and 11 rshift ; 
: TIM3_OC4FE@ TIM3_CCMR2_Output @ %1  10 lshift and 10 rshift ; 
: TIM3_CC4S@ TIM3_CCMR2_Output @ %11  8 lshift and 8 rshift ; 
: TIM3_OC3CE@ TIM3_CCMR2_Output @ %1  7 lshift and 7 rshift ; 
: TIM3_OC3M@ TIM3_CCMR2_Output @ %111  4 lshift and 4 rshift ; 
: TIM3_OC3PE@ TIM3_CCMR2_Output @ %1  3 lshift and 3 rshift ; 
: TIM3_OC3FE@ TIM3_CCMR2_Output @ %1  2 lshift and 2 rshift ; 
: TIM3_CC3S@ TIM3_CCMR2_Output @ %11  0 lshift and 0 rshift ; 

TIM3_CCMR2_Input (read-write)
$00000000 CONSTANT RESET_TIM3_CCMR2_Input 
 %xxxx  12 lshift TIM3_CCMR2_Input bis!        \ TIM3_IC4F	Bit 12	 Width 4
 %xx  10 lshift TIM3_CCMR2_Input bis!        \ TIM3_IC4PSC	Bit 10	 Width 2
 %xx  8 lshift TIM3_CCMR2_Input bis!        \ TIM3_CC4S	Bit 8	 Width 2
 %xxxx  4 lshift TIM3_CCMR2_Input bis!        \ TIM3_IC3F	Bit 4	 Width 4
 %xx  2 lshift TIM3_CCMR2_Input bis!        \ TIM3_IC3PSC	Bit 2	 Width 2
 %xx  0 lshift TIM3_CCMR2_Input bis!        \ TIM3_CC3S	Bit 0	 Width 2
\ TIM3_CCMR2_Input Register BitField Fetch Words  
: TIM3_IC4F@ TIM3_CCMR2_Input @ %1111  12 lshift and 12 rshift ; 
: TIM3_IC4PSC@ TIM3_CCMR2_Input @ %11  10 lshift and 10 rshift ; 
: TIM3_CC4S@ TIM3_CCMR2_Input @ %11  8 lshift and 8 rshift ; 
: TIM3_IC3F@ TIM3_CCMR2_Input @ %1111  4 lshift and 4 rshift ; 
: TIM3_IC3PSC@ TIM3_CCMR2_Input @ %11  2 lshift and 2 rshift ; 
: TIM3_CC3S@ TIM3_CCMR2_Input @ %11  0 lshift and 0 rshift ; 

TIM3_CCER (read-write)
$0000 CONSTANT RESET_TIM3_CCER 
 %1  15 lshift TIM3_CCER bis!        \ TIM3_CC4NP	Bit 15	 Width 1
 %1  13 lshift TIM3_CCER bis!        \ TIM3_CC4P	Bit 13	 Width 1
 %1  12 lshift TIM3_CCER bis!        \ TIM3_CC4E	Bit 12	 Width 1
 %1  11 lshift TIM3_CCER bis!        \ TIM3_CC3NP	Bit 11	 Width 1
 %1  9 lshift TIM3_CCER bis!        \ TIM3_CC3P	Bit 9	 Width 1
 %1  8 lshift TIM3_CCER bis!        \ TIM3_CC3E	Bit 8	 Width 1
 %1  7 lshift TIM3_CCER bis!        \ TIM3_CC2NP	Bit 7	 Width 1
 %1  5 lshift TIM3_CCER bis!        \ TIM3_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM3_CCER bis!        \ TIM3_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM3_CCER bis!        \ TIM3_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM3_CCER bis!        \ TIM3_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM3_CCER bis!        \ TIM3_CC1E	Bit 0	 Width 1
\ TIM3_CCER Register BitField Fetch Words  
: TIM3_CC4NP@ TIM3_CCER @ %1  15 lshift and 15 rshift ; 
: TIM3_CC4P@ TIM3_CCER @ %1  13 lshift and 13 rshift ; 
: TIM3_CC4E@ TIM3_CCER @ %1  12 lshift and 12 rshift ; 
: TIM3_CC3NP@ TIM3_CCER @ %1  11 lshift and 11 rshift ; 
: TIM3_CC3P@ TIM3_CCER @ %1  9 lshift and 9 rshift ; 
: TIM3_CC3E@ TIM3_CCER @ %1  8 lshift and 8 rshift ; 
: TIM3_CC2NP@ TIM3_CCER @ %1  7 lshift and 7 rshift ; 
: TIM3_CC2P@ TIM3_CCER @ %1  5 lshift and 5 rshift ; 
: TIM3_CC2E@ TIM3_CCER @ %1  4 lshift and 4 rshift ; 
: TIM3_CC1NP@ TIM3_CCER @ %1  3 lshift and 3 rshift ; 
: TIM3_CC1P@ TIM3_CCER @ %1  1 lshift and 1 rshift ; 
: TIM3_CC1E@ TIM3_CCER @ %1  0 lshift and 0 rshift ; 

TIM3_CNT (read-write)
$00000000 CONSTANT RESET_TIM3_CNT 
 %xxxxxxxxxxxxxxxx  16 lshift TIM3_CNT bis!        \ TIM3_CNT_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_CNT bis!        \ TIM3_CNT_L	Bit 0	 Width 16
\ TIM3_CNT Register BitField Fetch Words  
: TIM3_CNT_H@ TIM3_CNT @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM3_CNT_L@ TIM3_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM3_PSC (read-write)
$0000 CONSTANT RESET_TIM3_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_PSC bis!        \ TIM3_PSC	Bit 0	 Width 16
\ TIM3_PSC Register BitField Fetch Words  
: TIM3_PSC@ TIM3_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM3_ARR (read-write)
$00000000 CONSTANT RESET_TIM3_ARR 
 %xxxxxxxxxxxxxxxx  16 lshift TIM3_ARR bis!        \ TIM3_ARR_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_ARR bis!        \ TIM3_ARR_L	Bit 0	 Width 16
\ TIM3_ARR Register BitField Fetch Words  
: TIM3_ARR_H@ TIM3_ARR @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM3_ARR_L@ TIM3_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM3_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM3_CCR1 
 %xxxxxxxxxxxxxxxx  16 lshift TIM3_CCR1 bis!        \ TIM3_CCR1_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_CCR1 bis!        \ TIM3_CCR1_L	Bit 0	 Width 16
\ TIM3_CCR1 Register BitField Fetch Words  
: TIM3_CCR1_H@ TIM3_CCR1 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM3_CCR1_L@ TIM3_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM3_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM3_CCR2 
 %xxxxxxxxxxxxxxxx  16 lshift TIM3_CCR2 bis!        \ TIM3_CCR2_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_CCR2 bis!        \ TIM3_CCR2_L	Bit 0	 Width 16
\ TIM3_CCR2 Register BitField Fetch Words  
: TIM3_CCR2_H@ TIM3_CCR2 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM3_CCR2_L@ TIM3_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM3_CCR3 (read-write)
$00000000 CONSTANT RESET_TIM3_CCR3 
 %xxxxxxxxxxxxxxxx  16 lshift TIM3_CCR3 bis!        \ TIM3_CCR3_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_CCR3 bis!        \ TIM3_CCR3_L	Bit 0	 Width 16
\ TIM3_CCR3 Register BitField Fetch Words  
: TIM3_CCR3_H@ TIM3_CCR3 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM3_CCR3_L@ TIM3_CCR3 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM3_CCR4 (read-write)
$00000000 CONSTANT RESET_TIM3_CCR4 
 %xxxxxxxxxxxxxxxx  16 lshift TIM3_CCR4 bis!        \ TIM3_CCR4_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_CCR4 bis!        \ TIM3_CCR4_L	Bit 0	 Width 16
\ TIM3_CCR4 Register BitField Fetch Words  
: TIM3_CCR4_H@ TIM3_CCR4 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM3_CCR4_L@ TIM3_CCR4 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM3_DCR (read-write)
$0000 CONSTANT RESET_TIM3_DCR 
 %xxxxx  8 lshift TIM3_DCR bis!        \ TIM3_DBL	Bit 8	 Width 5
 %xxxxx  0 lshift TIM3_DCR bis!        \ TIM3_DBA	Bit 0	 Width 5
\ TIM3_DCR Register BitField Fetch Words  
: TIM3_DBL@ TIM3_DCR @ %11111  8 lshift and 8 rshift ; 
: TIM3_DBA@ TIM3_DCR @ %11111  0 lshift and 0 rshift ; 

TIM3_DMAR (read-write)
$0000 CONSTANT RESET_TIM3_DMAR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM3_DMAR bis!        \ TIM3_DMAB	Bit 0	 Width 16
\ TIM3_DMAR Register BitField Fetch Words  
: TIM3_DMAB@ TIM3_DMAR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM4 ###################################
TIM4_CR1 (read-write)
$0000 CONSTANT RESET_TIM4_CR1 
 %xx  8 lshift TIM4_CR1 bis!        \ TIM4_CKD	Bit 8	 Width 2
 %1  7 lshift TIM4_CR1 bis!        \ TIM4_ARPE	Bit 7	 Width 1
 %xx  5 lshift TIM4_CR1 bis!        \ TIM4_CMS	Bit 5	 Width 2
 %1  4 lshift TIM4_CR1 bis!        \ TIM4_DIR	Bit 4	 Width 1
 %1  3 lshift TIM4_CR1 bis!        \ TIM4_OPM	Bit 3	 Width 1
 %1  2 lshift TIM4_CR1 bis!        \ TIM4_URS	Bit 2	 Width 1
 %1  1 lshift TIM4_CR1 bis!        \ TIM4_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM4_CR1 bis!        \ TIM4_CEN	Bit 0	 Width 1
\ TIM4_CR1 Register BitField Fetch Words  
: TIM4_CKD@ TIM4_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM4_ARPE@ TIM4_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM4_CMS@ TIM4_CR1 @ %11  5 lshift and 5 rshift ; 
: TIM4_DIR@ TIM4_CR1 @ %1  4 lshift and 4 rshift ; 
: TIM4_OPM@ TIM4_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM4_URS@ TIM4_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM4_UDIS@ TIM4_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM4_CEN@ TIM4_CR1 @ %1  0 lshift and 0 rshift ; 

TIM4_CR2 (read-write)
$0000 CONSTANT RESET_TIM4_CR2 
 %1  7 lshift TIM4_CR2 bis!        \ TIM4_TI1S	Bit 7	 Width 1
 %xxx  4 lshift TIM4_CR2 bis!        \ TIM4_MMS	Bit 4	 Width 3
 %1  3 lshift TIM4_CR2 bis!        \ TIM4_CCDS	Bit 3	 Width 1
\ TIM4_CR2 Register BitField Fetch Words  
: TIM4_TI1S@ TIM4_CR2 @ %1  7 lshift and 7 rshift ; 
: TIM4_MMS@ TIM4_CR2 @ %111  4 lshift and 4 rshift ; 
: TIM4_CCDS@ TIM4_CR2 @ %1  3 lshift and 3 rshift ; 

TIM4_SMCR (read-write)
$0000 CONSTANT RESET_TIM4_SMCR 
 %1  15 lshift TIM4_SMCR bis!        \ TIM4_ETP	Bit 15	 Width 1
 %1  14 lshift TIM4_SMCR bis!        \ TIM4_ECE	Bit 14	 Width 1
 %xx  12 lshift TIM4_SMCR bis!        \ TIM4_ETPS	Bit 12	 Width 2
 %xxxx  8 lshift TIM4_SMCR bis!        \ TIM4_ETF	Bit 8	 Width 4
 %1  7 lshift TIM4_SMCR bis!        \ TIM4_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM4_SMCR bis!        \ TIM4_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM4_SMCR bis!        \ TIM4_SMS	Bit 0	 Width 3
\ TIM4_SMCR Register BitField Fetch Words  
: TIM4_ETP@ TIM4_SMCR @ %1  15 lshift and 15 rshift ; 
: TIM4_ECE@ TIM4_SMCR @ %1  14 lshift and 14 rshift ; 
: TIM4_ETPS@ TIM4_SMCR @ %11  12 lshift and 12 rshift ; 
: TIM4_ETF@ TIM4_SMCR @ %1111  8 lshift and 8 rshift ; 
: TIM4_MSM@ TIM4_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM4_TS@ TIM4_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM4_SMS@ TIM4_SMCR @ %111  0 lshift and 0 rshift ; 

TIM4_DIER (read-write)
$0000 CONSTANT RESET_TIM4_DIER 
 %1  14 lshift TIM4_DIER bis!        \ TIM4_TDE	Bit 14	 Width 1
 %1  12 lshift TIM4_DIER bis!        \ TIM4_CC4DE	Bit 12	 Width 1
 %1  11 lshift TIM4_DIER bis!        \ TIM4_CC3DE	Bit 11	 Width 1
 %1  10 lshift TIM4_DIER bis!        \ TIM4_CC2DE	Bit 10	 Width 1
 %1  9 lshift TIM4_DIER bis!        \ TIM4_CC1DE	Bit 9	 Width 1
 %1  8 lshift TIM4_DIER bis!        \ TIM4_UDE	Bit 8	 Width 1
 %1  6 lshift TIM4_DIER bis!        \ TIM4_TIE	Bit 6	 Width 1
 %1  4 lshift TIM4_DIER bis!        \ TIM4_CC4IE	Bit 4	 Width 1
 %1  3 lshift TIM4_DIER bis!        \ TIM4_CC3IE	Bit 3	 Width 1
 %1  2 lshift TIM4_DIER bis!        \ TIM4_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM4_DIER bis!        \ TIM4_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM4_DIER bis!        \ TIM4_UIE	Bit 0	 Width 1
\ TIM4_DIER Register BitField Fetch Words  
: TIM4_TDE@ TIM4_DIER @ %1  14 lshift and 14 rshift ; 
: TIM4_CC4DE@ TIM4_DIER @ %1  12 lshift and 12 rshift ; 
: TIM4_CC3DE@ TIM4_DIER @ %1  11 lshift and 11 rshift ; 
: TIM4_CC2DE@ TIM4_DIER @ %1  10 lshift and 10 rshift ; 
: TIM4_CC1DE@ TIM4_DIER @ %1  9 lshift and 9 rshift ; 
: TIM4_UDE@ TIM4_DIER @ %1  8 lshift and 8 rshift ; 
: TIM4_TIE@ TIM4_DIER @ %1  6 lshift and 6 rshift ; 
: TIM4_CC4IE@ TIM4_DIER @ %1  4 lshift and 4 rshift ; 
: TIM4_CC3IE@ TIM4_DIER @ %1  3 lshift and 3 rshift ; 
: TIM4_CC2IE@ TIM4_DIER @ %1  2 lshift and 2 rshift ; 
: TIM4_CC1IE@ TIM4_DIER @ %1  1 lshift and 1 rshift ; 
: TIM4_UIE@ TIM4_DIER @ %1  0 lshift and 0 rshift ; 

TIM4_SR (read-write)
$0000 CONSTANT RESET_TIM4_SR 
 %1  12 lshift TIM4_SR bis!        \ TIM4_CC4OF	Bit 12	 Width 1
 %1  11 lshift TIM4_SR bis!        \ TIM4_CC3OF	Bit 11	 Width 1
 %1  10 lshift TIM4_SR bis!        \ TIM4_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM4_SR bis!        \ TIM4_CC1OF	Bit 9	 Width 1
 %1  6 lshift TIM4_SR bis!        \ TIM4_TIF	Bit 6	 Width 1
 %1  4 lshift TIM4_SR bis!        \ TIM4_CC4IF	Bit 4	 Width 1
 %1  3 lshift TIM4_SR bis!        \ TIM4_CC3IF	Bit 3	 Width 1
 %1  2 lshift TIM4_SR bis!        \ TIM4_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM4_SR bis!        \ TIM4_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM4_SR bis!        \ TIM4_UIF	Bit 0	 Width 1
\ TIM4_SR Register BitField Fetch Words  
: TIM4_CC4OF@ TIM4_SR @ %1  12 lshift and 12 rshift ; 
: TIM4_CC3OF@ TIM4_SR @ %1  11 lshift and 11 rshift ; 
: TIM4_CC2OF@ TIM4_SR @ %1  10 lshift and 10 rshift ; 
: TIM4_CC1OF@ TIM4_SR @ %1  9 lshift and 9 rshift ; 
: TIM4_TIF@ TIM4_SR @ %1  6 lshift and 6 rshift ; 
: TIM4_CC4IF@ TIM4_SR @ %1  4 lshift and 4 rshift ; 
: TIM4_CC3IF@ TIM4_SR @ %1  3 lshift and 3 rshift ; 
: TIM4_CC2IF@ TIM4_SR @ %1  2 lshift and 2 rshift ; 
: TIM4_CC1IF@ TIM4_SR @ %1  1 lshift and 1 rshift ; 
: TIM4_UIF@ TIM4_SR @ %1  0 lshift and 0 rshift ; 

TIM4_EGR (write-only)
$0000 CONSTANT RESET_TIM4_EGR 
 %1  6 lshift TIM4_EGR bis!        \ TIM4_TG	Bit 6	 Width 1
 %1  4 lshift TIM4_EGR bis!        \ TIM4_CC4G	Bit 4	 Width 1
 %1  3 lshift TIM4_EGR bis!        \ TIM4_CC3G	Bit 3	 Width 1
 %1  2 lshift TIM4_EGR bis!        \ TIM4_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM4_EGR bis!        \ TIM4_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM4_EGR bis!        \ TIM4_UG	Bit 0	 Width 1
\ TIM4_EGR Register BitField Fetch Words  
: TIM4_TG@ TIM4_EGR @ %1  6 lshift and 6 rshift ; 
: TIM4_CC4G@ TIM4_EGR @ %1  4 lshift and 4 rshift ; 
: TIM4_CC3G@ TIM4_EGR @ %1  3 lshift and 3 rshift ; 
: TIM4_CC2G@ TIM4_EGR @ %1  2 lshift and 2 rshift ; 
: TIM4_CC1G@ TIM4_EGR @ %1  1 lshift and 1 rshift ; 
: TIM4_UG@ TIM4_EGR @ %1  0 lshift and 0 rshift ; 

TIM4_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM4_CCMR1_Output 
 %1  15 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC2CE	Bit 15	 Width 1
 %xxx  12 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM4_CCMR1_Output bis!        \ TIM4_CC2S	Bit 8	 Width 2
 %1  7 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC1CE	Bit 7	 Width 1
 %xxx  4 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM4_CCMR1_Output bis!        \ TIM4_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM4_CCMR1_Output bis!        \ TIM4_CC1S	Bit 0	 Width 2
\ TIM4_CCMR1_Output Register BitField Fetch Words  
: TIM4_OC2CE@ TIM4_CCMR1_Output @ %1  15 lshift and 15 rshift ; 
: TIM4_OC2M@ TIM4_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM4_OC2PE@ TIM4_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM4_OC2FE@ TIM4_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM4_CC2S@ TIM4_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM4_OC1CE@ TIM4_CCMR1_Output @ %1  7 lshift and 7 rshift ; 
: TIM4_OC1M@ TIM4_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM4_OC1PE@ TIM4_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM4_OC1FE@ TIM4_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM4_CC1S@ TIM4_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM4_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM4_CCMR1_Input 
 %xxxx  12 lshift TIM4_CCMR1_Input bis!        \ TIM4_IC2F	Bit 12	 Width 4
 %xx  10 lshift TIM4_CCMR1_Input bis!        \ TIM4_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM4_CCMR1_Input bis!        \ TIM4_CC2S	Bit 8	 Width 2
 %xxxx  4 lshift TIM4_CCMR1_Input bis!        \ TIM4_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM4_CCMR1_Input bis!        \ TIM4_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM4_CCMR1_Input bis!        \ TIM4_CC1S	Bit 0	 Width 2
\ TIM4_CCMR1_Input Register BitField Fetch Words  
: TIM4_IC2F@ TIM4_CCMR1_Input @ %1111  12 lshift and 12 rshift ; 
: TIM4_IC2PCS@ TIM4_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM4_CC2S@ TIM4_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM4_IC1F@ TIM4_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM4_ICPCS@ TIM4_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM4_CC1S@ TIM4_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM4_CCMR2_Output (read-write)
$00000000 CONSTANT RESET_TIM4_CCMR2_Output 
 %1  15 lshift TIM4_CCMR2_Output bis!        \ TIM4_O24CE	Bit 15	 Width 1
 %xxx  12 lshift TIM4_CCMR2_Output bis!        \ TIM4_OC4M	Bit 12	 Width 3
 %1  11 lshift TIM4_CCMR2_Output bis!        \ TIM4_OC4PE	Bit 11	 Width 1
 %1  10 lshift TIM4_CCMR2_Output bis!        \ TIM4_OC4FE	Bit 10	 Width 1
 %xx  8 lshift TIM4_CCMR2_Output bis!        \ TIM4_CC4S	Bit 8	 Width 2
 %1  7 lshift TIM4_CCMR2_Output bis!        \ TIM4_OC3CE	Bit 7	 Width 1
 %xxx  4 lshift TIM4_CCMR2_Output bis!        \ TIM4_OC3M	Bit 4	 Width 3
 %1  3 lshift TIM4_CCMR2_Output bis!        \ TIM4_OC3PE	Bit 3	 Width 1
 %1  2 lshift TIM4_CCMR2_Output bis!        \ TIM4_OC3FE	Bit 2	 Width 1
 %xx  0 lshift TIM4_CCMR2_Output bis!        \ TIM4_CC3S	Bit 0	 Width 2
\ TIM4_CCMR2_Output Register BitField Fetch Words  
: TIM4_O24CE@ TIM4_CCMR2_Output @ %1  15 lshift and 15 rshift ; 
: TIM4_OC4M@ TIM4_CCMR2_Output @ %111  12 lshift and 12 rshift ; 
: TIM4_OC4PE@ TIM4_CCMR2_Output @ %1  11 lshift and 11 rshift ; 
: TIM4_OC4FE@ TIM4_CCMR2_Output @ %1  10 lshift and 10 rshift ; 
: TIM4_CC4S@ TIM4_CCMR2_Output @ %11  8 lshift and 8 rshift ; 
: TIM4_OC3CE@ TIM4_CCMR2_Output @ %1  7 lshift and 7 rshift ; 
: TIM4_OC3M@ TIM4_CCMR2_Output @ %111  4 lshift and 4 rshift ; 
: TIM4_OC3PE@ TIM4_CCMR2_Output @ %1  3 lshift and 3 rshift ; 
: TIM4_OC3FE@ TIM4_CCMR2_Output @ %1  2 lshift and 2 rshift ; 
: TIM4_CC3S@ TIM4_CCMR2_Output @ %11  0 lshift and 0 rshift ; 

TIM4_CCMR2_Input (read-write)
$00000000 CONSTANT RESET_TIM4_CCMR2_Input 
 %xxxx  12 lshift TIM4_CCMR2_Input bis!        \ TIM4_IC4F	Bit 12	 Width 4
 %xx  10 lshift TIM4_CCMR2_Input bis!        \ TIM4_IC4PSC	Bit 10	 Width 2
 %xx  8 lshift TIM4_CCMR2_Input bis!        \ TIM4_CC4S	Bit 8	 Width 2
 %xxxx  4 lshift TIM4_CCMR2_Input bis!        \ TIM4_IC3F	Bit 4	 Width 4
 %xx  2 lshift TIM4_CCMR2_Input bis!        \ TIM4_IC3PSC	Bit 2	 Width 2
 %xx  0 lshift TIM4_CCMR2_Input bis!        \ TIM4_CC3S	Bit 0	 Width 2
\ TIM4_CCMR2_Input Register BitField Fetch Words  
: TIM4_IC4F@ TIM4_CCMR2_Input @ %1111  12 lshift and 12 rshift ; 
: TIM4_IC4PSC@ TIM4_CCMR2_Input @ %11  10 lshift and 10 rshift ; 
: TIM4_CC4S@ TIM4_CCMR2_Input @ %11  8 lshift and 8 rshift ; 
: TIM4_IC3F@ TIM4_CCMR2_Input @ %1111  4 lshift and 4 rshift ; 
: TIM4_IC3PSC@ TIM4_CCMR2_Input @ %11  2 lshift and 2 rshift ; 
: TIM4_CC3S@ TIM4_CCMR2_Input @ %11  0 lshift and 0 rshift ; 

TIM4_CCER (read-write)
$0000 CONSTANT RESET_TIM4_CCER 
 %1  15 lshift TIM4_CCER bis!        \ TIM4_CC4NP	Bit 15	 Width 1
 %1  13 lshift TIM4_CCER bis!        \ TIM4_CC4P	Bit 13	 Width 1
 %1  12 lshift TIM4_CCER bis!        \ TIM4_CC4E	Bit 12	 Width 1
 %1  11 lshift TIM4_CCER bis!        \ TIM4_CC3NP	Bit 11	 Width 1
 %1  9 lshift TIM4_CCER bis!        \ TIM4_CC3P	Bit 9	 Width 1
 %1  8 lshift TIM4_CCER bis!        \ TIM4_CC3E	Bit 8	 Width 1
 %1  7 lshift TIM4_CCER bis!        \ TIM4_CC2NP	Bit 7	 Width 1
 %1  5 lshift TIM4_CCER bis!        \ TIM4_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM4_CCER bis!        \ TIM4_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM4_CCER bis!        \ TIM4_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM4_CCER bis!        \ TIM4_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM4_CCER bis!        \ TIM4_CC1E	Bit 0	 Width 1
\ TIM4_CCER Register BitField Fetch Words  
: TIM4_CC4NP@ TIM4_CCER @ %1  15 lshift and 15 rshift ; 
: TIM4_CC4P@ TIM4_CCER @ %1  13 lshift and 13 rshift ; 
: TIM4_CC4E@ TIM4_CCER @ %1  12 lshift and 12 rshift ; 
: TIM4_CC3NP@ TIM4_CCER @ %1  11 lshift and 11 rshift ; 
: TIM4_CC3P@ TIM4_CCER @ %1  9 lshift and 9 rshift ; 
: TIM4_CC3E@ TIM4_CCER @ %1  8 lshift and 8 rshift ; 
: TIM4_CC2NP@ TIM4_CCER @ %1  7 lshift and 7 rshift ; 
: TIM4_CC2P@ TIM4_CCER @ %1  5 lshift and 5 rshift ; 
: TIM4_CC2E@ TIM4_CCER @ %1  4 lshift and 4 rshift ; 
: TIM4_CC1NP@ TIM4_CCER @ %1  3 lshift and 3 rshift ; 
: TIM4_CC1P@ TIM4_CCER @ %1  1 lshift and 1 rshift ; 
: TIM4_CC1E@ TIM4_CCER @ %1  0 lshift and 0 rshift ; 

TIM4_CNT (read-write)
$00000000 CONSTANT RESET_TIM4_CNT 
 %xxxxxxxxxxxxxxxx  16 lshift TIM4_CNT bis!        \ TIM4_CNT_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_CNT bis!        \ TIM4_CNT_L	Bit 0	 Width 16
\ TIM4_CNT Register BitField Fetch Words  
: TIM4_CNT_H@ TIM4_CNT @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM4_CNT_L@ TIM4_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM4_PSC (read-write)
$0000 CONSTANT RESET_TIM4_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_PSC bis!        \ TIM4_PSC	Bit 0	 Width 16
\ TIM4_PSC Register BitField Fetch Words  
: TIM4_PSC@ TIM4_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM4_ARR (read-write)
$00000000 CONSTANT RESET_TIM4_ARR 
 %xxxxxxxxxxxxxxxx  16 lshift TIM4_ARR bis!        \ TIM4_ARR_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_ARR bis!        \ TIM4_ARR_L	Bit 0	 Width 16
\ TIM4_ARR Register BitField Fetch Words  
: TIM4_ARR_H@ TIM4_ARR @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM4_ARR_L@ TIM4_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM4_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM4_CCR1 
 %xxxxxxxxxxxxxxxx  16 lshift TIM4_CCR1 bis!        \ TIM4_CCR1_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_CCR1 bis!        \ TIM4_CCR1_L	Bit 0	 Width 16
\ TIM4_CCR1 Register BitField Fetch Words  
: TIM4_CCR1_H@ TIM4_CCR1 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM4_CCR1_L@ TIM4_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM4_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM4_CCR2 
 %xxxxxxxxxxxxxxxx  16 lshift TIM4_CCR2 bis!        \ TIM4_CCR2_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_CCR2 bis!        \ TIM4_CCR2_L	Bit 0	 Width 16
\ TIM4_CCR2 Register BitField Fetch Words  
: TIM4_CCR2_H@ TIM4_CCR2 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM4_CCR2_L@ TIM4_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM4_CCR3 (read-write)
$00000000 CONSTANT RESET_TIM4_CCR3 
 %xxxxxxxxxxxxxxxx  16 lshift TIM4_CCR3 bis!        \ TIM4_CCR3_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_CCR3 bis!        \ TIM4_CCR3_L	Bit 0	 Width 16
\ TIM4_CCR3 Register BitField Fetch Words  
: TIM4_CCR3_H@ TIM4_CCR3 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM4_CCR3_L@ TIM4_CCR3 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM4_CCR4 (read-write)
$00000000 CONSTANT RESET_TIM4_CCR4 
 %xxxxxxxxxxxxxxxx  16 lshift TIM4_CCR4 bis!        \ TIM4_CCR4_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_CCR4 bis!        \ TIM4_CCR4_L	Bit 0	 Width 16
\ TIM4_CCR4 Register BitField Fetch Words  
: TIM4_CCR4_H@ TIM4_CCR4 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM4_CCR4_L@ TIM4_CCR4 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM4_DCR (read-write)
$0000 CONSTANT RESET_TIM4_DCR 
 %xxxxx  8 lshift TIM4_DCR bis!        \ TIM4_DBL	Bit 8	 Width 5
 %xxxxx  0 lshift TIM4_DCR bis!        \ TIM4_DBA	Bit 0	 Width 5
\ TIM4_DCR Register BitField Fetch Words  
: TIM4_DBL@ TIM4_DCR @ %11111  8 lshift and 8 rshift ; 
: TIM4_DBA@ TIM4_DCR @ %11111  0 lshift and 0 rshift ; 

TIM4_DMAR (read-write)
$0000 CONSTANT RESET_TIM4_DMAR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM4_DMAR bis!        \ TIM4_DMAB	Bit 0	 Width 16
\ TIM4_DMAR Register BitField Fetch Words  
: TIM4_DMAB@ TIM4_DMAR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM5 ###################################
TIM5_CR1 (read-write)
$0000 CONSTANT RESET_TIM5_CR1 
 %xx  8 lshift TIM5_CR1 bis!        \ TIM5_CKD	Bit 8	 Width 2
 %1  7 lshift TIM5_CR1 bis!        \ TIM5_ARPE	Bit 7	 Width 1
 %xx  5 lshift TIM5_CR1 bis!        \ TIM5_CMS	Bit 5	 Width 2
 %1  4 lshift TIM5_CR1 bis!        \ TIM5_DIR	Bit 4	 Width 1
 %1  3 lshift TIM5_CR1 bis!        \ TIM5_OPM	Bit 3	 Width 1
 %1  2 lshift TIM5_CR1 bis!        \ TIM5_URS	Bit 2	 Width 1
 %1  1 lshift TIM5_CR1 bis!        \ TIM5_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM5_CR1 bis!        \ TIM5_CEN	Bit 0	 Width 1
\ TIM5_CR1 Register BitField Fetch Words  
: TIM5_CKD@ TIM5_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM5_ARPE@ TIM5_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM5_CMS@ TIM5_CR1 @ %11  5 lshift and 5 rshift ; 
: TIM5_DIR@ TIM5_CR1 @ %1  4 lshift and 4 rshift ; 
: TIM5_OPM@ TIM5_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM5_URS@ TIM5_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM5_UDIS@ TIM5_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM5_CEN@ TIM5_CR1 @ %1  0 lshift and 0 rshift ; 

TIM5_CR2 (read-write)
$0000 CONSTANT RESET_TIM5_CR2 
 %1  7 lshift TIM5_CR2 bis!        \ TIM5_TI1S	Bit 7	 Width 1
 %xxx  4 lshift TIM5_CR2 bis!        \ TIM5_MMS	Bit 4	 Width 3
 %1  3 lshift TIM5_CR2 bis!        \ TIM5_CCDS	Bit 3	 Width 1
\ TIM5_CR2 Register BitField Fetch Words  
: TIM5_TI1S@ TIM5_CR2 @ %1  7 lshift and 7 rshift ; 
: TIM5_MMS@ TIM5_CR2 @ %111  4 lshift and 4 rshift ; 
: TIM5_CCDS@ TIM5_CR2 @ %1  3 lshift and 3 rshift ; 

TIM5_SMCR (read-write)
$0000 CONSTANT RESET_TIM5_SMCR 
 %1  15 lshift TIM5_SMCR bis!        \ TIM5_ETP	Bit 15	 Width 1
 %1  14 lshift TIM5_SMCR bis!        \ TIM5_ECE	Bit 14	 Width 1
 %xx  12 lshift TIM5_SMCR bis!        \ TIM5_ETPS	Bit 12	 Width 2
 %xxxx  8 lshift TIM5_SMCR bis!        \ TIM5_ETF	Bit 8	 Width 4
 %1  7 lshift TIM5_SMCR bis!        \ TIM5_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM5_SMCR bis!        \ TIM5_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM5_SMCR bis!        \ TIM5_SMS	Bit 0	 Width 3
\ TIM5_SMCR Register BitField Fetch Words  
: TIM5_ETP@ TIM5_SMCR @ %1  15 lshift and 15 rshift ; 
: TIM5_ECE@ TIM5_SMCR @ %1  14 lshift and 14 rshift ; 
: TIM5_ETPS@ TIM5_SMCR @ %11  12 lshift and 12 rshift ; 
: TIM5_ETF@ TIM5_SMCR @ %1111  8 lshift and 8 rshift ; 
: TIM5_MSM@ TIM5_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM5_TS@ TIM5_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM5_SMS@ TIM5_SMCR @ %111  0 lshift and 0 rshift ; 

TIM5_DIER (read-write)
$0000 CONSTANT RESET_TIM5_DIER 
 %1  14 lshift TIM5_DIER bis!        \ TIM5_TDE	Bit 14	 Width 1
 %1  12 lshift TIM5_DIER bis!        \ TIM5_CC4DE	Bit 12	 Width 1
 %1  11 lshift TIM5_DIER bis!        \ TIM5_CC3DE	Bit 11	 Width 1
 %1  10 lshift TIM5_DIER bis!        \ TIM5_CC2DE	Bit 10	 Width 1
 %1  9 lshift TIM5_DIER bis!        \ TIM5_CC1DE	Bit 9	 Width 1
 %1  8 lshift TIM5_DIER bis!        \ TIM5_UDE	Bit 8	 Width 1
 %1  6 lshift TIM5_DIER bis!        \ TIM5_TIE	Bit 6	 Width 1
 %1  4 lshift TIM5_DIER bis!        \ TIM5_CC4IE	Bit 4	 Width 1
 %1  3 lshift TIM5_DIER bis!        \ TIM5_CC3IE	Bit 3	 Width 1
 %1  2 lshift TIM5_DIER bis!        \ TIM5_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM5_DIER bis!        \ TIM5_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM5_DIER bis!        \ TIM5_UIE	Bit 0	 Width 1
\ TIM5_DIER Register BitField Fetch Words  
: TIM5_TDE@ TIM5_DIER @ %1  14 lshift and 14 rshift ; 
: TIM5_CC4DE@ TIM5_DIER @ %1  12 lshift and 12 rshift ; 
: TIM5_CC3DE@ TIM5_DIER @ %1  11 lshift and 11 rshift ; 
: TIM5_CC2DE@ TIM5_DIER @ %1  10 lshift and 10 rshift ; 
: TIM5_CC1DE@ TIM5_DIER @ %1  9 lshift and 9 rshift ; 
: TIM5_UDE@ TIM5_DIER @ %1  8 lshift and 8 rshift ; 
: TIM5_TIE@ TIM5_DIER @ %1  6 lshift and 6 rshift ; 
: TIM5_CC4IE@ TIM5_DIER @ %1  4 lshift and 4 rshift ; 
: TIM5_CC3IE@ TIM5_DIER @ %1  3 lshift and 3 rshift ; 
: TIM5_CC2IE@ TIM5_DIER @ %1  2 lshift and 2 rshift ; 
: TIM5_CC1IE@ TIM5_DIER @ %1  1 lshift and 1 rshift ; 
: TIM5_UIE@ TIM5_DIER @ %1  0 lshift and 0 rshift ; 

TIM5_SR (read-write)
$0000 CONSTANT RESET_TIM5_SR 
 %1  12 lshift TIM5_SR bis!        \ TIM5_CC4OF	Bit 12	 Width 1
 %1  11 lshift TIM5_SR bis!        \ TIM5_CC3OF	Bit 11	 Width 1
 %1  10 lshift TIM5_SR bis!        \ TIM5_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM5_SR bis!        \ TIM5_CC1OF	Bit 9	 Width 1
 %1  6 lshift TIM5_SR bis!        \ TIM5_TIF	Bit 6	 Width 1
 %1  4 lshift TIM5_SR bis!        \ TIM5_CC4IF	Bit 4	 Width 1
 %1  3 lshift TIM5_SR bis!        \ TIM5_CC3IF	Bit 3	 Width 1
 %1  2 lshift TIM5_SR bis!        \ TIM5_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM5_SR bis!        \ TIM5_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM5_SR bis!        \ TIM5_UIF	Bit 0	 Width 1
\ TIM5_SR Register BitField Fetch Words  
: TIM5_CC4OF@ TIM5_SR @ %1  12 lshift and 12 rshift ; 
: TIM5_CC3OF@ TIM5_SR @ %1  11 lshift and 11 rshift ; 
: TIM5_CC2OF@ TIM5_SR @ %1  10 lshift and 10 rshift ; 
: TIM5_CC1OF@ TIM5_SR @ %1  9 lshift and 9 rshift ; 
: TIM5_TIF@ TIM5_SR @ %1  6 lshift and 6 rshift ; 
: TIM5_CC4IF@ TIM5_SR @ %1  4 lshift and 4 rshift ; 
: TIM5_CC3IF@ TIM5_SR @ %1  3 lshift and 3 rshift ; 
: TIM5_CC2IF@ TIM5_SR @ %1  2 lshift and 2 rshift ; 
: TIM5_CC1IF@ TIM5_SR @ %1  1 lshift and 1 rshift ; 
: TIM5_UIF@ TIM5_SR @ %1  0 lshift and 0 rshift ; 

TIM5_EGR (write-only)
$0000 CONSTANT RESET_TIM5_EGR 
 %1  6 lshift TIM5_EGR bis!        \ TIM5_TG	Bit 6	 Width 1
 %1  4 lshift TIM5_EGR bis!        \ TIM5_CC4G	Bit 4	 Width 1
 %1  3 lshift TIM5_EGR bis!        \ TIM5_CC3G	Bit 3	 Width 1
 %1  2 lshift TIM5_EGR bis!        \ TIM5_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM5_EGR bis!        \ TIM5_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM5_EGR bis!        \ TIM5_UG	Bit 0	 Width 1
\ TIM5_EGR Register BitField Fetch Words  
: TIM5_TG@ TIM5_EGR @ %1  6 lshift and 6 rshift ; 
: TIM5_CC4G@ TIM5_EGR @ %1  4 lshift and 4 rshift ; 
: TIM5_CC3G@ TIM5_EGR @ %1  3 lshift and 3 rshift ; 
: TIM5_CC2G@ TIM5_EGR @ %1  2 lshift and 2 rshift ; 
: TIM5_CC1G@ TIM5_EGR @ %1  1 lshift and 1 rshift ; 
: TIM5_UG@ TIM5_EGR @ %1  0 lshift and 0 rshift ; 

TIM5_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM5_CCMR1_Output 
 %1  15 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC2CE	Bit 15	 Width 1
 %xxx  12 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM5_CCMR1_Output bis!        \ TIM5_CC2S	Bit 8	 Width 2
 %1  7 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC1CE	Bit 7	 Width 1
 %xxx  4 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM5_CCMR1_Output bis!        \ TIM5_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM5_CCMR1_Output bis!        \ TIM5_CC1S	Bit 0	 Width 2
\ TIM5_CCMR1_Output Register BitField Fetch Words  
: TIM5_OC2CE@ TIM5_CCMR1_Output @ %1  15 lshift and 15 rshift ; 
: TIM5_OC2M@ TIM5_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM5_OC2PE@ TIM5_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM5_OC2FE@ TIM5_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM5_CC2S@ TIM5_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM5_OC1CE@ TIM5_CCMR1_Output @ %1  7 lshift and 7 rshift ; 
: TIM5_OC1M@ TIM5_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM5_OC1PE@ TIM5_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM5_OC1FE@ TIM5_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM5_CC1S@ TIM5_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM5_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM5_CCMR1_Input 
 %xxxx  12 lshift TIM5_CCMR1_Input bis!        \ TIM5_IC2F	Bit 12	 Width 4
 %xx  10 lshift TIM5_CCMR1_Input bis!        \ TIM5_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM5_CCMR1_Input bis!        \ TIM5_CC2S	Bit 8	 Width 2
 %xxxx  4 lshift TIM5_CCMR1_Input bis!        \ TIM5_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM5_CCMR1_Input bis!        \ TIM5_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM5_CCMR1_Input bis!        \ TIM5_CC1S	Bit 0	 Width 2
\ TIM5_CCMR1_Input Register BitField Fetch Words  
: TIM5_IC2F@ TIM5_CCMR1_Input @ %1111  12 lshift and 12 rshift ; 
: TIM5_IC2PCS@ TIM5_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM5_CC2S@ TIM5_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM5_IC1F@ TIM5_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM5_ICPCS@ TIM5_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM5_CC1S@ TIM5_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM5_CCMR2_Output (read-write)
$00000000 CONSTANT RESET_TIM5_CCMR2_Output 
 %1  15 lshift TIM5_CCMR2_Output bis!        \ TIM5_O24CE	Bit 15	 Width 1
 %xxx  12 lshift TIM5_CCMR2_Output bis!        \ TIM5_OC4M	Bit 12	 Width 3
 %1  11 lshift TIM5_CCMR2_Output bis!        \ TIM5_OC4PE	Bit 11	 Width 1
 %1  10 lshift TIM5_CCMR2_Output bis!        \ TIM5_OC4FE	Bit 10	 Width 1
 %xx  8 lshift TIM5_CCMR2_Output bis!        \ TIM5_CC4S	Bit 8	 Width 2
 %1  7 lshift TIM5_CCMR2_Output bis!        \ TIM5_OC3CE	Bit 7	 Width 1
 %xxx  4 lshift TIM5_CCMR2_Output bis!        \ TIM5_OC3M	Bit 4	 Width 3
 %1  3 lshift TIM5_CCMR2_Output bis!        \ TIM5_OC3PE	Bit 3	 Width 1
 %1  2 lshift TIM5_CCMR2_Output bis!        \ TIM5_OC3FE	Bit 2	 Width 1
 %xx  0 lshift TIM5_CCMR2_Output bis!        \ TIM5_CC3S	Bit 0	 Width 2
\ TIM5_CCMR2_Output Register BitField Fetch Words  
: TIM5_O24CE@ TIM5_CCMR2_Output @ %1  15 lshift and 15 rshift ; 
: TIM5_OC4M@ TIM5_CCMR2_Output @ %111  12 lshift and 12 rshift ; 
: TIM5_OC4PE@ TIM5_CCMR2_Output @ %1  11 lshift and 11 rshift ; 
: TIM5_OC4FE@ TIM5_CCMR2_Output @ %1  10 lshift and 10 rshift ; 
: TIM5_CC4S@ TIM5_CCMR2_Output @ %11  8 lshift and 8 rshift ; 
: TIM5_OC3CE@ TIM5_CCMR2_Output @ %1  7 lshift and 7 rshift ; 
: TIM5_OC3M@ TIM5_CCMR2_Output @ %111  4 lshift and 4 rshift ; 
: TIM5_OC3PE@ TIM5_CCMR2_Output @ %1  3 lshift and 3 rshift ; 
: TIM5_OC3FE@ TIM5_CCMR2_Output @ %1  2 lshift and 2 rshift ; 
: TIM5_CC3S@ TIM5_CCMR2_Output @ %11  0 lshift and 0 rshift ; 

TIM5_CCMR2_Input (read-write)
$00000000 CONSTANT RESET_TIM5_CCMR2_Input 
 %xxxx  12 lshift TIM5_CCMR2_Input bis!        \ TIM5_IC4F	Bit 12	 Width 4
 %xx  10 lshift TIM5_CCMR2_Input bis!        \ TIM5_IC4PSC	Bit 10	 Width 2
 %xx  8 lshift TIM5_CCMR2_Input bis!        \ TIM5_CC4S	Bit 8	 Width 2
 %xxxx  4 lshift TIM5_CCMR2_Input bis!        \ TIM5_IC3F	Bit 4	 Width 4
 %xx  2 lshift TIM5_CCMR2_Input bis!        \ TIM5_IC3PSC	Bit 2	 Width 2
 %xx  0 lshift TIM5_CCMR2_Input bis!        \ TIM5_CC3S	Bit 0	 Width 2
\ TIM5_CCMR2_Input Register BitField Fetch Words  
: TIM5_IC4F@ TIM5_CCMR2_Input @ %1111  12 lshift and 12 rshift ; 
: TIM5_IC4PSC@ TIM5_CCMR2_Input @ %11  10 lshift and 10 rshift ; 
: TIM5_CC4S@ TIM5_CCMR2_Input @ %11  8 lshift and 8 rshift ; 
: TIM5_IC3F@ TIM5_CCMR2_Input @ %1111  4 lshift and 4 rshift ; 
: TIM5_IC3PSC@ TIM5_CCMR2_Input @ %11  2 lshift and 2 rshift ; 
: TIM5_CC3S@ TIM5_CCMR2_Input @ %11  0 lshift and 0 rshift ; 

TIM5_CCER (read-write)
$0000 CONSTANT RESET_TIM5_CCER 
 %1  15 lshift TIM5_CCER bis!        \ TIM5_CC4NP	Bit 15	 Width 1
 %1  13 lshift TIM5_CCER bis!        \ TIM5_CC4P	Bit 13	 Width 1
 %1  12 lshift TIM5_CCER bis!        \ TIM5_CC4E	Bit 12	 Width 1
 %1  11 lshift TIM5_CCER bis!        \ TIM5_CC3NP	Bit 11	 Width 1
 %1  9 lshift TIM5_CCER bis!        \ TIM5_CC3P	Bit 9	 Width 1
 %1  8 lshift TIM5_CCER bis!        \ TIM5_CC3E	Bit 8	 Width 1
 %1  7 lshift TIM5_CCER bis!        \ TIM5_CC2NP	Bit 7	 Width 1
 %1  5 lshift TIM5_CCER bis!        \ TIM5_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM5_CCER bis!        \ TIM5_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM5_CCER bis!        \ TIM5_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM5_CCER bis!        \ TIM5_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM5_CCER bis!        \ TIM5_CC1E	Bit 0	 Width 1
\ TIM5_CCER Register BitField Fetch Words  
: TIM5_CC4NP@ TIM5_CCER @ %1  15 lshift and 15 rshift ; 
: TIM5_CC4P@ TIM5_CCER @ %1  13 lshift and 13 rshift ; 
: TIM5_CC4E@ TIM5_CCER @ %1  12 lshift and 12 rshift ; 
: TIM5_CC3NP@ TIM5_CCER @ %1  11 lshift and 11 rshift ; 
: TIM5_CC3P@ TIM5_CCER @ %1  9 lshift and 9 rshift ; 
: TIM5_CC3E@ TIM5_CCER @ %1  8 lshift and 8 rshift ; 
: TIM5_CC2NP@ TIM5_CCER @ %1  7 lshift and 7 rshift ; 
: TIM5_CC2P@ TIM5_CCER @ %1  5 lshift and 5 rshift ; 
: TIM5_CC2E@ TIM5_CCER @ %1  4 lshift and 4 rshift ; 
: TIM5_CC1NP@ TIM5_CCER @ %1  3 lshift and 3 rshift ; 
: TIM5_CC1P@ TIM5_CCER @ %1  1 lshift and 1 rshift ; 
: TIM5_CC1E@ TIM5_CCER @ %1  0 lshift and 0 rshift ; 

TIM5_CNT (read-write)
$00000000 CONSTANT RESET_TIM5_CNT 
 %xxxxxxxxxxxxxxxx  16 lshift TIM5_CNT bis!        \ TIM5_CNT_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_CNT bis!        \ TIM5_CNT_L	Bit 0	 Width 16
\ TIM5_CNT Register BitField Fetch Words  
: TIM5_CNT_H@ TIM5_CNT @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM5_CNT_L@ TIM5_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_PSC (read-write)
$0000 CONSTANT RESET_TIM5_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_PSC bis!        \ TIM5_PSC	Bit 0	 Width 16
\ TIM5_PSC Register BitField Fetch Words  
: TIM5_PSC@ TIM5_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_ARR (read-write)
$00000000 CONSTANT RESET_TIM5_ARR 
 %xxxxxxxxxxxxxxxx  16 lshift TIM5_ARR bis!        \ TIM5_ARR_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_ARR bis!        \ TIM5_ARR_L	Bit 0	 Width 16
\ TIM5_ARR Register BitField Fetch Words  
: TIM5_ARR_H@ TIM5_ARR @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM5_ARR_L@ TIM5_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM5_CCR1 
 %xxxxxxxxxxxxxxxx  16 lshift TIM5_CCR1 bis!        \ TIM5_CCR1_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_CCR1 bis!        \ TIM5_CCR1_L	Bit 0	 Width 16
\ TIM5_CCR1 Register BitField Fetch Words  
: TIM5_CCR1_H@ TIM5_CCR1 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM5_CCR1_L@ TIM5_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM5_CCR2 
 %xxxxxxxxxxxxxxxx  16 lshift TIM5_CCR2 bis!        \ TIM5_CCR2_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_CCR2 bis!        \ TIM5_CCR2_L	Bit 0	 Width 16
\ TIM5_CCR2 Register BitField Fetch Words  
: TIM5_CCR2_H@ TIM5_CCR2 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM5_CCR2_L@ TIM5_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_CCR3 (read-write)
$00000000 CONSTANT RESET_TIM5_CCR3 
 %xxxxxxxxxxxxxxxx  16 lshift TIM5_CCR3 bis!        \ TIM5_CCR3_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_CCR3 bis!        \ TIM5_CCR3_L	Bit 0	 Width 16
\ TIM5_CCR3 Register BitField Fetch Words  
: TIM5_CCR3_H@ TIM5_CCR3 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM5_CCR3_L@ TIM5_CCR3 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_CCR4 (read-write)
$00000000 CONSTANT RESET_TIM5_CCR4 
 %xxxxxxxxxxxxxxxx  16 lshift TIM5_CCR4 bis!        \ TIM5_CCR4_H	Bit 16	 Width 16
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_CCR4 bis!        \ TIM5_CCR4_L	Bit 0	 Width 16
\ TIM5_CCR4 Register BitField Fetch Words  
: TIM5_CCR4_H@ TIM5_CCR4 @ %1111111111111111  16 lshift and 16 rshift ; 
: TIM5_CCR4_L@ TIM5_CCR4 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_DCR (read-write)
$0000 CONSTANT RESET_TIM5_DCR 
 %xxxxx  8 lshift TIM5_DCR bis!        \ TIM5_DBL	Bit 8	 Width 5
 %xxxxx  0 lshift TIM5_DCR bis!        \ TIM5_DBA	Bit 0	 Width 5
\ TIM5_DCR Register BitField Fetch Words  
: TIM5_DBL@ TIM5_DCR @ %11111  8 lshift and 8 rshift ; 
: TIM5_DBA@ TIM5_DCR @ %11111  0 lshift and 0 rshift ; 

TIM5_DMAR (read-write)
$0000 CONSTANT RESET_TIM5_DMAR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM5_DMAR bis!        \ TIM5_DMAB	Bit 0	 Width 16
\ TIM5_DMAR Register BitField Fetch Words  
: TIM5_DMAB@ TIM5_DMAR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM5_OR (read-write)
$0000 CONSTANT RESET_TIM5_OR 
 %xx  6 lshift TIM5_OR bis!        \ TIM5_IT4_RMP	Bit 6	 Width 2
\ TIM5_OR Register BitField Fetch Words  
: TIM5_IT4_RMP@ TIM5_OR @ %11  6 lshift and 6 rshift ; 

                    
################################### TIM9 ###################################
TIM9_CR1 (read-write)
$0000 CONSTANT RESET_TIM9_CR1 
 %xx  8 lshift TIM9_CR1 bis!        \ TIM9_CKD	Bit 8	 Width 2
 %1  7 lshift TIM9_CR1 bis!        \ TIM9_ARPE	Bit 7	 Width 1
 %1  3 lshift TIM9_CR1 bis!        \ TIM9_OPM	Bit 3	 Width 1
 %1  2 lshift TIM9_CR1 bis!        \ TIM9_URS	Bit 2	 Width 1
 %1  1 lshift TIM9_CR1 bis!        \ TIM9_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM9_CR1 bis!        \ TIM9_CEN	Bit 0	 Width 1
\ TIM9_CR1 Register BitField Fetch Words  
: TIM9_CKD@ TIM9_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM9_ARPE@ TIM9_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM9_OPM@ TIM9_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM9_URS@ TIM9_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM9_UDIS@ TIM9_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM9_CEN@ TIM9_CR1 @ %1  0 lshift and 0 rshift ; 

TIM9_CR2 (read-write)
$0000 CONSTANT RESET_TIM9_CR2 
 %xxx  4 lshift TIM9_CR2 bis!        \ TIM9_MMS	Bit 4	 Width 3
\ TIM9_CR2 Register BitField Fetch Words  
: TIM9_MMS@ TIM9_CR2 @ %111  4 lshift and 4 rshift ; 

TIM9_SMCR (read-write)
$0000 CONSTANT RESET_TIM9_SMCR 
 %1  7 lshift TIM9_SMCR bis!        \ TIM9_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM9_SMCR bis!        \ TIM9_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM9_SMCR bis!        \ TIM9_SMS	Bit 0	 Width 3
\ TIM9_SMCR Register BitField Fetch Words  
: TIM9_MSM@ TIM9_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM9_TS@ TIM9_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM9_SMS@ TIM9_SMCR @ %111  0 lshift and 0 rshift ; 

TIM9_DIER (read-write)
$0000 CONSTANT RESET_TIM9_DIER 
 %1  6 lshift TIM9_DIER bis!        \ TIM9_TIE	Bit 6	 Width 1
 %1  2 lshift TIM9_DIER bis!        \ TIM9_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM9_DIER bis!        \ TIM9_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM9_DIER bis!        \ TIM9_UIE	Bit 0	 Width 1
\ TIM9_DIER Register BitField Fetch Words  
: TIM9_TIE@ TIM9_DIER @ %1  6 lshift and 6 rshift ; 
: TIM9_CC2IE@ TIM9_DIER @ %1  2 lshift and 2 rshift ; 
: TIM9_CC1IE@ TIM9_DIER @ %1  1 lshift and 1 rshift ; 
: TIM9_UIE@ TIM9_DIER @ %1  0 lshift and 0 rshift ; 

TIM9_SR (read-write)
$0000 CONSTANT RESET_TIM9_SR 
 %1  10 lshift TIM9_SR bis!        \ TIM9_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM9_SR bis!        \ TIM9_CC1OF	Bit 9	 Width 1
 %1  6 lshift TIM9_SR bis!        \ TIM9_TIF	Bit 6	 Width 1
 %1  2 lshift TIM9_SR bis!        \ TIM9_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM9_SR bis!        \ TIM9_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM9_SR bis!        \ TIM9_UIF	Bit 0	 Width 1
\ TIM9_SR Register BitField Fetch Words  
: TIM9_CC2OF@ TIM9_SR @ %1  10 lshift and 10 rshift ; 
: TIM9_CC1OF@ TIM9_SR @ %1  9 lshift and 9 rshift ; 
: TIM9_TIF@ TIM9_SR @ %1  6 lshift and 6 rshift ; 
: TIM9_CC2IF@ TIM9_SR @ %1  2 lshift and 2 rshift ; 
: TIM9_CC1IF@ TIM9_SR @ %1  1 lshift and 1 rshift ; 
: TIM9_UIF@ TIM9_SR @ %1  0 lshift and 0 rshift ; 

TIM9_EGR (write-only)
$0000 CONSTANT RESET_TIM9_EGR 
 %1  6 lshift TIM9_EGR bis!        \ TIM9_TG	Bit 6	 Width 1
 %1  2 lshift TIM9_EGR bis!        \ TIM9_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM9_EGR bis!        \ TIM9_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM9_EGR bis!        \ TIM9_UG	Bit 0	 Width 1
\ TIM9_EGR Register BitField Fetch Words  
: TIM9_TG@ TIM9_EGR @ %1  6 lshift and 6 rshift ; 
: TIM9_CC2G@ TIM9_EGR @ %1  2 lshift and 2 rshift ; 
: TIM9_CC1G@ TIM9_EGR @ %1  1 lshift and 1 rshift ; 
: TIM9_UG@ TIM9_EGR @ %1  0 lshift and 0 rshift ; 

TIM9_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM9_CCMR1_Output 
 %xxx  12 lshift TIM9_CCMR1_Output bis!        \ TIM9_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM9_CCMR1_Output bis!        \ TIM9_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM9_CCMR1_Output bis!        \ TIM9_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM9_CCMR1_Output bis!        \ TIM9_CC2S	Bit 8	 Width 2
 %xxx  4 lshift TIM9_CCMR1_Output bis!        \ TIM9_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM9_CCMR1_Output bis!        \ TIM9_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM9_CCMR1_Output bis!        \ TIM9_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM9_CCMR1_Output bis!        \ TIM9_CC1S	Bit 0	 Width 2
\ TIM9_CCMR1_Output Register BitField Fetch Words  
: TIM9_OC2M@ TIM9_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM9_OC2PE@ TIM9_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM9_OC2FE@ TIM9_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM9_CC2S@ TIM9_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM9_OC1M@ TIM9_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM9_OC1PE@ TIM9_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM9_OC1FE@ TIM9_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM9_CC1S@ TIM9_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM9_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM9_CCMR1_Input 
 %xxx  12 lshift TIM9_CCMR1_Input bis!        \ TIM9_IC2F	Bit 12	 Width 3
 %xx  10 lshift TIM9_CCMR1_Input bis!        \ TIM9_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM9_CCMR1_Input bis!        \ TIM9_CC2S	Bit 8	 Width 2
 %xxx  4 lshift TIM9_CCMR1_Input bis!        \ TIM9_IC1F	Bit 4	 Width 3
 %xx  2 lshift TIM9_CCMR1_Input bis!        \ TIM9_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM9_CCMR1_Input bis!        \ TIM9_CC1S	Bit 0	 Width 2
\ TIM9_CCMR1_Input Register BitField Fetch Words  
: TIM9_IC2F@ TIM9_CCMR1_Input @ %111  12 lshift and 12 rshift ; 
: TIM9_IC2PCS@ TIM9_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM9_CC2S@ TIM9_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM9_IC1F@ TIM9_CCMR1_Input @ %111  4 lshift and 4 rshift ; 
: TIM9_ICPCS@ TIM9_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM9_CC1S@ TIM9_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM9_CCER (read-write)
$0000 CONSTANT RESET_TIM9_CCER 
 %1  7 lshift TIM9_CCER bis!        \ TIM9_CC2NP	Bit 7	 Width 1
 %1  5 lshift TIM9_CCER bis!        \ TIM9_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM9_CCER bis!        \ TIM9_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM9_CCER bis!        \ TIM9_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM9_CCER bis!        \ TIM9_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM9_CCER bis!        \ TIM9_CC1E	Bit 0	 Width 1
\ TIM9_CCER Register BitField Fetch Words  
: TIM9_CC2NP@ TIM9_CCER @ %1  7 lshift and 7 rshift ; 
: TIM9_CC2P@ TIM9_CCER @ %1  5 lshift and 5 rshift ; 
: TIM9_CC2E@ TIM9_CCER @ %1  4 lshift and 4 rshift ; 
: TIM9_CC1NP@ TIM9_CCER @ %1  3 lshift and 3 rshift ; 
: TIM9_CC1P@ TIM9_CCER @ %1  1 lshift and 1 rshift ; 
: TIM9_CC1E@ TIM9_CCER @ %1  0 lshift and 0 rshift ; 

TIM9_CNT (read-write)
$00000000 CONSTANT RESET_TIM9_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM9_CNT bis!        \ TIM9_CNT	Bit 0	 Width 16
\ TIM9_CNT Register BitField Fetch Words  
: TIM9_CNT@ TIM9_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM9_PSC (read-write)
$0000 CONSTANT RESET_TIM9_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM9_PSC bis!        \ TIM9_PSC	Bit 0	 Width 16
\ TIM9_PSC Register BitField Fetch Words  
: TIM9_PSC@ TIM9_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM9_ARR (read-write)
$00000000 CONSTANT RESET_TIM9_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM9_ARR bis!        \ TIM9_ARR	Bit 0	 Width 16
\ TIM9_ARR Register BitField Fetch Words  
: TIM9_ARR@ TIM9_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM9_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM9_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM9_CCR1 bis!        \ TIM9_CCR1	Bit 0	 Width 16
\ TIM9_CCR1 Register BitField Fetch Words  
: TIM9_CCR1@ TIM9_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM9_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM9_CCR2 
 %xxxxxxxxxxxxxxxx  0 lshift TIM9_CCR2 bis!        \ TIM9_CCR2	Bit 0	 Width 16
\ TIM9_CCR2 Register BitField Fetch Words  
: TIM9_CCR2@ TIM9_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM12 ###################################
TIM12_CR1 (read-write)
$0000 CONSTANT RESET_TIM12_CR1 
 %xx  8 lshift TIM12_CR1 bis!        \ TIM12_CKD	Bit 8	 Width 2
 %1  7 lshift TIM12_CR1 bis!        \ TIM12_ARPE	Bit 7	 Width 1
 %1  3 lshift TIM12_CR1 bis!        \ TIM12_OPM	Bit 3	 Width 1
 %1  2 lshift TIM12_CR1 bis!        \ TIM12_URS	Bit 2	 Width 1
 %1  1 lshift TIM12_CR1 bis!        \ TIM12_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM12_CR1 bis!        \ TIM12_CEN	Bit 0	 Width 1
\ TIM12_CR1 Register BitField Fetch Words  
: TIM12_CKD@ TIM12_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM12_ARPE@ TIM12_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM12_OPM@ TIM12_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM12_URS@ TIM12_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM12_UDIS@ TIM12_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM12_CEN@ TIM12_CR1 @ %1  0 lshift and 0 rshift ; 

TIM12_CR2 (read-write)
$0000 CONSTANT RESET_TIM12_CR2 
 %xxx  4 lshift TIM12_CR2 bis!        \ TIM12_MMS	Bit 4	 Width 3
\ TIM12_CR2 Register BitField Fetch Words  
: TIM12_MMS@ TIM12_CR2 @ %111  4 lshift and 4 rshift ; 

TIM12_SMCR (read-write)
$0000 CONSTANT RESET_TIM12_SMCR 
 %1  7 lshift TIM12_SMCR bis!        \ TIM12_MSM	Bit 7	 Width 1
 %xxx  4 lshift TIM12_SMCR bis!        \ TIM12_TS	Bit 4	 Width 3
 %xxx  0 lshift TIM12_SMCR bis!        \ TIM12_SMS	Bit 0	 Width 3
\ TIM12_SMCR Register BitField Fetch Words  
: TIM12_MSM@ TIM12_SMCR @ %1  7 lshift and 7 rshift ; 
: TIM12_TS@ TIM12_SMCR @ %111  4 lshift and 4 rshift ; 
: TIM12_SMS@ TIM12_SMCR @ %111  0 lshift and 0 rshift ; 

TIM12_DIER (read-write)
$0000 CONSTANT RESET_TIM12_DIER 
 %1  6 lshift TIM12_DIER bis!        \ TIM12_TIE	Bit 6	 Width 1
 %1  2 lshift TIM12_DIER bis!        \ TIM12_CC2IE	Bit 2	 Width 1
 %1  1 lshift TIM12_DIER bis!        \ TIM12_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM12_DIER bis!        \ TIM12_UIE	Bit 0	 Width 1
\ TIM12_DIER Register BitField Fetch Words  
: TIM12_TIE@ TIM12_DIER @ %1  6 lshift and 6 rshift ; 
: TIM12_CC2IE@ TIM12_DIER @ %1  2 lshift and 2 rshift ; 
: TIM12_CC1IE@ TIM12_DIER @ %1  1 lshift and 1 rshift ; 
: TIM12_UIE@ TIM12_DIER @ %1  0 lshift and 0 rshift ; 

TIM12_SR (read-write)
$0000 CONSTANT RESET_TIM12_SR 
 %1  10 lshift TIM12_SR bis!        \ TIM12_CC2OF	Bit 10	 Width 1
 %1  9 lshift TIM12_SR bis!        \ TIM12_CC1OF	Bit 9	 Width 1
 %1  6 lshift TIM12_SR bis!        \ TIM12_TIF	Bit 6	 Width 1
 %1  2 lshift TIM12_SR bis!        \ TIM12_CC2IF	Bit 2	 Width 1
 %1  1 lshift TIM12_SR bis!        \ TIM12_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM12_SR bis!        \ TIM12_UIF	Bit 0	 Width 1
\ TIM12_SR Register BitField Fetch Words  
: TIM12_CC2OF@ TIM12_SR @ %1  10 lshift and 10 rshift ; 
: TIM12_CC1OF@ TIM12_SR @ %1  9 lshift and 9 rshift ; 
: TIM12_TIF@ TIM12_SR @ %1  6 lshift and 6 rshift ; 
: TIM12_CC2IF@ TIM12_SR @ %1  2 lshift and 2 rshift ; 
: TIM12_CC1IF@ TIM12_SR @ %1  1 lshift and 1 rshift ; 
: TIM12_UIF@ TIM12_SR @ %1  0 lshift and 0 rshift ; 

TIM12_EGR (write-only)
$0000 CONSTANT RESET_TIM12_EGR 
 %1  6 lshift TIM12_EGR bis!        \ TIM12_TG	Bit 6	 Width 1
 %1  2 lshift TIM12_EGR bis!        \ TIM12_CC2G	Bit 2	 Width 1
 %1  1 lshift TIM12_EGR bis!        \ TIM12_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM12_EGR bis!        \ TIM12_UG	Bit 0	 Width 1
\ TIM12_EGR Register BitField Fetch Words  
: TIM12_TG@ TIM12_EGR @ %1  6 lshift and 6 rshift ; 
: TIM12_CC2G@ TIM12_EGR @ %1  2 lshift and 2 rshift ; 
: TIM12_CC1G@ TIM12_EGR @ %1  1 lshift and 1 rshift ; 
: TIM12_UG@ TIM12_EGR @ %1  0 lshift and 0 rshift ; 

TIM12_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM12_CCMR1_Output 
 %xxx  12 lshift TIM12_CCMR1_Output bis!        \ TIM12_OC2M	Bit 12	 Width 3
 %1  11 lshift TIM12_CCMR1_Output bis!        \ TIM12_OC2PE	Bit 11	 Width 1
 %1  10 lshift TIM12_CCMR1_Output bis!        \ TIM12_OC2FE	Bit 10	 Width 1
 %xx  8 lshift TIM12_CCMR1_Output bis!        \ TIM12_CC2S	Bit 8	 Width 2
 %xxx  4 lshift TIM12_CCMR1_Output bis!        \ TIM12_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM12_CCMR1_Output bis!        \ TIM12_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM12_CCMR1_Output bis!        \ TIM12_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM12_CCMR1_Output bis!        \ TIM12_CC1S	Bit 0	 Width 2
\ TIM12_CCMR1_Output Register BitField Fetch Words  
: TIM12_OC2M@ TIM12_CCMR1_Output @ %111  12 lshift and 12 rshift ; 
: TIM12_OC2PE@ TIM12_CCMR1_Output @ %1  11 lshift and 11 rshift ; 
: TIM12_OC2FE@ TIM12_CCMR1_Output @ %1  10 lshift and 10 rshift ; 
: TIM12_CC2S@ TIM12_CCMR1_Output @ %11  8 lshift and 8 rshift ; 
: TIM12_OC1M@ TIM12_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM12_OC1PE@ TIM12_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM12_OC1FE@ TIM12_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM12_CC1S@ TIM12_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM12_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM12_CCMR1_Input 
 %xxx  12 lshift TIM12_CCMR1_Input bis!        \ TIM12_IC2F	Bit 12	 Width 3
 %xx  10 lshift TIM12_CCMR1_Input bis!        \ TIM12_IC2PCS	Bit 10	 Width 2
 %xx  8 lshift TIM12_CCMR1_Input bis!        \ TIM12_CC2S	Bit 8	 Width 2
 %xxx  4 lshift TIM12_CCMR1_Input bis!        \ TIM12_IC1F	Bit 4	 Width 3
 %xx  2 lshift TIM12_CCMR1_Input bis!        \ TIM12_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM12_CCMR1_Input bis!        \ TIM12_CC1S	Bit 0	 Width 2
\ TIM12_CCMR1_Input Register BitField Fetch Words  
: TIM12_IC2F@ TIM12_CCMR1_Input @ %111  12 lshift and 12 rshift ; 
: TIM12_IC2PCS@ TIM12_CCMR1_Input @ %11  10 lshift and 10 rshift ; 
: TIM12_CC2S@ TIM12_CCMR1_Input @ %11  8 lshift and 8 rshift ; 
: TIM12_IC1F@ TIM12_CCMR1_Input @ %111  4 lshift and 4 rshift ; 
: TIM12_ICPCS@ TIM12_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM12_CC1S@ TIM12_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM12_CCER (read-write)
$0000 CONSTANT RESET_TIM12_CCER 
 %1  7 lshift TIM12_CCER bis!        \ TIM12_CC2NP	Bit 7	 Width 1
 %1  5 lshift TIM12_CCER bis!        \ TIM12_CC2P	Bit 5	 Width 1
 %1  4 lshift TIM12_CCER bis!        \ TIM12_CC2E	Bit 4	 Width 1
 %1  3 lshift TIM12_CCER bis!        \ TIM12_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM12_CCER bis!        \ TIM12_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM12_CCER bis!        \ TIM12_CC1E	Bit 0	 Width 1
\ TIM12_CCER Register BitField Fetch Words  
: TIM12_CC2NP@ TIM12_CCER @ %1  7 lshift and 7 rshift ; 
: TIM12_CC2P@ TIM12_CCER @ %1  5 lshift and 5 rshift ; 
: TIM12_CC2E@ TIM12_CCER @ %1  4 lshift and 4 rshift ; 
: TIM12_CC1NP@ TIM12_CCER @ %1  3 lshift and 3 rshift ; 
: TIM12_CC1P@ TIM12_CCER @ %1  1 lshift and 1 rshift ; 
: TIM12_CC1E@ TIM12_CCER @ %1  0 lshift and 0 rshift ; 

TIM12_CNT (read-write)
$00000000 CONSTANT RESET_TIM12_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM12_CNT bis!        \ TIM12_CNT	Bit 0	 Width 16
\ TIM12_CNT Register BitField Fetch Words  
: TIM12_CNT@ TIM12_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM12_PSC (read-write)
$0000 CONSTANT RESET_TIM12_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM12_PSC bis!        \ TIM12_PSC	Bit 0	 Width 16
\ TIM12_PSC Register BitField Fetch Words  
: TIM12_PSC@ TIM12_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM12_ARR (read-write)
$00000000 CONSTANT RESET_TIM12_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM12_ARR bis!        \ TIM12_ARR	Bit 0	 Width 16
\ TIM12_ARR Register BitField Fetch Words  
: TIM12_ARR@ TIM12_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM12_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM12_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM12_CCR1 bis!        \ TIM12_CCR1	Bit 0	 Width 16
\ TIM12_CCR1 Register BitField Fetch Words  
: TIM12_CCR1@ TIM12_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM12_CCR2 (read-write)
$00000000 CONSTANT RESET_TIM12_CCR2 
 %xxxxxxxxxxxxxxxx  0 lshift TIM12_CCR2 bis!        \ TIM12_CCR2	Bit 0	 Width 16
\ TIM12_CCR2 Register BitField Fetch Words  
: TIM12_CCR2@ TIM12_CCR2 @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM10 ###################################
TIM10_CR1 (read-write)
$0000 CONSTANT RESET_TIM10_CR1 
 %xx  8 lshift TIM10_CR1 bis!        \ TIM10_CKD	Bit 8	 Width 2
 %1  7 lshift TIM10_CR1 bis!        \ TIM10_ARPE	Bit 7	 Width 1
 %1  2 lshift TIM10_CR1 bis!        \ TIM10_URS	Bit 2	 Width 1
 %1  1 lshift TIM10_CR1 bis!        \ TIM10_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM10_CR1 bis!        \ TIM10_CEN	Bit 0	 Width 1
\ TIM10_CR1 Register BitField Fetch Words  
: TIM10_CKD@ TIM10_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM10_ARPE@ TIM10_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM10_URS@ TIM10_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM10_UDIS@ TIM10_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM10_CEN@ TIM10_CR1 @ %1  0 lshift and 0 rshift ; 

TIM10_DIER (read-write)
$0000 CONSTANT RESET_TIM10_DIER 
 %1  1 lshift TIM10_DIER bis!        \ TIM10_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM10_DIER bis!        \ TIM10_UIE	Bit 0	 Width 1
\ TIM10_DIER Register BitField Fetch Words  
: TIM10_CC1IE@ TIM10_DIER @ %1  1 lshift and 1 rshift ; 
: TIM10_UIE@ TIM10_DIER @ %1  0 lshift and 0 rshift ; 

TIM10_SR (read-write)
$0000 CONSTANT RESET_TIM10_SR 
 %1  9 lshift TIM10_SR bis!        \ TIM10_CC1OF	Bit 9	 Width 1
 %1  1 lshift TIM10_SR bis!        \ TIM10_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM10_SR bis!        \ TIM10_UIF	Bit 0	 Width 1
\ TIM10_SR Register BitField Fetch Words  
: TIM10_CC1OF@ TIM10_SR @ %1  9 lshift and 9 rshift ; 
: TIM10_CC1IF@ TIM10_SR @ %1  1 lshift and 1 rshift ; 
: TIM10_UIF@ TIM10_SR @ %1  0 lshift and 0 rshift ; 

TIM10_EGR (write-only)
$0000 CONSTANT RESET_TIM10_EGR 
 %1  1 lshift TIM10_EGR bis!        \ TIM10_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM10_EGR bis!        \ TIM10_UG	Bit 0	 Width 1
\ TIM10_EGR Register BitField Fetch Words  
: TIM10_CC1G@ TIM10_EGR @ %1  1 lshift and 1 rshift ; 
: TIM10_UG@ TIM10_EGR @ %1  0 lshift and 0 rshift ; 

TIM10_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM10_CCMR1_Output 
 %xxx  4 lshift TIM10_CCMR1_Output bis!        \ TIM10_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM10_CCMR1_Output bis!        \ TIM10_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM10_CCMR1_Output bis!        \ TIM10_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM10_CCMR1_Output bis!        \ TIM10_CC1S	Bit 0	 Width 2
\ TIM10_CCMR1_Output Register BitField Fetch Words  
: TIM10_OC1M@ TIM10_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM10_OC1PE@ TIM10_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM10_OC1FE@ TIM10_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM10_CC1S@ TIM10_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM10_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM10_CCMR1_Input 
 %xxxx  4 lshift TIM10_CCMR1_Input bis!        \ TIM10_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM10_CCMR1_Input bis!        \ TIM10_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM10_CCMR1_Input bis!        \ TIM10_CC1S	Bit 0	 Width 2
\ TIM10_CCMR1_Input Register BitField Fetch Words  
: TIM10_IC1F@ TIM10_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM10_ICPCS@ TIM10_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM10_CC1S@ TIM10_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM10_CCER (read-write)
$0000 CONSTANT RESET_TIM10_CCER 
 %1  3 lshift TIM10_CCER bis!        \ TIM10_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM10_CCER bis!        \ TIM10_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM10_CCER bis!        \ TIM10_CC1E	Bit 0	 Width 1
\ TIM10_CCER Register BitField Fetch Words  
: TIM10_CC1NP@ TIM10_CCER @ %1  3 lshift and 3 rshift ; 
: TIM10_CC1P@ TIM10_CCER @ %1  1 lshift and 1 rshift ; 
: TIM10_CC1E@ TIM10_CCER @ %1  0 lshift and 0 rshift ; 

TIM10_CNT (read-write)
$00000000 CONSTANT RESET_TIM10_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM10_CNT bis!        \ TIM10_CNT	Bit 0	 Width 16
\ TIM10_CNT Register BitField Fetch Words  
: TIM10_CNT@ TIM10_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM10_PSC (read-write)
$0000 CONSTANT RESET_TIM10_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM10_PSC bis!        \ TIM10_PSC	Bit 0	 Width 16
\ TIM10_PSC Register BitField Fetch Words  
: TIM10_PSC@ TIM10_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM10_ARR (read-write)
$00000000 CONSTANT RESET_TIM10_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM10_ARR bis!        \ TIM10_ARR	Bit 0	 Width 16
\ TIM10_ARR Register BitField Fetch Words  
: TIM10_ARR@ TIM10_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM10_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM10_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM10_CCR1 bis!        \ TIM10_CCR1	Bit 0	 Width 16
\ TIM10_CCR1 Register BitField Fetch Words  
: TIM10_CCR1@ TIM10_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM13 ###################################
TIM13_CR1 (read-write)
$0000 CONSTANT RESET_TIM13_CR1 
 %xx  8 lshift TIM13_CR1 bis!        \ TIM13_CKD	Bit 8	 Width 2
 %1  7 lshift TIM13_CR1 bis!        \ TIM13_ARPE	Bit 7	 Width 1
 %1  2 lshift TIM13_CR1 bis!        \ TIM13_URS	Bit 2	 Width 1
 %1  1 lshift TIM13_CR1 bis!        \ TIM13_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM13_CR1 bis!        \ TIM13_CEN	Bit 0	 Width 1
\ TIM13_CR1 Register BitField Fetch Words  
: TIM13_CKD@ TIM13_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM13_ARPE@ TIM13_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM13_URS@ TIM13_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM13_UDIS@ TIM13_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM13_CEN@ TIM13_CR1 @ %1  0 lshift and 0 rshift ; 

TIM13_DIER (read-write)
$0000 CONSTANT RESET_TIM13_DIER 
 %1  1 lshift TIM13_DIER bis!        \ TIM13_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM13_DIER bis!        \ TIM13_UIE	Bit 0	 Width 1
\ TIM13_DIER Register BitField Fetch Words  
: TIM13_CC1IE@ TIM13_DIER @ %1  1 lshift and 1 rshift ; 
: TIM13_UIE@ TIM13_DIER @ %1  0 lshift and 0 rshift ; 

TIM13_SR (read-write)
$0000 CONSTANT RESET_TIM13_SR 
 %1  9 lshift TIM13_SR bis!        \ TIM13_CC1OF	Bit 9	 Width 1
 %1  1 lshift TIM13_SR bis!        \ TIM13_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM13_SR bis!        \ TIM13_UIF	Bit 0	 Width 1
\ TIM13_SR Register BitField Fetch Words  
: TIM13_CC1OF@ TIM13_SR @ %1  9 lshift and 9 rshift ; 
: TIM13_CC1IF@ TIM13_SR @ %1  1 lshift and 1 rshift ; 
: TIM13_UIF@ TIM13_SR @ %1  0 lshift and 0 rshift ; 

TIM13_EGR (write-only)
$0000 CONSTANT RESET_TIM13_EGR 
 %1  1 lshift TIM13_EGR bis!        \ TIM13_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM13_EGR bis!        \ TIM13_UG	Bit 0	 Width 1
\ TIM13_EGR Register BitField Fetch Words  
: TIM13_CC1G@ TIM13_EGR @ %1  1 lshift and 1 rshift ; 
: TIM13_UG@ TIM13_EGR @ %1  0 lshift and 0 rshift ; 

TIM13_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM13_CCMR1_Output 
 %xxx  4 lshift TIM13_CCMR1_Output bis!        \ TIM13_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM13_CCMR1_Output bis!        \ TIM13_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM13_CCMR1_Output bis!        \ TIM13_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM13_CCMR1_Output bis!        \ TIM13_CC1S	Bit 0	 Width 2
\ TIM13_CCMR1_Output Register BitField Fetch Words  
: TIM13_OC1M@ TIM13_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM13_OC1PE@ TIM13_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM13_OC1FE@ TIM13_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM13_CC1S@ TIM13_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM13_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM13_CCMR1_Input 
 %xxxx  4 lshift TIM13_CCMR1_Input bis!        \ TIM13_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM13_CCMR1_Input bis!        \ TIM13_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM13_CCMR1_Input bis!        \ TIM13_CC1S	Bit 0	 Width 2
\ TIM13_CCMR1_Input Register BitField Fetch Words  
: TIM13_IC1F@ TIM13_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM13_ICPCS@ TIM13_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM13_CC1S@ TIM13_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM13_CCER (read-write)
$0000 CONSTANT RESET_TIM13_CCER 
 %1  3 lshift TIM13_CCER bis!        \ TIM13_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM13_CCER bis!        \ TIM13_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM13_CCER bis!        \ TIM13_CC1E	Bit 0	 Width 1
\ TIM13_CCER Register BitField Fetch Words  
: TIM13_CC1NP@ TIM13_CCER @ %1  3 lshift and 3 rshift ; 
: TIM13_CC1P@ TIM13_CCER @ %1  1 lshift and 1 rshift ; 
: TIM13_CC1E@ TIM13_CCER @ %1  0 lshift and 0 rshift ; 

TIM13_CNT (read-write)
$00000000 CONSTANT RESET_TIM13_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM13_CNT bis!        \ TIM13_CNT	Bit 0	 Width 16
\ TIM13_CNT Register BitField Fetch Words  
: TIM13_CNT@ TIM13_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM13_PSC (read-write)
$0000 CONSTANT RESET_TIM13_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM13_PSC bis!        \ TIM13_PSC	Bit 0	 Width 16
\ TIM13_PSC Register BitField Fetch Words  
: TIM13_PSC@ TIM13_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM13_ARR (read-write)
$00000000 CONSTANT RESET_TIM13_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM13_ARR bis!        \ TIM13_ARR	Bit 0	 Width 16
\ TIM13_ARR Register BitField Fetch Words  
: TIM13_ARR@ TIM13_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM13_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM13_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM13_CCR1 bis!        \ TIM13_CCR1	Bit 0	 Width 16
\ TIM13_CCR1 Register BitField Fetch Words  
: TIM13_CCR1@ TIM13_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM14 ###################################
TIM14_CR1 (read-write)
$0000 CONSTANT RESET_TIM14_CR1 
 %xx  8 lshift TIM14_CR1 bis!        \ TIM14_CKD	Bit 8	 Width 2
 %1  7 lshift TIM14_CR1 bis!        \ TIM14_ARPE	Bit 7	 Width 1
 %1  2 lshift TIM14_CR1 bis!        \ TIM14_URS	Bit 2	 Width 1
 %1  1 lshift TIM14_CR1 bis!        \ TIM14_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM14_CR1 bis!        \ TIM14_CEN	Bit 0	 Width 1
\ TIM14_CR1 Register BitField Fetch Words  
: TIM14_CKD@ TIM14_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM14_ARPE@ TIM14_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM14_URS@ TIM14_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM14_UDIS@ TIM14_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM14_CEN@ TIM14_CR1 @ %1  0 lshift and 0 rshift ; 

TIM14_DIER (read-write)
$0000 CONSTANT RESET_TIM14_DIER 
 %1  1 lshift TIM14_DIER bis!        \ TIM14_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM14_DIER bis!        \ TIM14_UIE	Bit 0	 Width 1
\ TIM14_DIER Register BitField Fetch Words  
: TIM14_CC1IE@ TIM14_DIER @ %1  1 lshift and 1 rshift ; 
: TIM14_UIE@ TIM14_DIER @ %1  0 lshift and 0 rshift ; 

TIM14_SR (read-write)
$0000 CONSTANT RESET_TIM14_SR 
 %1  9 lshift TIM14_SR bis!        \ TIM14_CC1OF	Bit 9	 Width 1
 %1  1 lshift TIM14_SR bis!        \ TIM14_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM14_SR bis!        \ TIM14_UIF	Bit 0	 Width 1
\ TIM14_SR Register BitField Fetch Words  
: TIM14_CC1OF@ TIM14_SR @ %1  9 lshift and 9 rshift ; 
: TIM14_CC1IF@ TIM14_SR @ %1  1 lshift and 1 rshift ; 
: TIM14_UIF@ TIM14_SR @ %1  0 lshift and 0 rshift ; 

TIM14_EGR (write-only)
$0000 CONSTANT RESET_TIM14_EGR 
 %1  1 lshift TIM14_EGR bis!        \ TIM14_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM14_EGR bis!        \ TIM14_UG	Bit 0	 Width 1
\ TIM14_EGR Register BitField Fetch Words  
: TIM14_CC1G@ TIM14_EGR @ %1  1 lshift and 1 rshift ; 
: TIM14_UG@ TIM14_EGR @ %1  0 lshift and 0 rshift ; 

TIM14_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM14_CCMR1_Output 
 %xxx  4 lshift TIM14_CCMR1_Output bis!        \ TIM14_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM14_CCMR1_Output bis!        \ TIM14_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM14_CCMR1_Output bis!        \ TIM14_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM14_CCMR1_Output bis!        \ TIM14_CC1S	Bit 0	 Width 2
\ TIM14_CCMR1_Output Register BitField Fetch Words  
: TIM14_OC1M@ TIM14_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM14_OC1PE@ TIM14_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM14_OC1FE@ TIM14_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM14_CC1S@ TIM14_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM14_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM14_CCMR1_Input 
 %xxxx  4 lshift TIM14_CCMR1_Input bis!        \ TIM14_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM14_CCMR1_Input bis!        \ TIM14_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM14_CCMR1_Input bis!        \ TIM14_CC1S	Bit 0	 Width 2
\ TIM14_CCMR1_Input Register BitField Fetch Words  
: TIM14_IC1F@ TIM14_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM14_ICPCS@ TIM14_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM14_CC1S@ TIM14_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM14_CCER (read-write)
$0000 CONSTANT RESET_TIM14_CCER 
 %1  3 lshift TIM14_CCER bis!        \ TIM14_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM14_CCER bis!        \ TIM14_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM14_CCER bis!        \ TIM14_CC1E	Bit 0	 Width 1
\ TIM14_CCER Register BitField Fetch Words  
: TIM14_CC1NP@ TIM14_CCER @ %1  3 lshift and 3 rshift ; 
: TIM14_CC1P@ TIM14_CCER @ %1  1 lshift and 1 rshift ; 
: TIM14_CC1E@ TIM14_CCER @ %1  0 lshift and 0 rshift ; 

TIM14_CNT (read-write)
$00000000 CONSTANT RESET_TIM14_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM14_CNT bis!        \ TIM14_CNT	Bit 0	 Width 16
\ TIM14_CNT Register BitField Fetch Words  
: TIM14_CNT@ TIM14_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM14_PSC (read-write)
$0000 CONSTANT RESET_TIM14_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM14_PSC bis!        \ TIM14_PSC	Bit 0	 Width 16
\ TIM14_PSC Register BitField Fetch Words  
: TIM14_PSC@ TIM14_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM14_ARR (read-write)
$00000000 CONSTANT RESET_TIM14_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM14_ARR bis!        \ TIM14_ARR	Bit 0	 Width 16
\ TIM14_ARR Register BitField Fetch Words  
: TIM14_ARR@ TIM14_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM14_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM14_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM14_CCR1 bis!        \ TIM14_CCR1	Bit 0	 Width 16
\ TIM14_CCR1 Register BitField Fetch Words  
: TIM14_CCR1@ TIM14_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM11 ###################################
TIM11_CR1 (read-write)
$0000 CONSTANT RESET_TIM11_CR1 
 %xx  8 lshift TIM11_CR1 bis!        \ TIM11_CKD	Bit 8	 Width 2
 %1  7 lshift TIM11_CR1 bis!        \ TIM11_ARPE	Bit 7	 Width 1
 %1  2 lshift TIM11_CR1 bis!        \ TIM11_URS	Bit 2	 Width 1
 %1  1 lshift TIM11_CR1 bis!        \ TIM11_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM11_CR1 bis!        \ TIM11_CEN	Bit 0	 Width 1
\ TIM11_CR1 Register BitField Fetch Words  
: TIM11_CKD@ TIM11_CR1 @ %11  8 lshift and 8 rshift ; 
: TIM11_ARPE@ TIM11_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM11_URS@ TIM11_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM11_UDIS@ TIM11_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM11_CEN@ TIM11_CR1 @ %1  0 lshift and 0 rshift ; 

TIM11_DIER (read-write)
$0000 CONSTANT RESET_TIM11_DIER 
 %1  1 lshift TIM11_DIER bis!        \ TIM11_CC1IE	Bit 1	 Width 1
 %1  0 lshift TIM11_DIER bis!        \ TIM11_UIE	Bit 0	 Width 1
\ TIM11_DIER Register BitField Fetch Words  
: TIM11_CC1IE@ TIM11_DIER @ %1  1 lshift and 1 rshift ; 
: TIM11_UIE@ TIM11_DIER @ %1  0 lshift and 0 rshift ; 

TIM11_SR (read-write)
$0000 CONSTANT RESET_TIM11_SR 
 %1  9 lshift TIM11_SR bis!        \ TIM11_CC1OF	Bit 9	 Width 1
 %1  1 lshift TIM11_SR bis!        \ TIM11_CC1IF	Bit 1	 Width 1
 %1  0 lshift TIM11_SR bis!        \ TIM11_UIF	Bit 0	 Width 1
\ TIM11_SR Register BitField Fetch Words  
: TIM11_CC1OF@ TIM11_SR @ %1  9 lshift and 9 rshift ; 
: TIM11_CC1IF@ TIM11_SR @ %1  1 lshift and 1 rshift ; 
: TIM11_UIF@ TIM11_SR @ %1  0 lshift and 0 rshift ; 

TIM11_EGR (write-only)
$0000 CONSTANT RESET_TIM11_EGR 
 %1  1 lshift TIM11_EGR bis!        \ TIM11_CC1G	Bit 1	 Width 1
 %1  0 lshift TIM11_EGR bis!        \ TIM11_UG	Bit 0	 Width 1
\ TIM11_EGR Register BitField Fetch Words  
: TIM11_CC1G@ TIM11_EGR @ %1  1 lshift and 1 rshift ; 
: TIM11_UG@ TIM11_EGR @ %1  0 lshift and 0 rshift ; 

TIM11_CCMR1_Output (read-write)
$00000000 CONSTANT RESET_TIM11_CCMR1_Output 
 %xxx  4 lshift TIM11_CCMR1_Output bis!        \ TIM11_OC1M	Bit 4	 Width 3
 %1  3 lshift TIM11_CCMR1_Output bis!        \ TIM11_OC1PE	Bit 3	 Width 1
 %1  2 lshift TIM11_CCMR1_Output bis!        \ TIM11_OC1FE	Bit 2	 Width 1
 %xx  0 lshift TIM11_CCMR1_Output bis!        \ TIM11_CC1S	Bit 0	 Width 2
\ TIM11_CCMR1_Output Register BitField Fetch Words  
: TIM11_OC1M@ TIM11_CCMR1_Output @ %111  4 lshift and 4 rshift ; 
: TIM11_OC1PE@ TIM11_CCMR1_Output @ %1  3 lshift and 3 rshift ; 
: TIM11_OC1FE@ TIM11_CCMR1_Output @ %1  2 lshift and 2 rshift ; 
: TIM11_CC1S@ TIM11_CCMR1_Output @ %11  0 lshift and 0 rshift ; 

TIM11_CCMR1_Input (read-write)
$00000000 CONSTANT RESET_TIM11_CCMR1_Input 
 %xxxx  4 lshift TIM11_CCMR1_Input bis!        \ TIM11_IC1F	Bit 4	 Width 4
 %xx  2 lshift TIM11_CCMR1_Input bis!        \ TIM11_ICPCS	Bit 2	 Width 2
 %xx  0 lshift TIM11_CCMR1_Input bis!        \ TIM11_CC1S	Bit 0	 Width 2
\ TIM11_CCMR1_Input Register BitField Fetch Words  
: TIM11_IC1F@ TIM11_CCMR1_Input @ %1111  4 lshift and 4 rshift ; 
: TIM11_ICPCS@ TIM11_CCMR1_Input @ %11  2 lshift and 2 rshift ; 
: TIM11_CC1S@ TIM11_CCMR1_Input @ %11  0 lshift and 0 rshift ; 

TIM11_CCER (read-write)
$0000 CONSTANT RESET_TIM11_CCER 
 %1  3 lshift TIM11_CCER bis!        \ TIM11_CC1NP	Bit 3	 Width 1
 %1  1 lshift TIM11_CCER bis!        \ TIM11_CC1P	Bit 1	 Width 1
 %1  0 lshift TIM11_CCER bis!        \ TIM11_CC1E	Bit 0	 Width 1
\ TIM11_CCER Register BitField Fetch Words  
: TIM11_CC1NP@ TIM11_CCER @ %1  3 lshift and 3 rshift ; 
: TIM11_CC1P@ TIM11_CCER @ %1  1 lshift and 1 rshift ; 
: TIM11_CC1E@ TIM11_CCER @ %1  0 lshift and 0 rshift ; 

TIM11_CNT (read-write)
$00000000 CONSTANT RESET_TIM11_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM11_CNT bis!        \ TIM11_CNT	Bit 0	 Width 16
\ TIM11_CNT Register BitField Fetch Words  
: TIM11_CNT@ TIM11_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM11_PSC (read-write)
$0000 CONSTANT RESET_TIM11_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM11_PSC bis!        \ TIM11_PSC	Bit 0	 Width 16
\ TIM11_PSC Register BitField Fetch Words  
: TIM11_PSC@ TIM11_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM11_ARR (read-write)
$00000000 CONSTANT RESET_TIM11_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM11_ARR bis!        \ TIM11_ARR	Bit 0	 Width 16
\ TIM11_ARR Register BitField Fetch Words  
: TIM11_ARR@ TIM11_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

TIM11_CCR1 (read-write)
$00000000 CONSTANT RESET_TIM11_CCR1 
 %xxxxxxxxxxxxxxxx  0 lshift TIM11_CCR1 bis!        \ TIM11_CCR1	Bit 0	 Width 16
\ TIM11_CCR1 Register BitField Fetch Words  
: TIM11_CCR1@ TIM11_CCR1 @ %1111111111111111  0 lshift and 0 rshift ; 

TIM11_OR (read-write)
$00000000 CONSTANT RESET_TIM11_OR 
 %xx  0 lshift TIM11_OR bis!        \ TIM11_RMP	Bit 0	 Width 2
\ TIM11_OR Register BitField Fetch Words  
: TIM11_RMP@ TIM11_OR @ %11  0 lshift and 0 rshift ; 

                    
################################### TIM6 ###################################
TIM6_CR1 (read-write)
$0000 CONSTANT RESET_TIM6_CR1 
 %1  7 lshift TIM6_CR1 bis!        \ TIM6_ARPE	Bit 7	 Width 1
 %1  3 lshift TIM6_CR1 bis!        \ TIM6_OPM	Bit 3	 Width 1
 %1  2 lshift TIM6_CR1 bis!        \ TIM6_URS	Bit 2	 Width 1
 %1  1 lshift TIM6_CR1 bis!        \ TIM6_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM6_CR1 bis!        \ TIM6_CEN	Bit 0	 Width 1
\ TIM6_CR1 Register BitField Fetch Words  
: TIM6_ARPE@ TIM6_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM6_OPM@ TIM6_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM6_URS@ TIM6_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM6_UDIS@ TIM6_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM6_CEN@ TIM6_CR1 @ %1  0 lshift and 0 rshift ; 

TIM6_CR2 (read-write)
$0000 CONSTANT RESET_TIM6_CR2 
 %xxx  4 lshift TIM6_CR2 bis!        \ TIM6_MMS	Bit 4	 Width 3
\ TIM6_CR2 Register BitField Fetch Words  
: TIM6_MMS@ TIM6_CR2 @ %111  4 lshift and 4 rshift ; 

TIM6_DIER (read-write)
$0000 CONSTANT RESET_TIM6_DIER 
 %1  8 lshift TIM6_DIER bis!        \ TIM6_UDE	Bit 8	 Width 1
 %1  0 lshift TIM6_DIER bis!        \ TIM6_UIE	Bit 0	 Width 1
\ TIM6_DIER Register BitField Fetch Words  
: TIM6_UDE@ TIM6_DIER @ %1  8 lshift and 8 rshift ; 
: TIM6_UIE@ TIM6_DIER @ %1  0 lshift and 0 rshift ; 

TIM6_SR (read-write)
$0000 CONSTANT RESET_TIM6_SR 
 %1  0 lshift TIM6_SR bis!        \ TIM6_UIF	Bit 0	 Width 1
\ TIM6_SR Register BitField Fetch Words  
: TIM6_UIF@ TIM6_SR @ %1  0 lshift and 0 rshift ; 

TIM6_EGR (write-only)
$0000 CONSTANT RESET_TIM6_EGR 
 %1  0 lshift TIM6_EGR bis!        \ TIM6_UG	Bit 0	 Width 1
\ TIM6_EGR Register BitField Fetch Words  
: TIM6_UG@ TIM6_EGR @ %1  0 lshift and 0 rshift ; 

TIM6_CNT (read-write)
$00000000 CONSTANT RESET_TIM6_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM6_CNT bis!        \ TIM6_CNT	Bit 0	 Width 16
\ TIM6_CNT Register BitField Fetch Words  
: TIM6_CNT@ TIM6_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM6_PSC (read-write)
$0000 CONSTANT RESET_TIM6_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM6_PSC bis!        \ TIM6_PSC	Bit 0	 Width 16
\ TIM6_PSC Register BitField Fetch Words  
: TIM6_PSC@ TIM6_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM6_ARR (read-write)
$00000000 CONSTANT RESET_TIM6_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM6_ARR bis!        \ TIM6_ARR	Bit 0	 Width 16
\ TIM6_ARR Register BitField Fetch Words  
: TIM6_ARR@ TIM6_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### TIM7 ###################################
TIM7_CR1 (read-write)
$0000 CONSTANT RESET_TIM7_CR1 
 %1  7 lshift TIM7_CR1 bis!        \ TIM7_ARPE	Bit 7	 Width 1
 %1  3 lshift TIM7_CR1 bis!        \ TIM7_OPM	Bit 3	 Width 1
 %1  2 lshift TIM7_CR1 bis!        \ TIM7_URS	Bit 2	 Width 1
 %1  1 lshift TIM7_CR1 bis!        \ TIM7_UDIS	Bit 1	 Width 1
 %1  0 lshift TIM7_CR1 bis!        \ TIM7_CEN	Bit 0	 Width 1
\ TIM7_CR1 Register BitField Fetch Words  
: TIM7_ARPE@ TIM7_CR1 @ %1  7 lshift and 7 rshift ; 
: TIM7_OPM@ TIM7_CR1 @ %1  3 lshift and 3 rshift ; 
: TIM7_URS@ TIM7_CR1 @ %1  2 lshift and 2 rshift ; 
: TIM7_UDIS@ TIM7_CR1 @ %1  1 lshift and 1 rshift ; 
: TIM7_CEN@ TIM7_CR1 @ %1  0 lshift and 0 rshift ; 

TIM7_CR2 (read-write)
$0000 CONSTANT RESET_TIM7_CR2 
 %xxx  4 lshift TIM7_CR2 bis!        \ TIM7_MMS	Bit 4	 Width 3
\ TIM7_CR2 Register BitField Fetch Words  
: TIM7_MMS@ TIM7_CR2 @ %111  4 lshift and 4 rshift ; 

TIM7_DIER (read-write)
$0000 CONSTANT RESET_TIM7_DIER 
 %1  8 lshift TIM7_DIER bis!        \ TIM7_UDE	Bit 8	 Width 1
 %1  0 lshift TIM7_DIER bis!        \ TIM7_UIE	Bit 0	 Width 1
\ TIM7_DIER Register BitField Fetch Words  
: TIM7_UDE@ TIM7_DIER @ %1  8 lshift and 8 rshift ; 
: TIM7_UIE@ TIM7_DIER @ %1  0 lshift and 0 rshift ; 

TIM7_SR (read-write)
$0000 CONSTANT RESET_TIM7_SR 
 %1  0 lshift TIM7_SR bis!        \ TIM7_UIF	Bit 0	 Width 1
\ TIM7_SR Register BitField Fetch Words  
: TIM7_UIF@ TIM7_SR @ %1  0 lshift and 0 rshift ; 

TIM7_EGR (write-only)
$0000 CONSTANT RESET_TIM7_EGR 
 %1  0 lshift TIM7_EGR bis!        \ TIM7_UG	Bit 0	 Width 1
\ TIM7_EGR Register BitField Fetch Words  
: TIM7_UG@ TIM7_EGR @ %1  0 lshift and 0 rshift ; 

TIM7_CNT (read-write)
$00000000 CONSTANT RESET_TIM7_CNT 
 %xxxxxxxxxxxxxxxx  0 lshift TIM7_CNT bis!        \ TIM7_CNT	Bit 0	 Width 16
\ TIM7_CNT Register BitField Fetch Words  
: TIM7_CNT@ TIM7_CNT @ %1111111111111111  0 lshift and 0 rshift ; 

TIM7_PSC (read-write)
$0000 CONSTANT RESET_TIM7_PSC 
 %xxxxxxxxxxxxxxxx  0 lshift TIM7_PSC bis!        \ TIM7_PSC	Bit 0	 Width 16
\ TIM7_PSC Register BitField Fetch Words  
: TIM7_PSC@ TIM7_PSC @ %1111111111111111  0 lshift and 0 rshift ; 

TIM7_ARR (read-write)
$00000000 CONSTANT RESET_TIM7_ARR 
 %xxxxxxxxxxxxxxxx  0 lshift TIM7_ARR bis!        \ TIM7_ARR	Bit 0	 Width 16
\ TIM7_ARR Register BitField Fetch Words  
: TIM7_ARR@ TIM7_ARR @ %1111111111111111  0 lshift and 0 rshift ; 

                    
################################### Ethernet_MAC ###################################
Ethernet_MAC_MACCR (read-write)
$0008000 CONSTANT RESET_Ethernet_MAC_MACCR 
 %1  2 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_RE	Bit 2	 Width 1
 %1  3 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_TE	Bit 3	 Width 1
 %1  4 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_DC	Bit 4	 Width 1
 %xx  5 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_BL	Bit 5	 Width 2
 %1  7 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_APCS	Bit 7	 Width 1
 %1  9 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_RD	Bit 9	 Width 1
 %1  10 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_IPCO	Bit 10	 Width 1
 %1  11 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_DM	Bit 11	 Width 1
 %1  12 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_LM	Bit 12	 Width 1
 %1  13 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_ROD	Bit 13	 Width 1
 %1  14 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_FES	Bit 14	 Width 1
 %1  16 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_CSD	Bit 16	 Width 1
 %xxx  17 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_IFG	Bit 17	 Width 3
 %1  22 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_JD	Bit 22	 Width 1
 %1  23 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_WD	Bit 23	 Width 1
 %1  25 lshift Ethernet_MAC_MACCR bis!        \ Ethernet_MAC_CSTF	Bit 25	 Width 1
\ Ethernet_MAC_MACCR Register BitField Fetch Words  
: Ethernet_MAC_RE@ Ethernet_MAC_MACCR @ %1  2 lshift and 2 rshift ; 
: Ethernet_MAC_TE@ Ethernet_MAC_MACCR @ %1  3 lshift and 3 rshift ; 
: Ethernet_MAC_DC@ Ethernet_MAC_MACCR @ %1  4 lshift and 4 rshift ; 
: Ethernet_MAC_BL@ Ethernet_MAC_MACCR @ %11  5 lshift and 5 rshift ; 
: Ethernet_MAC_APCS@ Ethernet_MAC_MACCR @ %1  7 lshift and 7 rshift ; 
: Ethernet_MAC_RD@ Ethernet_MAC_MACCR @ %1  9 lshift and 9 rshift ; 
: Ethernet_MAC_IPCO@ Ethernet_MAC_MACCR @ %1  10 lshift and 10 rshift ; 
: Ethernet_MAC_DM@ Ethernet_MAC_MACCR @ %1  11 lshift and 11 rshift ; 
: Ethernet_MAC_LM@ Ethernet_MAC_MACCR @ %1  12 lshift and 12 rshift ; 
: Ethernet_MAC_ROD@ Ethernet_MAC_MACCR @ %1  13 lshift and 13 rshift ; 
: Ethernet_MAC_FES@ Ethernet_MAC_MACCR @ %1  14 lshift and 14 rshift ; 
: Ethernet_MAC_CSD@ Ethernet_MAC_MACCR @ %1  16 lshift and 16 rshift ; 
: Ethernet_MAC_IFG@ Ethernet_MAC_MACCR @ %111  17 lshift and 17 rshift ; 
: Ethernet_MAC_JD@ Ethernet_MAC_MACCR @ %1  22 lshift and 22 rshift ; 
: Ethernet_MAC_WD@ Ethernet_MAC_MACCR @ %1  23 lshift and 23 rshift ; 
: Ethernet_MAC_CSTF@ Ethernet_MAC_MACCR @ %1  25 lshift and 25 rshift ; 

Ethernet_MAC_MACFFR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACFFR 
 %1  0 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_PM	Bit 0	 Width 1
 %1  1 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_HU	Bit 1	 Width 1
 %1  2 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_HM	Bit 2	 Width 1
 %1  3 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_DAIF	Bit 3	 Width 1
 %1  4 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_RAM	Bit 4	 Width 1
 %1  5 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_BFD	Bit 5	 Width 1
 %1  6 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_PCF	Bit 6	 Width 1
 %1  7 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_SAIF	Bit 7	 Width 1
 %1  8 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_SAF	Bit 8	 Width 1
 %1  9 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_HPF	Bit 9	 Width 1
 %1  31 lshift Ethernet_MAC_MACFFR bis!        \ Ethernet_MAC_RA	Bit 31	 Width 1
\ Ethernet_MAC_MACFFR Register BitField Fetch Words  
: Ethernet_MAC_PM@ Ethernet_MAC_MACFFR @ %1  0 lshift and 0 rshift ; 
: Ethernet_MAC_HU@ Ethernet_MAC_MACFFR @ %1  1 lshift and 1 rshift ; 
: Ethernet_MAC_HM@ Ethernet_MAC_MACFFR @ %1  2 lshift and 2 rshift ; 
: Ethernet_MAC_DAIF@ Ethernet_MAC_MACFFR @ %1  3 lshift and 3 rshift ; 
: Ethernet_MAC_RAM@ Ethernet_MAC_MACFFR @ %1  4 lshift and 4 rshift ; 
: Ethernet_MAC_BFD@ Ethernet_MAC_MACFFR @ %1  5 lshift and 5 rshift ; 
: Ethernet_MAC_PCF@ Ethernet_MAC_MACFFR @ %1  6 lshift and 6 rshift ; 
: Ethernet_MAC_SAIF@ Ethernet_MAC_MACFFR @ %1  7 lshift and 7 rshift ; 
: Ethernet_MAC_SAF@ Ethernet_MAC_MACFFR @ %1  8 lshift and 8 rshift ; 
: Ethernet_MAC_HPF@ Ethernet_MAC_MACFFR @ %1  9 lshift and 9 rshift ; 
: Ethernet_MAC_RA@ Ethernet_MAC_MACFFR @ %1  31 lshift and 31 rshift ; 

Ethernet_MAC_MACHTHR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACHTHR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACHTHR bis!        \ Ethernet_MAC_HTH	Bit 0	 Width 32
\ Ethernet_MAC_MACHTHR Register BitField Fetch Words  
: Ethernet_MAC_HTH@ Ethernet_MAC_MACHTHR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MAC_MACHTLR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACHTLR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACHTLR bis!        \ Ethernet_MAC_HTL	Bit 0	 Width 32
\ Ethernet_MAC_MACHTLR Register BitField Fetch Words  
: Ethernet_MAC_HTL@ Ethernet_MAC_MACHTLR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MAC_MACMIIAR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACMIIAR 
 %1  0 lshift Ethernet_MAC_MACMIIAR bis!        \ Ethernet_MAC_MB	Bit 0	 Width 1
 %1  1 lshift Ethernet_MAC_MACMIIAR bis!        \ Ethernet_MAC_MW	Bit 1	 Width 1
 %xxx  2 lshift Ethernet_MAC_MACMIIAR bis!        \ Ethernet_MAC_CR	Bit 2	 Width 3
 %xxxxx  6 lshift Ethernet_MAC_MACMIIAR bis!        \ Ethernet_MAC_MR	Bit 6	 Width 5
 %xxxxx  11 lshift Ethernet_MAC_MACMIIAR bis!        \ Ethernet_MAC_PA	Bit 11	 Width 5
\ Ethernet_MAC_MACMIIAR Register BitField Fetch Words  
: Ethernet_MAC_MB@ Ethernet_MAC_MACMIIAR @ %1  0 lshift and 0 rshift ; 
: Ethernet_MAC_MW@ Ethernet_MAC_MACMIIAR @ %1  1 lshift and 1 rshift ; 
: Ethernet_MAC_CR@ Ethernet_MAC_MACMIIAR @ %111  2 lshift and 2 rshift ; 
: Ethernet_MAC_MR@ Ethernet_MAC_MACMIIAR @ %11111  6 lshift and 6 rshift ; 
: Ethernet_MAC_PA@ Ethernet_MAC_MACMIIAR @ %11111  11 lshift and 11 rshift ; 

Ethernet_MAC_MACMIIDR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACMIIDR 
 %xxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACMIIDR bis!        \ Ethernet_MAC_TD	Bit 0	 Width 16
\ Ethernet_MAC_MACMIIDR Register BitField Fetch Words  
: Ethernet_MAC_TD@ Ethernet_MAC_MACMIIDR @ %1111111111111111  0 lshift and 0 rshift ; 

Ethernet_MAC_MACFCR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACFCR 
 %1  0 lshift Ethernet_MAC_MACFCR bis!        \ Ethernet_MAC_FCB	Bit 0	 Width 1
 %1  1 lshift Ethernet_MAC_MACFCR bis!        \ Ethernet_MAC_TFCE	Bit 1	 Width 1
 %1  2 lshift Ethernet_MAC_MACFCR bis!        \ Ethernet_MAC_RFCE	Bit 2	 Width 1
 %1  3 lshift Ethernet_MAC_MACFCR bis!        \ Ethernet_MAC_UPFD	Bit 3	 Width 1
 %xx  4 lshift Ethernet_MAC_MACFCR bis!        \ Ethernet_MAC_PLT	Bit 4	 Width 2
 %1  7 lshift Ethernet_MAC_MACFCR bis!        \ Ethernet_MAC_ZQPD	Bit 7	 Width 1
 %xxxxxxxxxxxxxxxx  16 lshift Ethernet_MAC_MACFCR bis!        \ Ethernet_MAC_PT	Bit 16	 Width 16
\ Ethernet_MAC_MACFCR Register BitField Fetch Words  
: Ethernet_MAC_FCB@ Ethernet_MAC_MACFCR @ %1  0 lshift and 0 rshift ; 
: Ethernet_MAC_TFCE@ Ethernet_MAC_MACFCR @ %1  1 lshift and 1 rshift ; 
: Ethernet_MAC_RFCE@ Ethernet_MAC_MACFCR @ %1  2 lshift and 2 rshift ; 
: Ethernet_MAC_UPFD@ Ethernet_MAC_MACFCR @ %1  3 lshift and 3 rshift ; 
: Ethernet_MAC_PLT@ Ethernet_MAC_MACFCR @ %11  4 lshift and 4 rshift ; 
: Ethernet_MAC_ZQPD@ Ethernet_MAC_MACFCR @ %1  7 lshift and 7 rshift ; 
: Ethernet_MAC_PT@ Ethernet_MAC_MACFCR @ %1111111111111111  16 lshift and 16 rshift ; 

Ethernet_MAC_MACVLANTR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACVLANTR 
 %xxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACVLANTR bis!        \ Ethernet_MAC_VLANTI	Bit 0	 Width 16
 %1  16 lshift Ethernet_MAC_MACVLANTR bis!        \ Ethernet_MAC_VLANTC	Bit 16	 Width 1
\ Ethernet_MAC_MACVLANTR Register BitField Fetch Words  
: Ethernet_MAC_VLANTI@ Ethernet_MAC_MACVLANTR @ %1111111111111111  0 lshift and 0 rshift ; 
: Ethernet_MAC_VLANTC@ Ethernet_MAC_MACVLANTR @ %1  16 lshift and 16 rshift ; 

Ethernet_MAC_MACPMTCSR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACPMTCSR 
 %1  0 lshift Ethernet_MAC_MACPMTCSR bis!        \ Ethernet_MAC_PD	Bit 0	 Width 1
 %1  1 lshift Ethernet_MAC_MACPMTCSR bis!        \ Ethernet_MAC_MPE	Bit 1	 Width 1
 %1  2 lshift Ethernet_MAC_MACPMTCSR bis!        \ Ethernet_MAC_WFE	Bit 2	 Width 1
 %1  5 lshift Ethernet_MAC_MACPMTCSR bis!        \ Ethernet_MAC_MPR	Bit 5	 Width 1
 %1  6 lshift Ethernet_MAC_MACPMTCSR bis!        \ Ethernet_MAC_WFR	Bit 6	 Width 1
 %1  9 lshift Ethernet_MAC_MACPMTCSR bis!        \ Ethernet_MAC_GU	Bit 9	 Width 1
 %1  31 lshift Ethernet_MAC_MACPMTCSR bis!        \ Ethernet_MAC_WFFRPR	Bit 31	 Width 1
\ Ethernet_MAC_MACPMTCSR Register BitField Fetch Words  
: Ethernet_MAC_PD@ Ethernet_MAC_MACPMTCSR @ %1  0 lshift and 0 rshift ; 
: Ethernet_MAC_MPE@ Ethernet_MAC_MACPMTCSR @ %1  1 lshift and 1 rshift ; 
: Ethernet_MAC_WFE@ Ethernet_MAC_MACPMTCSR @ %1  2 lshift and 2 rshift ; 
: Ethernet_MAC_MPR@ Ethernet_MAC_MACPMTCSR @ %1  5 lshift and 5 rshift ; 
: Ethernet_MAC_WFR@ Ethernet_MAC_MACPMTCSR @ %1  6 lshift and 6 rshift ; 
: Ethernet_MAC_GU@ Ethernet_MAC_MACPMTCSR @ %1  9 lshift and 9 rshift ; 
: Ethernet_MAC_WFFRPR@ Ethernet_MAC_MACPMTCSR @ %1  31 lshift and 31 rshift ; 

Ethernet_MAC_MACDBGR (read-only)
$00000000 CONSTANT RESET_Ethernet_MAC_MACDBGR 
 %1  0 lshift Ethernet_MAC_MACDBGR bis!        \ Ethernet_MAC_CR	Bit 0	 Width 1
 %1  1 lshift Ethernet_MAC_MACDBGR bis!        \ Ethernet_MAC_CSR	Bit 1	 Width 1
 %1  2 lshift Ethernet_MAC_MACDBGR bis!        \ Ethernet_MAC_ROR	Bit 2	 Width 1
 %1  3 lshift Ethernet_MAC_MACDBGR bis!        \ Ethernet_MAC_MCF	Bit 3	 Width 1
 %1  4 lshift Ethernet_MAC_MACDBGR bis!        \ Ethernet_MAC_MCP	Bit 4	 Width 1
 %1  5 lshift Ethernet_MAC_MACDBGR bis!        \ Ethernet_MAC_MCFHP	Bit 5	 Width 1
\ Ethernet_MAC_MACDBGR Register BitField Fetch Words  
: Ethernet_MAC_CR@ Ethernet_MAC_MACDBGR @ %1  0 lshift and 0 rshift ; 
: Ethernet_MAC_CSR@ Ethernet_MAC_MACDBGR @ %1  1 lshift and 1 rshift ; 
: Ethernet_MAC_ROR@ Ethernet_MAC_MACDBGR @ %1  2 lshift and 2 rshift ; 
: Ethernet_MAC_MCF@ Ethernet_MAC_MACDBGR @ %1  3 lshift and 3 rshift ; 
: Ethernet_MAC_MCP@ Ethernet_MAC_MACDBGR @ %1  4 lshift and 4 rshift ; 
: Ethernet_MAC_MCFHP@ Ethernet_MAC_MACDBGR @ %1  5 lshift and 5 rshift ; 

Ethernet_MAC_MACSR ()
$00000000 CONSTANT RESET_Ethernet_MAC_MACSR 
 %1  3 lshift Ethernet_MAC_MACSR bis!        \ Ethernet_MAC_PMTS	Bit 3	 Width 1
 %1  4 lshift Ethernet_MAC_MACSR bis!        \ Ethernet_MAC_MMCS	Bit 4	 Width 1
 %1  5 lshift Ethernet_MAC_MACSR bis!        \ Ethernet_MAC_MMCRS	Bit 5	 Width 1
 %1  6 lshift Ethernet_MAC_MACSR bis!        \ Ethernet_MAC_MMCTS	Bit 6	 Width 1
 %1  9 lshift Ethernet_MAC_MACSR bis!        \ Ethernet_MAC_TSTS	Bit 9	 Width 1
\ Ethernet_MAC_MACSR Register BitField Fetch Words  
: Ethernet_MAC_PMTS@ Ethernet_MAC_MACSR @ %1  3 lshift and 3 rshift ; 
: Ethernet_MAC_MMCS@ Ethernet_MAC_MACSR @ %1  4 lshift and 4 rshift ; 
: Ethernet_MAC_MMCRS@ Ethernet_MAC_MACSR @ %1  5 lshift and 5 rshift ; 
: Ethernet_MAC_MMCTS@ Ethernet_MAC_MACSR @ %1  6 lshift and 6 rshift ; 
: Ethernet_MAC_TSTS@ Ethernet_MAC_MACSR @ %1  9 lshift and 9 rshift ; 

Ethernet_MAC_MACIMR (read-write)
$00000000 CONSTANT RESET_Ethernet_MAC_MACIMR 
 %1  3 lshift Ethernet_MAC_MACIMR bis!        \ Ethernet_MAC_PMTIM	Bit 3	 Width 1
 %1  9 lshift Ethernet_MAC_MACIMR bis!        \ Ethernet_MAC_TSTIM	Bit 9	 Width 1
\ Ethernet_MAC_MACIMR Register BitField Fetch Words  
: Ethernet_MAC_PMTIM@ Ethernet_MAC_MACIMR @ %1  3 lshift and 3 rshift ; 
: Ethernet_MAC_TSTIM@ Ethernet_MAC_MACIMR @ %1  9 lshift and 9 rshift ; 

Ethernet_MAC_MACA0HR ()
$0010FFFF CONSTANT RESET_Ethernet_MAC_MACA0HR 
 %xxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACA0HR bis!        \ Ethernet_MAC_MACA0H	Bit 0	 Width 16
 %1  31 lshift Ethernet_MAC_MACA0HR bis!        \ Ethernet_MAC_MO	Bit 31	 Width 1
\ Ethernet_MAC_MACA0HR Register BitField Fetch Words  
: Ethernet_MAC_MACA0H@ Ethernet_MAC_MACA0HR @ %1111111111111111  0 lshift and 0 rshift ; 
: Ethernet_MAC_MO@ Ethernet_MAC_MACA0HR @ %1  31 lshift and 31 rshift ; 

Ethernet_MAC_MACA0LR (read-write)
$FFFFFFFF CONSTANT RESET_Ethernet_MAC_MACA0LR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACA0LR bis!        \ Ethernet_MAC_MACA0L	Bit 0	 Width 32
\ Ethernet_MAC_MACA0LR Register BitField Fetch Words  
: Ethernet_MAC_MACA0L@ Ethernet_MAC_MACA0LR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MAC_MACA1HR (read-write)
$0000FFFF CONSTANT RESET_Ethernet_MAC_MACA1HR 
 %xxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACA1HR bis!        \ Ethernet_MAC_MACA1H	Bit 0	 Width 16
 %xxxxxx  24 lshift Ethernet_MAC_MACA1HR bis!        \ Ethernet_MAC_MBC	Bit 24	 Width 6
 %1  30 lshift Ethernet_MAC_MACA1HR bis!        \ Ethernet_MAC_SA	Bit 30	 Width 1
 %1  31 lshift Ethernet_MAC_MACA1HR bis!        \ Ethernet_MAC_AE	Bit 31	 Width 1
\ Ethernet_MAC_MACA1HR Register BitField Fetch Words  
: Ethernet_MAC_MACA1H@ Ethernet_MAC_MACA1HR @ %1111111111111111  0 lshift and 0 rshift ; 
: Ethernet_MAC_MBC@ Ethernet_MAC_MACA1HR @ %111111  24 lshift and 24 rshift ; 
: Ethernet_MAC_SA@ Ethernet_MAC_MACA1HR @ %1  30 lshift and 30 rshift ; 
: Ethernet_MAC_AE@ Ethernet_MAC_MACA1HR @ %1  31 lshift and 31 rshift ; 

Ethernet_MAC_MACA1LR (read-write)
$FFFFFFFF CONSTANT RESET_Ethernet_MAC_MACA1LR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACA1LR bis!        \ Ethernet_MAC_MACA1LR	Bit 0	 Width 32
\ Ethernet_MAC_MACA1LR Register BitField Fetch Words  
: Ethernet_MAC_MACA1LR@ Ethernet_MAC_MACA1LR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MAC_MACA2HR (read-write)
$0000FFFF CONSTANT RESET_Ethernet_MAC_MACA2HR 
 %xxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACA2HR bis!        \ Ethernet_MAC_MAC2AH	Bit 0	 Width 16
 %xxxxxx  24 lshift Ethernet_MAC_MACA2HR bis!        \ Ethernet_MAC_MBC	Bit 24	 Width 6
 %1  30 lshift Ethernet_MAC_MACA2HR bis!        \ Ethernet_MAC_SA	Bit 30	 Width 1
 %1  31 lshift Ethernet_MAC_MACA2HR bis!        \ Ethernet_MAC_AE	Bit 31	 Width 1
\ Ethernet_MAC_MACA2HR Register BitField Fetch Words  
: Ethernet_MAC_MAC2AH@ Ethernet_MAC_MACA2HR @ %1111111111111111  0 lshift and 0 rshift ; 
: Ethernet_MAC_MBC@ Ethernet_MAC_MACA2HR @ %111111  24 lshift and 24 rshift ; 
: Ethernet_MAC_SA@ Ethernet_MAC_MACA2HR @ %1  30 lshift and 30 rshift ; 
: Ethernet_MAC_AE@ Ethernet_MAC_MACA2HR @ %1  31 lshift and 31 rshift ; 

Ethernet_MAC_MACA2LR (read-write)
$FFFFFFFF CONSTANT RESET_Ethernet_MAC_MACA2LR 
 % 0 lshift Ethernet_MAC_MACA2LR bis!        \ Ethernet_MAC_MACA2L	Bit 0	 Width 31
\ Ethernet_MAC_MACA2LR Register BitField Fetch Words  
: Ethernet_MAC_MACA2L@ Ethernet_MAC_MACA2LR @ % 0 lshift and 0 rshift ; 

Ethernet_MAC_MACA3HR (read-write)
$0000FFFF CONSTANT RESET_Ethernet_MAC_MACA3HR 
 %xxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACA3HR bis!        \ Ethernet_MAC_MACA3H	Bit 0	 Width 16
 %xxxxxx  24 lshift Ethernet_MAC_MACA3HR bis!        \ Ethernet_MAC_MBC	Bit 24	 Width 6
 %1  30 lshift Ethernet_MAC_MACA3HR bis!        \ Ethernet_MAC_SA	Bit 30	 Width 1
 %1  31 lshift Ethernet_MAC_MACA3HR bis!        \ Ethernet_MAC_AE	Bit 31	 Width 1
\ Ethernet_MAC_MACA3HR Register BitField Fetch Words  
: Ethernet_MAC_MACA3H@ Ethernet_MAC_MACA3HR @ %1111111111111111  0 lshift and 0 rshift ; 
: Ethernet_MAC_MBC@ Ethernet_MAC_MACA3HR @ %111111  24 lshift and 24 rshift ; 
: Ethernet_MAC_SA@ Ethernet_MAC_MACA3HR @ %1  30 lshift and 30 rshift ; 
: Ethernet_MAC_AE@ Ethernet_MAC_MACA3HR @ %1  31 lshift and 31 rshift ; 

Ethernet_MAC_MACA3LR (read-write)
$FFFFFFFF CONSTANT RESET_Ethernet_MAC_MACA3LR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MAC_MACA3LR bis!        \ Ethernet_MAC_MBCA3L	Bit 0	 Width 32
\ Ethernet_MAC_MACA3LR Register BitField Fetch Words  
: Ethernet_MAC_MBCA3L@ Ethernet_MAC_MACA3LR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### Ethernet_MMC ###################################
Ethernet_MMC_MMCCR (read-write)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCCR 
 %1  0 lshift Ethernet_MMC_MMCCR bis!        \ Ethernet_MMC_CR	Bit 0	 Width 1
 %1  1 lshift Ethernet_MMC_MMCCR bis!        \ Ethernet_MMC_CSR	Bit 1	 Width 1
 %1  2 lshift Ethernet_MMC_MMCCR bis!        \ Ethernet_MMC_ROR	Bit 2	 Width 1
 %1  3 lshift Ethernet_MMC_MMCCR bis!        \ Ethernet_MMC_MCF	Bit 3	 Width 1
 %1  4 lshift Ethernet_MMC_MMCCR bis!        \ Ethernet_MMC_MCP	Bit 4	 Width 1
 %1  5 lshift Ethernet_MMC_MMCCR bis!        \ Ethernet_MMC_MCFHP	Bit 5	 Width 1
\ Ethernet_MMC_MMCCR Register BitField Fetch Words  
: Ethernet_MMC_CR@ Ethernet_MMC_MMCCR @ %1  0 lshift and 0 rshift ; 
: Ethernet_MMC_CSR@ Ethernet_MMC_MMCCR @ %1  1 lshift and 1 rshift ; 
: Ethernet_MMC_ROR@ Ethernet_MMC_MMCCR @ %1  2 lshift and 2 rshift ; 
: Ethernet_MMC_MCF@ Ethernet_MMC_MMCCR @ %1  3 lshift and 3 rshift ; 
: Ethernet_MMC_MCP@ Ethernet_MMC_MMCCR @ %1  4 lshift and 4 rshift ; 
: Ethernet_MMC_MCFHP@ Ethernet_MMC_MMCCR @ %1  5 lshift and 5 rshift ; 

Ethernet_MMC_MMCRIR (read-write)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCRIR 
 %1  5 lshift Ethernet_MMC_MMCRIR bis!        \ Ethernet_MMC_RFCES	Bit 5	 Width 1
 %1  6 lshift Ethernet_MMC_MMCRIR bis!        \ Ethernet_MMC_RFAES	Bit 6	 Width 1
 %1  17 lshift Ethernet_MMC_MMCRIR bis!        \ Ethernet_MMC_RGUFS	Bit 17	 Width 1
\ Ethernet_MMC_MMCRIR Register BitField Fetch Words  
: Ethernet_MMC_RFCES@ Ethernet_MMC_MMCRIR @ %1  5 lshift and 5 rshift ; 
: Ethernet_MMC_RFAES@ Ethernet_MMC_MMCRIR @ %1  6 lshift and 6 rshift ; 
: Ethernet_MMC_RGUFS@ Ethernet_MMC_MMCRIR @ %1  17 lshift and 17 rshift ; 

Ethernet_MMC_MMCTIR (read-only)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCTIR 
 %1  14 lshift Ethernet_MMC_MMCTIR bis!        \ Ethernet_MMC_TGFSCS	Bit 14	 Width 1
 %1  15 lshift Ethernet_MMC_MMCTIR bis!        \ Ethernet_MMC_TGFMSCS	Bit 15	 Width 1
 %1  21 lshift Ethernet_MMC_MMCTIR bis!        \ Ethernet_MMC_TGFS	Bit 21	 Width 1
\ Ethernet_MMC_MMCTIR Register BitField Fetch Words  
: Ethernet_MMC_TGFSCS@ Ethernet_MMC_MMCTIR @ %1  14 lshift and 14 rshift ; 
: Ethernet_MMC_TGFMSCS@ Ethernet_MMC_MMCTIR @ %1  15 lshift and 15 rshift ; 
: Ethernet_MMC_TGFS@ Ethernet_MMC_MMCTIR @ %1  21 lshift and 21 rshift ; 

Ethernet_MMC_MMCRIMR (read-write)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCRIMR 
 %1  5 lshift Ethernet_MMC_MMCRIMR bis!        \ Ethernet_MMC_RFCEM	Bit 5	 Width 1
 %1  6 lshift Ethernet_MMC_MMCRIMR bis!        \ Ethernet_MMC_RFAEM	Bit 6	 Width 1
 %1  17 lshift Ethernet_MMC_MMCRIMR bis!        \ Ethernet_MMC_RGUFM	Bit 17	 Width 1
\ Ethernet_MMC_MMCRIMR Register BitField Fetch Words  
: Ethernet_MMC_RFCEM@ Ethernet_MMC_MMCRIMR @ %1  5 lshift and 5 rshift ; 
: Ethernet_MMC_RFAEM@ Ethernet_MMC_MMCRIMR @ %1  6 lshift and 6 rshift ; 
: Ethernet_MMC_RGUFM@ Ethernet_MMC_MMCRIMR @ %1  17 lshift and 17 rshift ; 

Ethernet_MMC_MMCTIMR (read-write)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCTIMR 
 %1  14 lshift Ethernet_MMC_MMCTIMR bis!        \ Ethernet_MMC_TGFSCM	Bit 14	 Width 1
 %1  15 lshift Ethernet_MMC_MMCTIMR bis!        \ Ethernet_MMC_TGFMSCM	Bit 15	 Width 1
 %1  16 lshift Ethernet_MMC_MMCTIMR bis!        \ Ethernet_MMC_TGFM	Bit 16	 Width 1
\ Ethernet_MMC_MMCTIMR Register BitField Fetch Words  
: Ethernet_MMC_TGFSCM@ Ethernet_MMC_MMCTIMR @ %1  14 lshift and 14 rshift ; 
: Ethernet_MMC_TGFMSCM@ Ethernet_MMC_MMCTIMR @ %1  15 lshift and 15 rshift ; 
: Ethernet_MMC_TGFM@ Ethernet_MMC_MMCTIMR @ %1  16 lshift and 16 rshift ; 

Ethernet_MMC_MMCTGFSCCR (read-only)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCTGFSCCR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MMC_MMCTGFSCCR bis!        \ Ethernet_MMC_TGFSCC	Bit 0	 Width 32
\ Ethernet_MMC_MMCTGFSCCR Register BitField Fetch Words  
: Ethernet_MMC_TGFSCC@ Ethernet_MMC_MMCTGFSCCR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MMC_MMCTGFMSCCR (read-only)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCTGFMSCCR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MMC_MMCTGFMSCCR bis!        \ Ethernet_MMC_TGFMSCC	Bit 0	 Width 32
\ Ethernet_MMC_MMCTGFMSCCR Register BitField Fetch Words  
: Ethernet_MMC_TGFMSCC@ Ethernet_MMC_MMCTGFMSCCR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MMC_MMCTGFCR (read-only)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCTGFCR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MMC_MMCTGFCR bis!        \ Ethernet_MMC_TGFC	Bit 0	 Width 32
\ Ethernet_MMC_MMCTGFCR Register BitField Fetch Words  
: Ethernet_MMC_TGFC@ Ethernet_MMC_MMCTGFCR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MMC_MMCRFCECR (read-only)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCRFCECR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MMC_MMCRFCECR bis!        \ Ethernet_MMC_RFCFC	Bit 0	 Width 32
\ Ethernet_MMC_MMCRFCECR Register BitField Fetch Words  
: Ethernet_MMC_RFCFC@ Ethernet_MMC_MMCRFCECR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MMC_MMCRFAECR (read-only)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCRFAECR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MMC_MMCRFAECR bis!        \ Ethernet_MMC_RFAEC	Bit 0	 Width 32
\ Ethernet_MMC_MMCRFAECR Register BitField Fetch Words  
: Ethernet_MMC_RFAEC@ Ethernet_MMC_MMCRFAECR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_MMC_MMCRGUFCR (read-only)
$00000000 CONSTANT RESET_Ethernet_MMC_MMCRGUFCR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_MMC_MMCRGUFCR bis!        \ Ethernet_MMC_RGUFC	Bit 0	 Width 32
\ Ethernet_MMC_MMCRGUFCR Register BitField Fetch Words  
: Ethernet_MMC_RGUFC@ Ethernet_MMC_MMCRGUFCR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### Ethernet_PTP ###################################
Ethernet_PTP_PTPTSCR (read-write)
$00002000 CONSTANT RESET_Ethernet_PTP_PTPTSCR 
 %1  0 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSE	Bit 0	 Width 1
 %1  1 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSFCU	Bit 1	 Width 1
 %1  10 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSPTPPSV2E	Bit 10	 Width 1
 %1  11 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSPTPOEFE	Bit 11	 Width 1
 %1  12 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSIPV6FE	Bit 12	 Width 1
 %1  13 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSIPV4FE	Bit 13	 Width 1
 %1  14 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSEME	Bit 14	 Width 1
 %1  15 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSMRME	Bit 15	 Width 1
 %xx  16 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSCNT	Bit 16	 Width 2
 %1  18 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSPFFMAE	Bit 18	 Width 1
 %1  2 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSTI	Bit 2	 Width 1
 %1  3 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSTU	Bit 3	 Width 1
 %1  4 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSITE	Bit 4	 Width 1
 %1  5 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TTSARU	Bit 5	 Width 1
 %1  8 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSARFE	Bit 8	 Width 1
 %1  9 lshift Ethernet_PTP_PTPTSCR bis!        \ Ethernet_PTP_TSSSR	Bit 9	 Width 1
\ Ethernet_PTP_PTPTSCR Register BitField Fetch Words  
: Ethernet_PTP_TSE@ Ethernet_PTP_PTPTSCR @ %1  0 lshift and 0 rshift ; 
: Ethernet_PTP_TSFCU@ Ethernet_PTP_PTPTSCR @ %1  1 lshift and 1 rshift ; 
: Ethernet_PTP_TSPTPPSV2E@ Ethernet_PTP_PTPTSCR @ %1  10 lshift and 10 rshift ; 
: Ethernet_PTP_TSSPTPOEFE@ Ethernet_PTP_PTPTSCR @ %1  11 lshift and 11 rshift ; 
: Ethernet_PTP_TSSIPV6FE@ Ethernet_PTP_PTPTSCR @ %1  12 lshift and 12 rshift ; 
: Ethernet_PTP_TSSIPV4FE@ Ethernet_PTP_PTPTSCR @ %1  13 lshift and 13 rshift ; 
: Ethernet_PTP_TSSEME@ Ethernet_PTP_PTPTSCR @ %1  14 lshift and 14 rshift ; 
: Ethernet_PTP_TSSMRME@ Ethernet_PTP_PTPTSCR @ %1  15 lshift and 15 rshift ; 
: Ethernet_PTP_TSCNT@ Ethernet_PTP_PTPTSCR @ %11  16 lshift and 16 rshift ; 
: Ethernet_PTP_TSPFFMAE@ Ethernet_PTP_PTPTSCR @ %1  18 lshift and 18 rshift ; 
: Ethernet_PTP_TSSTI@ Ethernet_PTP_PTPTSCR @ %1  2 lshift and 2 rshift ; 
: Ethernet_PTP_TSSTU@ Ethernet_PTP_PTPTSCR @ %1  3 lshift and 3 rshift ; 
: Ethernet_PTP_TSITE@ Ethernet_PTP_PTPTSCR @ %1  4 lshift and 4 rshift ; 
: Ethernet_PTP_TTSARU@ Ethernet_PTP_PTPTSCR @ %1  5 lshift and 5 rshift ; 
: Ethernet_PTP_TSSARFE@ Ethernet_PTP_PTPTSCR @ %1  8 lshift and 8 rshift ; 
: Ethernet_PTP_TSSSR@ Ethernet_PTP_PTPTSCR @ %1  9 lshift and 9 rshift ; 

Ethernet_PTP_PTPSSIR (read-write)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPSSIR 
 %xxxxxxxx  0 lshift Ethernet_PTP_PTPSSIR bis!        \ Ethernet_PTP_STSSI	Bit 0	 Width 8
\ Ethernet_PTP_PTPSSIR Register BitField Fetch Words  
: Ethernet_PTP_STSSI@ Ethernet_PTP_PTPSSIR @ %11111111  0 lshift and 0 rshift ; 

Ethernet_PTP_PTPTSHR (read-only)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTSHR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_PTP_PTPTSHR bis!        \ Ethernet_PTP_STS	Bit 0	 Width 32
\ Ethernet_PTP_PTPTSHR Register BitField Fetch Words  
: Ethernet_PTP_STS@ Ethernet_PTP_PTPTSHR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_PTP_PTPTSLR (read-only)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTSLR 
 % 0 lshift Ethernet_PTP_PTPTSLR bis!        \ Ethernet_PTP_STSS	Bit 0	 Width 31
 %1  31 lshift Ethernet_PTP_PTPTSLR bis!        \ Ethernet_PTP_STPNS	Bit 31	 Width 1
\ Ethernet_PTP_PTPTSLR Register BitField Fetch Words  
: Ethernet_PTP_STSS@ Ethernet_PTP_PTPTSLR @ % 0 lshift and 0 rshift ; 
: Ethernet_PTP_STPNS@ Ethernet_PTP_PTPTSLR @ %1  31 lshift and 31 rshift ; 

Ethernet_PTP_PTPTSHUR (read-write)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTSHUR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_PTP_PTPTSHUR bis!        \ Ethernet_PTP_TSUS	Bit 0	 Width 32
\ Ethernet_PTP_PTPTSHUR Register BitField Fetch Words  
: Ethernet_PTP_TSUS@ Ethernet_PTP_PTPTSHUR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_PTP_PTPTSLUR (read-write)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTSLUR 
 % 0 lshift Ethernet_PTP_PTPTSLUR bis!        \ Ethernet_PTP_TSUSS	Bit 0	 Width 31
 %1  31 lshift Ethernet_PTP_PTPTSLUR bis!        \ Ethernet_PTP_TSUPNS	Bit 31	 Width 1
\ Ethernet_PTP_PTPTSLUR Register BitField Fetch Words  
: Ethernet_PTP_TSUSS@ Ethernet_PTP_PTPTSLUR @ % 0 lshift and 0 rshift ; 
: Ethernet_PTP_TSUPNS@ Ethernet_PTP_PTPTSLUR @ %1  31 lshift and 31 rshift ; 

Ethernet_PTP_PTPTSAR (read-write)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTSAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_PTP_PTPTSAR bis!        \ Ethernet_PTP_TSA	Bit 0	 Width 32
\ Ethernet_PTP_PTPTSAR Register BitField Fetch Words  
: Ethernet_PTP_TSA@ Ethernet_PTP_PTPTSAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_PTP_PTPTTHR (read-write)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTTHR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_PTP_PTPTTHR bis!        \ Ethernet_PTP_TTSH	Bit 0	 Width 32
\ Ethernet_PTP_PTPTTHR Register BitField Fetch Words  
: Ethernet_PTP_TTSH@ Ethernet_PTP_PTPTTHR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_PTP_PTPTTLR (read-write)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTTLR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_PTP_PTPTTLR bis!        \ Ethernet_PTP_TTSL	Bit 0	 Width 32
\ Ethernet_PTP_PTPTTLR Register BitField Fetch Words  
: Ethernet_PTP_TTSL@ Ethernet_PTP_PTPTTLR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_PTP_PTPTSSR (read-only)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPTSSR 
 %1  0 lshift Ethernet_PTP_PTPTSSR bis!        \ Ethernet_PTP_TSSO	Bit 0	 Width 1
 %1  1 lshift Ethernet_PTP_PTPTSSR bis!        \ Ethernet_PTP_TSTTR	Bit 1	 Width 1
\ Ethernet_PTP_PTPTSSR Register BitField Fetch Words  
: Ethernet_PTP_TSSO@ Ethernet_PTP_PTPTSSR @ %1  0 lshift and 0 rshift ; 
: Ethernet_PTP_TSTTR@ Ethernet_PTP_PTPTSSR @ %1  1 lshift and 1 rshift ; 

Ethernet_PTP_PTPPPSCR (read-only)
$00000000 CONSTANT RESET_Ethernet_PTP_PTPPPSCR 
 %1  0 lshift Ethernet_PTP_PTPPPSCR bis!        \ Ethernet_PTP_TSSO	Bit 0	 Width 1
 %1  1 lshift Ethernet_PTP_PTPPPSCR bis!        \ Ethernet_PTP_TSTTR	Bit 1	 Width 1
\ Ethernet_PTP_PTPPPSCR Register BitField Fetch Words  
: Ethernet_PTP_TSSO@ Ethernet_PTP_PTPPPSCR @ %1  0 lshift and 0 rshift ; 
: Ethernet_PTP_TSTTR@ Ethernet_PTP_PTPPPSCR @ %1  1 lshift and 1 rshift ; 

                    
################################### Ethernet_DMA ###################################
Ethernet_DMA_DMABMR (read-write)
$00002101 CONSTANT RESET_Ethernet_DMA_DMABMR 
 %1  0 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_SR	Bit 0	 Width 1
 %1  1 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_DA	Bit 1	 Width 1
 %xxxxx  2 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_DSL	Bit 2	 Width 5
 %1  7 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_EDFE	Bit 7	 Width 1
 %xxxxxx  8 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_PBL	Bit 8	 Width 6
 %xx  14 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_RTPR	Bit 14	 Width 2
 %1  16 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_FB	Bit 16	 Width 1
 %xxxxxx  17 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_RDP	Bit 17	 Width 6
 %1  23 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_USP	Bit 23	 Width 1
 %1  24 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_FPM	Bit 24	 Width 1
 %1  25 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_AAB	Bit 25	 Width 1
 %1  26 lshift Ethernet_DMA_DMABMR bis!        \ Ethernet_DMA_MB	Bit 26	 Width 1
\ Ethernet_DMA_DMABMR Register BitField Fetch Words  
: Ethernet_DMA_SR@ Ethernet_DMA_DMABMR @ %1  0 lshift and 0 rshift ; 
: Ethernet_DMA_DA@ Ethernet_DMA_DMABMR @ %1  1 lshift and 1 rshift ; 
: Ethernet_DMA_DSL@ Ethernet_DMA_DMABMR @ %11111  2 lshift and 2 rshift ; 
: Ethernet_DMA_EDFE@ Ethernet_DMA_DMABMR @ %1  7 lshift and 7 rshift ; 
: Ethernet_DMA_PBL@ Ethernet_DMA_DMABMR @ %111111  8 lshift and 8 rshift ; 
: Ethernet_DMA_RTPR@ Ethernet_DMA_DMABMR @ %11  14 lshift and 14 rshift ; 
: Ethernet_DMA_FB@ Ethernet_DMA_DMABMR @ %1  16 lshift and 16 rshift ; 
: Ethernet_DMA_RDP@ Ethernet_DMA_DMABMR @ %111111  17 lshift and 17 rshift ; 
: Ethernet_DMA_USP@ Ethernet_DMA_DMABMR @ %1  23 lshift and 23 rshift ; 
: Ethernet_DMA_FPM@ Ethernet_DMA_DMABMR @ %1  24 lshift and 24 rshift ; 
: Ethernet_DMA_AAB@ Ethernet_DMA_DMABMR @ %1  25 lshift and 25 rshift ; 
: Ethernet_DMA_MB@ Ethernet_DMA_DMABMR @ %1  26 lshift and 26 rshift ; 

Ethernet_DMA_DMATPDR (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMATPDR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMATPDR bis!        \ Ethernet_DMA_TPD	Bit 0	 Width 32
\ Ethernet_DMA_DMATPDR Register BitField Fetch Words  
: Ethernet_DMA_TPD@ Ethernet_DMA_DMATPDR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMARPDR (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMARPDR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMARPDR bis!        \ Ethernet_DMA_RPD	Bit 0	 Width 32
\ Ethernet_DMA_DMARPDR Register BitField Fetch Words  
: Ethernet_DMA_RPD@ Ethernet_DMA_DMARPDR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMARDLAR (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMARDLAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMARDLAR bis!        \ Ethernet_DMA_SRL	Bit 0	 Width 32
\ Ethernet_DMA_DMARDLAR Register BitField Fetch Words  
: Ethernet_DMA_SRL@ Ethernet_DMA_DMARDLAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMATDLAR (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMATDLAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMATDLAR bis!        \ Ethernet_DMA_STL	Bit 0	 Width 32
\ Ethernet_DMA_DMATDLAR Register BitField Fetch Words  
: Ethernet_DMA_STL@ Ethernet_DMA_DMATDLAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMASR ()
$00000000 CONSTANT RESET_Ethernet_DMA_DMASR 
 %1  0 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_TS	Bit 0	 Width 1
 %1  1 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_TPSS	Bit 1	 Width 1
 %1  2 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_TBUS	Bit 2	 Width 1
 %1  3 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_TJTS	Bit 3	 Width 1
 %1  4 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_ROS	Bit 4	 Width 1
 %1  5 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_TUS	Bit 5	 Width 1
 %1  6 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_RS	Bit 6	 Width 1
 %1  7 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_RBUS	Bit 7	 Width 1
 %1  8 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_RPSS	Bit 8	 Width 1
 %1  9 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_PWTS	Bit 9	 Width 1
 %1  10 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_ETS	Bit 10	 Width 1
 %1  13 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_FBES	Bit 13	 Width 1
 %1  14 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_ERS	Bit 14	 Width 1
 %1  15 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_AIS	Bit 15	 Width 1
 %1  16 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_NIS	Bit 16	 Width 1
 %xxx  17 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_RPS	Bit 17	 Width 3
 %xxx  20 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_TPS	Bit 20	 Width 3
 %xxx  23 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_EBS	Bit 23	 Width 3
 %1  27 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_MMCS	Bit 27	 Width 1
 %1  28 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_PMTS	Bit 28	 Width 1
 %1  29 lshift Ethernet_DMA_DMASR bis!        \ Ethernet_DMA_TSTS	Bit 29	 Width 1
\ Ethernet_DMA_DMASR Register BitField Fetch Words  
: Ethernet_DMA_TS@ Ethernet_DMA_DMASR @ %1  0 lshift and 0 rshift ; 
: Ethernet_DMA_TPSS@ Ethernet_DMA_DMASR @ %1  1 lshift and 1 rshift ; 
: Ethernet_DMA_TBUS@ Ethernet_DMA_DMASR @ %1  2 lshift and 2 rshift ; 
: Ethernet_DMA_TJTS@ Ethernet_DMA_DMASR @ %1  3 lshift and 3 rshift ; 
: Ethernet_DMA_ROS@ Ethernet_DMA_DMASR @ %1  4 lshift and 4 rshift ; 
: Ethernet_DMA_TUS@ Ethernet_DMA_DMASR @ %1  5 lshift and 5 rshift ; 
: Ethernet_DMA_RS@ Ethernet_DMA_DMASR @ %1  6 lshift and 6 rshift ; 
: Ethernet_DMA_RBUS@ Ethernet_DMA_DMASR @ %1  7 lshift and 7 rshift ; 
: Ethernet_DMA_RPSS@ Ethernet_DMA_DMASR @ %1  8 lshift and 8 rshift ; 
: Ethernet_DMA_PWTS@ Ethernet_DMA_DMASR @ %1  9 lshift and 9 rshift ; 
: Ethernet_DMA_ETS@ Ethernet_DMA_DMASR @ %1  10 lshift and 10 rshift ; 
: Ethernet_DMA_FBES@ Ethernet_DMA_DMASR @ %1  13 lshift and 13 rshift ; 
: Ethernet_DMA_ERS@ Ethernet_DMA_DMASR @ %1  14 lshift and 14 rshift ; 
: Ethernet_DMA_AIS@ Ethernet_DMA_DMASR @ %1  15 lshift and 15 rshift ; 
: Ethernet_DMA_NIS@ Ethernet_DMA_DMASR @ %1  16 lshift and 16 rshift ; 
: Ethernet_DMA_RPS@ Ethernet_DMA_DMASR @ %111  17 lshift and 17 rshift ; 
: Ethernet_DMA_TPS@ Ethernet_DMA_DMASR @ %111  20 lshift and 20 rshift ; 
: Ethernet_DMA_EBS@ Ethernet_DMA_DMASR @ %111  23 lshift and 23 rshift ; 
: Ethernet_DMA_MMCS@ Ethernet_DMA_DMASR @ %1  27 lshift and 27 rshift ; 
: Ethernet_DMA_PMTS@ Ethernet_DMA_DMASR @ %1  28 lshift and 28 rshift ; 
: Ethernet_DMA_TSTS@ Ethernet_DMA_DMASR @ %1  29 lshift and 29 rshift ; 

Ethernet_DMA_DMAOMR (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMAOMR 
 %1  1 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_SR	Bit 1	 Width 1
 %1  2 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_OSF	Bit 2	 Width 1
 %xx  3 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_RTC	Bit 3	 Width 2
 %1  6 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_FUGF	Bit 6	 Width 1
 %1  7 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_FEF	Bit 7	 Width 1
 %1  13 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_ST	Bit 13	 Width 1
 %xxx  14 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_TTC	Bit 14	 Width 3
 %1  20 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_FTF	Bit 20	 Width 1
 %1  21 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_TSF	Bit 21	 Width 1
 %1  24 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_DFRF	Bit 24	 Width 1
 %1  25 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_RSF	Bit 25	 Width 1
 %1  26 lshift Ethernet_DMA_DMAOMR bis!        \ Ethernet_DMA_DTCEFD	Bit 26	 Width 1
\ Ethernet_DMA_DMAOMR Register BitField Fetch Words  
: Ethernet_DMA_SR@ Ethernet_DMA_DMAOMR @ %1  1 lshift and 1 rshift ; 
: Ethernet_DMA_OSF@ Ethernet_DMA_DMAOMR @ %1  2 lshift and 2 rshift ; 
: Ethernet_DMA_RTC@ Ethernet_DMA_DMAOMR @ %11  3 lshift and 3 rshift ; 
: Ethernet_DMA_FUGF@ Ethernet_DMA_DMAOMR @ %1  6 lshift and 6 rshift ; 
: Ethernet_DMA_FEF@ Ethernet_DMA_DMAOMR @ %1  7 lshift and 7 rshift ; 
: Ethernet_DMA_ST@ Ethernet_DMA_DMAOMR @ %1  13 lshift and 13 rshift ; 
: Ethernet_DMA_TTC@ Ethernet_DMA_DMAOMR @ %111  14 lshift and 14 rshift ; 
: Ethernet_DMA_FTF@ Ethernet_DMA_DMAOMR @ %1  20 lshift and 20 rshift ; 
: Ethernet_DMA_TSF@ Ethernet_DMA_DMAOMR @ %1  21 lshift and 21 rshift ; 
: Ethernet_DMA_DFRF@ Ethernet_DMA_DMAOMR @ %1  24 lshift and 24 rshift ; 
: Ethernet_DMA_RSF@ Ethernet_DMA_DMAOMR @ %1  25 lshift and 25 rshift ; 
: Ethernet_DMA_DTCEFD@ Ethernet_DMA_DMAOMR @ %1  26 lshift and 26 rshift ; 

Ethernet_DMA_DMAIER (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMAIER 
 %1  0 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_TIE	Bit 0	 Width 1
 %1  1 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_TPSIE	Bit 1	 Width 1
 %1  2 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_TBUIE	Bit 2	 Width 1
 %1  3 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_TJTIE	Bit 3	 Width 1
 %1  4 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_ROIE	Bit 4	 Width 1
 %1  5 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_TUIE	Bit 5	 Width 1
 %1  6 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_RIE	Bit 6	 Width 1
 %1  7 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_RBUIE	Bit 7	 Width 1
 %1  8 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_RPSIE	Bit 8	 Width 1
 %1  9 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_RWTIE	Bit 9	 Width 1
 %1  10 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_ETIE	Bit 10	 Width 1
 %1  13 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_FBEIE	Bit 13	 Width 1
 %1  14 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_ERIE	Bit 14	 Width 1
 %1  15 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_AISE	Bit 15	 Width 1
 %1  16 lshift Ethernet_DMA_DMAIER bis!        \ Ethernet_DMA_NISE	Bit 16	 Width 1
\ Ethernet_DMA_DMAIER Register BitField Fetch Words  
: Ethernet_DMA_TIE@ Ethernet_DMA_DMAIER @ %1  0 lshift and 0 rshift ; 
: Ethernet_DMA_TPSIE@ Ethernet_DMA_DMAIER @ %1  1 lshift and 1 rshift ; 
: Ethernet_DMA_TBUIE@ Ethernet_DMA_DMAIER @ %1  2 lshift and 2 rshift ; 
: Ethernet_DMA_TJTIE@ Ethernet_DMA_DMAIER @ %1  3 lshift and 3 rshift ; 
: Ethernet_DMA_ROIE@ Ethernet_DMA_DMAIER @ %1  4 lshift and 4 rshift ; 
: Ethernet_DMA_TUIE@ Ethernet_DMA_DMAIER @ %1  5 lshift and 5 rshift ; 
: Ethernet_DMA_RIE@ Ethernet_DMA_DMAIER @ %1  6 lshift and 6 rshift ; 
: Ethernet_DMA_RBUIE@ Ethernet_DMA_DMAIER @ %1  7 lshift and 7 rshift ; 
: Ethernet_DMA_RPSIE@ Ethernet_DMA_DMAIER @ %1  8 lshift and 8 rshift ; 
: Ethernet_DMA_RWTIE@ Ethernet_DMA_DMAIER @ %1  9 lshift and 9 rshift ; 
: Ethernet_DMA_ETIE@ Ethernet_DMA_DMAIER @ %1  10 lshift and 10 rshift ; 
: Ethernet_DMA_FBEIE@ Ethernet_DMA_DMAIER @ %1  13 lshift and 13 rshift ; 
: Ethernet_DMA_ERIE@ Ethernet_DMA_DMAIER @ %1  14 lshift and 14 rshift ; 
: Ethernet_DMA_AISE@ Ethernet_DMA_DMAIER @ %1  15 lshift and 15 rshift ; 
: Ethernet_DMA_NISE@ Ethernet_DMA_DMAIER @ %1  16 lshift and 16 rshift ; 

Ethernet_DMA_DMAMFBOCR (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMAMFBOCR 
 %xxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMAMFBOCR bis!        \ Ethernet_DMA_MFC	Bit 0	 Width 16
 %1  16 lshift Ethernet_DMA_DMAMFBOCR bis!        \ Ethernet_DMA_OMFC	Bit 16	 Width 1
 % 17 lshift Ethernet_DMA_DMAMFBOCR bis!        \ Ethernet_DMA_MFA	Bit 17	 Width 11
 %1  28 lshift Ethernet_DMA_DMAMFBOCR bis!        \ Ethernet_DMA_OFOC	Bit 28	 Width 1
\ Ethernet_DMA_DMAMFBOCR Register BitField Fetch Words  
: Ethernet_DMA_MFC@ Ethernet_DMA_DMAMFBOCR @ %1111111111111111  0 lshift and 0 rshift ; 
: Ethernet_DMA_OMFC@ Ethernet_DMA_DMAMFBOCR @ %1  16 lshift and 16 rshift ; 
: Ethernet_DMA_MFA@ Ethernet_DMA_DMAMFBOCR @ % 17 lshift and 17 rshift ; 
: Ethernet_DMA_OFOC@ Ethernet_DMA_DMAMFBOCR @ %1  28 lshift and 28 rshift ; 

Ethernet_DMA_DMARSWTR (read-write)
$00000000 CONSTANT RESET_Ethernet_DMA_DMARSWTR 
 %xxxxxxxx  0 lshift Ethernet_DMA_DMARSWTR bis!        \ Ethernet_DMA_RSWTC	Bit 0	 Width 8
\ Ethernet_DMA_DMARSWTR Register BitField Fetch Words  
: Ethernet_DMA_RSWTC@ Ethernet_DMA_DMARSWTR @ %11111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMACHTDR (read-only)
$00000000 CONSTANT RESET_Ethernet_DMA_DMACHTDR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMACHTDR bis!        \ Ethernet_DMA_HTDAP	Bit 0	 Width 32
\ Ethernet_DMA_DMACHTDR Register BitField Fetch Words  
: Ethernet_DMA_HTDAP@ Ethernet_DMA_DMACHTDR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMACHRDR (read-only)
$00000000 CONSTANT RESET_Ethernet_DMA_DMACHRDR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMACHRDR bis!        \ Ethernet_DMA_HRDAP	Bit 0	 Width 32
\ Ethernet_DMA_DMACHRDR Register BitField Fetch Words  
: Ethernet_DMA_HRDAP@ Ethernet_DMA_DMACHRDR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMACHTBAR (read-only)
$00000000 CONSTANT RESET_Ethernet_DMA_DMACHTBAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMACHTBAR bis!        \ Ethernet_DMA_HTBAP	Bit 0	 Width 32
\ Ethernet_DMA_DMACHTBAR Register BitField Fetch Words  
: Ethernet_DMA_HTBAP@ Ethernet_DMA_DMACHTBAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

Ethernet_DMA_DMACHRBAR (read-only)
$00000000 CONSTANT RESET_Ethernet_DMA_DMACHRBAR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift Ethernet_DMA_DMACHRBAR bis!        \ Ethernet_DMA_HRBAP	Bit 0	 Width 32
\ Ethernet_DMA_DMACHRBAR Register BitField Fetch Words  
: Ethernet_DMA_HRBAP@ Ethernet_DMA_DMACHRBAR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### CRC ###################################
CRC_DR (read-write)
$FFFFFFFF CONSTANT RESET_CRC_DR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift CRC_DR bis!        \ CRC_DR	Bit 0	 Width 32
\ CRC_DR Register BitField Fetch Words  
: CRC_DR@ CRC_DR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

CRC_IDR (read-write)
$00000000 CONSTANT RESET_CRC_IDR 
 %xxxxxxxx  0 lshift CRC_IDR bis!        \ CRC_IDR	Bit 0	 Width 8
\ CRC_IDR Register BitField Fetch Words  
: CRC_IDR@ CRC_IDR @ %11111111  0 lshift and 0 rshift ; 

CRC_CR (write-only)
$00000000 CONSTANT RESET_CRC_CR 
 %1  0 lshift CRC_CR bis!        \ CRC_CR	Bit 0	 Width 1
\ CRC_CR Register BitField Fetch Words  
: CRC_CR@ CRC_CR @ %1  0 lshift and 0 rshift ; 

                    
################################### OTG_FS_GLOBAL ###################################
OTG_FS_GLOBAL_FS_GOTGCTL ()
$00000800 CONSTANT RESET_OTG_FS_GLOBAL_FS_GOTGCTL 
 %1  0 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_SRQSCS	Bit 0	 Width 1
 %1  1 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_SRQ	Bit 1	 Width 1
 %1  8 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_HNGSCS	Bit 8	 Width 1
 %1  9 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_HNPRQ	Bit 9	 Width 1
 %1  10 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_HSHNPEN	Bit 10	 Width 1
 %1  11 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_DHNPEN	Bit 11	 Width 1
 %1  16 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_CIDSTS	Bit 16	 Width 1
 %1  17 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_DBCT	Bit 17	 Width 1
 %1  18 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_ASVLD	Bit 18	 Width 1
 %1  19 lshift OTG_FS_GLOBAL_FS_GOTGCTL bis!        \ OTG_FS_GLOBAL_BSVLD	Bit 19	 Width 1
\ OTG_FS_GLOBAL_FS_GOTGCTL Register BitField Fetch Words  
: OTG_FS_GLOBAL_SRQSCS@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_SRQ@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  1 lshift and 1 rshift ; 
: OTG_FS_GLOBAL_HNGSCS@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  8 lshift and 8 rshift ; 
: OTG_FS_GLOBAL_HNPRQ@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  9 lshift and 9 rshift ; 
: OTG_FS_GLOBAL_HSHNPEN@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  10 lshift and 10 rshift ; 
: OTG_FS_GLOBAL_DHNPEN@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  11 lshift and 11 rshift ; 
: OTG_FS_GLOBAL_CIDSTS@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  16 lshift and 16 rshift ; 
: OTG_FS_GLOBAL_DBCT@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  17 lshift and 17 rshift ; 
: OTG_FS_GLOBAL_ASVLD@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  18 lshift and 18 rshift ; 
: OTG_FS_GLOBAL_BSVLD@ OTG_FS_GLOBAL_FS_GOTGCTL @ %1  19 lshift and 19 rshift ; 

OTG_FS_GLOBAL_FS_GOTGINT (read-write)
$00000000 CONSTANT RESET_OTG_FS_GLOBAL_FS_GOTGINT 
 %1  2 lshift OTG_FS_GLOBAL_FS_GOTGINT bis!        \ OTG_FS_GLOBAL_SEDET	Bit 2	 Width 1
 %1  8 lshift OTG_FS_GLOBAL_FS_GOTGINT bis!        \ OTG_FS_GLOBAL_SRSSCHG	Bit 8	 Width 1
 %1  9 lshift OTG_FS_GLOBAL_FS_GOTGINT bis!        \ OTG_FS_GLOBAL_HNSSCHG	Bit 9	 Width 1
 %1  17 lshift OTG_FS_GLOBAL_FS_GOTGINT bis!        \ OTG_FS_GLOBAL_HNGDET	Bit 17	 Width 1
 %1  18 lshift OTG_FS_GLOBAL_FS_GOTGINT bis!        \ OTG_FS_GLOBAL_ADTOCHG	Bit 18	 Width 1
 %1  19 lshift OTG_FS_GLOBAL_FS_GOTGINT bis!        \ OTG_FS_GLOBAL_DBCDNE	Bit 19	 Width 1
\ OTG_FS_GLOBAL_FS_GOTGINT Register BitField Fetch Words  
: OTG_FS_GLOBAL_SEDET@ OTG_FS_GLOBAL_FS_GOTGINT @ %1  2 lshift and 2 rshift ; 
: OTG_FS_GLOBAL_SRSSCHG@ OTG_FS_GLOBAL_FS_GOTGINT @ %1  8 lshift and 8 rshift ; 
: OTG_FS_GLOBAL_HNSSCHG@ OTG_FS_GLOBAL_FS_GOTGINT @ %1  9 lshift and 9 rshift ; 
: OTG_FS_GLOBAL_HNGDET@ OTG_FS_GLOBAL_FS_GOTGINT @ %1  17 lshift and 17 rshift ; 
: OTG_FS_GLOBAL_ADTOCHG@ OTG_FS_GLOBAL_FS_GOTGINT @ %1  18 lshift and 18 rshift ; 
: OTG_FS_GLOBAL_DBCDNE@ OTG_FS_GLOBAL_FS_GOTGINT @ %1  19 lshift and 19 rshift ; 

OTG_FS_GLOBAL_FS_GAHBCFG (read-write)
$00000000 CONSTANT RESET_OTG_FS_GLOBAL_FS_GAHBCFG 
 %1  0 lshift OTG_FS_GLOBAL_FS_GAHBCFG bis!        \ OTG_FS_GLOBAL_GINT	Bit 0	 Width 1
 %1  7 lshift OTG_FS_GLOBAL_FS_GAHBCFG bis!        \ OTG_FS_GLOBAL_TXFELVL	Bit 7	 Width 1
 %1  8 lshift OTG_FS_GLOBAL_FS_GAHBCFG bis!        \ OTG_FS_GLOBAL_PTXFELVL	Bit 8	 Width 1
\ OTG_FS_GLOBAL_FS_GAHBCFG Register BitField Fetch Words  
: OTG_FS_GLOBAL_GINT@ OTG_FS_GLOBAL_FS_GAHBCFG @ %1  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_TXFELVL@ OTG_FS_GLOBAL_FS_GAHBCFG @ %1  7 lshift and 7 rshift ; 
: OTG_FS_GLOBAL_PTXFELVL@ OTG_FS_GLOBAL_FS_GAHBCFG @ %1  8 lshift and 8 rshift ; 

OTG_FS_GLOBAL_FS_GUSBCFG ()
$00000A00 CONSTANT RESET_OTG_FS_GLOBAL_FS_GUSBCFG 
 %xxx  0 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_TOCAL	Bit 0	 Width 3
 %1  6 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_PHYSEL	Bit 6	 Width 1
 %1  8 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_SRPCAP	Bit 8	 Width 1
 %1  9 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_HNPCAP	Bit 9	 Width 1
 %xxxx  10 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_TRDT	Bit 10	 Width 4
 %1  29 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_FHMOD	Bit 29	 Width 1
 %1  30 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_FDMOD	Bit 30	 Width 1
 %1  31 lshift OTG_FS_GLOBAL_FS_GUSBCFG bis!        \ OTG_FS_GLOBAL_CTXPKT	Bit 31	 Width 1
\ OTG_FS_GLOBAL_FS_GUSBCFG Register BitField Fetch Words  
: OTG_FS_GLOBAL_TOCAL@ OTG_FS_GLOBAL_FS_GUSBCFG @ %111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_PHYSEL@ OTG_FS_GLOBAL_FS_GUSBCFG @ %1  6 lshift and 6 rshift ; 
: OTG_FS_GLOBAL_SRPCAP@ OTG_FS_GLOBAL_FS_GUSBCFG @ %1  8 lshift and 8 rshift ; 
: OTG_FS_GLOBAL_HNPCAP@ OTG_FS_GLOBAL_FS_GUSBCFG @ %1  9 lshift and 9 rshift ; 
: OTG_FS_GLOBAL_TRDT@ OTG_FS_GLOBAL_FS_GUSBCFG @ %1111  10 lshift and 10 rshift ; 
: OTG_FS_GLOBAL_FHMOD@ OTG_FS_GLOBAL_FS_GUSBCFG @ %1  29 lshift and 29 rshift ; 
: OTG_FS_GLOBAL_FDMOD@ OTG_FS_GLOBAL_FS_GUSBCFG @ %1  30 lshift and 30 rshift ; 
: OTG_FS_GLOBAL_CTXPKT@ OTG_FS_GLOBAL_FS_GUSBCFG @ %1  31 lshift and 31 rshift ; 

OTG_FS_GLOBAL_FS_GRSTCTL ()
$20000000 CONSTANT RESET_OTG_FS_GLOBAL_FS_GRSTCTL 
 %1  0 lshift OTG_FS_GLOBAL_FS_GRSTCTL bis!        \ OTG_FS_GLOBAL_CSRST	Bit 0	 Width 1
 %1  1 lshift OTG_FS_GLOBAL_FS_GRSTCTL bis!        \ OTG_FS_GLOBAL_HSRST	Bit 1	 Width 1
 %1  2 lshift OTG_FS_GLOBAL_FS_GRSTCTL bis!        \ OTG_FS_GLOBAL_FCRST	Bit 2	 Width 1
 %1  4 lshift OTG_FS_GLOBAL_FS_GRSTCTL bis!        \ OTG_FS_GLOBAL_RXFFLSH	Bit 4	 Width 1
 %1  5 lshift OTG_FS_GLOBAL_FS_GRSTCTL bis!        \ OTG_FS_GLOBAL_TXFFLSH	Bit 5	 Width 1
 %xxxxx  6 lshift OTG_FS_GLOBAL_FS_GRSTCTL bis!        \ OTG_FS_GLOBAL_TXFNUM	Bit 6	 Width 5
 %1  31 lshift OTG_FS_GLOBAL_FS_GRSTCTL bis!        \ OTG_FS_GLOBAL_AHBIDL	Bit 31	 Width 1
\ OTG_FS_GLOBAL_FS_GRSTCTL Register BitField Fetch Words  
: OTG_FS_GLOBAL_CSRST@ OTG_FS_GLOBAL_FS_GRSTCTL @ %1  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_HSRST@ OTG_FS_GLOBAL_FS_GRSTCTL @ %1  1 lshift and 1 rshift ; 
: OTG_FS_GLOBAL_FCRST@ OTG_FS_GLOBAL_FS_GRSTCTL @ %1  2 lshift and 2 rshift ; 
: OTG_FS_GLOBAL_RXFFLSH@ OTG_FS_GLOBAL_FS_GRSTCTL @ %1  4 lshift and 4 rshift ; 
: OTG_FS_GLOBAL_TXFFLSH@ OTG_FS_GLOBAL_FS_GRSTCTL @ %1  5 lshift and 5 rshift ; 
: OTG_FS_GLOBAL_TXFNUM@ OTG_FS_GLOBAL_FS_GRSTCTL @ %11111  6 lshift and 6 rshift ; 
: OTG_FS_GLOBAL_AHBIDL@ OTG_FS_GLOBAL_FS_GRSTCTL @ %1  31 lshift and 31 rshift ; 

OTG_FS_GLOBAL_FS_GINTSTS ()
$04000020 CONSTANT RESET_OTG_FS_GLOBAL_FS_GINTSTS 
 %1  0 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_CMOD	Bit 0	 Width 1
 %1  1 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_MMIS	Bit 1	 Width 1
 %1  2 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_OTGINT	Bit 2	 Width 1
 %1  3 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_SOF	Bit 3	 Width 1
 %1  4 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_RXFLVL	Bit 4	 Width 1
 %1  5 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_NPTXFE	Bit 5	 Width 1
 %1  6 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_GINAKEFF	Bit 6	 Width 1
 %1  7 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_GOUTNAKEFF	Bit 7	 Width 1
 %1  10 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_ESUSP	Bit 10	 Width 1
 %1  11 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_USBSUSP	Bit 11	 Width 1
 %1  12 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_USBRST	Bit 12	 Width 1
 %1  13 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_ENUMDNE	Bit 13	 Width 1
 %1  14 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_ISOODRP	Bit 14	 Width 1
 %1  15 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_EOPF	Bit 15	 Width 1
 %1  18 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_IEPINT	Bit 18	 Width 1
 %1  19 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_OEPINT	Bit 19	 Width 1
 %1  20 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_IISOIXFR	Bit 20	 Width 1
 %1  21 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_IPXFR_INCOMPISOOUT	Bit 21	 Width 1
 %1  24 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_HPRTINT	Bit 24	 Width 1
 %1  25 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_HCINT	Bit 25	 Width 1
 %1  26 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_PTXFE	Bit 26	 Width 1
 %1  28 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_CIDSCHG	Bit 28	 Width 1
 %1  29 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_DISCINT	Bit 29	 Width 1
 %1  30 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_SRQINT	Bit 30	 Width 1
 %1  31 lshift OTG_FS_GLOBAL_FS_GINTSTS bis!        \ OTG_FS_GLOBAL_WKUPINT	Bit 31	 Width 1
\ OTG_FS_GLOBAL_FS_GINTSTS Register BitField Fetch Words  
: OTG_FS_GLOBAL_CMOD@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_MMIS@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  1 lshift and 1 rshift ; 
: OTG_FS_GLOBAL_OTGINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  2 lshift and 2 rshift ; 
: OTG_FS_GLOBAL_SOF@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  3 lshift and 3 rshift ; 
: OTG_FS_GLOBAL_RXFLVL@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  4 lshift and 4 rshift ; 
: OTG_FS_GLOBAL_NPTXFE@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  5 lshift and 5 rshift ; 
: OTG_FS_GLOBAL_GINAKEFF@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  6 lshift and 6 rshift ; 
: OTG_FS_GLOBAL_GOUTNAKEFF@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  7 lshift and 7 rshift ; 
: OTG_FS_GLOBAL_ESUSP@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  10 lshift and 10 rshift ; 
: OTG_FS_GLOBAL_USBSUSP@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  11 lshift and 11 rshift ; 
: OTG_FS_GLOBAL_USBRST@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  12 lshift and 12 rshift ; 
: OTG_FS_GLOBAL_ENUMDNE@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  13 lshift and 13 rshift ; 
: OTG_FS_GLOBAL_ISOODRP@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  14 lshift and 14 rshift ; 
: OTG_FS_GLOBAL_EOPF@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  15 lshift and 15 rshift ; 
: OTG_FS_GLOBAL_IEPINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  18 lshift and 18 rshift ; 
: OTG_FS_GLOBAL_OEPINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  19 lshift and 19 rshift ; 
: OTG_FS_GLOBAL_IISOIXFR@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  20 lshift and 20 rshift ; 
: OTG_FS_GLOBAL_IPXFR_INCOMPISOOUT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  21 lshift and 21 rshift ; 
: OTG_FS_GLOBAL_HPRTINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  24 lshift and 24 rshift ; 
: OTG_FS_GLOBAL_HCINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  25 lshift and 25 rshift ; 
: OTG_FS_GLOBAL_PTXFE@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  26 lshift and 26 rshift ; 
: OTG_FS_GLOBAL_CIDSCHG@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  28 lshift and 28 rshift ; 
: OTG_FS_GLOBAL_DISCINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  29 lshift and 29 rshift ; 
: OTG_FS_GLOBAL_SRQINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  30 lshift and 30 rshift ; 
: OTG_FS_GLOBAL_WKUPINT@ OTG_FS_GLOBAL_FS_GINTSTS @ %1  31 lshift and 31 rshift ; 

OTG_FS_GLOBAL_FS_GINTMSK ()
$00000000 CONSTANT RESET_OTG_FS_GLOBAL_FS_GINTMSK 
 %1  1 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_MMISM	Bit 1	 Width 1
 %1  2 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_OTGINT	Bit 2	 Width 1
 %1  3 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_SOFM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_RXFLVLM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_NPTXFEM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_GINAKEFFM	Bit 6	 Width 1
 %1  7 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_GONAKEFFM	Bit 7	 Width 1
 %1  10 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_ESUSPM	Bit 10	 Width 1
 %1  11 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_USBSUSPM	Bit 11	 Width 1
 %1  12 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_USBRST	Bit 12	 Width 1
 %1  13 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_ENUMDNEM	Bit 13	 Width 1
 %1  14 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_ISOODRPM	Bit 14	 Width 1
 %1  15 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_EOPFM	Bit 15	 Width 1
 %1  17 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_EPMISM	Bit 17	 Width 1
 %1  18 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_IEPINT	Bit 18	 Width 1
 %1  19 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_OEPINT	Bit 19	 Width 1
 %1  20 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_IISOIXFRM	Bit 20	 Width 1
 %1  21 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_IPXFRM_IISOOXFRM	Bit 21	 Width 1
 %1  24 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_PRTIM	Bit 24	 Width 1
 %1  25 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_HCIM	Bit 25	 Width 1
 %1  26 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_PTXFEM	Bit 26	 Width 1
 %1  28 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_CIDSCHGM	Bit 28	 Width 1
 %1  29 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_DISCINT	Bit 29	 Width 1
 %1  30 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_SRQIM	Bit 30	 Width 1
 %1  31 lshift OTG_FS_GLOBAL_FS_GINTMSK bis!        \ OTG_FS_GLOBAL_WUIM	Bit 31	 Width 1
\ OTG_FS_GLOBAL_FS_GINTMSK Register BitField Fetch Words  
: OTG_FS_GLOBAL_MMISM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  1 lshift and 1 rshift ; 
: OTG_FS_GLOBAL_OTGINT@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  2 lshift and 2 rshift ; 
: OTG_FS_GLOBAL_SOFM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  3 lshift and 3 rshift ; 
: OTG_FS_GLOBAL_RXFLVLM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  4 lshift and 4 rshift ; 
: OTG_FS_GLOBAL_NPTXFEM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  5 lshift and 5 rshift ; 
: OTG_FS_GLOBAL_GINAKEFFM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  6 lshift and 6 rshift ; 
: OTG_FS_GLOBAL_GONAKEFFM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  7 lshift and 7 rshift ; 
: OTG_FS_GLOBAL_ESUSPM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  10 lshift and 10 rshift ; 
: OTG_FS_GLOBAL_USBSUSPM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  11 lshift and 11 rshift ; 
: OTG_FS_GLOBAL_USBRST@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  12 lshift and 12 rshift ; 
: OTG_FS_GLOBAL_ENUMDNEM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  13 lshift and 13 rshift ; 
: OTG_FS_GLOBAL_ISOODRPM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  14 lshift and 14 rshift ; 
: OTG_FS_GLOBAL_EOPFM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  15 lshift and 15 rshift ; 
: OTG_FS_GLOBAL_EPMISM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  17 lshift and 17 rshift ; 
: OTG_FS_GLOBAL_IEPINT@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  18 lshift and 18 rshift ; 
: OTG_FS_GLOBAL_OEPINT@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  19 lshift and 19 rshift ; 
: OTG_FS_GLOBAL_IISOIXFRM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  20 lshift and 20 rshift ; 
: OTG_FS_GLOBAL_IPXFRM_IISOOXFRM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  21 lshift and 21 rshift ; 
: OTG_FS_GLOBAL_PRTIM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  24 lshift and 24 rshift ; 
: OTG_FS_GLOBAL_HCIM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  25 lshift and 25 rshift ; 
: OTG_FS_GLOBAL_PTXFEM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  26 lshift and 26 rshift ; 
: OTG_FS_GLOBAL_CIDSCHGM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  28 lshift and 28 rshift ; 
: OTG_FS_GLOBAL_DISCINT@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  29 lshift and 29 rshift ; 
: OTG_FS_GLOBAL_SRQIM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  30 lshift and 30 rshift ; 
: OTG_FS_GLOBAL_WUIM@ OTG_FS_GLOBAL_FS_GINTMSK @ %1  31 lshift and 31 rshift ; 

OTG_FS_GLOBAL_FS_GRXSTSR_Device (read-only)
$00000000 CONSTANT RESET_OTG_FS_GLOBAL_FS_GRXSTSR_Device 
 %xxxx  0 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Device bis!        \ OTG_FS_GLOBAL_EPNUM	Bit 0	 Width 4
 % 4 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Device bis!        \ OTG_FS_GLOBAL_BCNT	Bit 4	 Width 11
 %xx  15 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Device bis!        \ OTG_FS_GLOBAL_DPID	Bit 15	 Width 2
 %xxxx  17 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Device bis!        \ OTG_FS_GLOBAL_PKTSTS	Bit 17	 Width 4
 %xxxx  21 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Device bis!        \ OTG_FS_GLOBAL_FRMNUM	Bit 21	 Width 4
\ OTG_FS_GLOBAL_FS_GRXSTSR_Device Register BitField Fetch Words  
: OTG_FS_GLOBAL_EPNUM@ OTG_FS_GLOBAL_FS_GRXSTSR_Device @ %1111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_BCNT@ OTG_FS_GLOBAL_FS_GRXSTSR_Device @ % 4 lshift and 4 rshift ; 
: OTG_FS_GLOBAL_DPID@ OTG_FS_GLOBAL_FS_GRXSTSR_Device @ %11  15 lshift and 15 rshift ; 
: OTG_FS_GLOBAL_PKTSTS@ OTG_FS_GLOBAL_FS_GRXSTSR_Device @ %1111  17 lshift and 17 rshift ; 
: OTG_FS_GLOBAL_FRMNUM@ OTG_FS_GLOBAL_FS_GRXSTSR_Device @ %1111  21 lshift and 21 rshift ; 

OTG_FS_GLOBAL_FS_GRXSTSR_Host (read-only)
$00000000 CONSTANT RESET_OTG_FS_GLOBAL_FS_GRXSTSR_Host 
 %xxxx  0 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Host bis!        \ OTG_FS_GLOBAL_EPNUM	Bit 0	 Width 4
 % 4 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Host bis!        \ OTG_FS_GLOBAL_BCNT	Bit 4	 Width 11
 %xx  15 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Host bis!        \ OTG_FS_GLOBAL_DPID	Bit 15	 Width 2
 %xxxx  17 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Host bis!        \ OTG_FS_GLOBAL_PKTSTS	Bit 17	 Width 4
 %xxxx  21 lshift OTG_FS_GLOBAL_FS_GRXSTSR_Host bis!        \ OTG_FS_GLOBAL_FRMNUM	Bit 21	 Width 4
\ OTG_FS_GLOBAL_FS_GRXSTSR_Host Register BitField Fetch Words  
: OTG_FS_GLOBAL_EPNUM@ OTG_FS_GLOBAL_FS_GRXSTSR_Host @ %1111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_BCNT@ OTG_FS_GLOBAL_FS_GRXSTSR_Host @ % 4 lshift and 4 rshift ; 
: OTG_FS_GLOBAL_DPID@ OTG_FS_GLOBAL_FS_GRXSTSR_Host @ %11  15 lshift and 15 rshift ; 
: OTG_FS_GLOBAL_PKTSTS@ OTG_FS_GLOBAL_FS_GRXSTSR_Host @ %1111  17 lshift and 17 rshift ; 
: OTG_FS_GLOBAL_FRMNUM@ OTG_FS_GLOBAL_FS_GRXSTSR_Host @ %1111  21 lshift and 21 rshift ; 

OTG_FS_GLOBAL_FS_GRXFSIZ (read-write)
$00000200 CONSTANT RESET_OTG_FS_GLOBAL_FS_GRXFSIZ 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_GRXFSIZ bis!        \ OTG_FS_GLOBAL_RXFD	Bit 0	 Width 16
\ OTG_FS_GLOBAL_FS_GRXFSIZ Register BitField Fetch Words  
: OTG_FS_GLOBAL_RXFD@ OTG_FS_GLOBAL_FS_GRXFSIZ @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_GLOBAL_FS_GNPTXFSIZ_Device (read-write)
$00000200 CONSTANT RESET_OTG_FS_GLOBAL_FS_GNPTXFSIZ_Device 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_GNPTXFSIZ_Device bis!        \ OTG_FS_GLOBAL_TX0FSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_GLOBAL_FS_GNPTXFSIZ_Device bis!        \ OTG_FS_GLOBAL_TX0FD	Bit 16	 Width 16
\ OTG_FS_GLOBAL_FS_GNPTXFSIZ_Device Register BitField Fetch Words  
: OTG_FS_GLOBAL_TX0FSA@ OTG_FS_GLOBAL_FS_GNPTXFSIZ_Device @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_TX0FD@ OTG_FS_GLOBAL_FS_GNPTXFSIZ_Device @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_GLOBAL_FS_GNPTXFSIZ_Host (read-write)
$00000200 CONSTANT RESET_OTG_FS_GLOBAL_FS_GNPTXFSIZ_Host 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_GNPTXFSIZ_Host bis!        \ OTG_FS_GLOBAL_NPTXFSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_GLOBAL_FS_GNPTXFSIZ_Host bis!        \ OTG_FS_GLOBAL_NPTXFD	Bit 16	 Width 16
\ OTG_FS_GLOBAL_FS_GNPTXFSIZ_Host Register BitField Fetch Words  
: OTG_FS_GLOBAL_NPTXFSA@ OTG_FS_GLOBAL_FS_GNPTXFSIZ_Host @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_NPTXFD@ OTG_FS_GLOBAL_FS_GNPTXFSIZ_Host @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_GLOBAL_FS_GNPTXSTS (read-only)
$00080200 CONSTANT RESET_OTG_FS_GLOBAL_FS_GNPTXSTS 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_GNPTXSTS bis!        \ OTG_FS_GLOBAL_NPTXFSAV	Bit 0	 Width 16
 %xxxxxxxx  16 lshift OTG_FS_GLOBAL_FS_GNPTXSTS bis!        \ OTG_FS_GLOBAL_NPTQXSAV	Bit 16	 Width 8
 %xxxxxxx  24 lshift OTG_FS_GLOBAL_FS_GNPTXSTS bis!        \ OTG_FS_GLOBAL_NPTXQTOP	Bit 24	 Width 7
\ OTG_FS_GLOBAL_FS_GNPTXSTS Register BitField Fetch Words  
: OTG_FS_GLOBAL_NPTXFSAV@ OTG_FS_GLOBAL_FS_GNPTXSTS @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_NPTQXSAV@ OTG_FS_GLOBAL_FS_GNPTXSTS @ %11111111  16 lshift and 16 rshift ; 
: OTG_FS_GLOBAL_NPTXQTOP@ OTG_FS_GLOBAL_FS_GNPTXSTS @ %1111111  24 lshift and 24 rshift ; 

OTG_FS_GLOBAL_FS_GCCFG (read-write)
$00000000 CONSTANT RESET_OTG_FS_GLOBAL_FS_GCCFG 
 %1  16 lshift OTG_FS_GLOBAL_FS_GCCFG bis!        \ OTG_FS_GLOBAL_PWRDWN	Bit 16	 Width 1
 %1  18 lshift OTG_FS_GLOBAL_FS_GCCFG bis!        \ OTG_FS_GLOBAL_VBUSASEN	Bit 18	 Width 1
 %1  19 lshift OTG_FS_GLOBAL_FS_GCCFG bis!        \ OTG_FS_GLOBAL_VBUSBSEN	Bit 19	 Width 1
 %1  20 lshift OTG_FS_GLOBAL_FS_GCCFG bis!        \ OTG_FS_GLOBAL_SOFOUTEN	Bit 20	 Width 1
\ OTG_FS_GLOBAL_FS_GCCFG Register BitField Fetch Words  
: OTG_FS_GLOBAL_PWRDWN@ OTG_FS_GLOBAL_FS_GCCFG @ %1  16 lshift and 16 rshift ; 
: OTG_FS_GLOBAL_VBUSASEN@ OTG_FS_GLOBAL_FS_GCCFG @ %1  18 lshift and 18 rshift ; 
: OTG_FS_GLOBAL_VBUSBSEN@ OTG_FS_GLOBAL_FS_GCCFG @ %1  19 lshift and 19 rshift ; 
: OTG_FS_GLOBAL_SOFOUTEN@ OTG_FS_GLOBAL_FS_GCCFG @ %1  20 lshift and 20 rshift ; 

OTG_FS_GLOBAL_FS_CID (read-write)
$00001000 CONSTANT RESET_OTG_FS_GLOBAL_FS_CID 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_CID bis!        \ OTG_FS_GLOBAL_PRODUCT_ID	Bit 0	 Width 32
\ OTG_FS_GLOBAL_FS_CID Register BitField Fetch Words  
: OTG_FS_GLOBAL_PRODUCT_ID@ OTG_FS_GLOBAL_FS_CID @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_FS_GLOBAL_FS_HPTXFSIZ (read-write)
$02000600 CONSTANT RESET_OTG_FS_GLOBAL_FS_HPTXFSIZ 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_HPTXFSIZ bis!        \ OTG_FS_GLOBAL_PTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_GLOBAL_FS_HPTXFSIZ bis!        \ OTG_FS_GLOBAL_PTXFSIZ	Bit 16	 Width 16
\ OTG_FS_GLOBAL_FS_HPTXFSIZ Register BitField Fetch Words  
: OTG_FS_GLOBAL_PTXSA@ OTG_FS_GLOBAL_FS_HPTXFSIZ @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_PTXFSIZ@ OTG_FS_GLOBAL_FS_HPTXFSIZ @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_GLOBAL_FS_DIEPTXF1 (read-write)
$02000400 CONSTANT RESET_OTG_FS_GLOBAL_FS_DIEPTXF1 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_DIEPTXF1 bis!        \ OTG_FS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_GLOBAL_FS_DIEPTXF1 bis!        \ OTG_FS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_FS_GLOBAL_FS_DIEPTXF1 Register BitField Fetch Words  
: OTG_FS_GLOBAL_INEPTXSA@ OTG_FS_GLOBAL_FS_DIEPTXF1 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_INEPTXFD@ OTG_FS_GLOBAL_FS_DIEPTXF1 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_GLOBAL_FS_DIEPTXF2 (read-write)
$02000400 CONSTANT RESET_OTG_FS_GLOBAL_FS_DIEPTXF2 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_DIEPTXF2 bis!        \ OTG_FS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_GLOBAL_FS_DIEPTXF2 bis!        \ OTG_FS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_FS_GLOBAL_FS_DIEPTXF2 Register BitField Fetch Words  
: OTG_FS_GLOBAL_INEPTXSA@ OTG_FS_GLOBAL_FS_DIEPTXF2 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_INEPTXFD@ OTG_FS_GLOBAL_FS_DIEPTXF2 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_GLOBAL_FS_DIEPTXF3 (read-write)
$02000400 CONSTANT RESET_OTG_FS_GLOBAL_FS_DIEPTXF3 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_GLOBAL_FS_DIEPTXF3 bis!        \ OTG_FS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_GLOBAL_FS_DIEPTXF3 bis!        \ OTG_FS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_FS_GLOBAL_FS_DIEPTXF3 Register BitField Fetch Words  
: OTG_FS_GLOBAL_INEPTXSA@ OTG_FS_GLOBAL_FS_DIEPTXF3 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_GLOBAL_INEPTXFD@ OTG_FS_GLOBAL_FS_DIEPTXF3 @ %1111111111111111  16 lshift and 16 rshift ; 

                    
################################### OTG_FS_HOST ###################################
OTG_FS_HOST_FS_HCFG ()
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCFG 
 %xx  0 lshift OTG_FS_HOST_FS_HCFG bis!        \ OTG_FS_HOST_FSLSPCS	Bit 0	 Width 2
 %1  2 lshift OTG_FS_HOST_FS_HCFG bis!        \ OTG_FS_HOST_FSLSS	Bit 2	 Width 1
\ OTG_FS_HOST_FS_HCFG Register BitField Fetch Words  
: OTG_FS_HOST_FSLSPCS@ OTG_FS_HOST_FS_HCFG @ %11  0 lshift and 0 rshift ; 
: OTG_FS_HOST_FSLSS@ OTG_FS_HOST_FS_HCFG @ %1  2 lshift and 2 rshift ; 

OTG_FS_HOST_HFIR (read-write)
$0000EA60 CONSTANT RESET_OTG_FS_HOST_HFIR 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_HOST_HFIR bis!        \ OTG_FS_HOST_FRIVL	Bit 0	 Width 16
\ OTG_FS_HOST_HFIR Register BitField Fetch Words  
: OTG_FS_HOST_FRIVL@ OTG_FS_HOST_HFIR @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_HOST_FS_HFNUM (read-only)
$00003FFF CONSTANT RESET_OTG_FS_HOST_FS_HFNUM 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_HOST_FS_HFNUM bis!        \ OTG_FS_HOST_FRNUM	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_HOST_FS_HFNUM bis!        \ OTG_FS_HOST_FTREM	Bit 16	 Width 16
\ OTG_FS_HOST_FS_HFNUM Register BitField Fetch Words  
: OTG_FS_HOST_FRNUM@ OTG_FS_HOST_FS_HFNUM @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_HOST_FTREM@ OTG_FS_HOST_FS_HFNUM @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_HOST_FS_HPTXSTS ()
$00080100 CONSTANT RESET_OTG_FS_HOST_FS_HPTXSTS 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_HOST_FS_HPTXSTS bis!        \ OTG_FS_HOST_PTXFSAVL	Bit 0	 Width 16
 %xxxxxxxx  16 lshift OTG_FS_HOST_FS_HPTXSTS bis!        \ OTG_FS_HOST_PTXQSAV	Bit 16	 Width 8
 %xxxxxxxx  24 lshift OTG_FS_HOST_FS_HPTXSTS bis!        \ OTG_FS_HOST_PTXQTOP	Bit 24	 Width 8
\ OTG_FS_HOST_FS_HPTXSTS Register BitField Fetch Words  
: OTG_FS_HOST_PTXFSAVL@ OTG_FS_HOST_FS_HPTXSTS @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_HOST_PTXQSAV@ OTG_FS_HOST_FS_HPTXSTS @ %11111111  16 lshift and 16 rshift ; 
: OTG_FS_HOST_PTXQTOP@ OTG_FS_HOST_FS_HPTXSTS @ %11111111  24 lshift and 24 rshift ; 

OTG_FS_HOST_HAINT (read-only)
$00000000 CONSTANT RESET_OTG_FS_HOST_HAINT 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_HOST_HAINT bis!        \ OTG_FS_HOST_HAINT	Bit 0	 Width 16
\ OTG_FS_HOST_HAINT Register BitField Fetch Words  
: OTG_FS_HOST_HAINT@ OTG_FS_HOST_HAINT @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_HOST_HAINTMSK (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_HAINTMSK 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_HOST_HAINTMSK bis!        \ OTG_FS_HOST_HAINTM	Bit 0	 Width 16
\ OTG_FS_HOST_HAINTMSK Register BitField Fetch Words  
: OTG_FS_HOST_HAINTM@ OTG_FS_HOST_HAINTMSK @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_HOST_FS_HPRT ()
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HPRT 
 %1  0 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PCSTS	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PCDET	Bit 1	 Width 1
 %1  2 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PENA	Bit 2	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PENCHNG	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_POCA	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_POCCHNG	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PRES	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PSUSP	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PRST	Bit 8	 Width 1
 %xx  10 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PLSTS	Bit 10	 Width 2
 %1  12 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PPWR	Bit 12	 Width 1
 %xxxx  13 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PTCTL	Bit 13	 Width 4
 %xx  17 lshift OTG_FS_HOST_FS_HPRT bis!        \ OTG_FS_HOST_PSPD	Bit 17	 Width 2
\ OTG_FS_HOST_FS_HPRT Register BitField Fetch Words  
: OTG_FS_HOST_PCSTS@ OTG_FS_HOST_FS_HPRT @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_PCDET@ OTG_FS_HOST_FS_HPRT @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_PENA@ OTG_FS_HOST_FS_HPRT @ %1  2 lshift and 2 rshift ; 
: OTG_FS_HOST_PENCHNG@ OTG_FS_HOST_FS_HPRT @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_POCA@ OTG_FS_HOST_FS_HPRT @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_POCCHNG@ OTG_FS_HOST_FS_HPRT @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_PRES@ OTG_FS_HOST_FS_HPRT @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_PSUSP@ OTG_FS_HOST_FS_HPRT @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_PRST@ OTG_FS_HOST_FS_HPRT @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_PLSTS@ OTG_FS_HOST_FS_HPRT @ %11  10 lshift and 10 rshift ; 
: OTG_FS_HOST_PPWR@ OTG_FS_HOST_FS_HPRT @ %1  12 lshift and 12 rshift ; 
: OTG_FS_HOST_PTCTL@ OTG_FS_HOST_FS_HPRT @ %1111  13 lshift and 13 rshift ; 
: OTG_FS_HOST_PSPD@ OTG_FS_HOST_FS_HPRT @ %11  17 lshift and 17 rshift ; 

OTG_FS_HOST_FS_HCCHAR0 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR0 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR0 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR0 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR0 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR0 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR0 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR0 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR0 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR0 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR0 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR0 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR0 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR0 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCCHAR1 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR1 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR1 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR1 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR1 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR1 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR1 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR1 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR1 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR1 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR1 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR1 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR1 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR1 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCCHAR2 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR2 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR2 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR2 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR2 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR2 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR2 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR2 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR2 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR2 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR2 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR2 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR2 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR2 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCCHAR3 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR3 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR3 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR3 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR3 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR3 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR3 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR3 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR3 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR3 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR3 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR3 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR3 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR3 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCCHAR4 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR4 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR4 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR4 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR4 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR4 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR4 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR4 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR4 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR4 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR4 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR4 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR4 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR4 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCCHAR5 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR5 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR5 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR5 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR5 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR5 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR5 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR5 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR5 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR5 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR5 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR5 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR5 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR5 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCCHAR6 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR6 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR6 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR6 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR6 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR6 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR6 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR6 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR6 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR6 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR6 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR6 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR6 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR6 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCCHAR7 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCCHAR7 
 % 0 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_MCNT	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_HOST_FS_HCCHAR7 bis!        \ OTG_FS_HOST_CHENA	Bit 31	 Width 1
\ OTG_FS_HOST_FS_HCCHAR7 Register BitField Fetch Words  
: OTG_FS_HOST_MPSIZ@ OTG_FS_HOST_FS_HCCHAR7 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_EPNUM@ OTG_FS_HOST_FS_HCCHAR7 @ %1111  11 lshift and 11 rshift ; 
: OTG_FS_HOST_EPDIR@ OTG_FS_HOST_FS_HCCHAR7 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_HOST_LSDEV@ OTG_FS_HOST_FS_HCCHAR7 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_HOST_EPTYP@ OTG_FS_HOST_FS_HCCHAR7 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_HOST_MCNT@ OTG_FS_HOST_FS_HCCHAR7 @ %11  20 lshift and 20 rshift ; 
: OTG_FS_HOST_DAD@ OTG_FS_HOST_FS_HCCHAR7 @ %1111111  22 lshift and 22 rshift ; 
: OTG_FS_HOST_ODDFRM@ OTG_FS_HOST_FS_HCCHAR7 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_HOST_CHDIS@ OTG_FS_HOST_FS_HCCHAR7 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_HOST_CHENA@ OTG_FS_HOST_FS_HCCHAR7 @ %1  31 lshift and 31 rshift ; 

OTG_FS_HOST_FS_HCINT0 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT0 
 %1  0 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT0 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT0 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT0 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT0 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT0 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT0 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT0 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT0 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT0 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT0 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT0 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINT1 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT1 
 %1  0 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT1 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT1 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT1 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT1 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT1 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT1 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT1 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT1 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT1 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT1 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT1 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINT2 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT2 
 %1  0 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT2 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT2 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT2 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT2 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT2 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT2 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT2 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT2 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT2 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT2 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT2 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINT3 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT3 
 %1  0 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT3 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT3 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT3 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT3 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT3 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT3 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT3 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT3 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT3 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT3 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT3 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINT4 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT4 
 %1  0 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT4 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT4 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT4 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT4 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT4 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT4 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT4 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT4 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT4 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT4 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT4 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINT5 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT5 
 %1  0 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT5 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT5 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT5 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT5 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT5 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT5 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT5 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT5 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT5 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT5 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT5 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINT6 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT6 
 %1  0 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT6 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT6 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT6 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT6 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT6 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT6 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT6 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT6 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT6 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT6 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT6 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINT7 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINT7 
 %1  0 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_CHH	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_ACK	Bit 5	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINT7 bis!        \ OTG_FS_HOST_DTERR	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINT7 Register BitField Fetch Words  
: OTG_FS_HOST_XFRC@ OTG_FS_HOST_FS_HCINT7 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHH@ OTG_FS_HOST_FS_HCINT7 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALL@ OTG_FS_HOST_FS_HCINT7 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAK@ OTG_FS_HOST_FS_HCINT7 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACK@ OTG_FS_HOST_FS_HCINT7 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_TXERR@ OTG_FS_HOST_FS_HCINT7 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERR@ OTG_FS_HOST_FS_HCINT7 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMOR@ OTG_FS_HOST_FS_HCINT7 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERR@ OTG_FS_HOST_FS_HCINT7 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK0 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK0 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK0 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK0 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK0 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK1 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK1 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK1 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK1 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK1 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK2 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK2 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK2 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK2 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK2 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK3 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK3 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK3 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK3 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK3 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK4 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK4 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK4 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK4 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK4 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK5 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK5 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK5 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK5 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK5 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK6 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK6 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK6 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK6 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK6 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCINTMSK7 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCINTMSK7 
 %1  0 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_CHHM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_FS_HOST_FS_HCINTMSK7 bis!        \ OTG_FS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_FS_HOST_FS_HCINTMSK7 Register BitField Fetch Words  
: OTG_FS_HOST_XFRCM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  0 lshift and 0 rshift ; 
: OTG_FS_HOST_CHHM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_HOST_STALLM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_HOST_NAKM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_HOST_ACKM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  5 lshift and 5 rshift ; 
: OTG_FS_HOST_NYET@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_HOST_TXERRM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_HOST_BBERRM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  8 lshift and 8 rshift ; 
: OTG_FS_HOST_FRMORM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  9 lshift and 9 rshift ; 
: OTG_FS_HOST_DTERRM@ OTG_FS_HOST_FS_HCINTMSK7 @ %1  10 lshift and 10 rshift ; 

OTG_FS_HOST_FS_HCTSIZ0 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ0 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ0 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ0 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ0 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ0 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ0 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ0 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ0 @ %11  29 lshift and 29 rshift ; 

OTG_FS_HOST_FS_HCTSIZ1 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ1 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ1 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ1 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ1 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ1 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ1 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ1 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ1 @ %11  29 lshift and 29 rshift ; 

OTG_FS_HOST_FS_HCTSIZ2 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ2 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ2 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ2 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ2 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ2 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ2 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ2 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ2 @ %11  29 lshift and 29 rshift ; 

OTG_FS_HOST_FS_HCTSIZ3 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ3 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ3 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ3 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ3 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ3 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ3 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ3 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ3 @ %11  29 lshift and 29 rshift ; 

OTG_FS_HOST_FS_HCTSIZ4 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ4 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ4 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ4 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ4 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ4 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ4 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ4 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ4 @ %11  29 lshift and 29 rshift ; 

OTG_FS_HOST_FS_HCTSIZ5 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ5 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ5 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ5 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ5 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ5 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ5 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ5 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ5 @ %11  29 lshift and 29 rshift ; 

OTG_FS_HOST_FS_HCTSIZ6 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ6 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ6 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ6 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ6 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ6 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ6 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ6 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ6 @ %11  29 lshift and 29 rshift ; 

OTG_FS_HOST_FS_HCTSIZ7 (read-write)
$00000000 CONSTANT RESET_OTG_FS_HOST_FS_HCTSIZ7 
 % 0 lshift OTG_FS_HOST_FS_HCTSIZ7 bis!        \ OTG_FS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_FS_HOST_FS_HCTSIZ7 bis!        \ OTG_FS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_FS_HOST_FS_HCTSIZ7 bis!        \ OTG_FS_HOST_DPID	Bit 29	 Width 2
\ OTG_FS_HOST_FS_HCTSIZ7 Register BitField Fetch Words  
: OTG_FS_HOST_XFRSIZ@ OTG_FS_HOST_FS_HCTSIZ7 @ % 0 lshift and 0 rshift ; 
: OTG_FS_HOST_PKTCNT@ OTG_FS_HOST_FS_HCTSIZ7 @ % 19 lshift and 19 rshift ; 
: OTG_FS_HOST_DPID@ OTG_FS_HOST_FS_HCTSIZ7 @ %11  29 lshift and 29 rshift ; 

                    
################################### OTG_FS_DEVICE ###################################
OTG_FS_DEVICE_FS_DCFG (read-write)
$02200000 CONSTANT RESET_OTG_FS_DEVICE_FS_DCFG 
 %xx  0 lshift OTG_FS_DEVICE_FS_DCFG bis!        \ OTG_FS_DEVICE_DSPD	Bit 0	 Width 2
 %1  2 lshift OTG_FS_DEVICE_FS_DCFG bis!        \ OTG_FS_DEVICE_NZLSOHSK	Bit 2	 Width 1
 %xxxxxxx  4 lshift OTG_FS_DEVICE_FS_DCFG bis!        \ OTG_FS_DEVICE_DAD	Bit 4	 Width 7
 %xx  11 lshift OTG_FS_DEVICE_FS_DCFG bis!        \ OTG_FS_DEVICE_PFIVL	Bit 11	 Width 2
\ OTG_FS_DEVICE_FS_DCFG Register BitField Fetch Words  
: OTG_FS_DEVICE_DSPD@ OTG_FS_DEVICE_FS_DCFG @ %11  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_NZLSOHSK@ OTG_FS_DEVICE_FS_DCFG @ %1  2 lshift and 2 rshift ; 
: OTG_FS_DEVICE_DAD@ OTG_FS_DEVICE_FS_DCFG @ %1111111  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_PFIVL@ OTG_FS_DEVICE_FS_DCFG @ %11  11 lshift and 11 rshift ; 

OTG_FS_DEVICE_FS_DCTL ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_FS_DCTL 
 %1  0 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_RWUSIG	Bit 0	 Width 1
 %1  1 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_SDIS	Bit 1	 Width 1
 %1  2 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_GINSTS	Bit 2	 Width 1
 %1  3 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_GONSTS	Bit 3	 Width 1
 %xxx  4 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_TCTL	Bit 4	 Width 3
 %1  7 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_SGINAK	Bit 7	 Width 1
 %1  8 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_CGINAK	Bit 8	 Width 1
 %1  9 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_SGONAK	Bit 9	 Width 1
 %1  10 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_CGONAK	Bit 10	 Width 1
 %1  11 lshift OTG_FS_DEVICE_FS_DCTL bis!        \ OTG_FS_DEVICE_POPRGDNE	Bit 11	 Width 1
\ OTG_FS_DEVICE_FS_DCTL Register BitField Fetch Words  
: OTG_FS_DEVICE_RWUSIG@ OTG_FS_DEVICE_FS_DCTL @ %1  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_SDIS@ OTG_FS_DEVICE_FS_DCTL @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_GINSTS@ OTG_FS_DEVICE_FS_DCTL @ %1  2 lshift and 2 rshift ; 
: OTG_FS_DEVICE_GONSTS@ OTG_FS_DEVICE_FS_DCTL @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_TCTL@ OTG_FS_DEVICE_FS_DCTL @ %111  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_SGINAK@ OTG_FS_DEVICE_FS_DCTL @ %1  7 lshift and 7 rshift ; 
: OTG_FS_DEVICE_CGINAK@ OTG_FS_DEVICE_FS_DCTL @ %1  8 lshift and 8 rshift ; 
: OTG_FS_DEVICE_SGONAK@ OTG_FS_DEVICE_FS_DCTL @ %1  9 lshift and 9 rshift ; 
: OTG_FS_DEVICE_CGONAK@ OTG_FS_DEVICE_FS_DCTL @ %1  10 lshift and 10 rshift ; 
: OTG_FS_DEVICE_POPRGDNE@ OTG_FS_DEVICE_FS_DCTL @ %1  11 lshift and 11 rshift ; 

OTG_FS_DEVICE_FS_DSTS (read-only)
$00000010 CONSTANT RESET_OTG_FS_DEVICE_FS_DSTS 
 %1  0 lshift OTG_FS_DEVICE_FS_DSTS bis!        \ OTG_FS_DEVICE_SUSPSTS	Bit 0	 Width 1
 %xx  1 lshift OTG_FS_DEVICE_FS_DSTS bis!        \ OTG_FS_DEVICE_ENUMSPD	Bit 1	 Width 2
 %1  3 lshift OTG_FS_DEVICE_FS_DSTS bis!        \ OTG_FS_DEVICE_EERR	Bit 3	 Width 1
 %xxxxxxxxxxxxxx  8 lshift OTG_FS_DEVICE_FS_DSTS bis!        \ OTG_FS_DEVICE_FNSOF	Bit 8	 Width 14
\ OTG_FS_DEVICE_FS_DSTS Register BitField Fetch Words  
: OTG_FS_DEVICE_SUSPSTS@ OTG_FS_DEVICE_FS_DSTS @ %1  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_ENUMSPD@ OTG_FS_DEVICE_FS_DSTS @ %11  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_EERR@ OTG_FS_DEVICE_FS_DSTS @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_FNSOF@ OTG_FS_DEVICE_FS_DSTS @ %11111111111111  8 lshift and 8 rshift ; 

OTG_FS_DEVICE_FS_DIEPMSK (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_FS_DIEPMSK 
 %1  0 lshift OTG_FS_DEVICE_FS_DIEPMSK bis!        \ OTG_FS_DEVICE_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_DEVICE_FS_DIEPMSK bis!        \ OTG_FS_DEVICE_EPDM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_DEVICE_FS_DIEPMSK bis!        \ OTG_FS_DEVICE_TOM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_DEVICE_FS_DIEPMSK bis!        \ OTG_FS_DEVICE_ITTXFEMSK	Bit 4	 Width 1
 %1  5 lshift OTG_FS_DEVICE_FS_DIEPMSK bis!        \ OTG_FS_DEVICE_INEPNMM	Bit 5	 Width 1
 %1  6 lshift OTG_FS_DEVICE_FS_DIEPMSK bis!        \ OTG_FS_DEVICE_INEPNEM	Bit 6	 Width 1
\ OTG_FS_DEVICE_FS_DIEPMSK Register BitField Fetch Words  
: OTG_FS_DEVICE_XFRCM@ OTG_FS_DEVICE_FS_DIEPMSK @ %1  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_EPDM@ OTG_FS_DEVICE_FS_DIEPMSK @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_TOM@ OTG_FS_DEVICE_FS_DIEPMSK @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_ITTXFEMSK@ OTG_FS_DEVICE_FS_DIEPMSK @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_INEPNMM@ OTG_FS_DEVICE_FS_DIEPMSK @ %1  5 lshift and 5 rshift ; 
: OTG_FS_DEVICE_INEPNEM@ OTG_FS_DEVICE_FS_DIEPMSK @ %1  6 lshift and 6 rshift ; 

OTG_FS_DEVICE_FS_DOEPMSK (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_FS_DOEPMSK 
 %1  0 lshift OTG_FS_DEVICE_FS_DOEPMSK bis!        \ OTG_FS_DEVICE_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_FS_DEVICE_FS_DOEPMSK bis!        \ OTG_FS_DEVICE_EPDM	Bit 1	 Width 1
 %1  3 lshift OTG_FS_DEVICE_FS_DOEPMSK bis!        \ OTG_FS_DEVICE_STUPM	Bit 3	 Width 1
 %1  4 lshift OTG_FS_DEVICE_FS_DOEPMSK bis!        \ OTG_FS_DEVICE_OTEPDM	Bit 4	 Width 1
\ OTG_FS_DEVICE_FS_DOEPMSK Register BitField Fetch Words  
: OTG_FS_DEVICE_XFRCM@ OTG_FS_DEVICE_FS_DOEPMSK @ %1  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_EPDM@ OTG_FS_DEVICE_FS_DOEPMSK @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_STUPM@ OTG_FS_DEVICE_FS_DOEPMSK @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_OTEPDM@ OTG_FS_DEVICE_FS_DOEPMSK @ %1  4 lshift and 4 rshift ; 

OTG_FS_DEVICE_FS_DAINT (read-only)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_FS_DAINT 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_FS_DAINT bis!        \ OTG_FS_DEVICE_IEPINT	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_DEVICE_FS_DAINT bis!        \ OTG_FS_DEVICE_OEPINT	Bit 16	 Width 16
\ OTG_FS_DEVICE_FS_DAINT Register BitField Fetch Words  
: OTG_FS_DEVICE_IEPINT@ OTG_FS_DEVICE_FS_DAINT @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_OEPINT@ OTG_FS_DEVICE_FS_DAINT @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_DEVICE_FS_DAINTMSK (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_FS_DAINTMSK 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_FS_DAINTMSK bis!        \ OTG_FS_DEVICE_IEPM	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_FS_DEVICE_FS_DAINTMSK bis!        \ OTG_FS_DEVICE_OEPINT	Bit 16	 Width 16
\ OTG_FS_DEVICE_FS_DAINTMSK Register BitField Fetch Words  
: OTG_FS_DEVICE_IEPM@ OTG_FS_DEVICE_FS_DAINTMSK @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_OEPINT@ OTG_FS_DEVICE_FS_DAINTMSK @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_FS_DEVICE_DVBUSDIS (read-write)
$000017D7 CONSTANT RESET_OTG_FS_DEVICE_DVBUSDIS 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_DVBUSDIS bis!        \ OTG_FS_DEVICE_VBUSDT	Bit 0	 Width 16
\ OTG_FS_DEVICE_DVBUSDIS Register BitField Fetch Words  
: OTG_FS_DEVICE_VBUSDT@ OTG_FS_DEVICE_DVBUSDIS @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DVBUSPULSE (read-write)
$000005B8 CONSTANT RESET_OTG_FS_DEVICE_DVBUSPULSE 
 %xxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_DVBUSPULSE bis!        \ OTG_FS_DEVICE_DVBUSP	Bit 0	 Width 12
\ OTG_FS_DEVICE_DVBUSPULSE Register BitField Fetch Words  
: OTG_FS_DEVICE_DVBUSP@ OTG_FS_DEVICE_DVBUSPULSE @ %11111111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPEMPMSK (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPEMPMSK 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_DIEPEMPMSK bis!        \ OTG_FS_DEVICE_INEPTXFEM	Bit 0	 Width 16
\ OTG_FS_DEVICE_DIEPEMPMSK Register BitField Fetch Words  
: OTG_FS_DEVICE_INEPTXFEM@ OTG_FS_DEVICE_DIEPEMPMSK @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_FS_DIEPCTL0 ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_FS_DIEPCTL0 
 %xx  0 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 2
 %1  15 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  17 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_STALL	Bit 21	 Width 1
 %xxxx  22 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  30 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_FS_DEVICE_FS_DIEPCTL0 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_FS_DEVICE_FS_DIEPCTL0 Register BitField Fetch Words  
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %11  0 lshift and 0 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_STALL@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_TXFNUM@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1111  22 lshift and 22 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_FS_DIEPCTL0 @ %1  31 lshift and 31 rshift ; 

OTG_FS_DEVICE_DIEPCTL1 ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPCTL1 
 %1  31 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
 %1  30 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  29 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_SODDFRM_SD1PID	Bit 29	 Width 1
 %1  28 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  27 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  26 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %xxxx  22 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  21 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_Stall	Bit 21	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  17 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %1  16 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  15 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 % 0 lshift OTG_FS_DEVICE_DIEPCTL1 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 11
\ OTG_FS_DEVICE_DIEPCTL1 Register BitField Fetch Words  
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_DIEPCTL1 @ %1  31 lshift and 31 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_DIEPCTL1 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_SODDFRM_SD1PID@ OTG_FS_DEVICE_DIEPCTL1 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_SD0PID_SEVNFRM@ OTG_FS_DEVICE_DIEPCTL1 @ %1  28 lshift and 28 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_DIEPCTL1 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_DIEPCTL1 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_TXFNUM@ OTG_FS_DEVICE_DIEPCTL1 @ %1111  22 lshift and 22 rshift ; 
: OTG_FS_DEVICE_Stall@ OTG_FS_DEVICE_DIEPCTL1 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_DIEPCTL1 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_DIEPCTL1 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_EONUM_DPID@ OTG_FS_DEVICE_DIEPCTL1 @ %1  16 lshift and 16 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_DIEPCTL1 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_DIEPCTL1 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPCTL2 ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPCTL2 
 %1  31 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
 %1  30 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  29 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  28 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  27 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  26 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %xxxx  22 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  21 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_Stall	Bit 21	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  17 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %1  16 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  15 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 % 0 lshift OTG_FS_DEVICE_DIEPCTL2 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 11
\ OTG_FS_DEVICE_DIEPCTL2 Register BitField Fetch Words  
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_DIEPCTL2 @ %1  31 lshift and 31 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_DIEPCTL2 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_SODDFRM@ OTG_FS_DEVICE_DIEPCTL2 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_SD0PID_SEVNFRM@ OTG_FS_DEVICE_DIEPCTL2 @ %1  28 lshift and 28 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_DIEPCTL2 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_DIEPCTL2 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_TXFNUM@ OTG_FS_DEVICE_DIEPCTL2 @ %1111  22 lshift and 22 rshift ; 
: OTG_FS_DEVICE_Stall@ OTG_FS_DEVICE_DIEPCTL2 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_DIEPCTL2 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_DIEPCTL2 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_EONUM_DPID@ OTG_FS_DEVICE_DIEPCTL2 @ %1  16 lshift and 16 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_DIEPCTL2 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_DIEPCTL2 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPCTL3 ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPCTL3 
 %1  31 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
 %1  30 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  29 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  28 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  27 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  26 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %xxxx  22 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  21 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_Stall	Bit 21	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  17 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %1  16 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  15 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 % 0 lshift OTG_FS_DEVICE_DIEPCTL3 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 11
\ OTG_FS_DEVICE_DIEPCTL3 Register BitField Fetch Words  
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_DIEPCTL3 @ %1  31 lshift and 31 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_DIEPCTL3 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_SODDFRM@ OTG_FS_DEVICE_DIEPCTL3 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_SD0PID_SEVNFRM@ OTG_FS_DEVICE_DIEPCTL3 @ %1  28 lshift and 28 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_DIEPCTL3 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_DIEPCTL3 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_TXFNUM@ OTG_FS_DEVICE_DIEPCTL3 @ %1111  22 lshift and 22 rshift ; 
: OTG_FS_DEVICE_Stall@ OTG_FS_DEVICE_DIEPCTL3 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_DIEPCTL3 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_DIEPCTL3 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_EONUM_DPID@ OTG_FS_DEVICE_DIEPCTL3 @ %1  16 lshift and 16 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_DIEPCTL3 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_DIEPCTL3 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPCTL0 ()
$00008000 CONSTANT RESET_OTG_FS_DEVICE_DOEPCTL0 
 %1  31 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
 %1  30 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  27 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  26 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %1  21 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_Stall	Bit 21	 Width 1
 %1  20 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_SNPM	Bit 20	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  17 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %1  15 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 %xx  0 lshift OTG_FS_DEVICE_DOEPCTL0 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 2
\ OTG_FS_DEVICE_DOEPCTL0 Register BitField Fetch Words  
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_DOEPCTL0 @ %1  31 lshift and 31 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_DOEPCTL0 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_DOEPCTL0 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_DOEPCTL0 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_Stall@ OTG_FS_DEVICE_DOEPCTL0 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_SNPM@ OTG_FS_DEVICE_DOEPCTL0 @ %1  20 lshift and 20 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_DOEPCTL0 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_DOEPCTL0 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_DOEPCTL0 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_DOEPCTL0 @ %11  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPCTL1 ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DOEPCTL1 
 %1  31 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
 %1  30 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  29 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  28 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  27 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  26 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %1  21 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_Stall	Bit 21	 Width 1
 %1  20 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_SNPM	Bit 20	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  17 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %1  16 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  15 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 % 0 lshift OTG_FS_DEVICE_DOEPCTL1 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 11
\ OTG_FS_DEVICE_DOEPCTL1 Register BitField Fetch Words  
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_DOEPCTL1 @ %1  31 lshift and 31 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_DOEPCTL1 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_SODDFRM@ OTG_FS_DEVICE_DOEPCTL1 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_SD0PID_SEVNFRM@ OTG_FS_DEVICE_DOEPCTL1 @ %1  28 lshift and 28 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_DOEPCTL1 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_DOEPCTL1 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_Stall@ OTG_FS_DEVICE_DOEPCTL1 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_SNPM@ OTG_FS_DEVICE_DOEPCTL1 @ %1  20 lshift and 20 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_DOEPCTL1 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_DOEPCTL1 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_EONUM_DPID@ OTG_FS_DEVICE_DOEPCTL1 @ %1  16 lshift and 16 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_DOEPCTL1 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_DOEPCTL1 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPCTL2 ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DOEPCTL2 
 %1  31 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
 %1  30 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  29 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  28 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  27 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  26 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %1  21 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_Stall	Bit 21	 Width 1
 %1  20 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_SNPM	Bit 20	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  17 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %1  16 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  15 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 % 0 lshift OTG_FS_DEVICE_DOEPCTL2 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 11
\ OTG_FS_DEVICE_DOEPCTL2 Register BitField Fetch Words  
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_DOEPCTL2 @ %1  31 lshift and 31 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_DOEPCTL2 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_SODDFRM@ OTG_FS_DEVICE_DOEPCTL2 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_SD0PID_SEVNFRM@ OTG_FS_DEVICE_DOEPCTL2 @ %1  28 lshift and 28 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_DOEPCTL2 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_DOEPCTL2 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_Stall@ OTG_FS_DEVICE_DOEPCTL2 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_SNPM@ OTG_FS_DEVICE_DOEPCTL2 @ %1  20 lshift and 20 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_DOEPCTL2 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_DOEPCTL2 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_EONUM_DPID@ OTG_FS_DEVICE_DOEPCTL2 @ %1  16 lshift and 16 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_DOEPCTL2 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_DOEPCTL2 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPCTL3 ()
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DOEPCTL3 
 %1  31 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_EPENA	Bit 31	 Width 1
 %1  30 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  29 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  28 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  27 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_SNAK	Bit 27	 Width 1
 %1  26 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_CNAK	Bit 26	 Width 1
 %1  21 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_Stall	Bit 21	 Width 1
 %1  20 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_SNPM	Bit 20	 Width 1
 %xx  18 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  17 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_NAKSTS	Bit 17	 Width 1
 %1  16 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  15 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_USBAEP	Bit 15	 Width 1
 % 0 lshift OTG_FS_DEVICE_DOEPCTL3 bis!        \ OTG_FS_DEVICE_MPSIZ	Bit 0	 Width 11
\ OTG_FS_DEVICE_DOEPCTL3 Register BitField Fetch Words  
: OTG_FS_DEVICE_EPENA@ OTG_FS_DEVICE_DOEPCTL3 @ %1  31 lshift and 31 rshift ; 
: OTG_FS_DEVICE_EPDIS@ OTG_FS_DEVICE_DOEPCTL3 @ %1  30 lshift and 30 rshift ; 
: OTG_FS_DEVICE_SODDFRM@ OTG_FS_DEVICE_DOEPCTL3 @ %1  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_SD0PID_SEVNFRM@ OTG_FS_DEVICE_DOEPCTL3 @ %1  28 lshift and 28 rshift ; 
: OTG_FS_DEVICE_SNAK@ OTG_FS_DEVICE_DOEPCTL3 @ %1  27 lshift and 27 rshift ; 
: OTG_FS_DEVICE_CNAK@ OTG_FS_DEVICE_DOEPCTL3 @ %1  26 lshift and 26 rshift ; 
: OTG_FS_DEVICE_Stall@ OTG_FS_DEVICE_DOEPCTL3 @ %1  21 lshift and 21 rshift ; 
: OTG_FS_DEVICE_SNPM@ OTG_FS_DEVICE_DOEPCTL3 @ %1  20 lshift and 20 rshift ; 
: OTG_FS_DEVICE_EPTYP@ OTG_FS_DEVICE_DOEPCTL3 @ %11  18 lshift and 18 rshift ; 
: OTG_FS_DEVICE_NAKSTS@ OTG_FS_DEVICE_DOEPCTL3 @ %1  17 lshift and 17 rshift ; 
: OTG_FS_DEVICE_EONUM_DPID@ OTG_FS_DEVICE_DOEPCTL3 @ %1  16 lshift and 16 rshift ; 
: OTG_FS_DEVICE_USBAEP@ OTG_FS_DEVICE_DOEPCTL3 @ %1  15 lshift and 15 rshift ; 
: OTG_FS_DEVICE_MPSIZ@ OTG_FS_DEVICE_DOEPCTL3 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPINT0 ()
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DIEPINT0 
 %1  7 lshift OTG_FS_DEVICE_DIEPINT0 bis!        \ OTG_FS_DEVICE_TXFE	Bit 7	 Width 1
 %1  6 lshift OTG_FS_DEVICE_DIEPINT0 bis!        \ OTG_FS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DIEPINT0 bis!        \ OTG_FS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DIEPINT0 bis!        \ OTG_FS_DEVICE_TOC	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DIEPINT0 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DIEPINT0 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DIEPINT0 Register BitField Fetch Words  
: OTG_FS_DEVICE_TXFE@ OTG_FS_DEVICE_DIEPINT0 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_DEVICE_INEPNE@ OTG_FS_DEVICE_DIEPINT0 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_ITTXFE@ OTG_FS_DEVICE_DIEPINT0 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_TOC@ OTG_FS_DEVICE_DIEPINT0 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DIEPINT0 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DIEPINT0 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPINT1 ()
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DIEPINT1 
 %1  7 lshift OTG_FS_DEVICE_DIEPINT1 bis!        \ OTG_FS_DEVICE_TXFE	Bit 7	 Width 1
 %1  6 lshift OTG_FS_DEVICE_DIEPINT1 bis!        \ OTG_FS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DIEPINT1 bis!        \ OTG_FS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DIEPINT1 bis!        \ OTG_FS_DEVICE_TOC	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DIEPINT1 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DIEPINT1 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DIEPINT1 Register BitField Fetch Words  
: OTG_FS_DEVICE_TXFE@ OTG_FS_DEVICE_DIEPINT1 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_DEVICE_INEPNE@ OTG_FS_DEVICE_DIEPINT1 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_ITTXFE@ OTG_FS_DEVICE_DIEPINT1 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_TOC@ OTG_FS_DEVICE_DIEPINT1 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DIEPINT1 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DIEPINT1 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPINT2 ()
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DIEPINT2 
 %1  7 lshift OTG_FS_DEVICE_DIEPINT2 bis!        \ OTG_FS_DEVICE_TXFE	Bit 7	 Width 1
 %1  6 lshift OTG_FS_DEVICE_DIEPINT2 bis!        \ OTG_FS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DIEPINT2 bis!        \ OTG_FS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DIEPINT2 bis!        \ OTG_FS_DEVICE_TOC	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DIEPINT2 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DIEPINT2 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DIEPINT2 Register BitField Fetch Words  
: OTG_FS_DEVICE_TXFE@ OTG_FS_DEVICE_DIEPINT2 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_DEVICE_INEPNE@ OTG_FS_DEVICE_DIEPINT2 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_ITTXFE@ OTG_FS_DEVICE_DIEPINT2 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_TOC@ OTG_FS_DEVICE_DIEPINT2 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DIEPINT2 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DIEPINT2 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPINT3 ()
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DIEPINT3 
 %1  7 lshift OTG_FS_DEVICE_DIEPINT3 bis!        \ OTG_FS_DEVICE_TXFE	Bit 7	 Width 1
 %1  6 lshift OTG_FS_DEVICE_DIEPINT3 bis!        \ OTG_FS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DIEPINT3 bis!        \ OTG_FS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DIEPINT3 bis!        \ OTG_FS_DEVICE_TOC	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DIEPINT3 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DIEPINT3 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DIEPINT3 Register BitField Fetch Words  
: OTG_FS_DEVICE_TXFE@ OTG_FS_DEVICE_DIEPINT3 @ %1  7 lshift and 7 rshift ; 
: OTG_FS_DEVICE_INEPNE@ OTG_FS_DEVICE_DIEPINT3 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_ITTXFE@ OTG_FS_DEVICE_DIEPINT3 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_TOC@ OTG_FS_DEVICE_DIEPINT3 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DIEPINT3 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DIEPINT3 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPINT0 (read-write)
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DOEPINT0 
 %1  6 lshift OTG_FS_DEVICE_DOEPINT0 bis!        \ OTG_FS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DOEPINT0 bis!        \ OTG_FS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DOEPINT0 bis!        \ OTG_FS_DEVICE_STUP	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DOEPINT0 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DOEPINT0 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DOEPINT0 Register BitField Fetch Words  
: OTG_FS_DEVICE_B2BSTUP@ OTG_FS_DEVICE_DOEPINT0 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_OTEPDIS@ OTG_FS_DEVICE_DOEPINT0 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_STUP@ OTG_FS_DEVICE_DOEPINT0 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DOEPINT0 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DOEPINT0 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPINT1 (read-write)
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DOEPINT1 
 %1  6 lshift OTG_FS_DEVICE_DOEPINT1 bis!        \ OTG_FS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DOEPINT1 bis!        \ OTG_FS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DOEPINT1 bis!        \ OTG_FS_DEVICE_STUP	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DOEPINT1 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DOEPINT1 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DOEPINT1 Register BitField Fetch Words  
: OTG_FS_DEVICE_B2BSTUP@ OTG_FS_DEVICE_DOEPINT1 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_OTEPDIS@ OTG_FS_DEVICE_DOEPINT1 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_STUP@ OTG_FS_DEVICE_DOEPINT1 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DOEPINT1 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DOEPINT1 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPINT2 (read-write)
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DOEPINT2 
 %1  6 lshift OTG_FS_DEVICE_DOEPINT2 bis!        \ OTG_FS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DOEPINT2 bis!        \ OTG_FS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DOEPINT2 bis!        \ OTG_FS_DEVICE_STUP	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DOEPINT2 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DOEPINT2 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DOEPINT2 Register BitField Fetch Words  
: OTG_FS_DEVICE_B2BSTUP@ OTG_FS_DEVICE_DOEPINT2 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_OTEPDIS@ OTG_FS_DEVICE_DOEPINT2 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_STUP@ OTG_FS_DEVICE_DOEPINT2 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DOEPINT2 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DOEPINT2 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPINT3 (read-write)
$00000080 CONSTANT RESET_OTG_FS_DEVICE_DOEPINT3 
 %1  6 lshift OTG_FS_DEVICE_DOEPINT3 bis!        \ OTG_FS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  4 lshift OTG_FS_DEVICE_DOEPINT3 bis!        \ OTG_FS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  3 lshift OTG_FS_DEVICE_DOEPINT3 bis!        \ OTG_FS_DEVICE_STUP	Bit 3	 Width 1
 %1  1 lshift OTG_FS_DEVICE_DOEPINT3 bis!        \ OTG_FS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  0 lshift OTG_FS_DEVICE_DOEPINT3 bis!        \ OTG_FS_DEVICE_XFRC	Bit 0	 Width 1
\ OTG_FS_DEVICE_DOEPINT3 Register BitField Fetch Words  
: OTG_FS_DEVICE_B2BSTUP@ OTG_FS_DEVICE_DOEPINT3 @ %1  6 lshift and 6 rshift ; 
: OTG_FS_DEVICE_OTEPDIS@ OTG_FS_DEVICE_DOEPINT3 @ %1  4 lshift and 4 rshift ; 
: OTG_FS_DEVICE_STUP@ OTG_FS_DEVICE_DOEPINT3 @ %1  3 lshift and 3 rshift ; 
: OTG_FS_DEVICE_EPDISD@ OTG_FS_DEVICE_DOEPINT3 @ %1  1 lshift and 1 rshift ; 
: OTG_FS_DEVICE_XFRC@ OTG_FS_DEVICE_DOEPINT3 @ %1  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPTSIZ0 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPTSIZ0 
 %xx  19 lshift OTG_FS_DEVICE_DIEPTSIZ0 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 2
 %xxxxxxx  0 lshift OTG_FS_DEVICE_DIEPTSIZ0 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 7
\ OTG_FS_DEVICE_DIEPTSIZ0 Register BitField Fetch Words  
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DIEPTSIZ0 @ %11  19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DIEPTSIZ0 @ %1111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPTSIZ0 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DOEPTSIZ0 
 %xx  29 lshift OTG_FS_DEVICE_DOEPTSIZ0 bis!        \ OTG_FS_DEVICE_STUPCNT	Bit 29	 Width 2
 %1  19 lshift OTG_FS_DEVICE_DOEPTSIZ0 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 1
 %xxxxxxx  0 lshift OTG_FS_DEVICE_DOEPTSIZ0 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 7
\ OTG_FS_DEVICE_DOEPTSIZ0 Register BitField Fetch Words  
: OTG_FS_DEVICE_STUPCNT@ OTG_FS_DEVICE_DOEPTSIZ0 @ %11  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DOEPTSIZ0 @ %1  19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DOEPTSIZ0 @ %1111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPTSIZ1 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPTSIZ1 
 %xx  29 lshift OTG_FS_DEVICE_DIEPTSIZ1 bis!        \ OTG_FS_DEVICE_MCNT	Bit 29	 Width 2
 % 19 lshift OTG_FS_DEVICE_DIEPTSIZ1 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 10
 % 0 lshift OTG_FS_DEVICE_DIEPTSIZ1 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 19
\ OTG_FS_DEVICE_DIEPTSIZ1 Register BitField Fetch Words  
: OTG_FS_DEVICE_MCNT@ OTG_FS_DEVICE_DIEPTSIZ1 @ %11  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DIEPTSIZ1 @ % 19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DIEPTSIZ1 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPTSIZ2 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPTSIZ2 
 %xx  29 lshift OTG_FS_DEVICE_DIEPTSIZ2 bis!        \ OTG_FS_DEVICE_MCNT	Bit 29	 Width 2
 % 19 lshift OTG_FS_DEVICE_DIEPTSIZ2 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 10
 % 0 lshift OTG_FS_DEVICE_DIEPTSIZ2 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 19
\ OTG_FS_DEVICE_DIEPTSIZ2 Register BitField Fetch Words  
: OTG_FS_DEVICE_MCNT@ OTG_FS_DEVICE_DIEPTSIZ2 @ %11  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DIEPTSIZ2 @ % 19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DIEPTSIZ2 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DIEPTSIZ3 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DIEPTSIZ3 
 %xx  29 lshift OTG_FS_DEVICE_DIEPTSIZ3 bis!        \ OTG_FS_DEVICE_MCNT	Bit 29	 Width 2
 % 19 lshift OTG_FS_DEVICE_DIEPTSIZ3 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 10
 % 0 lshift OTG_FS_DEVICE_DIEPTSIZ3 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 19
\ OTG_FS_DEVICE_DIEPTSIZ3 Register BitField Fetch Words  
: OTG_FS_DEVICE_MCNT@ OTG_FS_DEVICE_DIEPTSIZ3 @ %11  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DIEPTSIZ3 @ % 19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DIEPTSIZ3 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DTXFSTS0 (read-only)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DTXFSTS0 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_DTXFSTS0 bis!        \ OTG_FS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_FS_DEVICE_DTXFSTS0 Register BitField Fetch Words  
: OTG_FS_DEVICE_INEPTFSAV@ OTG_FS_DEVICE_DTXFSTS0 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DTXFSTS1 (read-only)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DTXFSTS1 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_DTXFSTS1 bis!        \ OTG_FS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_FS_DEVICE_DTXFSTS1 Register BitField Fetch Words  
: OTG_FS_DEVICE_INEPTFSAV@ OTG_FS_DEVICE_DTXFSTS1 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DTXFSTS2 (read-only)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DTXFSTS2 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_DTXFSTS2 bis!        \ OTG_FS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_FS_DEVICE_DTXFSTS2 Register BitField Fetch Words  
: OTG_FS_DEVICE_INEPTFSAV@ OTG_FS_DEVICE_DTXFSTS2 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DTXFSTS3 (read-only)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DTXFSTS3 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_FS_DEVICE_DTXFSTS3 bis!        \ OTG_FS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_FS_DEVICE_DTXFSTS3 Register BitField Fetch Words  
: OTG_FS_DEVICE_INEPTFSAV@ OTG_FS_DEVICE_DTXFSTS3 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPTSIZ1 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DOEPTSIZ1 
 %xx  29 lshift OTG_FS_DEVICE_DOEPTSIZ1 bis!        \ OTG_FS_DEVICE_RXDPID_STUPCNT	Bit 29	 Width 2
 % 19 lshift OTG_FS_DEVICE_DOEPTSIZ1 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 10
 % 0 lshift OTG_FS_DEVICE_DOEPTSIZ1 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 19
\ OTG_FS_DEVICE_DOEPTSIZ1 Register BitField Fetch Words  
: OTG_FS_DEVICE_RXDPID_STUPCNT@ OTG_FS_DEVICE_DOEPTSIZ1 @ %11  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DOEPTSIZ1 @ % 19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DOEPTSIZ1 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPTSIZ2 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DOEPTSIZ2 
 %xx  29 lshift OTG_FS_DEVICE_DOEPTSIZ2 bis!        \ OTG_FS_DEVICE_RXDPID_STUPCNT	Bit 29	 Width 2
 % 19 lshift OTG_FS_DEVICE_DOEPTSIZ2 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 10
 % 0 lshift OTG_FS_DEVICE_DOEPTSIZ2 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 19
\ OTG_FS_DEVICE_DOEPTSIZ2 Register BitField Fetch Words  
: OTG_FS_DEVICE_RXDPID_STUPCNT@ OTG_FS_DEVICE_DOEPTSIZ2 @ %11  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DOEPTSIZ2 @ % 19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DOEPTSIZ2 @ % 0 lshift and 0 rshift ; 

OTG_FS_DEVICE_DOEPTSIZ3 (read-write)
$00000000 CONSTANT RESET_OTG_FS_DEVICE_DOEPTSIZ3 
 %xx  29 lshift OTG_FS_DEVICE_DOEPTSIZ3 bis!        \ OTG_FS_DEVICE_RXDPID_STUPCNT	Bit 29	 Width 2
 % 19 lshift OTG_FS_DEVICE_DOEPTSIZ3 bis!        \ OTG_FS_DEVICE_PKTCNT	Bit 19	 Width 10
 % 0 lshift OTG_FS_DEVICE_DOEPTSIZ3 bis!        \ OTG_FS_DEVICE_XFRSIZ	Bit 0	 Width 19
\ OTG_FS_DEVICE_DOEPTSIZ3 Register BitField Fetch Words  
: OTG_FS_DEVICE_RXDPID_STUPCNT@ OTG_FS_DEVICE_DOEPTSIZ3 @ %11  29 lshift and 29 rshift ; 
: OTG_FS_DEVICE_PKTCNT@ OTG_FS_DEVICE_DOEPTSIZ3 @ % 19 lshift and 19 rshift ; 
: OTG_FS_DEVICE_XFRSIZ@ OTG_FS_DEVICE_DOEPTSIZ3 @ % 0 lshift and 0 rshift ; 

                    
################################### OTG_FS_PWRCLK ###################################
OTG_FS_PWRCLK_FS_PCGCCTL (read-write)
$00000000 CONSTANT RESET_OTG_FS_PWRCLK_FS_PCGCCTL 
 %1  0 lshift OTG_FS_PWRCLK_FS_PCGCCTL bis!        \ OTG_FS_PWRCLK_STPPCLK	Bit 0	 Width 1
 %1  1 lshift OTG_FS_PWRCLK_FS_PCGCCTL bis!        \ OTG_FS_PWRCLK_GATEHCLK	Bit 1	 Width 1
 %1  4 lshift OTG_FS_PWRCLK_FS_PCGCCTL bis!        \ OTG_FS_PWRCLK_PHYSUSP	Bit 4	 Width 1
\ OTG_FS_PWRCLK_FS_PCGCCTL Register BitField Fetch Words  
: OTG_FS_PWRCLK_STPPCLK@ OTG_FS_PWRCLK_FS_PCGCCTL @ %1  0 lshift and 0 rshift ; 
: OTG_FS_PWRCLK_GATEHCLK@ OTG_FS_PWRCLK_FS_PCGCCTL @ %1  1 lshift and 1 rshift ; 
: OTG_FS_PWRCLK_PHYSUSP@ OTG_FS_PWRCLK_FS_PCGCCTL @ %1  4 lshift and 4 rshift ; 

                    
################################### CAN1 ###################################
CAN1_MCR (read-write)
$00010002 CONSTANT RESET_CAN1_MCR 
 %1  16 lshift CAN1_MCR bis!        \ CAN1_DBF	Bit 16	 Width 1
 %1  15 lshift CAN1_MCR bis!        \ CAN1_RESET	Bit 15	 Width 1
 %1  7 lshift CAN1_MCR bis!        \ CAN1_TTCM	Bit 7	 Width 1
 %1  6 lshift CAN1_MCR bis!        \ CAN1_ABOM	Bit 6	 Width 1
 %1  5 lshift CAN1_MCR bis!        \ CAN1_AWUM	Bit 5	 Width 1
 %1  4 lshift CAN1_MCR bis!        \ CAN1_NART	Bit 4	 Width 1
 %1  3 lshift CAN1_MCR bis!        \ CAN1_RFLM	Bit 3	 Width 1
 %1  2 lshift CAN1_MCR bis!        \ CAN1_TXFP	Bit 2	 Width 1
 %1  1 lshift CAN1_MCR bis!        \ CAN1_SLEEP	Bit 1	 Width 1
 %1  0 lshift CAN1_MCR bis!        \ CAN1_INRQ	Bit 0	 Width 1
\ CAN1_MCR Register BitField Fetch Words  
: CAN1_DBF@ CAN1_MCR @ %1  16 lshift and 16 rshift ; 
: CAN1_RESET@ CAN1_MCR @ %1  15 lshift and 15 rshift ; 
: CAN1_TTCM@ CAN1_MCR @ %1  7 lshift and 7 rshift ; 
: CAN1_ABOM@ CAN1_MCR @ %1  6 lshift and 6 rshift ; 
: CAN1_AWUM@ CAN1_MCR @ %1  5 lshift and 5 rshift ; 
: CAN1_NART@ CAN1_MCR @ %1  4 lshift and 4 rshift ; 
: CAN1_RFLM@ CAN1_MCR @ %1  3 lshift and 3 rshift ; 
: CAN1_TXFP@ CAN1_MCR @ %1  2 lshift and 2 rshift ; 
: CAN1_SLEEP@ CAN1_MCR @ %1  1 lshift and 1 rshift ; 
: CAN1_INRQ@ CAN1_MCR @ %1  0 lshift and 0 rshift ; 

CAN1_MSR ()
$00000C02 CONSTANT RESET_CAN1_MSR 
 %1  11 lshift CAN1_MSR bis!        \ CAN1_RX	Bit 11	 Width 1
 %1  10 lshift CAN1_MSR bis!        \ CAN1_SAMP	Bit 10	 Width 1
 %1  9 lshift CAN1_MSR bis!        \ CAN1_RXM	Bit 9	 Width 1
 %1  8 lshift CAN1_MSR bis!        \ CAN1_TXM	Bit 8	 Width 1
 %1  4 lshift CAN1_MSR bis!        \ CAN1_SLAKI	Bit 4	 Width 1
 %1  3 lshift CAN1_MSR bis!        \ CAN1_WKUI	Bit 3	 Width 1
 %1  2 lshift CAN1_MSR bis!        \ CAN1_ERRI	Bit 2	 Width 1
 %1  1 lshift CAN1_MSR bis!        \ CAN1_SLAK	Bit 1	 Width 1
 %1  0 lshift CAN1_MSR bis!        \ CAN1_INAK	Bit 0	 Width 1
\ CAN1_MSR Register BitField Fetch Words  
: CAN1_RX@ CAN1_MSR @ %1  11 lshift and 11 rshift ; 
: CAN1_SAMP@ CAN1_MSR @ %1  10 lshift and 10 rshift ; 
: CAN1_RXM@ CAN1_MSR @ %1  9 lshift and 9 rshift ; 
: CAN1_TXM@ CAN1_MSR @ %1  8 lshift and 8 rshift ; 
: CAN1_SLAKI@ CAN1_MSR @ %1  4 lshift and 4 rshift ; 
: CAN1_WKUI@ CAN1_MSR @ %1  3 lshift and 3 rshift ; 
: CAN1_ERRI@ CAN1_MSR @ %1  2 lshift and 2 rshift ; 
: CAN1_SLAK@ CAN1_MSR @ %1  1 lshift and 1 rshift ; 
: CAN1_INAK@ CAN1_MSR @ %1  0 lshift and 0 rshift ; 

CAN1_TSR ()
$1C000000 CONSTANT RESET_CAN1_TSR 
 %1  31 lshift CAN1_TSR bis!        \ CAN1_LOW2	Bit 31	 Width 1
 %1  30 lshift CAN1_TSR bis!        \ CAN1_LOW1	Bit 30	 Width 1
 %1  29 lshift CAN1_TSR bis!        \ CAN1_LOW0	Bit 29	 Width 1
 %1  28 lshift CAN1_TSR bis!        \ CAN1_TME2	Bit 28	 Width 1
 %1  27 lshift CAN1_TSR bis!        \ CAN1_TME1	Bit 27	 Width 1
 %1  26 lshift CAN1_TSR bis!        \ CAN1_TME0	Bit 26	 Width 1
 %xx  24 lshift CAN1_TSR bis!        \ CAN1_CODE	Bit 24	 Width 2
 %1  23 lshift CAN1_TSR bis!        \ CAN1_ABRQ2	Bit 23	 Width 1
 %1  19 lshift CAN1_TSR bis!        \ CAN1_TERR2	Bit 19	 Width 1
 %1  18 lshift CAN1_TSR bis!        \ CAN1_ALST2	Bit 18	 Width 1
 %1  17 lshift CAN1_TSR bis!        \ CAN1_TXOK2	Bit 17	 Width 1
 %1  16 lshift CAN1_TSR bis!        \ CAN1_RQCP2	Bit 16	 Width 1
 %1  15 lshift CAN1_TSR bis!        \ CAN1_ABRQ1	Bit 15	 Width 1
 %1  11 lshift CAN1_TSR bis!        \ CAN1_TERR1	Bit 11	 Width 1
 %1  10 lshift CAN1_TSR bis!        \ CAN1_ALST1	Bit 10	 Width 1
 %1  9 lshift CAN1_TSR bis!        \ CAN1_TXOK1	Bit 9	 Width 1
 %1  8 lshift CAN1_TSR bis!        \ CAN1_RQCP1	Bit 8	 Width 1
 %1  7 lshift CAN1_TSR bis!        \ CAN1_ABRQ0	Bit 7	 Width 1
 %1  3 lshift CAN1_TSR bis!        \ CAN1_TERR0	Bit 3	 Width 1
 %1  2 lshift CAN1_TSR bis!        \ CAN1_ALST0	Bit 2	 Width 1
 %1  1 lshift CAN1_TSR bis!        \ CAN1_TXOK0	Bit 1	 Width 1
 %1  0 lshift CAN1_TSR bis!        \ CAN1_RQCP0	Bit 0	 Width 1
\ CAN1_TSR Register BitField Fetch Words  
: CAN1_LOW2@ CAN1_TSR @ %1  31 lshift and 31 rshift ; 
: CAN1_LOW1@ CAN1_TSR @ %1  30 lshift and 30 rshift ; 
: CAN1_LOW0@ CAN1_TSR @ %1  29 lshift and 29 rshift ; 
: CAN1_TME2@ CAN1_TSR @ %1  28 lshift and 28 rshift ; 
: CAN1_TME1@ CAN1_TSR @ %1  27 lshift and 27 rshift ; 
: CAN1_TME0@ CAN1_TSR @ %1  26 lshift and 26 rshift ; 
: CAN1_CODE@ CAN1_TSR @ %11  24 lshift and 24 rshift ; 
: CAN1_ABRQ2@ CAN1_TSR @ %1  23 lshift and 23 rshift ; 
: CAN1_TERR2@ CAN1_TSR @ %1  19 lshift and 19 rshift ; 
: CAN1_ALST2@ CAN1_TSR @ %1  18 lshift and 18 rshift ; 
: CAN1_TXOK2@ CAN1_TSR @ %1  17 lshift and 17 rshift ; 
: CAN1_RQCP2@ CAN1_TSR @ %1  16 lshift and 16 rshift ; 
: CAN1_ABRQ1@ CAN1_TSR @ %1  15 lshift and 15 rshift ; 
: CAN1_TERR1@ CAN1_TSR @ %1  11 lshift and 11 rshift ; 
: CAN1_ALST1@ CAN1_TSR @ %1  10 lshift and 10 rshift ; 
: CAN1_TXOK1@ CAN1_TSR @ %1  9 lshift and 9 rshift ; 
: CAN1_RQCP1@ CAN1_TSR @ %1  8 lshift and 8 rshift ; 
: CAN1_ABRQ0@ CAN1_TSR @ %1  7 lshift and 7 rshift ; 
: CAN1_TERR0@ CAN1_TSR @ %1  3 lshift and 3 rshift ; 
: CAN1_ALST0@ CAN1_TSR @ %1  2 lshift and 2 rshift ; 
: CAN1_TXOK0@ CAN1_TSR @ %1  1 lshift and 1 rshift ; 
: CAN1_RQCP0@ CAN1_TSR @ %1  0 lshift and 0 rshift ; 

CAN1_RF0R ()
$00000000 CONSTANT RESET_CAN1_RF0R 
 %1  5 lshift CAN1_RF0R bis!        \ CAN1_RFOM0	Bit 5	 Width 1
 %1  4 lshift CAN1_RF0R bis!        \ CAN1_FOVR0	Bit 4	 Width 1
 %1  3 lshift CAN1_RF0R bis!        \ CAN1_FULL0	Bit 3	 Width 1
 %xx  0 lshift CAN1_RF0R bis!        \ CAN1_FMP0	Bit 0	 Width 2
\ CAN1_RF0R Register BitField Fetch Words  
: CAN1_RFOM0@ CAN1_RF0R @ %1  5 lshift and 5 rshift ; 
: CAN1_FOVR0@ CAN1_RF0R @ %1  4 lshift and 4 rshift ; 
: CAN1_FULL0@ CAN1_RF0R @ %1  3 lshift and 3 rshift ; 
: CAN1_FMP0@ CAN1_RF0R @ %11  0 lshift and 0 rshift ; 

CAN1_RF1R ()
$00000000 CONSTANT RESET_CAN1_RF1R 
 %1  5 lshift CAN1_RF1R bis!        \ CAN1_RFOM1	Bit 5	 Width 1
 %1  4 lshift CAN1_RF1R bis!        \ CAN1_FOVR1	Bit 4	 Width 1
 %1  3 lshift CAN1_RF1R bis!        \ CAN1_FULL1	Bit 3	 Width 1
 %xx  0 lshift CAN1_RF1R bis!        \ CAN1_FMP1	Bit 0	 Width 2
\ CAN1_RF1R Register BitField Fetch Words  
: CAN1_RFOM1@ CAN1_RF1R @ %1  5 lshift and 5 rshift ; 
: CAN1_FOVR1@ CAN1_RF1R @ %1  4 lshift and 4 rshift ; 
: CAN1_FULL1@ CAN1_RF1R @ %1  3 lshift and 3 rshift ; 
: CAN1_FMP1@ CAN1_RF1R @ %11  0 lshift and 0 rshift ; 

CAN1_IER (read-write)
$00000000 CONSTANT RESET_CAN1_IER 
 %1  17 lshift CAN1_IER bis!        \ CAN1_SLKIE	Bit 17	 Width 1
 %1  16 lshift CAN1_IER bis!        \ CAN1_WKUIE	Bit 16	 Width 1
 %1  15 lshift CAN1_IER bis!        \ CAN1_ERRIE	Bit 15	 Width 1
 %1  11 lshift CAN1_IER bis!        \ CAN1_LECIE	Bit 11	 Width 1
 %1  10 lshift CAN1_IER bis!        \ CAN1_BOFIE	Bit 10	 Width 1
 %1  9 lshift CAN1_IER bis!        \ CAN1_EPVIE	Bit 9	 Width 1
 %1  8 lshift CAN1_IER bis!        \ CAN1_EWGIE	Bit 8	 Width 1
 %1  6 lshift CAN1_IER bis!        \ CAN1_FOVIE1	Bit 6	 Width 1
 %1  5 lshift CAN1_IER bis!        \ CAN1_FFIE1	Bit 5	 Width 1
 %1  4 lshift CAN1_IER bis!        \ CAN1_FMPIE1	Bit 4	 Width 1
 %1  3 lshift CAN1_IER bis!        \ CAN1_FOVIE0	Bit 3	 Width 1
 %1  2 lshift CAN1_IER bis!        \ CAN1_FFIE0	Bit 2	 Width 1
 %1  1 lshift CAN1_IER bis!        \ CAN1_FMPIE0	Bit 1	 Width 1
 %1  0 lshift CAN1_IER bis!        \ CAN1_TMEIE	Bit 0	 Width 1
\ CAN1_IER Register BitField Fetch Words  
: CAN1_SLKIE@ CAN1_IER @ %1  17 lshift and 17 rshift ; 
: CAN1_WKUIE@ CAN1_IER @ %1  16 lshift and 16 rshift ; 
: CAN1_ERRIE@ CAN1_IER @ %1  15 lshift and 15 rshift ; 
: CAN1_LECIE@ CAN1_IER @ %1  11 lshift and 11 rshift ; 
: CAN1_BOFIE@ CAN1_IER @ %1  10 lshift and 10 rshift ; 
: CAN1_EPVIE@ CAN1_IER @ %1  9 lshift and 9 rshift ; 
: CAN1_EWGIE@ CAN1_IER @ %1  8 lshift and 8 rshift ; 
: CAN1_FOVIE1@ CAN1_IER @ %1  6 lshift and 6 rshift ; 
: CAN1_FFIE1@ CAN1_IER @ %1  5 lshift and 5 rshift ; 
: CAN1_FMPIE1@ CAN1_IER @ %1  4 lshift and 4 rshift ; 
: CAN1_FOVIE0@ CAN1_IER @ %1  3 lshift and 3 rshift ; 
: CAN1_FFIE0@ CAN1_IER @ %1  2 lshift and 2 rshift ; 
: CAN1_FMPIE0@ CAN1_IER @ %1  1 lshift and 1 rshift ; 
: CAN1_TMEIE@ CAN1_IER @ %1  0 lshift and 0 rshift ; 

CAN1_ESR ()
$00000000 CONSTANT RESET_CAN1_ESR 
 %xxxxxxxx  24 lshift CAN1_ESR bis!        \ CAN1_REC	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_ESR bis!        \ CAN1_TEC	Bit 16	 Width 8
 %xxx  4 lshift CAN1_ESR bis!        \ CAN1_LEC	Bit 4	 Width 3
 %1  2 lshift CAN1_ESR bis!        \ CAN1_BOFF	Bit 2	 Width 1
 %1  1 lshift CAN1_ESR bis!        \ CAN1_EPVF	Bit 1	 Width 1
 %1  0 lshift CAN1_ESR bis!        \ CAN1_EWGF	Bit 0	 Width 1
\ CAN1_ESR Register BitField Fetch Words  
: CAN1_REC@ CAN1_ESR @ %11111111  24 lshift and 24 rshift ; 
: CAN1_TEC@ CAN1_ESR @ %11111111  16 lshift and 16 rshift ; 
: CAN1_LEC@ CAN1_ESR @ %111  4 lshift and 4 rshift ; 
: CAN1_BOFF@ CAN1_ESR @ %1  2 lshift and 2 rshift ; 
: CAN1_EPVF@ CAN1_ESR @ %1  1 lshift and 1 rshift ; 
: CAN1_EWGF@ CAN1_ESR @ %1  0 lshift and 0 rshift ; 

CAN1_BTR (read-write)
$00000000 CONSTANT RESET_CAN1_BTR 
 %1  31 lshift CAN1_BTR bis!        \ CAN1_SILM	Bit 31	 Width 1
 %1  30 lshift CAN1_BTR bis!        \ CAN1_LBKM	Bit 30	 Width 1
 %xx  24 lshift CAN1_BTR bis!        \ CAN1_SJW	Bit 24	 Width 2
 %xxx  20 lshift CAN1_BTR bis!        \ CAN1_TS2	Bit 20	 Width 3
 %xxxx  16 lshift CAN1_BTR bis!        \ CAN1_TS1	Bit 16	 Width 4
 % 0 lshift CAN1_BTR bis!        \ CAN1_BRP	Bit 0	 Width 10
\ CAN1_BTR Register BitField Fetch Words  
: CAN1_SILM@ CAN1_BTR @ %1  31 lshift and 31 rshift ; 
: CAN1_LBKM@ CAN1_BTR @ %1  30 lshift and 30 rshift ; 
: CAN1_SJW@ CAN1_BTR @ %11  24 lshift and 24 rshift ; 
: CAN1_TS2@ CAN1_BTR @ %111  20 lshift and 20 rshift ; 
: CAN1_TS1@ CAN1_BTR @ %1111  16 lshift and 16 rshift ; 
: CAN1_BRP@ CAN1_BTR @ % 0 lshift and 0 rshift ; 

CAN1_TI0R (read-write)
$00000000 CONSTANT RESET_CAN1_TI0R 
 % 21 lshift CAN1_TI0R bis!        \ CAN1_STID	Bit 21	 Width 11
 % 3 lshift CAN1_TI0R bis!        \ CAN1_EXID	Bit 3	 Width 18
 %1  2 lshift CAN1_TI0R bis!        \ CAN1_IDE	Bit 2	 Width 1
 %1  1 lshift CAN1_TI0R bis!        \ CAN1_RTR	Bit 1	 Width 1
 %1  0 lshift CAN1_TI0R bis!        \ CAN1_TXRQ	Bit 0	 Width 1
\ CAN1_TI0R Register BitField Fetch Words  
: CAN1_STID@ CAN1_TI0R @ % 21 lshift and 21 rshift ; 
: CAN1_EXID@ CAN1_TI0R @ % 3 lshift and 3 rshift ; 
: CAN1_IDE@ CAN1_TI0R @ %1  2 lshift and 2 rshift ; 
: CAN1_RTR@ CAN1_TI0R @ %1  1 lshift and 1 rshift ; 
: CAN1_TXRQ@ CAN1_TI0R @ %1  0 lshift and 0 rshift ; 

CAN1_TDT0R (read-write)
$00000000 CONSTANT RESET_CAN1_TDT0R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN1_TDT0R bis!        \ CAN1_TIME	Bit 16	 Width 16
 %1  8 lshift CAN1_TDT0R bis!        \ CAN1_TGT	Bit 8	 Width 1
 %xxxx  0 lshift CAN1_TDT0R bis!        \ CAN1_DLC	Bit 0	 Width 4
\ CAN1_TDT0R Register BitField Fetch Words  
: CAN1_TIME@ CAN1_TDT0R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN1_TGT@ CAN1_TDT0R @ %1  8 lshift and 8 rshift ; 
: CAN1_DLC@ CAN1_TDT0R @ %1111  0 lshift and 0 rshift ; 

CAN1_TDL0R (read-write)
$00000000 CONSTANT RESET_CAN1_TDL0R 
 %xxxxxxxx  24 lshift CAN1_TDL0R bis!        \ CAN1_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_TDL0R bis!        \ CAN1_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_TDL0R bis!        \ CAN1_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_TDL0R bis!        \ CAN1_DATA0	Bit 0	 Width 8
\ CAN1_TDL0R Register BitField Fetch Words  
: CAN1_DATA3@ CAN1_TDL0R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA2@ CAN1_TDL0R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA1@ CAN1_TDL0R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA0@ CAN1_TDL0R @ %11111111  0 lshift and 0 rshift ; 

CAN1_TDH0R (read-write)
$00000000 CONSTANT RESET_CAN1_TDH0R 
 %xxxxxxxx  24 lshift CAN1_TDH0R bis!        \ CAN1_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_TDH0R bis!        \ CAN1_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_TDH0R bis!        \ CAN1_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_TDH0R bis!        \ CAN1_DATA4	Bit 0	 Width 8
\ CAN1_TDH0R Register BitField Fetch Words  
: CAN1_DATA7@ CAN1_TDH0R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA6@ CAN1_TDH0R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA5@ CAN1_TDH0R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA4@ CAN1_TDH0R @ %11111111  0 lshift and 0 rshift ; 

CAN1_TI1R (read-write)
$00000000 CONSTANT RESET_CAN1_TI1R 
 % 21 lshift CAN1_TI1R bis!        \ CAN1_STID	Bit 21	 Width 11
 % 3 lshift CAN1_TI1R bis!        \ CAN1_EXID	Bit 3	 Width 18
 %1  2 lshift CAN1_TI1R bis!        \ CAN1_IDE	Bit 2	 Width 1
 %1  1 lshift CAN1_TI1R bis!        \ CAN1_RTR	Bit 1	 Width 1
 %1  0 lshift CAN1_TI1R bis!        \ CAN1_TXRQ	Bit 0	 Width 1
\ CAN1_TI1R Register BitField Fetch Words  
: CAN1_STID@ CAN1_TI1R @ % 21 lshift and 21 rshift ; 
: CAN1_EXID@ CAN1_TI1R @ % 3 lshift and 3 rshift ; 
: CAN1_IDE@ CAN1_TI1R @ %1  2 lshift and 2 rshift ; 
: CAN1_RTR@ CAN1_TI1R @ %1  1 lshift and 1 rshift ; 
: CAN1_TXRQ@ CAN1_TI1R @ %1  0 lshift and 0 rshift ; 

CAN1_TDT1R (read-write)
$00000000 CONSTANT RESET_CAN1_TDT1R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN1_TDT1R bis!        \ CAN1_TIME	Bit 16	 Width 16
 %1  8 lshift CAN1_TDT1R bis!        \ CAN1_TGT	Bit 8	 Width 1
 %xxxx  0 lshift CAN1_TDT1R bis!        \ CAN1_DLC	Bit 0	 Width 4
\ CAN1_TDT1R Register BitField Fetch Words  
: CAN1_TIME@ CAN1_TDT1R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN1_TGT@ CAN1_TDT1R @ %1  8 lshift and 8 rshift ; 
: CAN1_DLC@ CAN1_TDT1R @ %1111  0 lshift and 0 rshift ; 

CAN1_TDL1R (read-write)
$00000000 CONSTANT RESET_CAN1_TDL1R 
 %xxxxxxxx  24 lshift CAN1_TDL1R bis!        \ CAN1_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_TDL1R bis!        \ CAN1_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_TDL1R bis!        \ CAN1_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_TDL1R bis!        \ CAN1_DATA0	Bit 0	 Width 8
\ CAN1_TDL1R Register BitField Fetch Words  
: CAN1_DATA3@ CAN1_TDL1R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA2@ CAN1_TDL1R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA1@ CAN1_TDL1R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA0@ CAN1_TDL1R @ %11111111  0 lshift and 0 rshift ; 

CAN1_TDH1R (read-write)
$00000000 CONSTANT RESET_CAN1_TDH1R 
 %xxxxxxxx  24 lshift CAN1_TDH1R bis!        \ CAN1_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_TDH1R bis!        \ CAN1_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_TDH1R bis!        \ CAN1_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_TDH1R bis!        \ CAN1_DATA4	Bit 0	 Width 8
\ CAN1_TDH1R Register BitField Fetch Words  
: CAN1_DATA7@ CAN1_TDH1R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA6@ CAN1_TDH1R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA5@ CAN1_TDH1R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA4@ CAN1_TDH1R @ %11111111  0 lshift and 0 rshift ; 

CAN1_TI2R (read-write)
$00000000 CONSTANT RESET_CAN1_TI2R 
 % 21 lshift CAN1_TI2R bis!        \ CAN1_STID	Bit 21	 Width 11
 % 3 lshift CAN1_TI2R bis!        \ CAN1_EXID	Bit 3	 Width 18
 %1  2 lshift CAN1_TI2R bis!        \ CAN1_IDE	Bit 2	 Width 1
 %1  1 lshift CAN1_TI2R bis!        \ CAN1_RTR	Bit 1	 Width 1
 %1  0 lshift CAN1_TI2R bis!        \ CAN1_TXRQ	Bit 0	 Width 1
\ CAN1_TI2R Register BitField Fetch Words  
: CAN1_STID@ CAN1_TI2R @ % 21 lshift and 21 rshift ; 
: CAN1_EXID@ CAN1_TI2R @ % 3 lshift and 3 rshift ; 
: CAN1_IDE@ CAN1_TI2R @ %1  2 lshift and 2 rshift ; 
: CAN1_RTR@ CAN1_TI2R @ %1  1 lshift and 1 rshift ; 
: CAN1_TXRQ@ CAN1_TI2R @ %1  0 lshift and 0 rshift ; 

CAN1_TDT2R (read-write)
$00000000 CONSTANT RESET_CAN1_TDT2R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN1_TDT2R bis!        \ CAN1_TIME	Bit 16	 Width 16
 %1  8 lshift CAN1_TDT2R bis!        \ CAN1_TGT	Bit 8	 Width 1
 %xxxx  0 lshift CAN1_TDT2R bis!        \ CAN1_DLC	Bit 0	 Width 4
\ CAN1_TDT2R Register BitField Fetch Words  
: CAN1_TIME@ CAN1_TDT2R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN1_TGT@ CAN1_TDT2R @ %1  8 lshift and 8 rshift ; 
: CAN1_DLC@ CAN1_TDT2R @ %1111  0 lshift and 0 rshift ; 

CAN1_TDL2R (read-write)
$00000000 CONSTANT RESET_CAN1_TDL2R 
 %xxxxxxxx  24 lshift CAN1_TDL2R bis!        \ CAN1_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_TDL2R bis!        \ CAN1_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_TDL2R bis!        \ CAN1_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_TDL2R bis!        \ CAN1_DATA0	Bit 0	 Width 8
\ CAN1_TDL2R Register BitField Fetch Words  
: CAN1_DATA3@ CAN1_TDL2R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA2@ CAN1_TDL2R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA1@ CAN1_TDL2R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA0@ CAN1_TDL2R @ %11111111  0 lshift and 0 rshift ; 

CAN1_TDH2R (read-write)
$00000000 CONSTANT RESET_CAN1_TDH2R 
 %xxxxxxxx  24 lshift CAN1_TDH2R bis!        \ CAN1_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_TDH2R bis!        \ CAN1_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_TDH2R bis!        \ CAN1_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_TDH2R bis!        \ CAN1_DATA4	Bit 0	 Width 8
\ CAN1_TDH2R Register BitField Fetch Words  
: CAN1_DATA7@ CAN1_TDH2R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA6@ CAN1_TDH2R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA5@ CAN1_TDH2R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA4@ CAN1_TDH2R @ %11111111  0 lshift and 0 rshift ; 

CAN1_RI0R (read-only)
$00000000 CONSTANT RESET_CAN1_RI0R 
 % 21 lshift CAN1_RI0R bis!        \ CAN1_STID	Bit 21	 Width 11
 % 3 lshift CAN1_RI0R bis!        \ CAN1_EXID	Bit 3	 Width 18
 %1  2 lshift CAN1_RI0R bis!        \ CAN1_IDE	Bit 2	 Width 1
 %1  1 lshift CAN1_RI0R bis!        \ CAN1_RTR	Bit 1	 Width 1
\ CAN1_RI0R Register BitField Fetch Words  
: CAN1_STID@ CAN1_RI0R @ % 21 lshift and 21 rshift ; 
: CAN1_EXID@ CAN1_RI0R @ % 3 lshift and 3 rshift ; 
: CAN1_IDE@ CAN1_RI0R @ %1  2 lshift and 2 rshift ; 
: CAN1_RTR@ CAN1_RI0R @ %1  1 lshift and 1 rshift ; 

CAN1_RDT0R (read-only)
$00000000 CONSTANT RESET_CAN1_RDT0R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN1_RDT0R bis!        \ CAN1_TIME	Bit 16	 Width 16
 %xxxxxxxx  8 lshift CAN1_RDT0R bis!        \ CAN1_FMI	Bit 8	 Width 8
 %xxxx  0 lshift CAN1_RDT0R bis!        \ CAN1_DLC	Bit 0	 Width 4
\ CAN1_RDT0R Register BitField Fetch Words  
: CAN1_TIME@ CAN1_RDT0R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN1_FMI@ CAN1_RDT0R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DLC@ CAN1_RDT0R @ %1111  0 lshift and 0 rshift ; 

CAN1_RDL0R (read-only)
$00000000 CONSTANT RESET_CAN1_RDL0R 
 %xxxxxxxx  24 lshift CAN1_RDL0R bis!        \ CAN1_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_RDL0R bis!        \ CAN1_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_RDL0R bis!        \ CAN1_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_RDL0R bis!        \ CAN1_DATA0	Bit 0	 Width 8
\ CAN1_RDL0R Register BitField Fetch Words  
: CAN1_DATA3@ CAN1_RDL0R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA2@ CAN1_RDL0R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA1@ CAN1_RDL0R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA0@ CAN1_RDL0R @ %11111111  0 lshift and 0 rshift ; 

CAN1_RDH0R (read-only)
$00000000 CONSTANT RESET_CAN1_RDH0R 
 %xxxxxxxx  24 lshift CAN1_RDH0R bis!        \ CAN1_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_RDH0R bis!        \ CAN1_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_RDH0R bis!        \ CAN1_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_RDH0R bis!        \ CAN1_DATA4	Bit 0	 Width 8
\ CAN1_RDH0R Register BitField Fetch Words  
: CAN1_DATA7@ CAN1_RDH0R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA6@ CAN1_RDH0R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA5@ CAN1_RDH0R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA4@ CAN1_RDH0R @ %11111111  0 lshift and 0 rshift ; 

CAN1_RI1R (read-only)
$00000000 CONSTANT RESET_CAN1_RI1R 
 % 21 lshift CAN1_RI1R bis!        \ CAN1_STID	Bit 21	 Width 11
 % 3 lshift CAN1_RI1R bis!        \ CAN1_EXID	Bit 3	 Width 18
 %1  2 lshift CAN1_RI1R bis!        \ CAN1_IDE	Bit 2	 Width 1
 %1  1 lshift CAN1_RI1R bis!        \ CAN1_RTR	Bit 1	 Width 1
\ CAN1_RI1R Register BitField Fetch Words  
: CAN1_STID@ CAN1_RI1R @ % 21 lshift and 21 rshift ; 
: CAN1_EXID@ CAN1_RI1R @ % 3 lshift and 3 rshift ; 
: CAN1_IDE@ CAN1_RI1R @ %1  2 lshift and 2 rshift ; 
: CAN1_RTR@ CAN1_RI1R @ %1  1 lshift and 1 rshift ; 

CAN1_RDT1R (read-only)
$00000000 CONSTANT RESET_CAN1_RDT1R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN1_RDT1R bis!        \ CAN1_TIME	Bit 16	 Width 16
 %xxxxxxxx  8 lshift CAN1_RDT1R bis!        \ CAN1_FMI	Bit 8	 Width 8
 %xxxx  0 lshift CAN1_RDT1R bis!        \ CAN1_DLC	Bit 0	 Width 4
\ CAN1_RDT1R Register BitField Fetch Words  
: CAN1_TIME@ CAN1_RDT1R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN1_FMI@ CAN1_RDT1R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DLC@ CAN1_RDT1R @ %1111  0 lshift and 0 rshift ; 

CAN1_RDL1R (read-only)
$00000000 CONSTANT RESET_CAN1_RDL1R 
 %xxxxxxxx  24 lshift CAN1_RDL1R bis!        \ CAN1_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_RDL1R bis!        \ CAN1_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_RDL1R bis!        \ CAN1_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_RDL1R bis!        \ CAN1_DATA0	Bit 0	 Width 8
\ CAN1_RDL1R Register BitField Fetch Words  
: CAN1_DATA3@ CAN1_RDL1R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA2@ CAN1_RDL1R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA1@ CAN1_RDL1R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA0@ CAN1_RDL1R @ %11111111  0 lshift and 0 rshift ; 

CAN1_RDH1R (read-only)
$00000000 CONSTANT RESET_CAN1_RDH1R 
 %xxxxxxxx  24 lshift CAN1_RDH1R bis!        \ CAN1_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN1_RDH1R bis!        \ CAN1_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN1_RDH1R bis!        \ CAN1_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN1_RDH1R bis!        \ CAN1_DATA4	Bit 0	 Width 8
\ CAN1_RDH1R Register BitField Fetch Words  
: CAN1_DATA7@ CAN1_RDH1R @ %11111111  24 lshift and 24 rshift ; 
: CAN1_DATA6@ CAN1_RDH1R @ %11111111  16 lshift and 16 rshift ; 
: CAN1_DATA5@ CAN1_RDH1R @ %11111111  8 lshift and 8 rshift ; 
: CAN1_DATA4@ CAN1_RDH1R @ %11111111  0 lshift and 0 rshift ; 

CAN1_FMR (read-write)
$2A1C0E01 CONSTANT RESET_CAN1_FMR 
 %xxxxxx  8 lshift CAN1_FMR bis!        \ CAN1_CAN2SB	Bit 8	 Width 6
 %1  0 lshift CAN1_FMR bis!        \ CAN1_FINIT	Bit 0	 Width 1
\ CAN1_FMR Register BitField Fetch Words  
: CAN1_CAN2SB@ CAN1_FMR @ %111111  8 lshift and 8 rshift ; 
: CAN1_FINIT@ CAN1_FMR @ %1  0 lshift and 0 rshift ; 

CAN1_FM1R (read-write)
$00000000 CONSTANT RESET_CAN1_FM1R 
 %1  0 lshift CAN1_FM1R bis!        \ CAN1_FBM0	Bit 0	 Width 1
 %1  1 lshift CAN1_FM1R bis!        \ CAN1_FBM1	Bit 1	 Width 1
 %1  2 lshift CAN1_FM1R bis!        \ CAN1_FBM2	Bit 2	 Width 1
 %1  3 lshift CAN1_FM1R bis!        \ CAN1_FBM3	Bit 3	 Width 1
 %1  4 lshift CAN1_FM1R bis!        \ CAN1_FBM4	Bit 4	 Width 1
 %1  5 lshift CAN1_FM1R bis!        \ CAN1_FBM5	Bit 5	 Width 1
 %1  6 lshift CAN1_FM1R bis!        \ CAN1_FBM6	Bit 6	 Width 1
 %1  7 lshift CAN1_FM1R bis!        \ CAN1_FBM7	Bit 7	 Width 1
 %1  8 lshift CAN1_FM1R bis!        \ CAN1_FBM8	Bit 8	 Width 1
 %1  9 lshift CAN1_FM1R bis!        \ CAN1_FBM9	Bit 9	 Width 1
 %1  10 lshift CAN1_FM1R bis!        \ CAN1_FBM10	Bit 10	 Width 1
 %1  11 lshift CAN1_FM1R bis!        \ CAN1_FBM11	Bit 11	 Width 1
 %1  12 lshift CAN1_FM1R bis!        \ CAN1_FBM12	Bit 12	 Width 1
 %1  13 lshift CAN1_FM1R bis!        \ CAN1_FBM13	Bit 13	 Width 1
 %1  14 lshift CAN1_FM1R bis!        \ CAN1_FBM14	Bit 14	 Width 1
 %1  15 lshift CAN1_FM1R bis!        \ CAN1_FBM15	Bit 15	 Width 1
 %1  16 lshift CAN1_FM1R bis!        \ CAN1_FBM16	Bit 16	 Width 1
 %1  17 lshift CAN1_FM1R bis!        \ CAN1_FBM17	Bit 17	 Width 1
 %1  18 lshift CAN1_FM1R bis!        \ CAN1_FBM18	Bit 18	 Width 1
 %1  19 lshift CAN1_FM1R bis!        \ CAN1_FBM19	Bit 19	 Width 1
 %1  20 lshift CAN1_FM1R bis!        \ CAN1_FBM20	Bit 20	 Width 1
 %1  21 lshift CAN1_FM1R bis!        \ CAN1_FBM21	Bit 21	 Width 1
 %1  22 lshift CAN1_FM1R bis!        \ CAN1_FBM22	Bit 22	 Width 1
 %1  23 lshift CAN1_FM1R bis!        \ CAN1_FBM23	Bit 23	 Width 1
 %1  24 lshift CAN1_FM1R bis!        \ CAN1_FBM24	Bit 24	 Width 1
 %1  25 lshift CAN1_FM1R bis!        \ CAN1_FBM25	Bit 25	 Width 1
 %1  26 lshift CAN1_FM1R bis!        \ CAN1_FBM26	Bit 26	 Width 1
 %1  27 lshift CAN1_FM1R bis!        \ CAN1_FBM27	Bit 27	 Width 1
\ CAN1_FM1R Register BitField Fetch Words  
: CAN1_FBM0@ CAN1_FM1R @ %1  0 lshift and 0 rshift ; 
: CAN1_FBM1@ CAN1_FM1R @ %1  1 lshift and 1 rshift ; 
: CAN1_FBM2@ CAN1_FM1R @ %1  2 lshift and 2 rshift ; 
: CAN1_FBM3@ CAN1_FM1R @ %1  3 lshift and 3 rshift ; 
: CAN1_FBM4@ CAN1_FM1R @ %1  4 lshift and 4 rshift ; 
: CAN1_FBM5@ CAN1_FM1R @ %1  5 lshift and 5 rshift ; 
: CAN1_FBM6@ CAN1_FM1R @ %1  6 lshift and 6 rshift ; 
: CAN1_FBM7@ CAN1_FM1R @ %1  7 lshift and 7 rshift ; 
: CAN1_FBM8@ CAN1_FM1R @ %1  8 lshift and 8 rshift ; 
: CAN1_FBM9@ CAN1_FM1R @ %1  9 lshift and 9 rshift ; 
: CAN1_FBM10@ CAN1_FM1R @ %1  10 lshift and 10 rshift ; 
: CAN1_FBM11@ CAN1_FM1R @ %1  11 lshift and 11 rshift ; 
: CAN1_FBM12@ CAN1_FM1R @ %1  12 lshift and 12 rshift ; 
: CAN1_FBM13@ CAN1_FM1R @ %1  13 lshift and 13 rshift ; 
: CAN1_FBM14@ CAN1_FM1R @ %1  14 lshift and 14 rshift ; 
: CAN1_FBM15@ CAN1_FM1R @ %1  15 lshift and 15 rshift ; 
: CAN1_FBM16@ CAN1_FM1R @ %1  16 lshift and 16 rshift ; 
: CAN1_FBM17@ CAN1_FM1R @ %1  17 lshift and 17 rshift ; 
: CAN1_FBM18@ CAN1_FM1R @ %1  18 lshift and 18 rshift ; 
: CAN1_FBM19@ CAN1_FM1R @ %1  19 lshift and 19 rshift ; 
: CAN1_FBM20@ CAN1_FM1R @ %1  20 lshift and 20 rshift ; 
: CAN1_FBM21@ CAN1_FM1R @ %1  21 lshift and 21 rshift ; 
: CAN1_FBM22@ CAN1_FM1R @ %1  22 lshift and 22 rshift ; 
: CAN1_FBM23@ CAN1_FM1R @ %1  23 lshift and 23 rshift ; 
: CAN1_FBM24@ CAN1_FM1R @ %1  24 lshift and 24 rshift ; 
: CAN1_FBM25@ CAN1_FM1R @ %1  25 lshift and 25 rshift ; 
: CAN1_FBM26@ CAN1_FM1R @ %1  26 lshift and 26 rshift ; 
: CAN1_FBM27@ CAN1_FM1R @ %1  27 lshift and 27 rshift ; 

CAN1_FS1R (read-write)
$00000000 CONSTANT RESET_CAN1_FS1R 
 %1  0 lshift CAN1_FS1R bis!        \ CAN1_FSC0	Bit 0	 Width 1
 %1  1 lshift CAN1_FS1R bis!        \ CAN1_FSC1	Bit 1	 Width 1
 %1  2 lshift CAN1_FS1R bis!        \ CAN1_FSC2	Bit 2	 Width 1
 %1  3 lshift CAN1_FS1R bis!        \ CAN1_FSC3	Bit 3	 Width 1
 %1  4 lshift CAN1_FS1R bis!        \ CAN1_FSC4	Bit 4	 Width 1
 %1  5 lshift CAN1_FS1R bis!        \ CAN1_FSC5	Bit 5	 Width 1
 %1  6 lshift CAN1_FS1R bis!        \ CAN1_FSC6	Bit 6	 Width 1
 %1  7 lshift CAN1_FS1R bis!        \ CAN1_FSC7	Bit 7	 Width 1
 %1  8 lshift CAN1_FS1R bis!        \ CAN1_FSC8	Bit 8	 Width 1
 %1  9 lshift CAN1_FS1R bis!        \ CAN1_FSC9	Bit 9	 Width 1
 %1  10 lshift CAN1_FS1R bis!        \ CAN1_FSC10	Bit 10	 Width 1
 %1  11 lshift CAN1_FS1R bis!        \ CAN1_FSC11	Bit 11	 Width 1
 %1  12 lshift CAN1_FS1R bis!        \ CAN1_FSC12	Bit 12	 Width 1
 %1  13 lshift CAN1_FS1R bis!        \ CAN1_FSC13	Bit 13	 Width 1
 %1  14 lshift CAN1_FS1R bis!        \ CAN1_FSC14	Bit 14	 Width 1
 %1  15 lshift CAN1_FS1R bis!        \ CAN1_FSC15	Bit 15	 Width 1
 %1  16 lshift CAN1_FS1R bis!        \ CAN1_FSC16	Bit 16	 Width 1
 %1  17 lshift CAN1_FS1R bis!        \ CAN1_FSC17	Bit 17	 Width 1
 %1  18 lshift CAN1_FS1R bis!        \ CAN1_FSC18	Bit 18	 Width 1
 %1  19 lshift CAN1_FS1R bis!        \ CAN1_FSC19	Bit 19	 Width 1
 %1  20 lshift CAN1_FS1R bis!        \ CAN1_FSC20	Bit 20	 Width 1
 %1  21 lshift CAN1_FS1R bis!        \ CAN1_FSC21	Bit 21	 Width 1
 %1  22 lshift CAN1_FS1R bis!        \ CAN1_FSC22	Bit 22	 Width 1
 %1  23 lshift CAN1_FS1R bis!        \ CAN1_FSC23	Bit 23	 Width 1
 %1  24 lshift CAN1_FS1R bis!        \ CAN1_FSC24	Bit 24	 Width 1
 %1  25 lshift CAN1_FS1R bis!        \ CAN1_FSC25	Bit 25	 Width 1
 %1  26 lshift CAN1_FS1R bis!        \ CAN1_FSC26	Bit 26	 Width 1
 %1  27 lshift CAN1_FS1R bis!        \ CAN1_FSC27	Bit 27	 Width 1
\ CAN1_FS1R Register BitField Fetch Words  
: CAN1_FSC0@ CAN1_FS1R @ %1  0 lshift and 0 rshift ; 
: CAN1_FSC1@ CAN1_FS1R @ %1  1 lshift and 1 rshift ; 
: CAN1_FSC2@ CAN1_FS1R @ %1  2 lshift and 2 rshift ; 
: CAN1_FSC3@ CAN1_FS1R @ %1  3 lshift and 3 rshift ; 
: CAN1_FSC4@ CAN1_FS1R @ %1  4 lshift and 4 rshift ; 
: CAN1_FSC5@ CAN1_FS1R @ %1  5 lshift and 5 rshift ; 
: CAN1_FSC6@ CAN1_FS1R @ %1  6 lshift and 6 rshift ; 
: CAN1_FSC7@ CAN1_FS1R @ %1  7 lshift and 7 rshift ; 
: CAN1_FSC8@ CAN1_FS1R @ %1  8 lshift and 8 rshift ; 
: CAN1_FSC9@ CAN1_FS1R @ %1  9 lshift and 9 rshift ; 
: CAN1_FSC10@ CAN1_FS1R @ %1  10 lshift and 10 rshift ; 
: CAN1_FSC11@ CAN1_FS1R @ %1  11 lshift and 11 rshift ; 
: CAN1_FSC12@ CAN1_FS1R @ %1  12 lshift and 12 rshift ; 
: CAN1_FSC13@ CAN1_FS1R @ %1  13 lshift and 13 rshift ; 
: CAN1_FSC14@ CAN1_FS1R @ %1  14 lshift and 14 rshift ; 
: CAN1_FSC15@ CAN1_FS1R @ %1  15 lshift and 15 rshift ; 
: CAN1_FSC16@ CAN1_FS1R @ %1  16 lshift and 16 rshift ; 
: CAN1_FSC17@ CAN1_FS1R @ %1  17 lshift and 17 rshift ; 
: CAN1_FSC18@ CAN1_FS1R @ %1  18 lshift and 18 rshift ; 
: CAN1_FSC19@ CAN1_FS1R @ %1  19 lshift and 19 rshift ; 
: CAN1_FSC20@ CAN1_FS1R @ %1  20 lshift and 20 rshift ; 
: CAN1_FSC21@ CAN1_FS1R @ %1  21 lshift and 21 rshift ; 
: CAN1_FSC22@ CAN1_FS1R @ %1  22 lshift and 22 rshift ; 
: CAN1_FSC23@ CAN1_FS1R @ %1  23 lshift and 23 rshift ; 
: CAN1_FSC24@ CAN1_FS1R @ %1  24 lshift and 24 rshift ; 
: CAN1_FSC25@ CAN1_FS1R @ %1  25 lshift and 25 rshift ; 
: CAN1_FSC26@ CAN1_FS1R @ %1  26 lshift and 26 rshift ; 
: CAN1_FSC27@ CAN1_FS1R @ %1  27 lshift and 27 rshift ; 

CAN1_FFA1R (read-write)
$00000000 CONSTANT RESET_CAN1_FFA1R 
 %1  0 lshift CAN1_FFA1R bis!        \ CAN1_FFA0	Bit 0	 Width 1
 %1  1 lshift CAN1_FFA1R bis!        \ CAN1_FFA1	Bit 1	 Width 1
 %1  2 lshift CAN1_FFA1R bis!        \ CAN1_FFA2	Bit 2	 Width 1
 %1  3 lshift CAN1_FFA1R bis!        \ CAN1_FFA3	Bit 3	 Width 1
 %1  4 lshift CAN1_FFA1R bis!        \ CAN1_FFA4	Bit 4	 Width 1
 %1  5 lshift CAN1_FFA1R bis!        \ CAN1_FFA5	Bit 5	 Width 1
 %1  6 lshift CAN1_FFA1R bis!        \ CAN1_FFA6	Bit 6	 Width 1
 %1  7 lshift CAN1_FFA1R bis!        \ CAN1_FFA7	Bit 7	 Width 1
 %1  8 lshift CAN1_FFA1R bis!        \ CAN1_FFA8	Bit 8	 Width 1
 %1  9 lshift CAN1_FFA1R bis!        \ CAN1_FFA9	Bit 9	 Width 1
 %1  10 lshift CAN1_FFA1R bis!        \ CAN1_FFA10	Bit 10	 Width 1
 %1  11 lshift CAN1_FFA1R bis!        \ CAN1_FFA11	Bit 11	 Width 1
 %1  12 lshift CAN1_FFA1R bis!        \ CAN1_FFA12	Bit 12	 Width 1
 %1  13 lshift CAN1_FFA1R bis!        \ CAN1_FFA13	Bit 13	 Width 1
 %1  14 lshift CAN1_FFA1R bis!        \ CAN1_FFA14	Bit 14	 Width 1
 %1  15 lshift CAN1_FFA1R bis!        \ CAN1_FFA15	Bit 15	 Width 1
 %1  16 lshift CAN1_FFA1R bis!        \ CAN1_FFA16	Bit 16	 Width 1
 %1  17 lshift CAN1_FFA1R bis!        \ CAN1_FFA17	Bit 17	 Width 1
 %1  18 lshift CAN1_FFA1R bis!        \ CAN1_FFA18	Bit 18	 Width 1
 %1  19 lshift CAN1_FFA1R bis!        \ CAN1_FFA19	Bit 19	 Width 1
 %1  20 lshift CAN1_FFA1R bis!        \ CAN1_FFA20	Bit 20	 Width 1
 %1  21 lshift CAN1_FFA1R bis!        \ CAN1_FFA21	Bit 21	 Width 1
 %1  22 lshift CAN1_FFA1R bis!        \ CAN1_FFA22	Bit 22	 Width 1
 %1  23 lshift CAN1_FFA1R bis!        \ CAN1_FFA23	Bit 23	 Width 1
 %1  24 lshift CAN1_FFA1R bis!        \ CAN1_FFA24	Bit 24	 Width 1
 %1  25 lshift CAN1_FFA1R bis!        \ CAN1_FFA25	Bit 25	 Width 1
 %1  26 lshift CAN1_FFA1R bis!        \ CAN1_FFA26	Bit 26	 Width 1
 %1  27 lshift CAN1_FFA1R bis!        \ CAN1_FFA27	Bit 27	 Width 1
\ CAN1_FFA1R Register BitField Fetch Words  
: CAN1_FFA0@ CAN1_FFA1R @ %1  0 lshift and 0 rshift ; 
: CAN1_FFA1@ CAN1_FFA1R @ %1  1 lshift and 1 rshift ; 
: CAN1_FFA2@ CAN1_FFA1R @ %1  2 lshift and 2 rshift ; 
: CAN1_FFA3@ CAN1_FFA1R @ %1  3 lshift and 3 rshift ; 
: CAN1_FFA4@ CAN1_FFA1R @ %1  4 lshift and 4 rshift ; 
: CAN1_FFA5@ CAN1_FFA1R @ %1  5 lshift and 5 rshift ; 
: CAN1_FFA6@ CAN1_FFA1R @ %1  6 lshift and 6 rshift ; 
: CAN1_FFA7@ CAN1_FFA1R @ %1  7 lshift and 7 rshift ; 
: CAN1_FFA8@ CAN1_FFA1R @ %1  8 lshift and 8 rshift ; 
: CAN1_FFA9@ CAN1_FFA1R @ %1  9 lshift and 9 rshift ; 
: CAN1_FFA10@ CAN1_FFA1R @ %1  10 lshift and 10 rshift ; 
: CAN1_FFA11@ CAN1_FFA1R @ %1  11 lshift and 11 rshift ; 
: CAN1_FFA12@ CAN1_FFA1R @ %1  12 lshift and 12 rshift ; 
: CAN1_FFA13@ CAN1_FFA1R @ %1  13 lshift and 13 rshift ; 
: CAN1_FFA14@ CAN1_FFA1R @ %1  14 lshift and 14 rshift ; 
: CAN1_FFA15@ CAN1_FFA1R @ %1  15 lshift and 15 rshift ; 
: CAN1_FFA16@ CAN1_FFA1R @ %1  16 lshift and 16 rshift ; 
: CAN1_FFA17@ CAN1_FFA1R @ %1  17 lshift and 17 rshift ; 
: CAN1_FFA18@ CAN1_FFA1R @ %1  18 lshift and 18 rshift ; 
: CAN1_FFA19@ CAN1_FFA1R @ %1  19 lshift and 19 rshift ; 
: CAN1_FFA20@ CAN1_FFA1R @ %1  20 lshift and 20 rshift ; 
: CAN1_FFA21@ CAN1_FFA1R @ %1  21 lshift and 21 rshift ; 
: CAN1_FFA22@ CAN1_FFA1R @ %1  22 lshift and 22 rshift ; 
: CAN1_FFA23@ CAN1_FFA1R @ %1  23 lshift and 23 rshift ; 
: CAN1_FFA24@ CAN1_FFA1R @ %1  24 lshift and 24 rshift ; 
: CAN1_FFA25@ CAN1_FFA1R @ %1  25 lshift and 25 rshift ; 
: CAN1_FFA26@ CAN1_FFA1R @ %1  26 lshift and 26 rshift ; 
: CAN1_FFA27@ CAN1_FFA1R @ %1  27 lshift and 27 rshift ; 

CAN1_FA1R (read-write)
$00000000 CONSTANT RESET_CAN1_FA1R 
 %1  0 lshift CAN1_FA1R bis!        \ CAN1_FACT0	Bit 0	 Width 1
 %1  1 lshift CAN1_FA1R bis!        \ CAN1_FACT1	Bit 1	 Width 1
 %1  2 lshift CAN1_FA1R bis!        \ CAN1_FACT2	Bit 2	 Width 1
 %1  3 lshift CAN1_FA1R bis!        \ CAN1_FACT3	Bit 3	 Width 1
 %1  4 lshift CAN1_FA1R bis!        \ CAN1_FACT4	Bit 4	 Width 1
 %1  5 lshift CAN1_FA1R bis!        \ CAN1_FACT5	Bit 5	 Width 1
 %1  6 lshift CAN1_FA1R bis!        \ CAN1_FACT6	Bit 6	 Width 1
 %1  7 lshift CAN1_FA1R bis!        \ CAN1_FACT7	Bit 7	 Width 1
 %1  8 lshift CAN1_FA1R bis!        \ CAN1_FACT8	Bit 8	 Width 1
 %1  9 lshift CAN1_FA1R bis!        \ CAN1_FACT9	Bit 9	 Width 1
 %1  10 lshift CAN1_FA1R bis!        \ CAN1_FACT10	Bit 10	 Width 1
 %1  11 lshift CAN1_FA1R bis!        \ CAN1_FACT11	Bit 11	 Width 1
 %1  12 lshift CAN1_FA1R bis!        \ CAN1_FACT12	Bit 12	 Width 1
 %1  13 lshift CAN1_FA1R bis!        \ CAN1_FACT13	Bit 13	 Width 1
 %1  14 lshift CAN1_FA1R bis!        \ CAN1_FACT14	Bit 14	 Width 1
 %1  15 lshift CAN1_FA1R bis!        \ CAN1_FACT15	Bit 15	 Width 1
 %1  16 lshift CAN1_FA1R bis!        \ CAN1_FACT16	Bit 16	 Width 1
 %1  17 lshift CAN1_FA1R bis!        \ CAN1_FACT17	Bit 17	 Width 1
 %1  18 lshift CAN1_FA1R bis!        \ CAN1_FACT18	Bit 18	 Width 1
 %1  19 lshift CAN1_FA1R bis!        \ CAN1_FACT19	Bit 19	 Width 1
 %1  20 lshift CAN1_FA1R bis!        \ CAN1_FACT20	Bit 20	 Width 1
 %1  21 lshift CAN1_FA1R bis!        \ CAN1_FACT21	Bit 21	 Width 1
 %1  22 lshift CAN1_FA1R bis!        \ CAN1_FACT22	Bit 22	 Width 1
 %1  23 lshift CAN1_FA1R bis!        \ CAN1_FACT23	Bit 23	 Width 1
 %1  24 lshift CAN1_FA1R bis!        \ CAN1_FACT24	Bit 24	 Width 1
 %1  25 lshift CAN1_FA1R bis!        \ CAN1_FACT25	Bit 25	 Width 1
 %1  26 lshift CAN1_FA1R bis!        \ CAN1_FACT26	Bit 26	 Width 1
 %1  27 lshift CAN1_FA1R bis!        \ CAN1_FACT27	Bit 27	 Width 1
\ CAN1_FA1R Register BitField Fetch Words  
: CAN1_FACT0@ CAN1_FA1R @ %1  0 lshift and 0 rshift ; 
: CAN1_FACT1@ CAN1_FA1R @ %1  1 lshift and 1 rshift ; 
: CAN1_FACT2@ CAN1_FA1R @ %1  2 lshift and 2 rshift ; 
: CAN1_FACT3@ CAN1_FA1R @ %1  3 lshift and 3 rshift ; 
: CAN1_FACT4@ CAN1_FA1R @ %1  4 lshift and 4 rshift ; 
: CAN1_FACT5@ CAN1_FA1R @ %1  5 lshift and 5 rshift ; 
: CAN1_FACT6@ CAN1_FA1R @ %1  6 lshift and 6 rshift ; 
: CAN1_FACT7@ CAN1_FA1R @ %1  7 lshift and 7 rshift ; 
: CAN1_FACT8@ CAN1_FA1R @ %1  8 lshift and 8 rshift ; 
: CAN1_FACT9@ CAN1_FA1R @ %1  9 lshift and 9 rshift ; 
: CAN1_FACT10@ CAN1_FA1R @ %1  10 lshift and 10 rshift ; 
: CAN1_FACT11@ CAN1_FA1R @ %1  11 lshift and 11 rshift ; 
: CAN1_FACT12@ CAN1_FA1R @ %1  12 lshift and 12 rshift ; 
: CAN1_FACT13@ CAN1_FA1R @ %1  13 lshift and 13 rshift ; 
: CAN1_FACT14@ CAN1_FA1R @ %1  14 lshift and 14 rshift ; 
: CAN1_FACT15@ CAN1_FA1R @ %1  15 lshift and 15 rshift ; 
: CAN1_FACT16@ CAN1_FA1R @ %1  16 lshift and 16 rshift ; 
: CAN1_FACT17@ CAN1_FA1R @ %1  17 lshift and 17 rshift ; 
: CAN1_FACT18@ CAN1_FA1R @ %1  18 lshift and 18 rshift ; 
: CAN1_FACT19@ CAN1_FA1R @ %1  19 lshift and 19 rshift ; 
: CAN1_FACT20@ CAN1_FA1R @ %1  20 lshift and 20 rshift ; 
: CAN1_FACT21@ CAN1_FA1R @ %1  21 lshift and 21 rshift ; 
: CAN1_FACT22@ CAN1_FA1R @ %1  22 lshift and 22 rshift ; 
: CAN1_FACT23@ CAN1_FA1R @ %1  23 lshift and 23 rshift ; 
: CAN1_FACT24@ CAN1_FA1R @ %1  24 lshift and 24 rshift ; 
: CAN1_FACT25@ CAN1_FA1R @ %1  25 lshift and 25 rshift ; 
: CAN1_FACT26@ CAN1_FA1R @ %1  26 lshift and 26 rshift ; 
: CAN1_FACT27@ CAN1_FA1R @ %1  27 lshift and 27 rshift ; 

CAN1_F0R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F0R1 
 %1  0 lshift CAN1_F0R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F0R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F0R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F0R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F0R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F0R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F0R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F0R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F0R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F0R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F0R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F0R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F0R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F0R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F0R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F0R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F0R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F0R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F0R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F0R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F0R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F0R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F0R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F0R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F0R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F0R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F0R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F0R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F0R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F0R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F0R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F0R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F0R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F0R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F0R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F0R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F0R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F0R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F0R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F0R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F0R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F0R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F0R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F0R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F0R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F0R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F0R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F0R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F0R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F0R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F0R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F0R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F0R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F0R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F0R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F0R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F0R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F0R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F0R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F0R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F0R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F0R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F0R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F0R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F0R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F0R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F0R2 
 %1  0 lshift CAN1_F0R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F0R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F0R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F0R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F0R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F0R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F0R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F0R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F0R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F0R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F0R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F0R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F0R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F0R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F0R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F0R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F0R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F0R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F0R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F0R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F0R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F0R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F0R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F0R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F0R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F0R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F0R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F0R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F0R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F0R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F0R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F0R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F0R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F0R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F0R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F0R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F0R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F0R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F0R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F0R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F0R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F0R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F0R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F0R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F0R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F0R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F0R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F0R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F0R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F0R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F0R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F0R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F0R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F0R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F0R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F0R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F0R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F0R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F0R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F0R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F0R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F0R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F0R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F0R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F0R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F1R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F1R1 
 %1  0 lshift CAN1_F1R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F1R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F1R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F1R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F1R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F1R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F1R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F1R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F1R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F1R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F1R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F1R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F1R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F1R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F1R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F1R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F1R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F1R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F1R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F1R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F1R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F1R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F1R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F1R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F1R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F1R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F1R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F1R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F1R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F1R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F1R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F1R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F1R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F1R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F1R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F1R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F1R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F1R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F1R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F1R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F1R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F1R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F1R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F1R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F1R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F1R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F1R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F1R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F1R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F1R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F1R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F1R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F1R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F1R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F1R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F1R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F1R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F1R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F1R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F1R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F1R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F1R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F1R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F1R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F1R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F1R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F1R2 
 %1  0 lshift CAN1_F1R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F1R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F1R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F1R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F1R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F1R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F1R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F1R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F1R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F1R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F1R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F1R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F1R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F1R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F1R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F1R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F1R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F1R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F1R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F1R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F1R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F1R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F1R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F1R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F1R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F1R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F1R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F1R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F1R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F1R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F1R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F1R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F1R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F1R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F1R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F1R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F1R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F1R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F1R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F1R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F1R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F1R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F1R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F1R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F1R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F1R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F1R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F1R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F1R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F1R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F1R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F1R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F1R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F1R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F1R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F1R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F1R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F1R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F1R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F1R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F1R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F1R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F1R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F1R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F1R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F2R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F2R1 
 %1  0 lshift CAN1_F2R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F2R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F2R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F2R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F2R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F2R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F2R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F2R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F2R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F2R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F2R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F2R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F2R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F2R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F2R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F2R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F2R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F2R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F2R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F2R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F2R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F2R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F2R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F2R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F2R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F2R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F2R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F2R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F2R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F2R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F2R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F2R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F2R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F2R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F2R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F2R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F2R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F2R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F2R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F2R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F2R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F2R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F2R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F2R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F2R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F2R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F2R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F2R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F2R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F2R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F2R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F2R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F2R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F2R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F2R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F2R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F2R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F2R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F2R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F2R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F2R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F2R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F2R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F2R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F2R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F2R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F2R2 
 %1  0 lshift CAN1_F2R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F2R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F2R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F2R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F2R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F2R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F2R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F2R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F2R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F2R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F2R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F2R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F2R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F2R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F2R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F2R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F2R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F2R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F2R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F2R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F2R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F2R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F2R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F2R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F2R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F2R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F2R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F2R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F2R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F2R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F2R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F2R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F2R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F2R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F2R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F2R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F2R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F2R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F2R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F2R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F2R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F2R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F2R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F2R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F2R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F2R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F2R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F2R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F2R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F2R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F2R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F2R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F2R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F2R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F2R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F2R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F2R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F2R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F2R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F2R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F2R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F2R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F2R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F2R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F2R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F3R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F3R1 
 %1  0 lshift CAN1_F3R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F3R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F3R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F3R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F3R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F3R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F3R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F3R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F3R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F3R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F3R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F3R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F3R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F3R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F3R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F3R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F3R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F3R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F3R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F3R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F3R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F3R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F3R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F3R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F3R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F3R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F3R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F3R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F3R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F3R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F3R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F3R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F3R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F3R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F3R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F3R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F3R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F3R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F3R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F3R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F3R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F3R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F3R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F3R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F3R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F3R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F3R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F3R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F3R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F3R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F3R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F3R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F3R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F3R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F3R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F3R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F3R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F3R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F3R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F3R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F3R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F3R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F3R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F3R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F3R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F3R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F3R2 
 %1  0 lshift CAN1_F3R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F3R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F3R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F3R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F3R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F3R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F3R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F3R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F3R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F3R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F3R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F3R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F3R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F3R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F3R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F3R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F3R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F3R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F3R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F3R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F3R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F3R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F3R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F3R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F3R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F3R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F3R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F3R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F3R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F3R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F3R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F3R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F3R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F3R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F3R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F3R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F3R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F3R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F3R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F3R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F3R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F3R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F3R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F3R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F3R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F3R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F3R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F3R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F3R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F3R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F3R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F3R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F3R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F3R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F3R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F3R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F3R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F3R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F3R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F3R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F3R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F3R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F3R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F3R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F3R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F4R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F4R1 
 %1  0 lshift CAN1_F4R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F4R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F4R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F4R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F4R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F4R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F4R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F4R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F4R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F4R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F4R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F4R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F4R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F4R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F4R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F4R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F4R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F4R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F4R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F4R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F4R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F4R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F4R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F4R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F4R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F4R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F4R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F4R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F4R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F4R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F4R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F4R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F4R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F4R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F4R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F4R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F4R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F4R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F4R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F4R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F4R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F4R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F4R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F4R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F4R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F4R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F4R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F4R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F4R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F4R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F4R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F4R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F4R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F4R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F4R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F4R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F4R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F4R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F4R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F4R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F4R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F4R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F4R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F4R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F4R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F4R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F4R2 
 %1  0 lshift CAN1_F4R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F4R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F4R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F4R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F4R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F4R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F4R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F4R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F4R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F4R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F4R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F4R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F4R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F4R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F4R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F4R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F4R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F4R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F4R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F4R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F4R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F4R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F4R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F4R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F4R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F4R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F4R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F4R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F4R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F4R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F4R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F4R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F4R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F4R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F4R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F4R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F4R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F4R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F4R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F4R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F4R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F4R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F4R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F4R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F4R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F4R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F4R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F4R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F4R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F4R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F4R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F4R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F4R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F4R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F4R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F4R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F4R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F4R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F4R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F4R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F4R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F4R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F4R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F4R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F4R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F5R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F5R1 
 %1  0 lshift CAN1_F5R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F5R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F5R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F5R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F5R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F5R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F5R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F5R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F5R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F5R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F5R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F5R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F5R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F5R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F5R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F5R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F5R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F5R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F5R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F5R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F5R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F5R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F5R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F5R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F5R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F5R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F5R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F5R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F5R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F5R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F5R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F5R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F5R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F5R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F5R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F5R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F5R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F5R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F5R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F5R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F5R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F5R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F5R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F5R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F5R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F5R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F5R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F5R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F5R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F5R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F5R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F5R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F5R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F5R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F5R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F5R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F5R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F5R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F5R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F5R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F5R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F5R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F5R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F5R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F5R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F5R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F5R2 
 %1  0 lshift CAN1_F5R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F5R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F5R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F5R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F5R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F5R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F5R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F5R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F5R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F5R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F5R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F5R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F5R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F5R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F5R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F5R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F5R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F5R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F5R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F5R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F5R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F5R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F5R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F5R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F5R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F5R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F5R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F5R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F5R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F5R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F5R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F5R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F5R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F5R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F5R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F5R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F5R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F5R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F5R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F5R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F5R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F5R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F5R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F5R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F5R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F5R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F5R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F5R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F5R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F5R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F5R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F5R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F5R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F5R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F5R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F5R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F5R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F5R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F5R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F5R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F5R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F5R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F5R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F5R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F5R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F6R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F6R1 
 %1  0 lshift CAN1_F6R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F6R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F6R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F6R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F6R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F6R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F6R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F6R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F6R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F6R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F6R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F6R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F6R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F6R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F6R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F6R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F6R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F6R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F6R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F6R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F6R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F6R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F6R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F6R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F6R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F6R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F6R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F6R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F6R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F6R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F6R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F6R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F6R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F6R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F6R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F6R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F6R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F6R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F6R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F6R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F6R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F6R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F6R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F6R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F6R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F6R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F6R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F6R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F6R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F6R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F6R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F6R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F6R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F6R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F6R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F6R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F6R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F6R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F6R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F6R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F6R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F6R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F6R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F6R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F6R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F6R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F6R2 
 %1  0 lshift CAN1_F6R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F6R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F6R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F6R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F6R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F6R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F6R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F6R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F6R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F6R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F6R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F6R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F6R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F6R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F6R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F6R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F6R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F6R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F6R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F6R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F6R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F6R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F6R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F6R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F6R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F6R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F6R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F6R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F6R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F6R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F6R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F6R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F6R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F6R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F6R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F6R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F6R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F6R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F6R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F6R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F6R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F6R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F6R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F6R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F6R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F6R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F6R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F6R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F6R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F6R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F6R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F6R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F6R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F6R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F6R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F6R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F6R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F6R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F6R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F6R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F6R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F6R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F6R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F6R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F6R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F7R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F7R1 
 %1  0 lshift CAN1_F7R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F7R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F7R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F7R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F7R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F7R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F7R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F7R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F7R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F7R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F7R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F7R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F7R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F7R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F7R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F7R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F7R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F7R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F7R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F7R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F7R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F7R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F7R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F7R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F7R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F7R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F7R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F7R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F7R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F7R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F7R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F7R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F7R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F7R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F7R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F7R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F7R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F7R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F7R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F7R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F7R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F7R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F7R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F7R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F7R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F7R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F7R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F7R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F7R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F7R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F7R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F7R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F7R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F7R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F7R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F7R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F7R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F7R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F7R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F7R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F7R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F7R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F7R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F7R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F7R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F7R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F7R2 
 %1  0 lshift CAN1_F7R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F7R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F7R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F7R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F7R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F7R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F7R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F7R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F7R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F7R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F7R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F7R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F7R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F7R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F7R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F7R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F7R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F7R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F7R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F7R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F7R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F7R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F7R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F7R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F7R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F7R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F7R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F7R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F7R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F7R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F7R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F7R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F7R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F7R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F7R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F7R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F7R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F7R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F7R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F7R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F7R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F7R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F7R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F7R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F7R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F7R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F7R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F7R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F7R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F7R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F7R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F7R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F7R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F7R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F7R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F7R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F7R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F7R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F7R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F7R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F7R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F7R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F7R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F7R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F7R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F8R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F8R1 
 %1  0 lshift CAN1_F8R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F8R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F8R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F8R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F8R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F8R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F8R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F8R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F8R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F8R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F8R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F8R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F8R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F8R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F8R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F8R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F8R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F8R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F8R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F8R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F8R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F8R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F8R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F8R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F8R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F8R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F8R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F8R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F8R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F8R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F8R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F8R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F8R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F8R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F8R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F8R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F8R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F8R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F8R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F8R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F8R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F8R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F8R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F8R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F8R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F8R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F8R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F8R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F8R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F8R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F8R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F8R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F8R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F8R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F8R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F8R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F8R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F8R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F8R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F8R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F8R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F8R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F8R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F8R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F8R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F8R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F8R2 
 %1  0 lshift CAN1_F8R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F8R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F8R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F8R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F8R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F8R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F8R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F8R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F8R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F8R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F8R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F8R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F8R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F8R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F8R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F8R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F8R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F8R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F8R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F8R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F8R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F8R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F8R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F8R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F8R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F8R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F8R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F8R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F8R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F8R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F8R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F8R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F8R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F8R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F8R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F8R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F8R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F8R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F8R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F8R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F8R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F8R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F8R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F8R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F8R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F8R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F8R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F8R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F8R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F8R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F8R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F8R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F8R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F8R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F8R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F8R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F8R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F8R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F8R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F8R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F8R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F8R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F8R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F8R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F8R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F9R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F9R1 
 %1  0 lshift CAN1_F9R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F9R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F9R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F9R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F9R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F9R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F9R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F9R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F9R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F9R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F9R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F9R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F9R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F9R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F9R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F9R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F9R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F9R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F9R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F9R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F9R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F9R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F9R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F9R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F9R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F9R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F9R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F9R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F9R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F9R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F9R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F9R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F9R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F9R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F9R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F9R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F9R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F9R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F9R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F9R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F9R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F9R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F9R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F9R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F9R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F9R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F9R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F9R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F9R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F9R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F9R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F9R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F9R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F9R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F9R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F9R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F9R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F9R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F9R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F9R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F9R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F9R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F9R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F9R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F9R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F9R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F9R2 
 %1  0 lshift CAN1_F9R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F9R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F9R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F9R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F9R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F9R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F9R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F9R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F9R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F9R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F9R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F9R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F9R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F9R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F9R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F9R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F9R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F9R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F9R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F9R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F9R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F9R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F9R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F9R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F9R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F9R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F9R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F9R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F9R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F9R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F9R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F9R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F9R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F9R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F9R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F9R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F9R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F9R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F9R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F9R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F9R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F9R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F9R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F9R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F9R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F9R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F9R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F9R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F9R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F9R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F9R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F9R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F9R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F9R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F9R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F9R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F9R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F9R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F9R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F9R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F9R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F9R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F9R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F9R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F9R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F10R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F10R1 
 %1  0 lshift CAN1_F10R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F10R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F10R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F10R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F10R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F10R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F10R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F10R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F10R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F10R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F10R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F10R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F10R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F10R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F10R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F10R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F10R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F10R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F10R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F10R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F10R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F10R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F10R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F10R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F10R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F10R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F10R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F10R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F10R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F10R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F10R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F10R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F10R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F10R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F10R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F10R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F10R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F10R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F10R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F10R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F10R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F10R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F10R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F10R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F10R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F10R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F10R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F10R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F10R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F10R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F10R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F10R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F10R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F10R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F10R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F10R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F10R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F10R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F10R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F10R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F10R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F10R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F10R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F10R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F10R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F10R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F10R2 
 %1  0 lshift CAN1_F10R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F10R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F10R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F10R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F10R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F10R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F10R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F10R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F10R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F10R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F10R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F10R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F10R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F10R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F10R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F10R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F10R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F10R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F10R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F10R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F10R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F10R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F10R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F10R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F10R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F10R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F10R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F10R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F10R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F10R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F10R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F10R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F10R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F10R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F10R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F10R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F10R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F10R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F10R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F10R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F10R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F10R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F10R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F10R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F10R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F10R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F10R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F10R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F10R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F10R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F10R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F10R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F10R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F10R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F10R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F10R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F10R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F10R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F10R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F10R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F10R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F10R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F10R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F10R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F10R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F11R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F11R1 
 %1  0 lshift CAN1_F11R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F11R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F11R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F11R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F11R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F11R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F11R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F11R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F11R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F11R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F11R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F11R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F11R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F11R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F11R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F11R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F11R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F11R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F11R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F11R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F11R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F11R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F11R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F11R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F11R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F11R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F11R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F11R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F11R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F11R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F11R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F11R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F11R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F11R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F11R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F11R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F11R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F11R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F11R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F11R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F11R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F11R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F11R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F11R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F11R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F11R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F11R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F11R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F11R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F11R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F11R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F11R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F11R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F11R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F11R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F11R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F11R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F11R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F11R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F11R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F11R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F11R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F11R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F11R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F11R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F11R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F11R2 
 %1  0 lshift CAN1_F11R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F11R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F11R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F11R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F11R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F11R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F11R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F11R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F11R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F11R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F11R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F11R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F11R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F11R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F11R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F11R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F11R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F11R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F11R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F11R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F11R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F11R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F11R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F11R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F11R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F11R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F11R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F11R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F11R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F11R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F11R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F11R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F11R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F11R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F11R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F11R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F11R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F11R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F11R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F11R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F11R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F11R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F11R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F11R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F11R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F11R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F11R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F11R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F11R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F11R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F11R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F11R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F11R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F11R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F11R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F11R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F11R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F11R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F11R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F11R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F11R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F11R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F11R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F11R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F11R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F12R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F12R1 
 %1  0 lshift CAN1_F12R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F12R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F12R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F12R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F12R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F12R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F12R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F12R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F12R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F12R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F12R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F12R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F12R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F12R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F12R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F12R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F12R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F12R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F12R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F12R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F12R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F12R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F12R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F12R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F12R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F12R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F12R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F12R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F12R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F12R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F12R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F12R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F12R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F12R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F12R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F12R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F12R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F12R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F12R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F12R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F12R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F12R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F12R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F12R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F12R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F12R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F12R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F12R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F12R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F12R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F12R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F12R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F12R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F12R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F12R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F12R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F12R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F12R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F12R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F12R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F12R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F12R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F12R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F12R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F12R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F12R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F12R2 
 %1  0 lshift CAN1_F12R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F12R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F12R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F12R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F12R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F12R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F12R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F12R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F12R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F12R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F12R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F12R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F12R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F12R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F12R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F12R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F12R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F12R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F12R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F12R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F12R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F12R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F12R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F12R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F12R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F12R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F12R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F12R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F12R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F12R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F12R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F12R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F12R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F12R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F12R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F12R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F12R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F12R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F12R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F12R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F12R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F12R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F12R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F12R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F12R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F12R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F12R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F12R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F12R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F12R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F12R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F12R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F12R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F12R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F12R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F12R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F12R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F12R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F12R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F12R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F12R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F12R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F12R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F12R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F12R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F13R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F13R1 
 %1  0 lshift CAN1_F13R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F13R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F13R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F13R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F13R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F13R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F13R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F13R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F13R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F13R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F13R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F13R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F13R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F13R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F13R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F13R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F13R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F13R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F13R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F13R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F13R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F13R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F13R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F13R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F13R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F13R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F13R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F13R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F13R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F13R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F13R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F13R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F13R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F13R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F13R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F13R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F13R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F13R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F13R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F13R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F13R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F13R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F13R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F13R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F13R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F13R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F13R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F13R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F13R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F13R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F13R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F13R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F13R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F13R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F13R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F13R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F13R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F13R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F13R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F13R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F13R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F13R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F13R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F13R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F13R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F13R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F13R2 
 %1  0 lshift CAN1_F13R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F13R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F13R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F13R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F13R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F13R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F13R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F13R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F13R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F13R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F13R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F13R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F13R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F13R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F13R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F13R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F13R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F13R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F13R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F13R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F13R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F13R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F13R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F13R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F13R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F13R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F13R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F13R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F13R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F13R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F13R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F13R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F13R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F13R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F13R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F13R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F13R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F13R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F13R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F13R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F13R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F13R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F13R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F13R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F13R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F13R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F13R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F13R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F13R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F13R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F13R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F13R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F13R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F13R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F13R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F13R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F13R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F13R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F13R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F13R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F13R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F13R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F13R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F13R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F13R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F14R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F14R1 
 %1  0 lshift CAN1_F14R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F14R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F14R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F14R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F14R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F14R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F14R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F14R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F14R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F14R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F14R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F14R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F14R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F14R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F14R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F14R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F14R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F14R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F14R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F14R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F14R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F14R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F14R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F14R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F14R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F14R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F14R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F14R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F14R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F14R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F14R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F14R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F14R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F14R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F14R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F14R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F14R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F14R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F14R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F14R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F14R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F14R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F14R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F14R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F14R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F14R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F14R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F14R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F14R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F14R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F14R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F14R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F14R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F14R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F14R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F14R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F14R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F14R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F14R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F14R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F14R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F14R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F14R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F14R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F14R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F14R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F14R2 
 %1  0 lshift CAN1_F14R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F14R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F14R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F14R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F14R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F14R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F14R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F14R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F14R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F14R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F14R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F14R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F14R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F14R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F14R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F14R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F14R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F14R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F14R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F14R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F14R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F14R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F14R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F14R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F14R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F14R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F14R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F14R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F14R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F14R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F14R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F14R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F14R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F14R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F14R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F14R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F14R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F14R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F14R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F14R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F14R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F14R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F14R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F14R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F14R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F14R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F14R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F14R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F14R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F14R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F14R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F14R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F14R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F14R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F14R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F14R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F14R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F14R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F14R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F14R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F14R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F14R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F14R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F14R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F14R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F15R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F15R1 
 %1  0 lshift CAN1_F15R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F15R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F15R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F15R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F15R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F15R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F15R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F15R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F15R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F15R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F15R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F15R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F15R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F15R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F15R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F15R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F15R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F15R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F15R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F15R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F15R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F15R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F15R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F15R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F15R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F15R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F15R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F15R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F15R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F15R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F15R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F15R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F15R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F15R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F15R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F15R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F15R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F15R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F15R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F15R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F15R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F15R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F15R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F15R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F15R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F15R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F15R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F15R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F15R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F15R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F15R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F15R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F15R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F15R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F15R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F15R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F15R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F15R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F15R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F15R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F15R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F15R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F15R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F15R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F15R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F15R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F15R2 
 %1  0 lshift CAN1_F15R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F15R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F15R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F15R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F15R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F15R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F15R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F15R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F15R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F15R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F15R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F15R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F15R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F15R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F15R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F15R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F15R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F15R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F15R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F15R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F15R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F15R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F15R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F15R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F15R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F15R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F15R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F15R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F15R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F15R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F15R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F15R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F15R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F15R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F15R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F15R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F15R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F15R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F15R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F15R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F15R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F15R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F15R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F15R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F15R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F15R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F15R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F15R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F15R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F15R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F15R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F15R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F15R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F15R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F15R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F15R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F15R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F15R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F15R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F15R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F15R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F15R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F15R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F15R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F15R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F16R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F16R1 
 %1  0 lshift CAN1_F16R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F16R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F16R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F16R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F16R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F16R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F16R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F16R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F16R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F16R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F16R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F16R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F16R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F16R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F16R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F16R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F16R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F16R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F16R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F16R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F16R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F16R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F16R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F16R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F16R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F16R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F16R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F16R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F16R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F16R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F16R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F16R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F16R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F16R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F16R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F16R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F16R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F16R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F16R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F16R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F16R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F16R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F16R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F16R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F16R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F16R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F16R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F16R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F16R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F16R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F16R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F16R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F16R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F16R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F16R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F16R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F16R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F16R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F16R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F16R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F16R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F16R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F16R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F16R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F16R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F16R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F16R2 
 %1  0 lshift CAN1_F16R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F16R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F16R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F16R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F16R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F16R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F16R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F16R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F16R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F16R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F16R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F16R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F16R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F16R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F16R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F16R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F16R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F16R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F16R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F16R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F16R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F16R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F16R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F16R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F16R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F16R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F16R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F16R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F16R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F16R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F16R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F16R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F16R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F16R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F16R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F16R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F16R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F16R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F16R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F16R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F16R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F16R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F16R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F16R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F16R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F16R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F16R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F16R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F16R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F16R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F16R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F16R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F16R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F16R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F16R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F16R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F16R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F16R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F16R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F16R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F16R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F16R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F16R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F16R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F16R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F17R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F17R1 
 %1  0 lshift CAN1_F17R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F17R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F17R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F17R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F17R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F17R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F17R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F17R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F17R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F17R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F17R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F17R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F17R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F17R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F17R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F17R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F17R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F17R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F17R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F17R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F17R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F17R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F17R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F17R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F17R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F17R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F17R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F17R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F17R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F17R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F17R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F17R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F17R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F17R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F17R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F17R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F17R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F17R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F17R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F17R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F17R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F17R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F17R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F17R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F17R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F17R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F17R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F17R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F17R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F17R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F17R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F17R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F17R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F17R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F17R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F17R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F17R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F17R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F17R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F17R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F17R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F17R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F17R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F17R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F17R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F17R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F17R2 
 %1  0 lshift CAN1_F17R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F17R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F17R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F17R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F17R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F17R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F17R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F17R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F17R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F17R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F17R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F17R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F17R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F17R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F17R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F17R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F17R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F17R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F17R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F17R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F17R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F17R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F17R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F17R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F17R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F17R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F17R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F17R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F17R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F17R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F17R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F17R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F17R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F17R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F17R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F17R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F17R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F17R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F17R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F17R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F17R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F17R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F17R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F17R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F17R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F17R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F17R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F17R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F17R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F17R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F17R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F17R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F17R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F17R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F17R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F17R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F17R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F17R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F17R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F17R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F17R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F17R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F17R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F17R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F17R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F18R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F18R1 
 %1  0 lshift CAN1_F18R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F18R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F18R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F18R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F18R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F18R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F18R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F18R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F18R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F18R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F18R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F18R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F18R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F18R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F18R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F18R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F18R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F18R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F18R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F18R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F18R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F18R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F18R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F18R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F18R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F18R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F18R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F18R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F18R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F18R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F18R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F18R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F18R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F18R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F18R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F18R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F18R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F18R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F18R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F18R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F18R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F18R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F18R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F18R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F18R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F18R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F18R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F18R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F18R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F18R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F18R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F18R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F18R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F18R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F18R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F18R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F18R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F18R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F18R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F18R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F18R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F18R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F18R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F18R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F18R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F18R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F18R2 
 %1  0 lshift CAN1_F18R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F18R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F18R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F18R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F18R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F18R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F18R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F18R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F18R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F18R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F18R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F18R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F18R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F18R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F18R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F18R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F18R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F18R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F18R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F18R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F18R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F18R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F18R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F18R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F18R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F18R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F18R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F18R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F18R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F18R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F18R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F18R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F18R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F18R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F18R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F18R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F18R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F18R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F18R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F18R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F18R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F18R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F18R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F18R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F18R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F18R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F18R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F18R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F18R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F18R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F18R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F18R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F18R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F18R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F18R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F18R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F18R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F18R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F18R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F18R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F18R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F18R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F18R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F18R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F18R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F19R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F19R1 
 %1  0 lshift CAN1_F19R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F19R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F19R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F19R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F19R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F19R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F19R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F19R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F19R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F19R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F19R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F19R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F19R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F19R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F19R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F19R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F19R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F19R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F19R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F19R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F19R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F19R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F19R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F19R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F19R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F19R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F19R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F19R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F19R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F19R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F19R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F19R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F19R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F19R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F19R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F19R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F19R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F19R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F19R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F19R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F19R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F19R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F19R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F19R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F19R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F19R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F19R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F19R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F19R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F19R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F19R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F19R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F19R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F19R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F19R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F19R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F19R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F19R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F19R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F19R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F19R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F19R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F19R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F19R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F19R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F19R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F19R2 
 %1  0 lshift CAN1_F19R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F19R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F19R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F19R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F19R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F19R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F19R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F19R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F19R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F19R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F19R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F19R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F19R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F19R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F19R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F19R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F19R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F19R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F19R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F19R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F19R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F19R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F19R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F19R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F19R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F19R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F19R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F19R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F19R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F19R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F19R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F19R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F19R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F19R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F19R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F19R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F19R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F19R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F19R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F19R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F19R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F19R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F19R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F19R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F19R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F19R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F19R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F19R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F19R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F19R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F19R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F19R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F19R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F19R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F19R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F19R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F19R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F19R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F19R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F19R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F19R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F19R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F19R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F19R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F19R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F20R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F20R1 
 %1  0 lshift CAN1_F20R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F20R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F20R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F20R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F20R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F20R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F20R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F20R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F20R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F20R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F20R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F20R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F20R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F20R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F20R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F20R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F20R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F20R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F20R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F20R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F20R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F20R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F20R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F20R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F20R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F20R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F20R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F20R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F20R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F20R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F20R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F20R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F20R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F20R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F20R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F20R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F20R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F20R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F20R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F20R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F20R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F20R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F20R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F20R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F20R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F20R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F20R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F20R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F20R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F20R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F20R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F20R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F20R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F20R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F20R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F20R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F20R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F20R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F20R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F20R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F20R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F20R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F20R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F20R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F20R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F20R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F20R2 
 %1  0 lshift CAN1_F20R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F20R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F20R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F20R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F20R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F20R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F20R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F20R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F20R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F20R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F20R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F20R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F20R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F20R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F20R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F20R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F20R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F20R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F20R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F20R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F20R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F20R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F20R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F20R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F20R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F20R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F20R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F20R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F20R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F20R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F20R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F20R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F20R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F20R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F20R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F20R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F20R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F20R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F20R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F20R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F20R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F20R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F20R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F20R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F20R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F20R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F20R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F20R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F20R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F20R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F20R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F20R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F20R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F20R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F20R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F20R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F20R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F20R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F20R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F20R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F20R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F20R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F20R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F20R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F20R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F21R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F21R1 
 %1  0 lshift CAN1_F21R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F21R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F21R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F21R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F21R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F21R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F21R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F21R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F21R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F21R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F21R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F21R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F21R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F21R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F21R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F21R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F21R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F21R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F21R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F21R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F21R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F21R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F21R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F21R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F21R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F21R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F21R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F21R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F21R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F21R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F21R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F21R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F21R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F21R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F21R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F21R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F21R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F21R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F21R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F21R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F21R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F21R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F21R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F21R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F21R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F21R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F21R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F21R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F21R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F21R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F21R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F21R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F21R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F21R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F21R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F21R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F21R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F21R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F21R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F21R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F21R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F21R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F21R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F21R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F21R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F21R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F21R2 
 %1  0 lshift CAN1_F21R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F21R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F21R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F21R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F21R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F21R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F21R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F21R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F21R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F21R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F21R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F21R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F21R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F21R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F21R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F21R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F21R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F21R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F21R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F21R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F21R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F21R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F21R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F21R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F21R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F21R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F21R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F21R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F21R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F21R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F21R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F21R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F21R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F21R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F21R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F21R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F21R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F21R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F21R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F21R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F21R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F21R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F21R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F21R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F21R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F21R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F21R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F21R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F21R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F21R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F21R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F21R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F21R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F21R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F21R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F21R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F21R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F21R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F21R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F21R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F21R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F21R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F21R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F21R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F21R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F22R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F22R1 
 %1  0 lshift CAN1_F22R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F22R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F22R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F22R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F22R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F22R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F22R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F22R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F22R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F22R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F22R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F22R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F22R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F22R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F22R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F22R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F22R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F22R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F22R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F22R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F22R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F22R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F22R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F22R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F22R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F22R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F22R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F22R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F22R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F22R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F22R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F22R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F22R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F22R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F22R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F22R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F22R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F22R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F22R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F22R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F22R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F22R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F22R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F22R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F22R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F22R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F22R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F22R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F22R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F22R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F22R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F22R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F22R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F22R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F22R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F22R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F22R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F22R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F22R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F22R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F22R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F22R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F22R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F22R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F22R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F22R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F22R2 
 %1  0 lshift CAN1_F22R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F22R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F22R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F22R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F22R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F22R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F22R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F22R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F22R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F22R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F22R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F22R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F22R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F22R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F22R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F22R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F22R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F22R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F22R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F22R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F22R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F22R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F22R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F22R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F22R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F22R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F22R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F22R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F22R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F22R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F22R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F22R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F22R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F22R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F22R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F22R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F22R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F22R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F22R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F22R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F22R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F22R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F22R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F22R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F22R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F22R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F22R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F22R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F22R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F22R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F22R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F22R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F22R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F22R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F22R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F22R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F22R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F22R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F22R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F22R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F22R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F22R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F22R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F22R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F22R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F23R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F23R1 
 %1  0 lshift CAN1_F23R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F23R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F23R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F23R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F23R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F23R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F23R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F23R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F23R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F23R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F23R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F23R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F23R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F23R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F23R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F23R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F23R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F23R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F23R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F23R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F23R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F23R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F23R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F23R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F23R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F23R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F23R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F23R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F23R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F23R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F23R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F23R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F23R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F23R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F23R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F23R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F23R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F23R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F23R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F23R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F23R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F23R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F23R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F23R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F23R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F23R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F23R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F23R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F23R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F23R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F23R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F23R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F23R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F23R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F23R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F23R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F23R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F23R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F23R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F23R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F23R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F23R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F23R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F23R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F23R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F23R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F23R2 
 %1  0 lshift CAN1_F23R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F23R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F23R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F23R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F23R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F23R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F23R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F23R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F23R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F23R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F23R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F23R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F23R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F23R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F23R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F23R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F23R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F23R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F23R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F23R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F23R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F23R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F23R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F23R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F23R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F23R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F23R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F23R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F23R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F23R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F23R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F23R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F23R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F23R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F23R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F23R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F23R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F23R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F23R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F23R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F23R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F23R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F23R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F23R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F23R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F23R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F23R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F23R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F23R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F23R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F23R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F23R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F23R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F23R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F23R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F23R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F23R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F23R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F23R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F23R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F23R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F23R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F23R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F23R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F23R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F24R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F24R1 
 %1  0 lshift CAN1_F24R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F24R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F24R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F24R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F24R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F24R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F24R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F24R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F24R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F24R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F24R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F24R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F24R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F24R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F24R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F24R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F24R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F24R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F24R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F24R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F24R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F24R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F24R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F24R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F24R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F24R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F24R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F24R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F24R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F24R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F24R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F24R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F24R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F24R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F24R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F24R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F24R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F24R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F24R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F24R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F24R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F24R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F24R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F24R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F24R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F24R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F24R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F24R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F24R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F24R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F24R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F24R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F24R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F24R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F24R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F24R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F24R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F24R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F24R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F24R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F24R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F24R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F24R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F24R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F24R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F24R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F24R2 
 %1  0 lshift CAN1_F24R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F24R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F24R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F24R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F24R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F24R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F24R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F24R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F24R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F24R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F24R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F24R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F24R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F24R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F24R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F24R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F24R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F24R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F24R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F24R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F24R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F24R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F24R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F24R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F24R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F24R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F24R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F24R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F24R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F24R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F24R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F24R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F24R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F24R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F24R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F24R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F24R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F24R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F24R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F24R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F24R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F24R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F24R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F24R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F24R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F24R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F24R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F24R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F24R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F24R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F24R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F24R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F24R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F24R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F24R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F24R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F24R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F24R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F24R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F24R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F24R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F24R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F24R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F24R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F24R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F25R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F25R1 
 %1  0 lshift CAN1_F25R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F25R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F25R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F25R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F25R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F25R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F25R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F25R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F25R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F25R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F25R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F25R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F25R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F25R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F25R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F25R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F25R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F25R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F25R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F25R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F25R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F25R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F25R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F25R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F25R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F25R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F25R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F25R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F25R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F25R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F25R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F25R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F25R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F25R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F25R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F25R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F25R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F25R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F25R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F25R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F25R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F25R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F25R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F25R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F25R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F25R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F25R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F25R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F25R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F25R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F25R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F25R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F25R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F25R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F25R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F25R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F25R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F25R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F25R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F25R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F25R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F25R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F25R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F25R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F25R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F25R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F25R2 
 %1  0 lshift CAN1_F25R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F25R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F25R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F25R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F25R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F25R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F25R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F25R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F25R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F25R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F25R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F25R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F25R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F25R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F25R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F25R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F25R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F25R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F25R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F25R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F25R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F25R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F25R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F25R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F25R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F25R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F25R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F25R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F25R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F25R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F25R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F25R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F25R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F25R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F25R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F25R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F25R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F25R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F25R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F25R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F25R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F25R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F25R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F25R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F25R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F25R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F25R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F25R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F25R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F25R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F25R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F25R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F25R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F25R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F25R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F25R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F25R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F25R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F25R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F25R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F25R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F25R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F25R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F25R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F25R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F26R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F26R1 
 %1  0 lshift CAN1_F26R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F26R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F26R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F26R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F26R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F26R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F26R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F26R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F26R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F26R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F26R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F26R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F26R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F26R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F26R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F26R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F26R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F26R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F26R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F26R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F26R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F26R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F26R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F26R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F26R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F26R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F26R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F26R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F26R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F26R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F26R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F26R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F26R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F26R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F26R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F26R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F26R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F26R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F26R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F26R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F26R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F26R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F26R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F26R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F26R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F26R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F26R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F26R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F26R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F26R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F26R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F26R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F26R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F26R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F26R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F26R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F26R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F26R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F26R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F26R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F26R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F26R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F26R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F26R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F26R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F26R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F26R2 
 %1  0 lshift CAN1_F26R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F26R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F26R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F26R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F26R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F26R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F26R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F26R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F26R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F26R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F26R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F26R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F26R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F26R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F26R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F26R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F26R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F26R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F26R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F26R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F26R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F26R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F26R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F26R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F26R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F26R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F26R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F26R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F26R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F26R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F26R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F26R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F26R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F26R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F26R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F26R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F26R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F26R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F26R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F26R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F26R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F26R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F26R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F26R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F26R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F26R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F26R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F26R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F26R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F26R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F26R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F26R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F26R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F26R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F26R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F26R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F26R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F26R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F26R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F26R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F26R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F26R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F26R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F26R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F26R2 @ %1  31 lshift and 31 rshift ; 

CAN1_F27R1 (read-write)
$00000000 CONSTANT RESET_CAN1_F27R1 
 %1  0 lshift CAN1_F27R1 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F27R1 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F27R1 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F27R1 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F27R1 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F27R1 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F27R1 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F27R1 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F27R1 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F27R1 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F27R1 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F27R1 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F27R1 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F27R1 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F27R1 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F27R1 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F27R1 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F27R1 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F27R1 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F27R1 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F27R1 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F27R1 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F27R1 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F27R1 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F27R1 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F27R1 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F27R1 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F27R1 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F27R1 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F27R1 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F27R1 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F27R1 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F27R1 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F27R1 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F27R1 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F27R1 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F27R1 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F27R1 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F27R1 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F27R1 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F27R1 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F27R1 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F27R1 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F27R1 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F27R1 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F27R1 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F27R1 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F27R1 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F27R1 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F27R1 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F27R1 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F27R1 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F27R1 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F27R1 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F27R1 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F27R1 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F27R1 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F27R1 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F27R1 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F27R1 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F27R1 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F27R1 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F27R1 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F27R1 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F27R1 @ %1  31 lshift and 31 rshift ; 

CAN1_F27R2 (read-write)
$00000000 CONSTANT RESET_CAN1_F27R2 
 %1  0 lshift CAN1_F27R2 bis!        \ CAN1_FB0	Bit 0	 Width 1
 %1  1 lshift CAN1_F27R2 bis!        \ CAN1_FB1	Bit 1	 Width 1
 %1  2 lshift CAN1_F27R2 bis!        \ CAN1_FB2	Bit 2	 Width 1
 %1  3 lshift CAN1_F27R2 bis!        \ CAN1_FB3	Bit 3	 Width 1
 %1  4 lshift CAN1_F27R2 bis!        \ CAN1_FB4	Bit 4	 Width 1
 %1  5 lshift CAN1_F27R2 bis!        \ CAN1_FB5	Bit 5	 Width 1
 %1  6 lshift CAN1_F27R2 bis!        \ CAN1_FB6	Bit 6	 Width 1
 %1  7 lshift CAN1_F27R2 bis!        \ CAN1_FB7	Bit 7	 Width 1
 %1  8 lshift CAN1_F27R2 bis!        \ CAN1_FB8	Bit 8	 Width 1
 %1  9 lshift CAN1_F27R2 bis!        \ CAN1_FB9	Bit 9	 Width 1
 %1  10 lshift CAN1_F27R2 bis!        \ CAN1_FB10	Bit 10	 Width 1
 %1  11 lshift CAN1_F27R2 bis!        \ CAN1_FB11	Bit 11	 Width 1
 %1  12 lshift CAN1_F27R2 bis!        \ CAN1_FB12	Bit 12	 Width 1
 %1  13 lshift CAN1_F27R2 bis!        \ CAN1_FB13	Bit 13	 Width 1
 %1  14 lshift CAN1_F27R2 bis!        \ CAN1_FB14	Bit 14	 Width 1
 %1  15 lshift CAN1_F27R2 bis!        \ CAN1_FB15	Bit 15	 Width 1
 %1  16 lshift CAN1_F27R2 bis!        \ CAN1_FB16	Bit 16	 Width 1
 %1  17 lshift CAN1_F27R2 bis!        \ CAN1_FB17	Bit 17	 Width 1
 %1  18 lshift CAN1_F27R2 bis!        \ CAN1_FB18	Bit 18	 Width 1
 %1  19 lshift CAN1_F27R2 bis!        \ CAN1_FB19	Bit 19	 Width 1
 %1  20 lshift CAN1_F27R2 bis!        \ CAN1_FB20	Bit 20	 Width 1
 %1  21 lshift CAN1_F27R2 bis!        \ CAN1_FB21	Bit 21	 Width 1
 %1  22 lshift CAN1_F27R2 bis!        \ CAN1_FB22	Bit 22	 Width 1
 %1  23 lshift CAN1_F27R2 bis!        \ CAN1_FB23	Bit 23	 Width 1
 %1  24 lshift CAN1_F27R2 bis!        \ CAN1_FB24	Bit 24	 Width 1
 %1  25 lshift CAN1_F27R2 bis!        \ CAN1_FB25	Bit 25	 Width 1
 %1  26 lshift CAN1_F27R2 bis!        \ CAN1_FB26	Bit 26	 Width 1
 %1  27 lshift CAN1_F27R2 bis!        \ CAN1_FB27	Bit 27	 Width 1
 %1  28 lshift CAN1_F27R2 bis!        \ CAN1_FB28	Bit 28	 Width 1
 %1  29 lshift CAN1_F27R2 bis!        \ CAN1_FB29	Bit 29	 Width 1
 %1  30 lshift CAN1_F27R2 bis!        \ CAN1_FB30	Bit 30	 Width 1
 %1  31 lshift CAN1_F27R2 bis!        \ CAN1_FB31	Bit 31	 Width 1
\ CAN1_F27R2 Register BitField Fetch Words  
: CAN1_FB0@ CAN1_F27R2 @ %1  0 lshift and 0 rshift ; 
: CAN1_FB1@ CAN1_F27R2 @ %1  1 lshift and 1 rshift ; 
: CAN1_FB2@ CAN1_F27R2 @ %1  2 lshift and 2 rshift ; 
: CAN1_FB3@ CAN1_F27R2 @ %1  3 lshift and 3 rshift ; 
: CAN1_FB4@ CAN1_F27R2 @ %1  4 lshift and 4 rshift ; 
: CAN1_FB5@ CAN1_F27R2 @ %1  5 lshift and 5 rshift ; 
: CAN1_FB6@ CAN1_F27R2 @ %1  6 lshift and 6 rshift ; 
: CAN1_FB7@ CAN1_F27R2 @ %1  7 lshift and 7 rshift ; 
: CAN1_FB8@ CAN1_F27R2 @ %1  8 lshift and 8 rshift ; 
: CAN1_FB9@ CAN1_F27R2 @ %1  9 lshift and 9 rshift ; 
: CAN1_FB10@ CAN1_F27R2 @ %1  10 lshift and 10 rshift ; 
: CAN1_FB11@ CAN1_F27R2 @ %1  11 lshift and 11 rshift ; 
: CAN1_FB12@ CAN1_F27R2 @ %1  12 lshift and 12 rshift ; 
: CAN1_FB13@ CAN1_F27R2 @ %1  13 lshift and 13 rshift ; 
: CAN1_FB14@ CAN1_F27R2 @ %1  14 lshift and 14 rshift ; 
: CAN1_FB15@ CAN1_F27R2 @ %1  15 lshift and 15 rshift ; 
: CAN1_FB16@ CAN1_F27R2 @ %1  16 lshift and 16 rshift ; 
: CAN1_FB17@ CAN1_F27R2 @ %1  17 lshift and 17 rshift ; 
: CAN1_FB18@ CAN1_F27R2 @ %1  18 lshift and 18 rshift ; 
: CAN1_FB19@ CAN1_F27R2 @ %1  19 lshift and 19 rshift ; 
: CAN1_FB20@ CAN1_F27R2 @ %1  20 lshift and 20 rshift ; 
: CAN1_FB21@ CAN1_F27R2 @ %1  21 lshift and 21 rshift ; 
: CAN1_FB22@ CAN1_F27R2 @ %1  22 lshift and 22 rshift ; 
: CAN1_FB23@ CAN1_F27R2 @ %1  23 lshift and 23 rshift ; 
: CAN1_FB24@ CAN1_F27R2 @ %1  24 lshift and 24 rshift ; 
: CAN1_FB25@ CAN1_F27R2 @ %1  25 lshift and 25 rshift ; 
: CAN1_FB26@ CAN1_F27R2 @ %1  26 lshift and 26 rshift ; 
: CAN1_FB27@ CAN1_F27R2 @ %1  27 lshift and 27 rshift ; 
: CAN1_FB28@ CAN1_F27R2 @ %1  28 lshift and 28 rshift ; 
: CAN1_FB29@ CAN1_F27R2 @ %1  29 lshift and 29 rshift ; 
: CAN1_FB30@ CAN1_F27R2 @ %1  30 lshift and 30 rshift ; 
: CAN1_FB31@ CAN1_F27R2 @ %1  31 lshift and 31 rshift ; 

                    
################################### CAN2 ###################################
CAN2_MCR (read-write)
$00010002 CONSTANT RESET_CAN2_MCR 
 %1  16 lshift CAN2_MCR bis!        \ CAN2_DBF	Bit 16	 Width 1
 %1  15 lshift CAN2_MCR bis!        \ CAN2_RESET	Bit 15	 Width 1
 %1  7 lshift CAN2_MCR bis!        \ CAN2_TTCM	Bit 7	 Width 1
 %1  6 lshift CAN2_MCR bis!        \ CAN2_ABOM	Bit 6	 Width 1
 %1  5 lshift CAN2_MCR bis!        \ CAN2_AWUM	Bit 5	 Width 1
 %1  4 lshift CAN2_MCR bis!        \ CAN2_NART	Bit 4	 Width 1
 %1  3 lshift CAN2_MCR bis!        \ CAN2_RFLM	Bit 3	 Width 1
 %1  2 lshift CAN2_MCR bis!        \ CAN2_TXFP	Bit 2	 Width 1
 %1  1 lshift CAN2_MCR bis!        \ CAN2_SLEEP	Bit 1	 Width 1
 %1  0 lshift CAN2_MCR bis!        \ CAN2_INRQ	Bit 0	 Width 1
\ CAN2_MCR Register BitField Fetch Words  
: CAN2_DBF@ CAN2_MCR @ %1  16 lshift and 16 rshift ; 
: CAN2_RESET@ CAN2_MCR @ %1  15 lshift and 15 rshift ; 
: CAN2_TTCM@ CAN2_MCR @ %1  7 lshift and 7 rshift ; 
: CAN2_ABOM@ CAN2_MCR @ %1  6 lshift and 6 rshift ; 
: CAN2_AWUM@ CAN2_MCR @ %1  5 lshift and 5 rshift ; 
: CAN2_NART@ CAN2_MCR @ %1  4 lshift and 4 rshift ; 
: CAN2_RFLM@ CAN2_MCR @ %1  3 lshift and 3 rshift ; 
: CAN2_TXFP@ CAN2_MCR @ %1  2 lshift and 2 rshift ; 
: CAN2_SLEEP@ CAN2_MCR @ %1  1 lshift and 1 rshift ; 
: CAN2_INRQ@ CAN2_MCR @ %1  0 lshift and 0 rshift ; 

CAN2_MSR ()
$00000C02 CONSTANT RESET_CAN2_MSR 
 %1  11 lshift CAN2_MSR bis!        \ CAN2_RX	Bit 11	 Width 1
 %1  10 lshift CAN2_MSR bis!        \ CAN2_SAMP	Bit 10	 Width 1
 %1  9 lshift CAN2_MSR bis!        \ CAN2_RXM	Bit 9	 Width 1
 %1  8 lshift CAN2_MSR bis!        \ CAN2_TXM	Bit 8	 Width 1
 %1  4 lshift CAN2_MSR bis!        \ CAN2_SLAKI	Bit 4	 Width 1
 %1  3 lshift CAN2_MSR bis!        \ CAN2_WKUI	Bit 3	 Width 1
 %1  2 lshift CAN2_MSR bis!        \ CAN2_ERRI	Bit 2	 Width 1
 %1  1 lshift CAN2_MSR bis!        \ CAN2_SLAK	Bit 1	 Width 1
 %1  0 lshift CAN2_MSR bis!        \ CAN2_INAK	Bit 0	 Width 1
\ CAN2_MSR Register BitField Fetch Words  
: CAN2_RX@ CAN2_MSR @ %1  11 lshift and 11 rshift ; 
: CAN2_SAMP@ CAN2_MSR @ %1  10 lshift and 10 rshift ; 
: CAN2_RXM@ CAN2_MSR @ %1  9 lshift and 9 rshift ; 
: CAN2_TXM@ CAN2_MSR @ %1  8 lshift and 8 rshift ; 
: CAN2_SLAKI@ CAN2_MSR @ %1  4 lshift and 4 rshift ; 
: CAN2_WKUI@ CAN2_MSR @ %1  3 lshift and 3 rshift ; 
: CAN2_ERRI@ CAN2_MSR @ %1  2 lshift and 2 rshift ; 
: CAN2_SLAK@ CAN2_MSR @ %1  1 lshift and 1 rshift ; 
: CAN2_INAK@ CAN2_MSR @ %1  0 lshift and 0 rshift ; 

CAN2_TSR ()
$1C000000 CONSTANT RESET_CAN2_TSR 
 %1  31 lshift CAN2_TSR bis!        \ CAN2_LOW2	Bit 31	 Width 1
 %1  30 lshift CAN2_TSR bis!        \ CAN2_LOW1	Bit 30	 Width 1
 %1  29 lshift CAN2_TSR bis!        \ CAN2_LOW0	Bit 29	 Width 1
 %1  28 lshift CAN2_TSR bis!        \ CAN2_TME2	Bit 28	 Width 1
 %1  27 lshift CAN2_TSR bis!        \ CAN2_TME1	Bit 27	 Width 1
 %1  26 lshift CAN2_TSR bis!        \ CAN2_TME0	Bit 26	 Width 1
 %xx  24 lshift CAN2_TSR bis!        \ CAN2_CODE	Bit 24	 Width 2
 %1  23 lshift CAN2_TSR bis!        \ CAN2_ABRQ2	Bit 23	 Width 1
 %1  19 lshift CAN2_TSR bis!        \ CAN2_TERR2	Bit 19	 Width 1
 %1  18 lshift CAN2_TSR bis!        \ CAN2_ALST2	Bit 18	 Width 1
 %1  17 lshift CAN2_TSR bis!        \ CAN2_TXOK2	Bit 17	 Width 1
 %1  16 lshift CAN2_TSR bis!        \ CAN2_RQCP2	Bit 16	 Width 1
 %1  15 lshift CAN2_TSR bis!        \ CAN2_ABRQ1	Bit 15	 Width 1
 %1  11 lshift CAN2_TSR bis!        \ CAN2_TERR1	Bit 11	 Width 1
 %1  10 lshift CAN2_TSR bis!        \ CAN2_ALST1	Bit 10	 Width 1
 %1  9 lshift CAN2_TSR bis!        \ CAN2_TXOK1	Bit 9	 Width 1
 %1  8 lshift CAN2_TSR bis!        \ CAN2_RQCP1	Bit 8	 Width 1
 %1  7 lshift CAN2_TSR bis!        \ CAN2_ABRQ0	Bit 7	 Width 1
 %1  3 lshift CAN2_TSR bis!        \ CAN2_TERR0	Bit 3	 Width 1
 %1  2 lshift CAN2_TSR bis!        \ CAN2_ALST0	Bit 2	 Width 1
 %1  1 lshift CAN2_TSR bis!        \ CAN2_TXOK0	Bit 1	 Width 1
 %1  0 lshift CAN2_TSR bis!        \ CAN2_RQCP0	Bit 0	 Width 1
\ CAN2_TSR Register BitField Fetch Words  
: CAN2_LOW2@ CAN2_TSR @ %1  31 lshift and 31 rshift ; 
: CAN2_LOW1@ CAN2_TSR @ %1  30 lshift and 30 rshift ; 
: CAN2_LOW0@ CAN2_TSR @ %1  29 lshift and 29 rshift ; 
: CAN2_TME2@ CAN2_TSR @ %1  28 lshift and 28 rshift ; 
: CAN2_TME1@ CAN2_TSR @ %1  27 lshift and 27 rshift ; 
: CAN2_TME0@ CAN2_TSR @ %1  26 lshift and 26 rshift ; 
: CAN2_CODE@ CAN2_TSR @ %11  24 lshift and 24 rshift ; 
: CAN2_ABRQ2@ CAN2_TSR @ %1  23 lshift and 23 rshift ; 
: CAN2_TERR2@ CAN2_TSR @ %1  19 lshift and 19 rshift ; 
: CAN2_ALST2@ CAN2_TSR @ %1  18 lshift and 18 rshift ; 
: CAN2_TXOK2@ CAN2_TSR @ %1  17 lshift and 17 rshift ; 
: CAN2_RQCP2@ CAN2_TSR @ %1  16 lshift and 16 rshift ; 
: CAN2_ABRQ1@ CAN2_TSR @ %1  15 lshift and 15 rshift ; 
: CAN2_TERR1@ CAN2_TSR @ %1  11 lshift and 11 rshift ; 
: CAN2_ALST1@ CAN2_TSR @ %1  10 lshift and 10 rshift ; 
: CAN2_TXOK1@ CAN2_TSR @ %1  9 lshift and 9 rshift ; 
: CAN2_RQCP1@ CAN2_TSR @ %1  8 lshift and 8 rshift ; 
: CAN2_ABRQ0@ CAN2_TSR @ %1  7 lshift and 7 rshift ; 
: CAN2_TERR0@ CAN2_TSR @ %1  3 lshift and 3 rshift ; 
: CAN2_ALST0@ CAN2_TSR @ %1  2 lshift and 2 rshift ; 
: CAN2_TXOK0@ CAN2_TSR @ %1  1 lshift and 1 rshift ; 
: CAN2_RQCP0@ CAN2_TSR @ %1  0 lshift and 0 rshift ; 

CAN2_RF0R ()
$00000000 CONSTANT RESET_CAN2_RF0R 
 %1  5 lshift CAN2_RF0R bis!        \ CAN2_RFOM0	Bit 5	 Width 1
 %1  4 lshift CAN2_RF0R bis!        \ CAN2_FOVR0	Bit 4	 Width 1
 %1  3 lshift CAN2_RF0R bis!        \ CAN2_FULL0	Bit 3	 Width 1
 %xx  0 lshift CAN2_RF0R bis!        \ CAN2_FMP0	Bit 0	 Width 2
\ CAN2_RF0R Register BitField Fetch Words  
: CAN2_RFOM0@ CAN2_RF0R @ %1  5 lshift and 5 rshift ; 
: CAN2_FOVR0@ CAN2_RF0R @ %1  4 lshift and 4 rshift ; 
: CAN2_FULL0@ CAN2_RF0R @ %1  3 lshift and 3 rshift ; 
: CAN2_FMP0@ CAN2_RF0R @ %11  0 lshift and 0 rshift ; 

CAN2_RF1R ()
$00000000 CONSTANT RESET_CAN2_RF1R 
 %1  5 lshift CAN2_RF1R bis!        \ CAN2_RFOM1	Bit 5	 Width 1
 %1  4 lshift CAN2_RF1R bis!        \ CAN2_FOVR1	Bit 4	 Width 1
 %1  3 lshift CAN2_RF1R bis!        \ CAN2_FULL1	Bit 3	 Width 1
 %xx  0 lshift CAN2_RF1R bis!        \ CAN2_FMP1	Bit 0	 Width 2
\ CAN2_RF1R Register BitField Fetch Words  
: CAN2_RFOM1@ CAN2_RF1R @ %1  5 lshift and 5 rshift ; 
: CAN2_FOVR1@ CAN2_RF1R @ %1  4 lshift and 4 rshift ; 
: CAN2_FULL1@ CAN2_RF1R @ %1  3 lshift and 3 rshift ; 
: CAN2_FMP1@ CAN2_RF1R @ %11  0 lshift and 0 rshift ; 

CAN2_IER (read-write)
$00000000 CONSTANT RESET_CAN2_IER 
 %1  17 lshift CAN2_IER bis!        \ CAN2_SLKIE	Bit 17	 Width 1
 %1  16 lshift CAN2_IER bis!        \ CAN2_WKUIE	Bit 16	 Width 1
 %1  15 lshift CAN2_IER bis!        \ CAN2_ERRIE	Bit 15	 Width 1
 %1  11 lshift CAN2_IER bis!        \ CAN2_LECIE	Bit 11	 Width 1
 %1  10 lshift CAN2_IER bis!        \ CAN2_BOFIE	Bit 10	 Width 1
 %1  9 lshift CAN2_IER bis!        \ CAN2_EPVIE	Bit 9	 Width 1
 %1  8 lshift CAN2_IER bis!        \ CAN2_EWGIE	Bit 8	 Width 1
 %1  6 lshift CAN2_IER bis!        \ CAN2_FOVIE1	Bit 6	 Width 1
 %1  5 lshift CAN2_IER bis!        \ CAN2_FFIE1	Bit 5	 Width 1
 %1  4 lshift CAN2_IER bis!        \ CAN2_FMPIE1	Bit 4	 Width 1
 %1  3 lshift CAN2_IER bis!        \ CAN2_FOVIE0	Bit 3	 Width 1
 %1  2 lshift CAN2_IER bis!        \ CAN2_FFIE0	Bit 2	 Width 1
 %1  1 lshift CAN2_IER bis!        \ CAN2_FMPIE0	Bit 1	 Width 1
 %1  0 lshift CAN2_IER bis!        \ CAN2_TMEIE	Bit 0	 Width 1
\ CAN2_IER Register BitField Fetch Words  
: CAN2_SLKIE@ CAN2_IER @ %1  17 lshift and 17 rshift ; 
: CAN2_WKUIE@ CAN2_IER @ %1  16 lshift and 16 rshift ; 
: CAN2_ERRIE@ CAN2_IER @ %1  15 lshift and 15 rshift ; 
: CAN2_LECIE@ CAN2_IER @ %1  11 lshift and 11 rshift ; 
: CAN2_BOFIE@ CAN2_IER @ %1  10 lshift and 10 rshift ; 
: CAN2_EPVIE@ CAN2_IER @ %1  9 lshift and 9 rshift ; 
: CAN2_EWGIE@ CAN2_IER @ %1  8 lshift and 8 rshift ; 
: CAN2_FOVIE1@ CAN2_IER @ %1  6 lshift and 6 rshift ; 
: CAN2_FFIE1@ CAN2_IER @ %1  5 lshift and 5 rshift ; 
: CAN2_FMPIE1@ CAN2_IER @ %1  4 lshift and 4 rshift ; 
: CAN2_FOVIE0@ CAN2_IER @ %1  3 lshift and 3 rshift ; 
: CAN2_FFIE0@ CAN2_IER @ %1  2 lshift and 2 rshift ; 
: CAN2_FMPIE0@ CAN2_IER @ %1  1 lshift and 1 rshift ; 
: CAN2_TMEIE@ CAN2_IER @ %1  0 lshift and 0 rshift ; 

CAN2_ESR ()
$00000000 CONSTANT RESET_CAN2_ESR 
 %xxxxxxxx  24 lshift CAN2_ESR bis!        \ CAN2_REC	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_ESR bis!        \ CAN2_TEC	Bit 16	 Width 8
 %xxx  4 lshift CAN2_ESR bis!        \ CAN2_LEC	Bit 4	 Width 3
 %1  2 lshift CAN2_ESR bis!        \ CAN2_BOFF	Bit 2	 Width 1
 %1  1 lshift CAN2_ESR bis!        \ CAN2_EPVF	Bit 1	 Width 1
 %1  0 lshift CAN2_ESR bis!        \ CAN2_EWGF	Bit 0	 Width 1
\ CAN2_ESR Register BitField Fetch Words  
: CAN2_REC@ CAN2_ESR @ %11111111  24 lshift and 24 rshift ; 
: CAN2_TEC@ CAN2_ESR @ %11111111  16 lshift and 16 rshift ; 
: CAN2_LEC@ CAN2_ESR @ %111  4 lshift and 4 rshift ; 
: CAN2_BOFF@ CAN2_ESR @ %1  2 lshift and 2 rshift ; 
: CAN2_EPVF@ CAN2_ESR @ %1  1 lshift and 1 rshift ; 
: CAN2_EWGF@ CAN2_ESR @ %1  0 lshift and 0 rshift ; 

CAN2_BTR (read-write)
$00000000 CONSTANT RESET_CAN2_BTR 
 %1  31 lshift CAN2_BTR bis!        \ CAN2_SILM	Bit 31	 Width 1
 %1  30 lshift CAN2_BTR bis!        \ CAN2_LBKM	Bit 30	 Width 1
 %xx  24 lshift CAN2_BTR bis!        \ CAN2_SJW	Bit 24	 Width 2
 %xxx  20 lshift CAN2_BTR bis!        \ CAN2_TS2	Bit 20	 Width 3
 %xxxx  16 lshift CAN2_BTR bis!        \ CAN2_TS1	Bit 16	 Width 4
 % 0 lshift CAN2_BTR bis!        \ CAN2_BRP	Bit 0	 Width 10
\ CAN2_BTR Register BitField Fetch Words  
: CAN2_SILM@ CAN2_BTR @ %1  31 lshift and 31 rshift ; 
: CAN2_LBKM@ CAN2_BTR @ %1  30 lshift and 30 rshift ; 
: CAN2_SJW@ CAN2_BTR @ %11  24 lshift and 24 rshift ; 
: CAN2_TS2@ CAN2_BTR @ %111  20 lshift and 20 rshift ; 
: CAN2_TS1@ CAN2_BTR @ %1111  16 lshift and 16 rshift ; 
: CAN2_BRP@ CAN2_BTR @ % 0 lshift and 0 rshift ; 

CAN2_TI0R (read-write)
$00000000 CONSTANT RESET_CAN2_TI0R 
 % 21 lshift CAN2_TI0R bis!        \ CAN2_STID	Bit 21	 Width 11
 % 3 lshift CAN2_TI0R bis!        \ CAN2_EXID	Bit 3	 Width 18
 %1  2 lshift CAN2_TI0R bis!        \ CAN2_IDE	Bit 2	 Width 1
 %1  1 lshift CAN2_TI0R bis!        \ CAN2_RTR	Bit 1	 Width 1
 %1  0 lshift CAN2_TI0R bis!        \ CAN2_TXRQ	Bit 0	 Width 1
\ CAN2_TI0R Register BitField Fetch Words  
: CAN2_STID@ CAN2_TI0R @ % 21 lshift and 21 rshift ; 
: CAN2_EXID@ CAN2_TI0R @ % 3 lshift and 3 rshift ; 
: CAN2_IDE@ CAN2_TI0R @ %1  2 lshift and 2 rshift ; 
: CAN2_RTR@ CAN2_TI0R @ %1  1 lshift and 1 rshift ; 
: CAN2_TXRQ@ CAN2_TI0R @ %1  0 lshift and 0 rshift ; 

CAN2_TDT0R (read-write)
$00000000 CONSTANT RESET_CAN2_TDT0R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN2_TDT0R bis!        \ CAN2_TIME	Bit 16	 Width 16
 %1  8 lshift CAN2_TDT0R bis!        \ CAN2_TGT	Bit 8	 Width 1
 %xxxx  0 lshift CAN2_TDT0R bis!        \ CAN2_DLC	Bit 0	 Width 4
\ CAN2_TDT0R Register BitField Fetch Words  
: CAN2_TIME@ CAN2_TDT0R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN2_TGT@ CAN2_TDT0R @ %1  8 lshift and 8 rshift ; 
: CAN2_DLC@ CAN2_TDT0R @ %1111  0 lshift and 0 rshift ; 

CAN2_TDL0R (read-write)
$00000000 CONSTANT RESET_CAN2_TDL0R 
 %xxxxxxxx  24 lshift CAN2_TDL0R bis!        \ CAN2_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_TDL0R bis!        \ CAN2_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_TDL0R bis!        \ CAN2_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_TDL0R bis!        \ CAN2_DATA0	Bit 0	 Width 8
\ CAN2_TDL0R Register BitField Fetch Words  
: CAN2_DATA3@ CAN2_TDL0R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA2@ CAN2_TDL0R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA1@ CAN2_TDL0R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA0@ CAN2_TDL0R @ %11111111  0 lshift and 0 rshift ; 

CAN2_TDH0R (read-write)
$00000000 CONSTANT RESET_CAN2_TDH0R 
 %xxxxxxxx  24 lshift CAN2_TDH0R bis!        \ CAN2_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_TDH0R bis!        \ CAN2_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_TDH0R bis!        \ CAN2_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_TDH0R bis!        \ CAN2_DATA4	Bit 0	 Width 8
\ CAN2_TDH0R Register BitField Fetch Words  
: CAN2_DATA7@ CAN2_TDH0R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA6@ CAN2_TDH0R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA5@ CAN2_TDH0R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA4@ CAN2_TDH0R @ %11111111  0 lshift and 0 rshift ; 

CAN2_TI1R (read-write)
$00000000 CONSTANT RESET_CAN2_TI1R 
 % 21 lshift CAN2_TI1R bis!        \ CAN2_STID	Bit 21	 Width 11
 % 3 lshift CAN2_TI1R bis!        \ CAN2_EXID	Bit 3	 Width 18
 %1  2 lshift CAN2_TI1R bis!        \ CAN2_IDE	Bit 2	 Width 1
 %1  1 lshift CAN2_TI1R bis!        \ CAN2_RTR	Bit 1	 Width 1
 %1  0 lshift CAN2_TI1R bis!        \ CAN2_TXRQ	Bit 0	 Width 1
\ CAN2_TI1R Register BitField Fetch Words  
: CAN2_STID@ CAN2_TI1R @ % 21 lshift and 21 rshift ; 
: CAN2_EXID@ CAN2_TI1R @ % 3 lshift and 3 rshift ; 
: CAN2_IDE@ CAN2_TI1R @ %1  2 lshift and 2 rshift ; 
: CAN2_RTR@ CAN2_TI1R @ %1  1 lshift and 1 rshift ; 
: CAN2_TXRQ@ CAN2_TI1R @ %1  0 lshift and 0 rshift ; 

CAN2_TDT1R (read-write)
$00000000 CONSTANT RESET_CAN2_TDT1R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN2_TDT1R bis!        \ CAN2_TIME	Bit 16	 Width 16
 %1  8 lshift CAN2_TDT1R bis!        \ CAN2_TGT	Bit 8	 Width 1
 %xxxx  0 lshift CAN2_TDT1R bis!        \ CAN2_DLC	Bit 0	 Width 4
\ CAN2_TDT1R Register BitField Fetch Words  
: CAN2_TIME@ CAN2_TDT1R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN2_TGT@ CAN2_TDT1R @ %1  8 lshift and 8 rshift ; 
: CAN2_DLC@ CAN2_TDT1R @ %1111  0 lshift and 0 rshift ; 

CAN2_TDL1R (read-write)
$00000000 CONSTANT RESET_CAN2_TDL1R 
 %xxxxxxxx  24 lshift CAN2_TDL1R bis!        \ CAN2_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_TDL1R bis!        \ CAN2_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_TDL1R bis!        \ CAN2_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_TDL1R bis!        \ CAN2_DATA0	Bit 0	 Width 8
\ CAN2_TDL1R Register BitField Fetch Words  
: CAN2_DATA3@ CAN2_TDL1R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA2@ CAN2_TDL1R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA1@ CAN2_TDL1R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA0@ CAN2_TDL1R @ %11111111  0 lshift and 0 rshift ; 

CAN2_TDH1R (read-write)
$00000000 CONSTANT RESET_CAN2_TDH1R 
 %xxxxxxxx  24 lshift CAN2_TDH1R bis!        \ CAN2_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_TDH1R bis!        \ CAN2_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_TDH1R bis!        \ CAN2_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_TDH1R bis!        \ CAN2_DATA4	Bit 0	 Width 8
\ CAN2_TDH1R Register BitField Fetch Words  
: CAN2_DATA7@ CAN2_TDH1R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA6@ CAN2_TDH1R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA5@ CAN2_TDH1R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA4@ CAN2_TDH1R @ %11111111  0 lshift and 0 rshift ; 

CAN2_TI2R (read-write)
$00000000 CONSTANT RESET_CAN2_TI2R 
 % 21 lshift CAN2_TI2R bis!        \ CAN2_STID	Bit 21	 Width 11
 % 3 lshift CAN2_TI2R bis!        \ CAN2_EXID	Bit 3	 Width 18
 %1  2 lshift CAN2_TI2R bis!        \ CAN2_IDE	Bit 2	 Width 1
 %1  1 lshift CAN2_TI2R bis!        \ CAN2_RTR	Bit 1	 Width 1
 %1  0 lshift CAN2_TI2R bis!        \ CAN2_TXRQ	Bit 0	 Width 1
\ CAN2_TI2R Register BitField Fetch Words  
: CAN2_STID@ CAN2_TI2R @ % 21 lshift and 21 rshift ; 
: CAN2_EXID@ CAN2_TI2R @ % 3 lshift and 3 rshift ; 
: CAN2_IDE@ CAN2_TI2R @ %1  2 lshift and 2 rshift ; 
: CAN2_RTR@ CAN2_TI2R @ %1  1 lshift and 1 rshift ; 
: CAN2_TXRQ@ CAN2_TI2R @ %1  0 lshift and 0 rshift ; 

CAN2_TDT2R (read-write)
$00000000 CONSTANT RESET_CAN2_TDT2R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN2_TDT2R bis!        \ CAN2_TIME	Bit 16	 Width 16
 %1  8 lshift CAN2_TDT2R bis!        \ CAN2_TGT	Bit 8	 Width 1
 %xxxx  0 lshift CAN2_TDT2R bis!        \ CAN2_DLC	Bit 0	 Width 4
\ CAN2_TDT2R Register BitField Fetch Words  
: CAN2_TIME@ CAN2_TDT2R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN2_TGT@ CAN2_TDT2R @ %1  8 lshift and 8 rshift ; 
: CAN2_DLC@ CAN2_TDT2R @ %1111  0 lshift and 0 rshift ; 

CAN2_TDL2R (read-write)
$00000000 CONSTANT RESET_CAN2_TDL2R 
 %xxxxxxxx  24 lshift CAN2_TDL2R bis!        \ CAN2_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_TDL2R bis!        \ CAN2_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_TDL2R bis!        \ CAN2_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_TDL2R bis!        \ CAN2_DATA0	Bit 0	 Width 8
\ CAN2_TDL2R Register BitField Fetch Words  
: CAN2_DATA3@ CAN2_TDL2R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA2@ CAN2_TDL2R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA1@ CAN2_TDL2R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA0@ CAN2_TDL2R @ %11111111  0 lshift and 0 rshift ; 

CAN2_TDH2R (read-write)
$00000000 CONSTANT RESET_CAN2_TDH2R 
 %xxxxxxxx  24 lshift CAN2_TDH2R bis!        \ CAN2_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_TDH2R bis!        \ CAN2_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_TDH2R bis!        \ CAN2_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_TDH2R bis!        \ CAN2_DATA4	Bit 0	 Width 8
\ CAN2_TDH2R Register BitField Fetch Words  
: CAN2_DATA7@ CAN2_TDH2R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA6@ CAN2_TDH2R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA5@ CAN2_TDH2R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA4@ CAN2_TDH2R @ %11111111  0 lshift and 0 rshift ; 

CAN2_RI0R (read-only)
$00000000 CONSTANT RESET_CAN2_RI0R 
 % 21 lshift CAN2_RI0R bis!        \ CAN2_STID	Bit 21	 Width 11
 % 3 lshift CAN2_RI0R bis!        \ CAN2_EXID	Bit 3	 Width 18
 %1  2 lshift CAN2_RI0R bis!        \ CAN2_IDE	Bit 2	 Width 1
 %1  1 lshift CAN2_RI0R bis!        \ CAN2_RTR	Bit 1	 Width 1
\ CAN2_RI0R Register BitField Fetch Words  
: CAN2_STID@ CAN2_RI0R @ % 21 lshift and 21 rshift ; 
: CAN2_EXID@ CAN2_RI0R @ % 3 lshift and 3 rshift ; 
: CAN2_IDE@ CAN2_RI0R @ %1  2 lshift and 2 rshift ; 
: CAN2_RTR@ CAN2_RI0R @ %1  1 lshift and 1 rshift ; 

CAN2_RDT0R (read-only)
$00000000 CONSTANT RESET_CAN2_RDT0R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN2_RDT0R bis!        \ CAN2_TIME	Bit 16	 Width 16
 %xxxxxxxx  8 lshift CAN2_RDT0R bis!        \ CAN2_FMI	Bit 8	 Width 8
 %xxxx  0 lshift CAN2_RDT0R bis!        \ CAN2_DLC	Bit 0	 Width 4
\ CAN2_RDT0R Register BitField Fetch Words  
: CAN2_TIME@ CAN2_RDT0R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN2_FMI@ CAN2_RDT0R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DLC@ CAN2_RDT0R @ %1111  0 lshift and 0 rshift ; 

CAN2_RDL0R (read-only)
$00000000 CONSTANT RESET_CAN2_RDL0R 
 %xxxxxxxx  24 lshift CAN2_RDL0R bis!        \ CAN2_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_RDL0R bis!        \ CAN2_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_RDL0R bis!        \ CAN2_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_RDL0R bis!        \ CAN2_DATA0	Bit 0	 Width 8
\ CAN2_RDL0R Register BitField Fetch Words  
: CAN2_DATA3@ CAN2_RDL0R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA2@ CAN2_RDL0R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA1@ CAN2_RDL0R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA0@ CAN2_RDL0R @ %11111111  0 lshift and 0 rshift ; 

CAN2_RDH0R (read-only)
$00000000 CONSTANT RESET_CAN2_RDH0R 
 %xxxxxxxx  24 lshift CAN2_RDH0R bis!        \ CAN2_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_RDH0R bis!        \ CAN2_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_RDH0R bis!        \ CAN2_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_RDH0R bis!        \ CAN2_DATA4	Bit 0	 Width 8
\ CAN2_RDH0R Register BitField Fetch Words  
: CAN2_DATA7@ CAN2_RDH0R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA6@ CAN2_RDH0R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA5@ CAN2_RDH0R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA4@ CAN2_RDH0R @ %11111111  0 lshift and 0 rshift ; 

CAN2_RI1R (read-only)
$00000000 CONSTANT RESET_CAN2_RI1R 
 % 21 lshift CAN2_RI1R bis!        \ CAN2_STID	Bit 21	 Width 11
 % 3 lshift CAN2_RI1R bis!        \ CAN2_EXID	Bit 3	 Width 18
 %1  2 lshift CAN2_RI1R bis!        \ CAN2_IDE	Bit 2	 Width 1
 %1  1 lshift CAN2_RI1R bis!        \ CAN2_RTR	Bit 1	 Width 1
\ CAN2_RI1R Register BitField Fetch Words  
: CAN2_STID@ CAN2_RI1R @ % 21 lshift and 21 rshift ; 
: CAN2_EXID@ CAN2_RI1R @ % 3 lshift and 3 rshift ; 
: CAN2_IDE@ CAN2_RI1R @ %1  2 lshift and 2 rshift ; 
: CAN2_RTR@ CAN2_RI1R @ %1  1 lshift and 1 rshift ; 

CAN2_RDT1R (read-only)
$00000000 CONSTANT RESET_CAN2_RDT1R 
 %xxxxxxxxxxxxxxxx  16 lshift CAN2_RDT1R bis!        \ CAN2_TIME	Bit 16	 Width 16
 %xxxxxxxx  8 lshift CAN2_RDT1R bis!        \ CAN2_FMI	Bit 8	 Width 8
 %xxxx  0 lshift CAN2_RDT1R bis!        \ CAN2_DLC	Bit 0	 Width 4
\ CAN2_RDT1R Register BitField Fetch Words  
: CAN2_TIME@ CAN2_RDT1R @ %1111111111111111  16 lshift and 16 rshift ; 
: CAN2_FMI@ CAN2_RDT1R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DLC@ CAN2_RDT1R @ %1111  0 lshift and 0 rshift ; 

CAN2_RDL1R (read-only)
$00000000 CONSTANT RESET_CAN2_RDL1R 
 %xxxxxxxx  24 lshift CAN2_RDL1R bis!        \ CAN2_DATA3	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_RDL1R bis!        \ CAN2_DATA2	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_RDL1R bis!        \ CAN2_DATA1	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_RDL1R bis!        \ CAN2_DATA0	Bit 0	 Width 8
\ CAN2_RDL1R Register BitField Fetch Words  
: CAN2_DATA3@ CAN2_RDL1R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA2@ CAN2_RDL1R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA1@ CAN2_RDL1R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA0@ CAN2_RDL1R @ %11111111  0 lshift and 0 rshift ; 

CAN2_RDH1R (read-only)
$00000000 CONSTANT RESET_CAN2_RDH1R 
 %xxxxxxxx  24 lshift CAN2_RDH1R bis!        \ CAN2_DATA7	Bit 24	 Width 8
 %xxxxxxxx  16 lshift CAN2_RDH1R bis!        \ CAN2_DATA6	Bit 16	 Width 8
 %xxxxxxxx  8 lshift CAN2_RDH1R bis!        \ CAN2_DATA5	Bit 8	 Width 8
 %xxxxxxxx  0 lshift CAN2_RDH1R bis!        \ CAN2_DATA4	Bit 0	 Width 8
\ CAN2_RDH1R Register BitField Fetch Words  
: CAN2_DATA7@ CAN2_RDH1R @ %11111111  24 lshift and 24 rshift ; 
: CAN2_DATA6@ CAN2_RDH1R @ %11111111  16 lshift and 16 rshift ; 
: CAN2_DATA5@ CAN2_RDH1R @ %11111111  8 lshift and 8 rshift ; 
: CAN2_DATA4@ CAN2_RDH1R @ %11111111  0 lshift and 0 rshift ; 

CAN2_FMR (read-write)
$2A1C0E01 CONSTANT RESET_CAN2_FMR 
 %xxxxxx  8 lshift CAN2_FMR bis!        \ CAN2_CAN2SB	Bit 8	 Width 6
 %1  0 lshift CAN2_FMR bis!        \ CAN2_FINIT	Bit 0	 Width 1
\ CAN2_FMR Register BitField Fetch Words  
: CAN2_CAN2SB@ CAN2_FMR @ %111111  8 lshift and 8 rshift ; 
: CAN2_FINIT@ CAN2_FMR @ %1  0 lshift and 0 rshift ; 

CAN2_FM1R (read-write)
$00000000 CONSTANT RESET_CAN2_FM1R 
 %1  0 lshift CAN2_FM1R bis!        \ CAN2_FBM0	Bit 0	 Width 1
 %1  1 lshift CAN2_FM1R bis!        \ CAN2_FBM1	Bit 1	 Width 1
 %1  2 lshift CAN2_FM1R bis!        \ CAN2_FBM2	Bit 2	 Width 1
 %1  3 lshift CAN2_FM1R bis!        \ CAN2_FBM3	Bit 3	 Width 1
 %1  4 lshift CAN2_FM1R bis!        \ CAN2_FBM4	Bit 4	 Width 1
 %1  5 lshift CAN2_FM1R bis!        \ CAN2_FBM5	Bit 5	 Width 1
 %1  6 lshift CAN2_FM1R bis!        \ CAN2_FBM6	Bit 6	 Width 1
 %1  7 lshift CAN2_FM1R bis!        \ CAN2_FBM7	Bit 7	 Width 1
 %1  8 lshift CAN2_FM1R bis!        \ CAN2_FBM8	Bit 8	 Width 1
 %1  9 lshift CAN2_FM1R bis!        \ CAN2_FBM9	Bit 9	 Width 1
 %1  10 lshift CAN2_FM1R bis!        \ CAN2_FBM10	Bit 10	 Width 1
 %1  11 lshift CAN2_FM1R bis!        \ CAN2_FBM11	Bit 11	 Width 1
 %1  12 lshift CAN2_FM1R bis!        \ CAN2_FBM12	Bit 12	 Width 1
 %1  13 lshift CAN2_FM1R bis!        \ CAN2_FBM13	Bit 13	 Width 1
 %1  14 lshift CAN2_FM1R bis!        \ CAN2_FBM14	Bit 14	 Width 1
 %1  15 lshift CAN2_FM1R bis!        \ CAN2_FBM15	Bit 15	 Width 1
 %1  16 lshift CAN2_FM1R bis!        \ CAN2_FBM16	Bit 16	 Width 1
 %1  17 lshift CAN2_FM1R bis!        \ CAN2_FBM17	Bit 17	 Width 1
 %1  18 lshift CAN2_FM1R bis!        \ CAN2_FBM18	Bit 18	 Width 1
 %1  19 lshift CAN2_FM1R bis!        \ CAN2_FBM19	Bit 19	 Width 1
 %1  20 lshift CAN2_FM1R bis!        \ CAN2_FBM20	Bit 20	 Width 1
 %1  21 lshift CAN2_FM1R bis!        \ CAN2_FBM21	Bit 21	 Width 1
 %1  22 lshift CAN2_FM1R bis!        \ CAN2_FBM22	Bit 22	 Width 1
 %1  23 lshift CAN2_FM1R bis!        \ CAN2_FBM23	Bit 23	 Width 1
 %1  24 lshift CAN2_FM1R bis!        \ CAN2_FBM24	Bit 24	 Width 1
 %1  25 lshift CAN2_FM1R bis!        \ CAN2_FBM25	Bit 25	 Width 1
 %1  26 lshift CAN2_FM1R bis!        \ CAN2_FBM26	Bit 26	 Width 1
 %1  27 lshift CAN2_FM1R bis!        \ CAN2_FBM27	Bit 27	 Width 1
\ CAN2_FM1R Register BitField Fetch Words  
: CAN2_FBM0@ CAN2_FM1R @ %1  0 lshift and 0 rshift ; 
: CAN2_FBM1@ CAN2_FM1R @ %1  1 lshift and 1 rshift ; 
: CAN2_FBM2@ CAN2_FM1R @ %1  2 lshift and 2 rshift ; 
: CAN2_FBM3@ CAN2_FM1R @ %1  3 lshift and 3 rshift ; 
: CAN2_FBM4@ CAN2_FM1R @ %1  4 lshift and 4 rshift ; 
: CAN2_FBM5@ CAN2_FM1R @ %1  5 lshift and 5 rshift ; 
: CAN2_FBM6@ CAN2_FM1R @ %1  6 lshift and 6 rshift ; 
: CAN2_FBM7@ CAN2_FM1R @ %1  7 lshift and 7 rshift ; 
: CAN2_FBM8@ CAN2_FM1R @ %1  8 lshift and 8 rshift ; 
: CAN2_FBM9@ CAN2_FM1R @ %1  9 lshift and 9 rshift ; 
: CAN2_FBM10@ CAN2_FM1R @ %1  10 lshift and 10 rshift ; 
: CAN2_FBM11@ CAN2_FM1R @ %1  11 lshift and 11 rshift ; 
: CAN2_FBM12@ CAN2_FM1R @ %1  12 lshift and 12 rshift ; 
: CAN2_FBM13@ CAN2_FM1R @ %1  13 lshift and 13 rshift ; 
: CAN2_FBM14@ CAN2_FM1R @ %1  14 lshift and 14 rshift ; 
: CAN2_FBM15@ CAN2_FM1R @ %1  15 lshift and 15 rshift ; 
: CAN2_FBM16@ CAN2_FM1R @ %1  16 lshift and 16 rshift ; 
: CAN2_FBM17@ CAN2_FM1R @ %1  17 lshift and 17 rshift ; 
: CAN2_FBM18@ CAN2_FM1R @ %1  18 lshift and 18 rshift ; 
: CAN2_FBM19@ CAN2_FM1R @ %1  19 lshift and 19 rshift ; 
: CAN2_FBM20@ CAN2_FM1R @ %1  20 lshift and 20 rshift ; 
: CAN2_FBM21@ CAN2_FM1R @ %1  21 lshift and 21 rshift ; 
: CAN2_FBM22@ CAN2_FM1R @ %1  22 lshift and 22 rshift ; 
: CAN2_FBM23@ CAN2_FM1R @ %1  23 lshift and 23 rshift ; 
: CAN2_FBM24@ CAN2_FM1R @ %1  24 lshift and 24 rshift ; 
: CAN2_FBM25@ CAN2_FM1R @ %1  25 lshift and 25 rshift ; 
: CAN2_FBM26@ CAN2_FM1R @ %1  26 lshift and 26 rshift ; 
: CAN2_FBM27@ CAN2_FM1R @ %1  27 lshift and 27 rshift ; 

CAN2_FS1R (read-write)
$00000000 CONSTANT RESET_CAN2_FS1R 
 %1  0 lshift CAN2_FS1R bis!        \ CAN2_FSC0	Bit 0	 Width 1
 %1  1 lshift CAN2_FS1R bis!        \ CAN2_FSC1	Bit 1	 Width 1
 %1  2 lshift CAN2_FS1R bis!        \ CAN2_FSC2	Bit 2	 Width 1
 %1  3 lshift CAN2_FS1R bis!        \ CAN2_FSC3	Bit 3	 Width 1
 %1  4 lshift CAN2_FS1R bis!        \ CAN2_FSC4	Bit 4	 Width 1
 %1  5 lshift CAN2_FS1R bis!        \ CAN2_FSC5	Bit 5	 Width 1
 %1  6 lshift CAN2_FS1R bis!        \ CAN2_FSC6	Bit 6	 Width 1
 %1  7 lshift CAN2_FS1R bis!        \ CAN2_FSC7	Bit 7	 Width 1
 %1  8 lshift CAN2_FS1R bis!        \ CAN2_FSC8	Bit 8	 Width 1
 %1  9 lshift CAN2_FS1R bis!        \ CAN2_FSC9	Bit 9	 Width 1
 %1  10 lshift CAN2_FS1R bis!        \ CAN2_FSC10	Bit 10	 Width 1
 %1  11 lshift CAN2_FS1R bis!        \ CAN2_FSC11	Bit 11	 Width 1
 %1  12 lshift CAN2_FS1R bis!        \ CAN2_FSC12	Bit 12	 Width 1
 %1  13 lshift CAN2_FS1R bis!        \ CAN2_FSC13	Bit 13	 Width 1
 %1  14 lshift CAN2_FS1R bis!        \ CAN2_FSC14	Bit 14	 Width 1
 %1  15 lshift CAN2_FS1R bis!        \ CAN2_FSC15	Bit 15	 Width 1
 %1  16 lshift CAN2_FS1R bis!        \ CAN2_FSC16	Bit 16	 Width 1
 %1  17 lshift CAN2_FS1R bis!        \ CAN2_FSC17	Bit 17	 Width 1
 %1  18 lshift CAN2_FS1R bis!        \ CAN2_FSC18	Bit 18	 Width 1
 %1  19 lshift CAN2_FS1R bis!        \ CAN2_FSC19	Bit 19	 Width 1
 %1  20 lshift CAN2_FS1R bis!        \ CAN2_FSC20	Bit 20	 Width 1
 %1  21 lshift CAN2_FS1R bis!        \ CAN2_FSC21	Bit 21	 Width 1
 %1  22 lshift CAN2_FS1R bis!        \ CAN2_FSC22	Bit 22	 Width 1
 %1  23 lshift CAN2_FS1R bis!        \ CAN2_FSC23	Bit 23	 Width 1
 %1  24 lshift CAN2_FS1R bis!        \ CAN2_FSC24	Bit 24	 Width 1
 %1  25 lshift CAN2_FS1R bis!        \ CAN2_FSC25	Bit 25	 Width 1
 %1  26 lshift CAN2_FS1R bis!        \ CAN2_FSC26	Bit 26	 Width 1
 %1  27 lshift CAN2_FS1R bis!        \ CAN2_FSC27	Bit 27	 Width 1
\ CAN2_FS1R Register BitField Fetch Words  
: CAN2_FSC0@ CAN2_FS1R @ %1  0 lshift and 0 rshift ; 
: CAN2_FSC1@ CAN2_FS1R @ %1  1 lshift and 1 rshift ; 
: CAN2_FSC2@ CAN2_FS1R @ %1  2 lshift and 2 rshift ; 
: CAN2_FSC3@ CAN2_FS1R @ %1  3 lshift and 3 rshift ; 
: CAN2_FSC4@ CAN2_FS1R @ %1  4 lshift and 4 rshift ; 
: CAN2_FSC5@ CAN2_FS1R @ %1  5 lshift and 5 rshift ; 
: CAN2_FSC6@ CAN2_FS1R @ %1  6 lshift and 6 rshift ; 
: CAN2_FSC7@ CAN2_FS1R @ %1  7 lshift and 7 rshift ; 
: CAN2_FSC8@ CAN2_FS1R @ %1  8 lshift and 8 rshift ; 
: CAN2_FSC9@ CAN2_FS1R @ %1  9 lshift and 9 rshift ; 
: CAN2_FSC10@ CAN2_FS1R @ %1  10 lshift and 10 rshift ; 
: CAN2_FSC11@ CAN2_FS1R @ %1  11 lshift and 11 rshift ; 
: CAN2_FSC12@ CAN2_FS1R @ %1  12 lshift and 12 rshift ; 
: CAN2_FSC13@ CAN2_FS1R @ %1  13 lshift and 13 rshift ; 
: CAN2_FSC14@ CAN2_FS1R @ %1  14 lshift and 14 rshift ; 
: CAN2_FSC15@ CAN2_FS1R @ %1  15 lshift and 15 rshift ; 
: CAN2_FSC16@ CAN2_FS1R @ %1  16 lshift and 16 rshift ; 
: CAN2_FSC17@ CAN2_FS1R @ %1  17 lshift and 17 rshift ; 
: CAN2_FSC18@ CAN2_FS1R @ %1  18 lshift and 18 rshift ; 
: CAN2_FSC19@ CAN2_FS1R @ %1  19 lshift and 19 rshift ; 
: CAN2_FSC20@ CAN2_FS1R @ %1  20 lshift and 20 rshift ; 
: CAN2_FSC21@ CAN2_FS1R @ %1  21 lshift and 21 rshift ; 
: CAN2_FSC22@ CAN2_FS1R @ %1  22 lshift and 22 rshift ; 
: CAN2_FSC23@ CAN2_FS1R @ %1  23 lshift and 23 rshift ; 
: CAN2_FSC24@ CAN2_FS1R @ %1  24 lshift and 24 rshift ; 
: CAN2_FSC25@ CAN2_FS1R @ %1  25 lshift and 25 rshift ; 
: CAN2_FSC26@ CAN2_FS1R @ %1  26 lshift and 26 rshift ; 
: CAN2_FSC27@ CAN2_FS1R @ %1  27 lshift and 27 rshift ; 

CAN2_FFA1R (read-write)
$00000000 CONSTANT RESET_CAN2_FFA1R 
 %1  0 lshift CAN2_FFA1R bis!        \ CAN2_FFA0	Bit 0	 Width 1
 %1  1 lshift CAN2_FFA1R bis!        \ CAN2_FFA1	Bit 1	 Width 1
 %1  2 lshift CAN2_FFA1R bis!        \ CAN2_FFA2	Bit 2	 Width 1
 %1  3 lshift CAN2_FFA1R bis!        \ CAN2_FFA3	Bit 3	 Width 1
 %1  4 lshift CAN2_FFA1R bis!        \ CAN2_FFA4	Bit 4	 Width 1
 %1  5 lshift CAN2_FFA1R bis!        \ CAN2_FFA5	Bit 5	 Width 1
 %1  6 lshift CAN2_FFA1R bis!        \ CAN2_FFA6	Bit 6	 Width 1
 %1  7 lshift CAN2_FFA1R bis!        \ CAN2_FFA7	Bit 7	 Width 1
 %1  8 lshift CAN2_FFA1R bis!        \ CAN2_FFA8	Bit 8	 Width 1
 %1  9 lshift CAN2_FFA1R bis!        \ CAN2_FFA9	Bit 9	 Width 1
 %1  10 lshift CAN2_FFA1R bis!        \ CAN2_FFA10	Bit 10	 Width 1
 %1  11 lshift CAN2_FFA1R bis!        \ CAN2_FFA11	Bit 11	 Width 1
 %1  12 lshift CAN2_FFA1R bis!        \ CAN2_FFA12	Bit 12	 Width 1
 %1  13 lshift CAN2_FFA1R bis!        \ CAN2_FFA13	Bit 13	 Width 1
 %1  14 lshift CAN2_FFA1R bis!        \ CAN2_FFA14	Bit 14	 Width 1
 %1  15 lshift CAN2_FFA1R bis!        \ CAN2_FFA15	Bit 15	 Width 1
 %1  16 lshift CAN2_FFA1R bis!        \ CAN2_FFA16	Bit 16	 Width 1
 %1  17 lshift CAN2_FFA1R bis!        \ CAN2_FFA17	Bit 17	 Width 1
 %1  18 lshift CAN2_FFA1R bis!        \ CAN2_FFA18	Bit 18	 Width 1
 %1  19 lshift CAN2_FFA1R bis!        \ CAN2_FFA19	Bit 19	 Width 1
 %1  20 lshift CAN2_FFA1R bis!        \ CAN2_FFA20	Bit 20	 Width 1
 %1  21 lshift CAN2_FFA1R bis!        \ CAN2_FFA21	Bit 21	 Width 1
 %1  22 lshift CAN2_FFA1R bis!        \ CAN2_FFA22	Bit 22	 Width 1
 %1  23 lshift CAN2_FFA1R bis!        \ CAN2_FFA23	Bit 23	 Width 1
 %1  24 lshift CAN2_FFA1R bis!        \ CAN2_FFA24	Bit 24	 Width 1
 %1  25 lshift CAN2_FFA1R bis!        \ CAN2_FFA25	Bit 25	 Width 1
 %1  26 lshift CAN2_FFA1R bis!        \ CAN2_FFA26	Bit 26	 Width 1
 %1  27 lshift CAN2_FFA1R bis!        \ CAN2_FFA27	Bit 27	 Width 1
\ CAN2_FFA1R Register BitField Fetch Words  
: CAN2_FFA0@ CAN2_FFA1R @ %1  0 lshift and 0 rshift ; 
: CAN2_FFA1@ CAN2_FFA1R @ %1  1 lshift and 1 rshift ; 
: CAN2_FFA2@ CAN2_FFA1R @ %1  2 lshift and 2 rshift ; 
: CAN2_FFA3@ CAN2_FFA1R @ %1  3 lshift and 3 rshift ; 
: CAN2_FFA4@ CAN2_FFA1R @ %1  4 lshift and 4 rshift ; 
: CAN2_FFA5@ CAN2_FFA1R @ %1  5 lshift and 5 rshift ; 
: CAN2_FFA6@ CAN2_FFA1R @ %1  6 lshift and 6 rshift ; 
: CAN2_FFA7@ CAN2_FFA1R @ %1  7 lshift and 7 rshift ; 
: CAN2_FFA8@ CAN2_FFA1R @ %1  8 lshift and 8 rshift ; 
: CAN2_FFA9@ CAN2_FFA1R @ %1  9 lshift and 9 rshift ; 
: CAN2_FFA10@ CAN2_FFA1R @ %1  10 lshift and 10 rshift ; 
: CAN2_FFA11@ CAN2_FFA1R @ %1  11 lshift and 11 rshift ; 
: CAN2_FFA12@ CAN2_FFA1R @ %1  12 lshift and 12 rshift ; 
: CAN2_FFA13@ CAN2_FFA1R @ %1  13 lshift and 13 rshift ; 
: CAN2_FFA14@ CAN2_FFA1R @ %1  14 lshift and 14 rshift ; 
: CAN2_FFA15@ CAN2_FFA1R @ %1  15 lshift and 15 rshift ; 
: CAN2_FFA16@ CAN2_FFA1R @ %1  16 lshift and 16 rshift ; 
: CAN2_FFA17@ CAN2_FFA1R @ %1  17 lshift and 17 rshift ; 
: CAN2_FFA18@ CAN2_FFA1R @ %1  18 lshift and 18 rshift ; 
: CAN2_FFA19@ CAN2_FFA1R @ %1  19 lshift and 19 rshift ; 
: CAN2_FFA20@ CAN2_FFA1R @ %1  20 lshift and 20 rshift ; 
: CAN2_FFA21@ CAN2_FFA1R @ %1  21 lshift and 21 rshift ; 
: CAN2_FFA22@ CAN2_FFA1R @ %1  22 lshift and 22 rshift ; 
: CAN2_FFA23@ CAN2_FFA1R @ %1  23 lshift and 23 rshift ; 
: CAN2_FFA24@ CAN2_FFA1R @ %1  24 lshift and 24 rshift ; 
: CAN2_FFA25@ CAN2_FFA1R @ %1  25 lshift and 25 rshift ; 
: CAN2_FFA26@ CAN2_FFA1R @ %1  26 lshift and 26 rshift ; 
: CAN2_FFA27@ CAN2_FFA1R @ %1  27 lshift and 27 rshift ; 

CAN2_FA1R (read-write)
$00000000 CONSTANT RESET_CAN2_FA1R 
 %1  0 lshift CAN2_FA1R bis!        \ CAN2_FACT0	Bit 0	 Width 1
 %1  1 lshift CAN2_FA1R bis!        \ CAN2_FACT1	Bit 1	 Width 1
 %1  2 lshift CAN2_FA1R bis!        \ CAN2_FACT2	Bit 2	 Width 1
 %1  3 lshift CAN2_FA1R bis!        \ CAN2_FACT3	Bit 3	 Width 1
 %1  4 lshift CAN2_FA1R bis!        \ CAN2_FACT4	Bit 4	 Width 1
 %1  5 lshift CAN2_FA1R bis!        \ CAN2_FACT5	Bit 5	 Width 1
 %1  6 lshift CAN2_FA1R bis!        \ CAN2_FACT6	Bit 6	 Width 1
 %1  7 lshift CAN2_FA1R bis!        \ CAN2_FACT7	Bit 7	 Width 1
 %1  8 lshift CAN2_FA1R bis!        \ CAN2_FACT8	Bit 8	 Width 1
 %1  9 lshift CAN2_FA1R bis!        \ CAN2_FACT9	Bit 9	 Width 1
 %1  10 lshift CAN2_FA1R bis!        \ CAN2_FACT10	Bit 10	 Width 1
 %1  11 lshift CAN2_FA1R bis!        \ CAN2_FACT11	Bit 11	 Width 1
 %1  12 lshift CAN2_FA1R bis!        \ CAN2_FACT12	Bit 12	 Width 1
 %1  13 lshift CAN2_FA1R bis!        \ CAN2_FACT13	Bit 13	 Width 1
 %1  14 lshift CAN2_FA1R bis!        \ CAN2_FACT14	Bit 14	 Width 1
 %1  15 lshift CAN2_FA1R bis!        \ CAN2_FACT15	Bit 15	 Width 1
 %1  16 lshift CAN2_FA1R bis!        \ CAN2_FACT16	Bit 16	 Width 1
 %1  17 lshift CAN2_FA1R bis!        \ CAN2_FACT17	Bit 17	 Width 1
 %1  18 lshift CAN2_FA1R bis!        \ CAN2_FACT18	Bit 18	 Width 1
 %1  19 lshift CAN2_FA1R bis!        \ CAN2_FACT19	Bit 19	 Width 1
 %1  20 lshift CAN2_FA1R bis!        \ CAN2_FACT20	Bit 20	 Width 1
 %1  21 lshift CAN2_FA1R bis!        \ CAN2_FACT21	Bit 21	 Width 1
 %1  22 lshift CAN2_FA1R bis!        \ CAN2_FACT22	Bit 22	 Width 1
 %1  23 lshift CAN2_FA1R bis!        \ CAN2_FACT23	Bit 23	 Width 1
 %1  24 lshift CAN2_FA1R bis!        \ CAN2_FACT24	Bit 24	 Width 1
 %1  25 lshift CAN2_FA1R bis!        \ CAN2_FACT25	Bit 25	 Width 1
 %1  26 lshift CAN2_FA1R bis!        \ CAN2_FACT26	Bit 26	 Width 1
 %1  27 lshift CAN2_FA1R bis!        \ CAN2_FACT27	Bit 27	 Width 1
\ CAN2_FA1R Register BitField Fetch Words  
: CAN2_FACT0@ CAN2_FA1R @ %1  0 lshift and 0 rshift ; 
: CAN2_FACT1@ CAN2_FA1R @ %1  1 lshift and 1 rshift ; 
: CAN2_FACT2@ CAN2_FA1R @ %1  2 lshift and 2 rshift ; 
: CAN2_FACT3@ CAN2_FA1R @ %1  3 lshift and 3 rshift ; 
: CAN2_FACT4@ CAN2_FA1R @ %1  4 lshift and 4 rshift ; 
: CAN2_FACT5@ CAN2_FA1R @ %1  5 lshift and 5 rshift ; 
: CAN2_FACT6@ CAN2_FA1R @ %1  6 lshift and 6 rshift ; 
: CAN2_FACT7@ CAN2_FA1R @ %1  7 lshift and 7 rshift ; 
: CAN2_FACT8@ CAN2_FA1R @ %1  8 lshift and 8 rshift ; 
: CAN2_FACT9@ CAN2_FA1R @ %1  9 lshift and 9 rshift ; 
: CAN2_FACT10@ CAN2_FA1R @ %1  10 lshift and 10 rshift ; 
: CAN2_FACT11@ CAN2_FA1R @ %1  11 lshift and 11 rshift ; 
: CAN2_FACT12@ CAN2_FA1R @ %1  12 lshift and 12 rshift ; 
: CAN2_FACT13@ CAN2_FA1R @ %1  13 lshift and 13 rshift ; 
: CAN2_FACT14@ CAN2_FA1R @ %1  14 lshift and 14 rshift ; 
: CAN2_FACT15@ CAN2_FA1R @ %1  15 lshift and 15 rshift ; 
: CAN2_FACT16@ CAN2_FA1R @ %1  16 lshift and 16 rshift ; 
: CAN2_FACT17@ CAN2_FA1R @ %1  17 lshift and 17 rshift ; 
: CAN2_FACT18@ CAN2_FA1R @ %1  18 lshift and 18 rshift ; 
: CAN2_FACT19@ CAN2_FA1R @ %1  19 lshift and 19 rshift ; 
: CAN2_FACT20@ CAN2_FA1R @ %1  20 lshift and 20 rshift ; 
: CAN2_FACT21@ CAN2_FA1R @ %1  21 lshift and 21 rshift ; 
: CAN2_FACT22@ CAN2_FA1R @ %1  22 lshift and 22 rshift ; 
: CAN2_FACT23@ CAN2_FA1R @ %1  23 lshift and 23 rshift ; 
: CAN2_FACT24@ CAN2_FA1R @ %1  24 lshift and 24 rshift ; 
: CAN2_FACT25@ CAN2_FA1R @ %1  25 lshift and 25 rshift ; 
: CAN2_FACT26@ CAN2_FA1R @ %1  26 lshift and 26 rshift ; 
: CAN2_FACT27@ CAN2_FA1R @ %1  27 lshift and 27 rshift ; 

CAN2_F0R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F0R1 
 %1  0 lshift CAN2_F0R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F0R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F0R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F0R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F0R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F0R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F0R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F0R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F0R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F0R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F0R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F0R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F0R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F0R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F0R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F0R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F0R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F0R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F0R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F0R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F0R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F0R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F0R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F0R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F0R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F0R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F0R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F0R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F0R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F0R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F0R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F0R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F0R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F0R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F0R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F0R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F0R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F0R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F0R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F0R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F0R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F0R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F0R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F0R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F0R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F0R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F0R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F0R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F0R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F0R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F0R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F0R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F0R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F0R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F0R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F0R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F0R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F0R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F0R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F0R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F0R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F0R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F0R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F0R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F0R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F0R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F0R2 
 %1  0 lshift CAN2_F0R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F0R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F0R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F0R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F0R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F0R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F0R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F0R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F0R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F0R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F0R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F0R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F0R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F0R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F0R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F0R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F0R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F0R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F0R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F0R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F0R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F0R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F0R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F0R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F0R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F0R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F0R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F0R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F0R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F0R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F0R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F0R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F0R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F0R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F0R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F0R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F0R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F0R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F0R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F0R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F0R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F0R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F0R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F0R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F0R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F0R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F0R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F0R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F0R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F0R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F0R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F0R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F0R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F0R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F0R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F0R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F0R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F0R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F0R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F0R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F0R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F0R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F0R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F0R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F0R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F1R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F1R1 
 %1  0 lshift CAN2_F1R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F1R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F1R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F1R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F1R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F1R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F1R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F1R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F1R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F1R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F1R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F1R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F1R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F1R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F1R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F1R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F1R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F1R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F1R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F1R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F1R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F1R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F1R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F1R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F1R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F1R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F1R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F1R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F1R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F1R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F1R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F1R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F1R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F1R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F1R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F1R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F1R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F1R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F1R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F1R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F1R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F1R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F1R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F1R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F1R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F1R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F1R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F1R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F1R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F1R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F1R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F1R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F1R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F1R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F1R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F1R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F1R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F1R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F1R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F1R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F1R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F1R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F1R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F1R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F1R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F1R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F1R2 
 %1  0 lshift CAN2_F1R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F1R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F1R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F1R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F1R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F1R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F1R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F1R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F1R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F1R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F1R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F1R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F1R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F1R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F1R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F1R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F1R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F1R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F1R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F1R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F1R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F1R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F1R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F1R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F1R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F1R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F1R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F1R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F1R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F1R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F1R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F1R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F1R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F1R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F1R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F1R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F1R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F1R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F1R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F1R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F1R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F1R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F1R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F1R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F1R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F1R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F1R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F1R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F1R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F1R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F1R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F1R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F1R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F1R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F1R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F1R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F1R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F1R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F1R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F1R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F1R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F1R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F1R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F1R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F1R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F2R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F2R1 
 %1  0 lshift CAN2_F2R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F2R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F2R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F2R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F2R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F2R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F2R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F2R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F2R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F2R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F2R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F2R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F2R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F2R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F2R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F2R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F2R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F2R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F2R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F2R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F2R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F2R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F2R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F2R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F2R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F2R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F2R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F2R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F2R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F2R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F2R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F2R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F2R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F2R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F2R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F2R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F2R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F2R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F2R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F2R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F2R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F2R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F2R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F2R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F2R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F2R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F2R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F2R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F2R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F2R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F2R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F2R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F2R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F2R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F2R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F2R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F2R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F2R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F2R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F2R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F2R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F2R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F2R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F2R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F2R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F2R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F2R2 
 %1  0 lshift CAN2_F2R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F2R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F2R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F2R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F2R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F2R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F2R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F2R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F2R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F2R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F2R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F2R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F2R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F2R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F2R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F2R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F2R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F2R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F2R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F2R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F2R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F2R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F2R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F2R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F2R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F2R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F2R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F2R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F2R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F2R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F2R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F2R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F2R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F2R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F2R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F2R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F2R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F2R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F2R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F2R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F2R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F2R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F2R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F2R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F2R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F2R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F2R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F2R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F2R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F2R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F2R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F2R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F2R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F2R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F2R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F2R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F2R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F2R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F2R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F2R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F2R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F2R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F2R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F2R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F2R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F3R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F3R1 
 %1  0 lshift CAN2_F3R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F3R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F3R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F3R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F3R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F3R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F3R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F3R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F3R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F3R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F3R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F3R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F3R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F3R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F3R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F3R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F3R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F3R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F3R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F3R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F3R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F3R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F3R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F3R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F3R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F3R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F3R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F3R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F3R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F3R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F3R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F3R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F3R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F3R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F3R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F3R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F3R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F3R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F3R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F3R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F3R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F3R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F3R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F3R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F3R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F3R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F3R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F3R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F3R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F3R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F3R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F3R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F3R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F3R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F3R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F3R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F3R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F3R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F3R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F3R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F3R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F3R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F3R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F3R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F3R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F3R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F3R2 
 %1  0 lshift CAN2_F3R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F3R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F3R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F3R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F3R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F3R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F3R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F3R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F3R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F3R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F3R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F3R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F3R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F3R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F3R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F3R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F3R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F3R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F3R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F3R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F3R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F3R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F3R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F3R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F3R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F3R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F3R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F3R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F3R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F3R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F3R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F3R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F3R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F3R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F3R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F3R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F3R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F3R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F3R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F3R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F3R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F3R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F3R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F3R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F3R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F3R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F3R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F3R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F3R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F3R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F3R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F3R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F3R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F3R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F3R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F3R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F3R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F3R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F3R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F3R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F3R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F3R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F3R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F3R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F3R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F4R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F4R1 
 %1  0 lshift CAN2_F4R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F4R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F4R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F4R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F4R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F4R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F4R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F4R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F4R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F4R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F4R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F4R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F4R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F4R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F4R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F4R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F4R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F4R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F4R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F4R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F4R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F4R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F4R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F4R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F4R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F4R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F4R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F4R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F4R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F4R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F4R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F4R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F4R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F4R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F4R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F4R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F4R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F4R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F4R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F4R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F4R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F4R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F4R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F4R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F4R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F4R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F4R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F4R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F4R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F4R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F4R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F4R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F4R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F4R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F4R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F4R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F4R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F4R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F4R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F4R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F4R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F4R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F4R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F4R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F4R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F4R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F4R2 
 %1  0 lshift CAN2_F4R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F4R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F4R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F4R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F4R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F4R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F4R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F4R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F4R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F4R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F4R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F4R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F4R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F4R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F4R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F4R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F4R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F4R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F4R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F4R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F4R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F4R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F4R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F4R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F4R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F4R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F4R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F4R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F4R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F4R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F4R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F4R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F4R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F4R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F4R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F4R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F4R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F4R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F4R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F4R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F4R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F4R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F4R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F4R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F4R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F4R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F4R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F4R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F4R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F4R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F4R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F4R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F4R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F4R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F4R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F4R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F4R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F4R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F4R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F4R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F4R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F4R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F4R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F4R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F4R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F5R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F5R1 
 %1  0 lshift CAN2_F5R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F5R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F5R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F5R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F5R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F5R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F5R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F5R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F5R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F5R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F5R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F5R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F5R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F5R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F5R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F5R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F5R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F5R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F5R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F5R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F5R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F5R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F5R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F5R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F5R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F5R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F5R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F5R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F5R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F5R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F5R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F5R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F5R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F5R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F5R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F5R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F5R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F5R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F5R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F5R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F5R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F5R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F5R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F5R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F5R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F5R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F5R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F5R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F5R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F5R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F5R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F5R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F5R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F5R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F5R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F5R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F5R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F5R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F5R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F5R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F5R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F5R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F5R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F5R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F5R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F5R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F5R2 
 %1  0 lshift CAN2_F5R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F5R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F5R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F5R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F5R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F5R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F5R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F5R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F5R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F5R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F5R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F5R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F5R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F5R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F5R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F5R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F5R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F5R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F5R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F5R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F5R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F5R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F5R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F5R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F5R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F5R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F5R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F5R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F5R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F5R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F5R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F5R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F5R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F5R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F5R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F5R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F5R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F5R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F5R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F5R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F5R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F5R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F5R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F5R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F5R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F5R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F5R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F5R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F5R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F5R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F5R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F5R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F5R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F5R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F5R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F5R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F5R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F5R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F5R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F5R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F5R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F5R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F5R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F5R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F5R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F6R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F6R1 
 %1  0 lshift CAN2_F6R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F6R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F6R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F6R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F6R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F6R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F6R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F6R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F6R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F6R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F6R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F6R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F6R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F6R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F6R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F6R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F6R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F6R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F6R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F6R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F6R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F6R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F6R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F6R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F6R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F6R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F6R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F6R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F6R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F6R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F6R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F6R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F6R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F6R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F6R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F6R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F6R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F6R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F6R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F6R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F6R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F6R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F6R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F6R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F6R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F6R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F6R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F6R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F6R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F6R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F6R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F6R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F6R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F6R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F6R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F6R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F6R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F6R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F6R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F6R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F6R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F6R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F6R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F6R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F6R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F6R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F6R2 
 %1  0 lshift CAN2_F6R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F6R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F6R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F6R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F6R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F6R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F6R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F6R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F6R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F6R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F6R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F6R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F6R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F6R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F6R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F6R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F6R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F6R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F6R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F6R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F6R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F6R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F6R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F6R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F6R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F6R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F6R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F6R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F6R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F6R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F6R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F6R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F6R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F6R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F6R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F6R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F6R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F6R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F6R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F6R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F6R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F6R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F6R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F6R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F6R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F6R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F6R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F6R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F6R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F6R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F6R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F6R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F6R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F6R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F6R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F6R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F6R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F6R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F6R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F6R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F6R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F6R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F6R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F6R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F6R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F7R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F7R1 
 %1  0 lshift CAN2_F7R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F7R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F7R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F7R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F7R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F7R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F7R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F7R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F7R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F7R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F7R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F7R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F7R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F7R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F7R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F7R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F7R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F7R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F7R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F7R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F7R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F7R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F7R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F7R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F7R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F7R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F7R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F7R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F7R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F7R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F7R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F7R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F7R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F7R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F7R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F7R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F7R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F7R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F7R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F7R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F7R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F7R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F7R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F7R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F7R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F7R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F7R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F7R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F7R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F7R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F7R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F7R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F7R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F7R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F7R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F7R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F7R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F7R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F7R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F7R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F7R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F7R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F7R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F7R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F7R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F7R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F7R2 
 %1  0 lshift CAN2_F7R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F7R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F7R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F7R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F7R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F7R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F7R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F7R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F7R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F7R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F7R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F7R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F7R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F7R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F7R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F7R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F7R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F7R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F7R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F7R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F7R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F7R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F7R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F7R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F7R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F7R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F7R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F7R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F7R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F7R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F7R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F7R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F7R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F7R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F7R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F7R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F7R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F7R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F7R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F7R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F7R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F7R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F7R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F7R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F7R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F7R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F7R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F7R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F7R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F7R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F7R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F7R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F7R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F7R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F7R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F7R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F7R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F7R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F7R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F7R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F7R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F7R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F7R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F7R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F7R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F8R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F8R1 
 %1  0 lshift CAN2_F8R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F8R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F8R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F8R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F8R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F8R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F8R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F8R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F8R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F8R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F8R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F8R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F8R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F8R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F8R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F8R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F8R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F8R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F8R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F8R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F8R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F8R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F8R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F8R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F8R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F8R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F8R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F8R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F8R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F8R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F8R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F8R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F8R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F8R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F8R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F8R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F8R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F8R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F8R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F8R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F8R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F8R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F8R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F8R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F8R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F8R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F8R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F8R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F8R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F8R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F8R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F8R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F8R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F8R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F8R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F8R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F8R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F8R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F8R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F8R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F8R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F8R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F8R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F8R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F8R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F8R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F8R2 
 %1  0 lshift CAN2_F8R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F8R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F8R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F8R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F8R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F8R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F8R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F8R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F8R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F8R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F8R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F8R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F8R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F8R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F8R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F8R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F8R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F8R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F8R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F8R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F8R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F8R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F8R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F8R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F8R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F8R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F8R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F8R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F8R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F8R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F8R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F8R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F8R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F8R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F8R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F8R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F8R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F8R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F8R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F8R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F8R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F8R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F8R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F8R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F8R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F8R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F8R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F8R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F8R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F8R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F8R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F8R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F8R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F8R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F8R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F8R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F8R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F8R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F8R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F8R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F8R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F8R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F8R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F8R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F8R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F9R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F9R1 
 %1  0 lshift CAN2_F9R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F9R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F9R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F9R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F9R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F9R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F9R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F9R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F9R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F9R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F9R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F9R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F9R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F9R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F9R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F9R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F9R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F9R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F9R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F9R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F9R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F9R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F9R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F9R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F9R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F9R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F9R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F9R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F9R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F9R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F9R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F9R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F9R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F9R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F9R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F9R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F9R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F9R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F9R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F9R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F9R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F9R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F9R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F9R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F9R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F9R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F9R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F9R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F9R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F9R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F9R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F9R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F9R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F9R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F9R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F9R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F9R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F9R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F9R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F9R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F9R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F9R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F9R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F9R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F9R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F9R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F9R2 
 %1  0 lshift CAN2_F9R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F9R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F9R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F9R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F9R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F9R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F9R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F9R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F9R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F9R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F9R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F9R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F9R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F9R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F9R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F9R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F9R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F9R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F9R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F9R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F9R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F9R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F9R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F9R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F9R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F9R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F9R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F9R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F9R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F9R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F9R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F9R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F9R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F9R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F9R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F9R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F9R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F9R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F9R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F9R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F9R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F9R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F9R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F9R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F9R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F9R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F9R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F9R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F9R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F9R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F9R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F9R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F9R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F9R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F9R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F9R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F9R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F9R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F9R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F9R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F9R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F9R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F9R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F9R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F9R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F10R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F10R1 
 %1  0 lshift CAN2_F10R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F10R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F10R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F10R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F10R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F10R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F10R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F10R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F10R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F10R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F10R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F10R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F10R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F10R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F10R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F10R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F10R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F10R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F10R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F10R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F10R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F10R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F10R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F10R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F10R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F10R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F10R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F10R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F10R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F10R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F10R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F10R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F10R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F10R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F10R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F10R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F10R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F10R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F10R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F10R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F10R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F10R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F10R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F10R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F10R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F10R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F10R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F10R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F10R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F10R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F10R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F10R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F10R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F10R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F10R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F10R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F10R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F10R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F10R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F10R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F10R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F10R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F10R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F10R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F10R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F10R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F10R2 
 %1  0 lshift CAN2_F10R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F10R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F10R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F10R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F10R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F10R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F10R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F10R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F10R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F10R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F10R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F10R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F10R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F10R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F10R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F10R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F10R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F10R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F10R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F10R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F10R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F10R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F10R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F10R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F10R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F10R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F10R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F10R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F10R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F10R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F10R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F10R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F10R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F10R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F10R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F10R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F10R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F10R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F10R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F10R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F10R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F10R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F10R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F10R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F10R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F10R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F10R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F10R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F10R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F10R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F10R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F10R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F10R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F10R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F10R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F10R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F10R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F10R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F10R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F10R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F10R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F10R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F10R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F10R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F10R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F11R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F11R1 
 %1  0 lshift CAN2_F11R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F11R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F11R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F11R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F11R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F11R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F11R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F11R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F11R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F11R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F11R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F11R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F11R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F11R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F11R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F11R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F11R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F11R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F11R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F11R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F11R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F11R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F11R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F11R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F11R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F11R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F11R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F11R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F11R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F11R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F11R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F11R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F11R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F11R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F11R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F11R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F11R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F11R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F11R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F11R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F11R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F11R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F11R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F11R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F11R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F11R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F11R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F11R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F11R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F11R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F11R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F11R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F11R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F11R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F11R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F11R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F11R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F11R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F11R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F11R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F11R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F11R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F11R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F11R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F11R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F11R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F11R2 
 %1  0 lshift CAN2_F11R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F11R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F11R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F11R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F11R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F11R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F11R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F11R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F11R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F11R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F11R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F11R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F11R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F11R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F11R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F11R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F11R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F11R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F11R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F11R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F11R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F11R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F11R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F11R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F11R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F11R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F11R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F11R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F11R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F11R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F11R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F11R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F11R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F11R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F11R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F11R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F11R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F11R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F11R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F11R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F11R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F11R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F11R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F11R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F11R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F11R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F11R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F11R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F11R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F11R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F11R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F11R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F11R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F11R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F11R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F11R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F11R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F11R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F11R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F11R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F11R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F11R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F11R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F11R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F11R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F12R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F12R1 
 %1  0 lshift CAN2_F12R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F12R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F12R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F12R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F12R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F12R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F12R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F12R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F12R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F12R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F12R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F12R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F12R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F12R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F12R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F12R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F12R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F12R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F12R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F12R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F12R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F12R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F12R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F12R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F12R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F12R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F12R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F12R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F12R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F12R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F12R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F12R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F12R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F12R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F12R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F12R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F12R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F12R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F12R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F12R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F12R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F12R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F12R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F12R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F12R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F12R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F12R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F12R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F12R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F12R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F12R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F12R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F12R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F12R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F12R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F12R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F12R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F12R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F12R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F12R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F12R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F12R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F12R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F12R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F12R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F12R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F12R2 
 %1  0 lshift CAN2_F12R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F12R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F12R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F12R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F12R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F12R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F12R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F12R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F12R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F12R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F12R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F12R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F12R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F12R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F12R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F12R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F12R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F12R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F12R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F12R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F12R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F12R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F12R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F12R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F12R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F12R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F12R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F12R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F12R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F12R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F12R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F12R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F12R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F12R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F12R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F12R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F12R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F12R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F12R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F12R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F12R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F12R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F12R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F12R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F12R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F12R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F12R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F12R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F12R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F12R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F12R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F12R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F12R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F12R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F12R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F12R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F12R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F12R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F12R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F12R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F12R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F12R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F12R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F12R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F12R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F13R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F13R1 
 %1  0 lshift CAN2_F13R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F13R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F13R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F13R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F13R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F13R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F13R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F13R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F13R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F13R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F13R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F13R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F13R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F13R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F13R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F13R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F13R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F13R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F13R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F13R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F13R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F13R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F13R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F13R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F13R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F13R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F13R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F13R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F13R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F13R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F13R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F13R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F13R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F13R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F13R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F13R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F13R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F13R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F13R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F13R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F13R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F13R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F13R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F13R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F13R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F13R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F13R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F13R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F13R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F13R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F13R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F13R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F13R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F13R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F13R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F13R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F13R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F13R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F13R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F13R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F13R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F13R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F13R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F13R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F13R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F13R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F13R2 
 %1  0 lshift CAN2_F13R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F13R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F13R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F13R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F13R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F13R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F13R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F13R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F13R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F13R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F13R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F13R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F13R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F13R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F13R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F13R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F13R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F13R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F13R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F13R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F13R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F13R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F13R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F13R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F13R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F13R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F13R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F13R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F13R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F13R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F13R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F13R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F13R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F13R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F13R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F13R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F13R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F13R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F13R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F13R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F13R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F13R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F13R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F13R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F13R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F13R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F13R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F13R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F13R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F13R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F13R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F13R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F13R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F13R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F13R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F13R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F13R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F13R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F13R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F13R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F13R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F13R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F13R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F13R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F13R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F14R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F14R1 
 %1  0 lshift CAN2_F14R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F14R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F14R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F14R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F14R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F14R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F14R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F14R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F14R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F14R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F14R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F14R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F14R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F14R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F14R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F14R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F14R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F14R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F14R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F14R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F14R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F14R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F14R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F14R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F14R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F14R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F14R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F14R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F14R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F14R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F14R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F14R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F14R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F14R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F14R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F14R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F14R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F14R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F14R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F14R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F14R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F14R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F14R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F14R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F14R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F14R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F14R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F14R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F14R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F14R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F14R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F14R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F14R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F14R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F14R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F14R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F14R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F14R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F14R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F14R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F14R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F14R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F14R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F14R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F14R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F14R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F14R2 
 %1  0 lshift CAN2_F14R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F14R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F14R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F14R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F14R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F14R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F14R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F14R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F14R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F14R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F14R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F14R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F14R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F14R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F14R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F14R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F14R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F14R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F14R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F14R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F14R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F14R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F14R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F14R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F14R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F14R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F14R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F14R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F14R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F14R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F14R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F14R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F14R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F14R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F14R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F14R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F14R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F14R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F14R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F14R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F14R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F14R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F14R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F14R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F14R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F14R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F14R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F14R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F14R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F14R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F14R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F14R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F14R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F14R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F14R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F14R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F14R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F14R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F14R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F14R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F14R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F14R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F14R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F14R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F14R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F15R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F15R1 
 %1  0 lshift CAN2_F15R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F15R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F15R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F15R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F15R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F15R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F15R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F15R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F15R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F15R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F15R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F15R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F15R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F15R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F15R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F15R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F15R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F15R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F15R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F15R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F15R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F15R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F15R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F15R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F15R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F15R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F15R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F15R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F15R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F15R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F15R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F15R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F15R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F15R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F15R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F15R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F15R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F15R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F15R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F15R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F15R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F15R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F15R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F15R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F15R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F15R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F15R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F15R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F15R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F15R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F15R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F15R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F15R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F15R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F15R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F15R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F15R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F15R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F15R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F15R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F15R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F15R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F15R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F15R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F15R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F15R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F15R2 
 %1  0 lshift CAN2_F15R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F15R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F15R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F15R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F15R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F15R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F15R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F15R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F15R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F15R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F15R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F15R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F15R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F15R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F15R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F15R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F15R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F15R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F15R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F15R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F15R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F15R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F15R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F15R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F15R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F15R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F15R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F15R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F15R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F15R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F15R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F15R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F15R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F15R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F15R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F15R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F15R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F15R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F15R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F15R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F15R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F15R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F15R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F15R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F15R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F15R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F15R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F15R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F15R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F15R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F15R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F15R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F15R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F15R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F15R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F15R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F15R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F15R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F15R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F15R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F15R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F15R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F15R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F15R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F15R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F16R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F16R1 
 %1  0 lshift CAN2_F16R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F16R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F16R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F16R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F16R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F16R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F16R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F16R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F16R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F16R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F16R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F16R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F16R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F16R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F16R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F16R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F16R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F16R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F16R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F16R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F16R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F16R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F16R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F16R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F16R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F16R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F16R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F16R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F16R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F16R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F16R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F16R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F16R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F16R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F16R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F16R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F16R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F16R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F16R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F16R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F16R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F16R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F16R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F16R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F16R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F16R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F16R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F16R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F16R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F16R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F16R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F16R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F16R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F16R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F16R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F16R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F16R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F16R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F16R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F16R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F16R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F16R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F16R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F16R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F16R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F16R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F16R2 
 %1  0 lshift CAN2_F16R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F16R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F16R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F16R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F16R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F16R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F16R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F16R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F16R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F16R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F16R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F16R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F16R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F16R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F16R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F16R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F16R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F16R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F16R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F16R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F16R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F16R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F16R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F16R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F16R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F16R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F16R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F16R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F16R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F16R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F16R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F16R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F16R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F16R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F16R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F16R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F16R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F16R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F16R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F16R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F16R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F16R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F16R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F16R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F16R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F16R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F16R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F16R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F16R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F16R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F16R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F16R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F16R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F16R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F16R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F16R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F16R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F16R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F16R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F16R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F16R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F16R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F16R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F16R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F16R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F17R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F17R1 
 %1  0 lshift CAN2_F17R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F17R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F17R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F17R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F17R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F17R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F17R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F17R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F17R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F17R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F17R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F17R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F17R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F17R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F17R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F17R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F17R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F17R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F17R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F17R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F17R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F17R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F17R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F17R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F17R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F17R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F17R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F17R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F17R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F17R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F17R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F17R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F17R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F17R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F17R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F17R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F17R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F17R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F17R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F17R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F17R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F17R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F17R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F17R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F17R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F17R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F17R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F17R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F17R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F17R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F17R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F17R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F17R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F17R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F17R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F17R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F17R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F17R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F17R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F17R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F17R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F17R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F17R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F17R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F17R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F17R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F17R2 
 %1  0 lshift CAN2_F17R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F17R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F17R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F17R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F17R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F17R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F17R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F17R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F17R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F17R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F17R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F17R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F17R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F17R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F17R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F17R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F17R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F17R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F17R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F17R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F17R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F17R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F17R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F17R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F17R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F17R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F17R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F17R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F17R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F17R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F17R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F17R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F17R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F17R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F17R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F17R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F17R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F17R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F17R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F17R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F17R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F17R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F17R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F17R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F17R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F17R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F17R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F17R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F17R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F17R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F17R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F17R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F17R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F17R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F17R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F17R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F17R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F17R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F17R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F17R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F17R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F17R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F17R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F17R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F17R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F18R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F18R1 
 %1  0 lshift CAN2_F18R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F18R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F18R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F18R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F18R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F18R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F18R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F18R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F18R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F18R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F18R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F18R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F18R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F18R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F18R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F18R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F18R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F18R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F18R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F18R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F18R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F18R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F18R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F18R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F18R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F18R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F18R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F18R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F18R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F18R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F18R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F18R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F18R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F18R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F18R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F18R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F18R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F18R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F18R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F18R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F18R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F18R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F18R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F18R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F18R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F18R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F18R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F18R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F18R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F18R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F18R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F18R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F18R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F18R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F18R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F18R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F18R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F18R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F18R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F18R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F18R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F18R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F18R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F18R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F18R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F18R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F18R2 
 %1  0 lshift CAN2_F18R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F18R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F18R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F18R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F18R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F18R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F18R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F18R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F18R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F18R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F18R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F18R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F18R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F18R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F18R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F18R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F18R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F18R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F18R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F18R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F18R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F18R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F18R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F18R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F18R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F18R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F18R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F18R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F18R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F18R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F18R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F18R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F18R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F18R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F18R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F18R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F18R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F18R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F18R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F18R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F18R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F18R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F18R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F18R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F18R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F18R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F18R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F18R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F18R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F18R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F18R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F18R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F18R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F18R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F18R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F18R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F18R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F18R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F18R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F18R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F18R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F18R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F18R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F18R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F18R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F19R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F19R1 
 %1  0 lshift CAN2_F19R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F19R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F19R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F19R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F19R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F19R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F19R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F19R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F19R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F19R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F19R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F19R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F19R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F19R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F19R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F19R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F19R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F19R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F19R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F19R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F19R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F19R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F19R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F19R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F19R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F19R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F19R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F19R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F19R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F19R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F19R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F19R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F19R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F19R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F19R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F19R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F19R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F19R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F19R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F19R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F19R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F19R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F19R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F19R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F19R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F19R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F19R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F19R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F19R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F19R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F19R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F19R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F19R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F19R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F19R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F19R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F19R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F19R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F19R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F19R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F19R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F19R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F19R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F19R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F19R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F19R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F19R2 
 %1  0 lshift CAN2_F19R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F19R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F19R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F19R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F19R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F19R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F19R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F19R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F19R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F19R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F19R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F19R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F19R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F19R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F19R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F19R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F19R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F19R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F19R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F19R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F19R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F19R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F19R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F19R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F19R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F19R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F19R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F19R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F19R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F19R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F19R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F19R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F19R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F19R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F19R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F19R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F19R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F19R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F19R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F19R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F19R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F19R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F19R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F19R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F19R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F19R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F19R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F19R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F19R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F19R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F19R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F19R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F19R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F19R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F19R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F19R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F19R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F19R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F19R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F19R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F19R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F19R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F19R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F19R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F19R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F20R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F20R1 
 %1  0 lshift CAN2_F20R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F20R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F20R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F20R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F20R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F20R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F20R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F20R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F20R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F20R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F20R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F20R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F20R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F20R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F20R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F20R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F20R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F20R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F20R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F20R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F20R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F20R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F20R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F20R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F20R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F20R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F20R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F20R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F20R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F20R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F20R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F20R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F20R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F20R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F20R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F20R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F20R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F20R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F20R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F20R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F20R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F20R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F20R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F20R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F20R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F20R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F20R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F20R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F20R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F20R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F20R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F20R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F20R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F20R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F20R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F20R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F20R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F20R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F20R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F20R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F20R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F20R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F20R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F20R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F20R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F20R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F20R2 
 %1  0 lshift CAN2_F20R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F20R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F20R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F20R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F20R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F20R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F20R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F20R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F20R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F20R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F20R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F20R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F20R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F20R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F20R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F20R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F20R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F20R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F20R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F20R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F20R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F20R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F20R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F20R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F20R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F20R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F20R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F20R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F20R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F20R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F20R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F20R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F20R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F20R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F20R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F20R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F20R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F20R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F20R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F20R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F20R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F20R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F20R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F20R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F20R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F20R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F20R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F20R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F20R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F20R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F20R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F20R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F20R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F20R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F20R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F20R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F20R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F20R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F20R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F20R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F20R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F20R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F20R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F20R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F20R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F21R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F21R1 
 %1  0 lshift CAN2_F21R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F21R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F21R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F21R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F21R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F21R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F21R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F21R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F21R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F21R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F21R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F21R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F21R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F21R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F21R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F21R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F21R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F21R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F21R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F21R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F21R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F21R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F21R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F21R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F21R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F21R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F21R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F21R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F21R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F21R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F21R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F21R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F21R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F21R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F21R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F21R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F21R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F21R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F21R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F21R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F21R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F21R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F21R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F21R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F21R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F21R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F21R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F21R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F21R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F21R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F21R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F21R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F21R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F21R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F21R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F21R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F21R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F21R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F21R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F21R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F21R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F21R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F21R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F21R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F21R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F21R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F21R2 
 %1  0 lshift CAN2_F21R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F21R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F21R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F21R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F21R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F21R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F21R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F21R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F21R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F21R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F21R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F21R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F21R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F21R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F21R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F21R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F21R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F21R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F21R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F21R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F21R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F21R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F21R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F21R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F21R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F21R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F21R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F21R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F21R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F21R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F21R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F21R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F21R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F21R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F21R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F21R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F21R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F21R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F21R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F21R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F21R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F21R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F21R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F21R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F21R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F21R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F21R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F21R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F21R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F21R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F21R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F21R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F21R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F21R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F21R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F21R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F21R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F21R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F21R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F21R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F21R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F21R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F21R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F21R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F21R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F22R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F22R1 
 %1  0 lshift CAN2_F22R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F22R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F22R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F22R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F22R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F22R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F22R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F22R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F22R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F22R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F22R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F22R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F22R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F22R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F22R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F22R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F22R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F22R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F22R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F22R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F22R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F22R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F22R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F22R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F22R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F22R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F22R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F22R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F22R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F22R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F22R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F22R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F22R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F22R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F22R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F22R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F22R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F22R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F22R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F22R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F22R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F22R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F22R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F22R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F22R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F22R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F22R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F22R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F22R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F22R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F22R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F22R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F22R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F22R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F22R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F22R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F22R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F22R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F22R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F22R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F22R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F22R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F22R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F22R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F22R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F22R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F22R2 
 %1  0 lshift CAN2_F22R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F22R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F22R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F22R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F22R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F22R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F22R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F22R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F22R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F22R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F22R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F22R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F22R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F22R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F22R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F22R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F22R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F22R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F22R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F22R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F22R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F22R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F22R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F22R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F22R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F22R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F22R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F22R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F22R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F22R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F22R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F22R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F22R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F22R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F22R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F22R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F22R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F22R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F22R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F22R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F22R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F22R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F22R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F22R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F22R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F22R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F22R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F22R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F22R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F22R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F22R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F22R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F22R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F22R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F22R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F22R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F22R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F22R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F22R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F22R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F22R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F22R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F22R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F22R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F22R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F23R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F23R1 
 %1  0 lshift CAN2_F23R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F23R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F23R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F23R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F23R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F23R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F23R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F23R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F23R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F23R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F23R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F23R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F23R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F23R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F23R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F23R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F23R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F23R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F23R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F23R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F23R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F23R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F23R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F23R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F23R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F23R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F23R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F23R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F23R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F23R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F23R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F23R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F23R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F23R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F23R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F23R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F23R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F23R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F23R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F23R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F23R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F23R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F23R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F23R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F23R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F23R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F23R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F23R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F23R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F23R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F23R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F23R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F23R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F23R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F23R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F23R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F23R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F23R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F23R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F23R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F23R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F23R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F23R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F23R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F23R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F23R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F23R2 
 %1  0 lshift CAN2_F23R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F23R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F23R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F23R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F23R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F23R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F23R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F23R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F23R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F23R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F23R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F23R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F23R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F23R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F23R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F23R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F23R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F23R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F23R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F23R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F23R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F23R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F23R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F23R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F23R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F23R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F23R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F23R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F23R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F23R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F23R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F23R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F23R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F23R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F23R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F23R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F23R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F23R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F23R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F23R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F23R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F23R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F23R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F23R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F23R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F23R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F23R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F23R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F23R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F23R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F23R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F23R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F23R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F23R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F23R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F23R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F23R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F23R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F23R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F23R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F23R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F23R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F23R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F23R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F23R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F24R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F24R1 
 %1  0 lshift CAN2_F24R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F24R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F24R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F24R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F24R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F24R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F24R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F24R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F24R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F24R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F24R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F24R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F24R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F24R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F24R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F24R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F24R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F24R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F24R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F24R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F24R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F24R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F24R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F24R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F24R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F24R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F24R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F24R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F24R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F24R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F24R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F24R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F24R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F24R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F24R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F24R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F24R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F24R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F24R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F24R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F24R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F24R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F24R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F24R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F24R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F24R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F24R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F24R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F24R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F24R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F24R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F24R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F24R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F24R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F24R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F24R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F24R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F24R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F24R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F24R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F24R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F24R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F24R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F24R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F24R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F24R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F24R2 
 %1  0 lshift CAN2_F24R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F24R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F24R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F24R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F24R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F24R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F24R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F24R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F24R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F24R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F24R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F24R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F24R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F24R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F24R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F24R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F24R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F24R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F24R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F24R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F24R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F24R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F24R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F24R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F24R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F24R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F24R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F24R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F24R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F24R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F24R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F24R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F24R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F24R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F24R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F24R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F24R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F24R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F24R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F24R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F24R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F24R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F24R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F24R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F24R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F24R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F24R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F24R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F24R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F24R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F24R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F24R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F24R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F24R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F24R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F24R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F24R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F24R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F24R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F24R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F24R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F24R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F24R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F24R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F24R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F25R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F25R1 
 %1  0 lshift CAN2_F25R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F25R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F25R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F25R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F25R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F25R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F25R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F25R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F25R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F25R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F25R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F25R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F25R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F25R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F25R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F25R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F25R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F25R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F25R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F25R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F25R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F25R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F25R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F25R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F25R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F25R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F25R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F25R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F25R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F25R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F25R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F25R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F25R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F25R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F25R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F25R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F25R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F25R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F25R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F25R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F25R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F25R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F25R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F25R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F25R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F25R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F25R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F25R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F25R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F25R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F25R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F25R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F25R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F25R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F25R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F25R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F25R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F25R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F25R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F25R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F25R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F25R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F25R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F25R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F25R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F25R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F25R2 
 %1  0 lshift CAN2_F25R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F25R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F25R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F25R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F25R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F25R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F25R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F25R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F25R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F25R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F25R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F25R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F25R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F25R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F25R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F25R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F25R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F25R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F25R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F25R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F25R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F25R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F25R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F25R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F25R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F25R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F25R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F25R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F25R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F25R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F25R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F25R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F25R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F25R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F25R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F25R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F25R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F25R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F25R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F25R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F25R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F25R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F25R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F25R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F25R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F25R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F25R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F25R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F25R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F25R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F25R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F25R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F25R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F25R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F25R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F25R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F25R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F25R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F25R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F25R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F25R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F25R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F25R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F25R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F25R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F26R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F26R1 
 %1  0 lshift CAN2_F26R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F26R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F26R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F26R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F26R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F26R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F26R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F26R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F26R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F26R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F26R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F26R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F26R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F26R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F26R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F26R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F26R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F26R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F26R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F26R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F26R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F26R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F26R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F26R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F26R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F26R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F26R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F26R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F26R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F26R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F26R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F26R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F26R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F26R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F26R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F26R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F26R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F26R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F26R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F26R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F26R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F26R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F26R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F26R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F26R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F26R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F26R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F26R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F26R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F26R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F26R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F26R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F26R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F26R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F26R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F26R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F26R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F26R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F26R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F26R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F26R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F26R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F26R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F26R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F26R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F26R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F26R2 
 %1  0 lshift CAN2_F26R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F26R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F26R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F26R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F26R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F26R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F26R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F26R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F26R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F26R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F26R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F26R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F26R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F26R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F26R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F26R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F26R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F26R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F26R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F26R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F26R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F26R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F26R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F26R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F26R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F26R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F26R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F26R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F26R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F26R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F26R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F26R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F26R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F26R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F26R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F26R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F26R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F26R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F26R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F26R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F26R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F26R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F26R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F26R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F26R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F26R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F26R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F26R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F26R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F26R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F26R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F26R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F26R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F26R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F26R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F26R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F26R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F26R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F26R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F26R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F26R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F26R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F26R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F26R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F26R2 @ %1  31 lshift and 31 rshift ; 

CAN2_F27R1 (read-write)
$00000000 CONSTANT RESET_CAN2_F27R1 
 %1  0 lshift CAN2_F27R1 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F27R1 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F27R1 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F27R1 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F27R1 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F27R1 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F27R1 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F27R1 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F27R1 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F27R1 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F27R1 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F27R1 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F27R1 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F27R1 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F27R1 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F27R1 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F27R1 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F27R1 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F27R1 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F27R1 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F27R1 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F27R1 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F27R1 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F27R1 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F27R1 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F27R1 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F27R1 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F27R1 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F27R1 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F27R1 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F27R1 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F27R1 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F27R1 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F27R1 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F27R1 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F27R1 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F27R1 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F27R1 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F27R1 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F27R1 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F27R1 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F27R1 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F27R1 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F27R1 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F27R1 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F27R1 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F27R1 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F27R1 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F27R1 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F27R1 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F27R1 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F27R1 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F27R1 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F27R1 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F27R1 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F27R1 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F27R1 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F27R1 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F27R1 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F27R1 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F27R1 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F27R1 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F27R1 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F27R1 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F27R1 @ %1  31 lshift and 31 rshift ; 

CAN2_F27R2 (read-write)
$00000000 CONSTANT RESET_CAN2_F27R2 
 %1  0 lshift CAN2_F27R2 bis!        \ CAN2_FB0	Bit 0	 Width 1
 %1  1 lshift CAN2_F27R2 bis!        \ CAN2_FB1	Bit 1	 Width 1
 %1  2 lshift CAN2_F27R2 bis!        \ CAN2_FB2	Bit 2	 Width 1
 %1  3 lshift CAN2_F27R2 bis!        \ CAN2_FB3	Bit 3	 Width 1
 %1  4 lshift CAN2_F27R2 bis!        \ CAN2_FB4	Bit 4	 Width 1
 %1  5 lshift CAN2_F27R2 bis!        \ CAN2_FB5	Bit 5	 Width 1
 %1  6 lshift CAN2_F27R2 bis!        \ CAN2_FB6	Bit 6	 Width 1
 %1  7 lshift CAN2_F27R2 bis!        \ CAN2_FB7	Bit 7	 Width 1
 %1  8 lshift CAN2_F27R2 bis!        \ CAN2_FB8	Bit 8	 Width 1
 %1  9 lshift CAN2_F27R2 bis!        \ CAN2_FB9	Bit 9	 Width 1
 %1  10 lshift CAN2_F27R2 bis!        \ CAN2_FB10	Bit 10	 Width 1
 %1  11 lshift CAN2_F27R2 bis!        \ CAN2_FB11	Bit 11	 Width 1
 %1  12 lshift CAN2_F27R2 bis!        \ CAN2_FB12	Bit 12	 Width 1
 %1  13 lshift CAN2_F27R2 bis!        \ CAN2_FB13	Bit 13	 Width 1
 %1  14 lshift CAN2_F27R2 bis!        \ CAN2_FB14	Bit 14	 Width 1
 %1  15 lshift CAN2_F27R2 bis!        \ CAN2_FB15	Bit 15	 Width 1
 %1  16 lshift CAN2_F27R2 bis!        \ CAN2_FB16	Bit 16	 Width 1
 %1  17 lshift CAN2_F27R2 bis!        \ CAN2_FB17	Bit 17	 Width 1
 %1  18 lshift CAN2_F27R2 bis!        \ CAN2_FB18	Bit 18	 Width 1
 %1  19 lshift CAN2_F27R2 bis!        \ CAN2_FB19	Bit 19	 Width 1
 %1  20 lshift CAN2_F27R2 bis!        \ CAN2_FB20	Bit 20	 Width 1
 %1  21 lshift CAN2_F27R2 bis!        \ CAN2_FB21	Bit 21	 Width 1
 %1  22 lshift CAN2_F27R2 bis!        \ CAN2_FB22	Bit 22	 Width 1
 %1  23 lshift CAN2_F27R2 bis!        \ CAN2_FB23	Bit 23	 Width 1
 %1  24 lshift CAN2_F27R2 bis!        \ CAN2_FB24	Bit 24	 Width 1
 %1  25 lshift CAN2_F27R2 bis!        \ CAN2_FB25	Bit 25	 Width 1
 %1  26 lshift CAN2_F27R2 bis!        \ CAN2_FB26	Bit 26	 Width 1
 %1  27 lshift CAN2_F27R2 bis!        \ CAN2_FB27	Bit 27	 Width 1
 %1  28 lshift CAN2_F27R2 bis!        \ CAN2_FB28	Bit 28	 Width 1
 %1  29 lshift CAN2_F27R2 bis!        \ CAN2_FB29	Bit 29	 Width 1
 %1  30 lshift CAN2_F27R2 bis!        \ CAN2_FB30	Bit 30	 Width 1
 %1  31 lshift CAN2_F27R2 bis!        \ CAN2_FB31	Bit 31	 Width 1
\ CAN2_F27R2 Register BitField Fetch Words  
: CAN2_FB0@ CAN2_F27R2 @ %1  0 lshift and 0 rshift ; 
: CAN2_FB1@ CAN2_F27R2 @ %1  1 lshift and 1 rshift ; 
: CAN2_FB2@ CAN2_F27R2 @ %1  2 lshift and 2 rshift ; 
: CAN2_FB3@ CAN2_F27R2 @ %1  3 lshift and 3 rshift ; 
: CAN2_FB4@ CAN2_F27R2 @ %1  4 lshift and 4 rshift ; 
: CAN2_FB5@ CAN2_F27R2 @ %1  5 lshift and 5 rshift ; 
: CAN2_FB6@ CAN2_F27R2 @ %1  6 lshift and 6 rshift ; 
: CAN2_FB7@ CAN2_F27R2 @ %1  7 lshift and 7 rshift ; 
: CAN2_FB8@ CAN2_F27R2 @ %1  8 lshift and 8 rshift ; 
: CAN2_FB9@ CAN2_F27R2 @ %1  9 lshift and 9 rshift ; 
: CAN2_FB10@ CAN2_F27R2 @ %1  10 lshift and 10 rshift ; 
: CAN2_FB11@ CAN2_F27R2 @ %1  11 lshift and 11 rshift ; 
: CAN2_FB12@ CAN2_F27R2 @ %1  12 lshift and 12 rshift ; 
: CAN2_FB13@ CAN2_F27R2 @ %1  13 lshift and 13 rshift ; 
: CAN2_FB14@ CAN2_F27R2 @ %1  14 lshift and 14 rshift ; 
: CAN2_FB15@ CAN2_F27R2 @ %1  15 lshift and 15 rshift ; 
: CAN2_FB16@ CAN2_F27R2 @ %1  16 lshift and 16 rshift ; 
: CAN2_FB17@ CAN2_F27R2 @ %1  17 lshift and 17 rshift ; 
: CAN2_FB18@ CAN2_F27R2 @ %1  18 lshift and 18 rshift ; 
: CAN2_FB19@ CAN2_F27R2 @ %1  19 lshift and 19 rshift ; 
: CAN2_FB20@ CAN2_F27R2 @ %1  20 lshift and 20 rshift ; 
: CAN2_FB21@ CAN2_F27R2 @ %1  21 lshift and 21 rshift ; 
: CAN2_FB22@ CAN2_F27R2 @ %1  22 lshift and 22 rshift ; 
: CAN2_FB23@ CAN2_F27R2 @ %1  23 lshift and 23 rshift ; 
: CAN2_FB24@ CAN2_F27R2 @ %1  24 lshift and 24 rshift ; 
: CAN2_FB25@ CAN2_F27R2 @ %1  25 lshift and 25 rshift ; 
: CAN2_FB26@ CAN2_F27R2 @ %1  26 lshift and 26 rshift ; 
: CAN2_FB27@ CAN2_F27R2 @ %1  27 lshift and 27 rshift ; 
: CAN2_FB28@ CAN2_F27R2 @ %1  28 lshift and 28 rshift ; 
: CAN2_FB29@ CAN2_F27R2 @ %1  29 lshift and 29 rshift ; 
: CAN2_FB30@ CAN2_F27R2 @ %1  30 lshift and 30 rshift ; 
: CAN2_FB31@ CAN2_F27R2 @ %1  31 lshift and 31 rshift ; 

                    
################################### NVIC ###################################
NVIC_ICTR (read-only)
$00000000 CONSTANT RESET_NVIC_ICTR 
 %xxxx  0 lshift NVIC_ICTR bis!        \ NVIC_INTLINESNUM	Bit 0	 Width 4
\ NVIC_ICTR Register BitField Fetch Words  
: NVIC_INTLINESNUM@ NVIC_ICTR @ %1111  0 lshift and 0 rshift ; 

NVIC_STIR (write-only)
$00000000 CONSTANT RESET_NVIC_STIR 
 %xxxxxxxxx  0 lshift NVIC_STIR bis!        \ NVIC_INTID	Bit 0	 Width 9
\ NVIC_STIR Register BitField Fetch Words  
: NVIC_INTID@ NVIC_STIR @ %111111111  0 lshift and 0 rshift ; 

NVIC_ISER0 (read-write)
$00000000 CONSTANT RESET_NVIC_ISER0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ISER0 bis!        \ NVIC_SETENA	Bit 0	 Width 32
\ NVIC_ISER0 Register BitField Fetch Words  
: NVIC_SETENA@ NVIC_ISER0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ISER1 (read-write)
$00000000 CONSTANT RESET_NVIC_ISER1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ISER1 bis!        \ NVIC_SETENA	Bit 0	 Width 32
\ NVIC_ISER1 Register BitField Fetch Words  
: NVIC_SETENA@ NVIC_ISER1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ISER2 (read-write)
$00000000 CONSTANT RESET_NVIC_ISER2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ISER2 bis!        \ NVIC_SETENA	Bit 0	 Width 32
\ NVIC_ISER2 Register BitField Fetch Words  
: NVIC_SETENA@ NVIC_ISER2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ICER0 (read-write)
$00000000 CONSTANT RESET_NVIC_ICER0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ICER0 bis!        \ NVIC_CLRENA	Bit 0	 Width 32
\ NVIC_ICER0 Register BitField Fetch Words  
: NVIC_CLRENA@ NVIC_ICER0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ICER1 (read-write)
$00000000 CONSTANT RESET_NVIC_ICER1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ICER1 bis!        \ NVIC_CLRENA	Bit 0	 Width 32
\ NVIC_ICER1 Register BitField Fetch Words  
: NVIC_CLRENA@ NVIC_ICER1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ICER2 (read-write)
$00000000 CONSTANT RESET_NVIC_ICER2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ICER2 bis!        \ NVIC_CLRENA	Bit 0	 Width 32
\ NVIC_ICER2 Register BitField Fetch Words  
: NVIC_CLRENA@ NVIC_ICER2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ISPR0 (read-write)
$00000000 CONSTANT RESET_NVIC_ISPR0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ISPR0 bis!        \ NVIC_SETPEND	Bit 0	 Width 32
\ NVIC_ISPR0 Register BitField Fetch Words  
: NVIC_SETPEND@ NVIC_ISPR0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ISPR1 (read-write)
$00000000 CONSTANT RESET_NVIC_ISPR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ISPR1 bis!        \ NVIC_SETPEND	Bit 0	 Width 32
\ NVIC_ISPR1 Register BitField Fetch Words  
: NVIC_SETPEND@ NVIC_ISPR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ISPR2 (read-write)
$00000000 CONSTANT RESET_NVIC_ISPR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ISPR2 bis!        \ NVIC_SETPEND	Bit 0	 Width 32
\ NVIC_ISPR2 Register BitField Fetch Words  
: NVIC_SETPEND@ NVIC_ISPR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ICPR0 (read-write)
$00000000 CONSTANT RESET_NVIC_ICPR0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ICPR0 bis!        \ NVIC_CLRPEND	Bit 0	 Width 32
\ NVIC_ICPR0 Register BitField Fetch Words  
: NVIC_CLRPEND@ NVIC_ICPR0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ICPR1 (read-write)
$00000000 CONSTANT RESET_NVIC_ICPR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ICPR1 bis!        \ NVIC_CLRPEND	Bit 0	 Width 32
\ NVIC_ICPR1 Register BitField Fetch Words  
: NVIC_CLRPEND@ NVIC_ICPR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_ICPR2 (read-write)
$00000000 CONSTANT RESET_NVIC_ICPR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_ICPR2 bis!        \ NVIC_CLRPEND	Bit 0	 Width 32
\ NVIC_ICPR2 Register BitField Fetch Words  
: NVIC_CLRPEND@ NVIC_ICPR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_IABR0 (read-only)
$00000000 CONSTANT RESET_NVIC_IABR0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_IABR0 bis!        \ NVIC_ACTIVE	Bit 0	 Width 32
\ NVIC_IABR0 Register BitField Fetch Words  
: NVIC_ACTIVE@ NVIC_IABR0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_IABR1 (read-only)
$00000000 CONSTANT RESET_NVIC_IABR1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_IABR1 bis!        \ NVIC_ACTIVE	Bit 0	 Width 32
\ NVIC_IABR1 Register BitField Fetch Words  
: NVIC_ACTIVE@ NVIC_IABR1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_IABR2 (read-only)
$00000000 CONSTANT RESET_NVIC_IABR2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift NVIC_IABR2 bis!        \ NVIC_ACTIVE	Bit 0	 Width 32
\ NVIC_IABR2 Register BitField Fetch Words  
: NVIC_ACTIVE@ NVIC_IABR2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

NVIC_IPR0 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR0 
 %xxxxxxxx  0 lshift NVIC_IPR0 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR0 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR0 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR0 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR0 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR0 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR0 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR0 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR0 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR1 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR1 
 %xxxxxxxx  0 lshift NVIC_IPR1 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR1 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR1 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR1 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR1 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR1 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR1 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR1 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR1 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR2 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR2 
 %xxxxxxxx  0 lshift NVIC_IPR2 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR2 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR2 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR2 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR2 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR2 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR2 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR2 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR2 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR3 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR3 
 %xxxxxxxx  0 lshift NVIC_IPR3 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR3 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR3 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR3 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR3 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR3 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR3 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR3 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR3 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR4 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR4 
 %xxxxxxxx  0 lshift NVIC_IPR4 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR4 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR4 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR4 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR4 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR4 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR4 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR4 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR4 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR5 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR5 
 %xxxxxxxx  0 lshift NVIC_IPR5 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR5 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR5 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR5 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR5 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR5 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR5 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR5 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR5 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR6 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR6 
 %xxxxxxxx  0 lshift NVIC_IPR6 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR6 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR6 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR6 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR6 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR6 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR6 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR6 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR6 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR7 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR7 
 %xxxxxxxx  0 lshift NVIC_IPR7 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR7 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR7 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR7 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR7 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR7 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR7 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR7 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR7 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR8 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR8 
 %xxxxxxxx  0 lshift NVIC_IPR8 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR8 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR8 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR8 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR8 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR8 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR8 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR8 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR8 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR9 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR9 
 %xxxxxxxx  0 lshift NVIC_IPR9 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR9 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR9 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR9 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR9 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR9 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR9 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR9 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR9 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR10 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR10 
 %xxxxxxxx  0 lshift NVIC_IPR10 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR10 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR10 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR10 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR10 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR10 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR10 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR10 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR10 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR11 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR11 
 %xxxxxxxx  0 lshift NVIC_IPR11 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR11 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR11 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR11 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR11 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR11 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR11 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR11 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR11 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR12 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR12 
 %xxxxxxxx  0 lshift NVIC_IPR12 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR12 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR12 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR12 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR12 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR12 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR12 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR12 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR12 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR13 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR13 
 %xxxxxxxx  0 lshift NVIC_IPR13 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR13 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR13 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR13 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR13 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR13 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR13 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR13 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR13 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR14 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR14 
 %xxxxxxxx  0 lshift NVIC_IPR14 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR14 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR14 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR14 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR14 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR14 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR14 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR14 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR14 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR15 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR15 
 %xxxxxxxx  0 lshift NVIC_IPR15 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR15 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR15 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR15 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR15 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR15 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR15 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR15 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR15 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR16 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR16 
 %xxxxxxxx  0 lshift NVIC_IPR16 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR16 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR16 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR16 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR16 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR16 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR16 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR16 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR16 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR17 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR17 
 %xxxxxxxx  0 lshift NVIC_IPR17 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR17 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR17 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR17 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR17 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR17 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR17 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR17 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR17 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR18 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR18 
 %xxxxxxxx  0 lshift NVIC_IPR18 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR18 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR18 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR18 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR18 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR18 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR18 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR18 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR18 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR19 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR19 
 %xxxxxxxx  0 lshift NVIC_IPR19 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR19 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR19 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR19 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR19 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR19 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR19 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR19 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR19 @ %11111111  24 lshift and 24 rshift ; 

NVIC_IPR20 (read-write)
$00000000 CONSTANT RESET_NVIC_IPR20 
 %xxxxxxxx  0 lshift NVIC_IPR20 bis!        \ NVIC_IPR_N0	Bit 0	 Width 8
 %xxxxxxxx  8 lshift NVIC_IPR20 bis!        \ NVIC_IPR_N1	Bit 8	 Width 8
 %xxxxxxxx  16 lshift NVIC_IPR20 bis!        \ NVIC_IPR_N2	Bit 16	 Width 8
 %xxxxxxxx  24 lshift NVIC_IPR20 bis!        \ NVIC_IPR_N3	Bit 24	 Width 8
\ NVIC_IPR20 Register BitField Fetch Words  
: NVIC_IPR_N0@ NVIC_IPR20 @ %11111111  0 lshift and 0 rshift ; 
: NVIC_IPR_N1@ NVIC_IPR20 @ %11111111  8 lshift and 8 rshift ; 
: NVIC_IPR_N2@ NVIC_IPR20 @ %11111111  16 lshift and 16 rshift ; 
: NVIC_IPR_N3@ NVIC_IPR20 @ %11111111  24 lshift and 24 rshift ; 

                    
################################### FLASH ###################################
FLASH_ACR ()
$00000000 CONSTANT RESET_FLASH_ACR 
 %xxx  0 lshift FLASH_ACR bis!        \ FLASH_LATENCY	Bit 0	 Width 3
 %1  8 lshift FLASH_ACR bis!        \ FLASH_PRFTEN	Bit 8	 Width 1
 %1  9 lshift FLASH_ACR bis!        \ FLASH_ICEN	Bit 9	 Width 1
 %1  10 lshift FLASH_ACR bis!        \ FLASH_DCEN	Bit 10	 Width 1
 %1  11 lshift FLASH_ACR bis!        \ FLASH_ICRST	Bit 11	 Width 1
 %1  12 lshift FLASH_ACR bis!        \ FLASH_DCRST	Bit 12	 Width 1
\ FLASH_ACR Register BitField Fetch Words  
: FLASH_LATENCY@ FLASH_ACR @ %111  0 lshift and 0 rshift ; 
: FLASH_PRFTEN@ FLASH_ACR @ %1  8 lshift and 8 rshift ; 
: FLASH_ICEN@ FLASH_ACR @ %1  9 lshift and 9 rshift ; 
: FLASH_DCEN@ FLASH_ACR @ %1  10 lshift and 10 rshift ; 
: FLASH_ICRST@ FLASH_ACR @ %1  11 lshift and 11 rshift ; 
: FLASH_DCRST@ FLASH_ACR @ %1  12 lshift and 12 rshift ; 

FLASH_KEYR (write-only)
$00000000 CONSTANT RESET_FLASH_KEYR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift FLASH_KEYR bis!        \ FLASH_KEY	Bit 0	 Width 32
\ FLASH_KEYR Register BitField Fetch Words  
: FLASH_KEY@ FLASH_KEYR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

FLASH_OPTKEYR (write-only)
$00000000 CONSTANT RESET_FLASH_OPTKEYR 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift FLASH_OPTKEYR bis!        \ FLASH_OPTKEY	Bit 0	 Width 32
\ FLASH_OPTKEYR Register BitField Fetch Words  
: FLASH_OPTKEY@ FLASH_OPTKEYR @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

FLASH_SR ()
$00000000 CONSTANT RESET_FLASH_SR 
 %1  0 lshift FLASH_SR bis!        \ FLASH_EOP	Bit 0	 Width 1
 %1  1 lshift FLASH_SR bis!        \ FLASH_OPERR	Bit 1	 Width 1
 %1  4 lshift FLASH_SR bis!        \ FLASH_WRPERR	Bit 4	 Width 1
 %1  5 lshift FLASH_SR bis!        \ FLASH_PGAERR	Bit 5	 Width 1
 %1  6 lshift FLASH_SR bis!        \ FLASH_PGPERR	Bit 6	 Width 1
 %1  7 lshift FLASH_SR bis!        \ FLASH_PGSERR	Bit 7	 Width 1
 %1  16 lshift FLASH_SR bis!        \ FLASH_BSY	Bit 16	 Width 1
\ FLASH_SR Register BitField Fetch Words  
: FLASH_EOP@ FLASH_SR @ %1  0 lshift and 0 rshift ; 
: FLASH_OPERR@ FLASH_SR @ %1  1 lshift and 1 rshift ; 
: FLASH_WRPERR@ FLASH_SR @ %1  4 lshift and 4 rshift ; 
: FLASH_PGAERR@ FLASH_SR @ %1  5 lshift and 5 rshift ; 
: FLASH_PGPERR@ FLASH_SR @ %1  6 lshift and 6 rshift ; 
: FLASH_PGSERR@ FLASH_SR @ %1  7 lshift and 7 rshift ; 
: FLASH_BSY@ FLASH_SR @ %1  16 lshift and 16 rshift ; 

FLASH_CR (read-write)
$80000000 CONSTANT RESET_FLASH_CR 
 %1  0 lshift FLASH_CR bis!        \ FLASH_PG	Bit 0	 Width 1
 %1  1 lshift FLASH_CR bis!        \ FLASH_SER	Bit 1	 Width 1
 %1  2 lshift FLASH_CR bis!        \ FLASH_MER	Bit 2	 Width 1
 %xxxx  3 lshift FLASH_CR bis!        \ FLASH_SNB	Bit 3	 Width 4
 %xx  8 lshift FLASH_CR bis!        \ FLASH_PSIZE	Bit 8	 Width 2
 %1  16 lshift FLASH_CR bis!        \ FLASH_STRT	Bit 16	 Width 1
 %1  24 lshift FLASH_CR bis!        \ FLASH_EOPIE	Bit 24	 Width 1
 %1  25 lshift FLASH_CR bis!        \ FLASH_ERRIE	Bit 25	 Width 1
 %1  31 lshift FLASH_CR bis!        \ FLASH_LOCK	Bit 31	 Width 1
\ FLASH_CR Register BitField Fetch Words  
: FLASH_PG@ FLASH_CR @ %1  0 lshift and 0 rshift ; 
: FLASH_SER@ FLASH_CR @ %1  1 lshift and 1 rshift ; 
: FLASH_MER@ FLASH_CR @ %1  2 lshift and 2 rshift ; 
: FLASH_SNB@ FLASH_CR @ %1111  3 lshift and 3 rshift ; 
: FLASH_PSIZE@ FLASH_CR @ %11  8 lshift and 8 rshift ; 
: FLASH_STRT@ FLASH_CR @ %1  16 lshift and 16 rshift ; 
: FLASH_EOPIE@ FLASH_CR @ %1  24 lshift and 24 rshift ; 
: FLASH_ERRIE@ FLASH_CR @ %1  25 lshift and 25 rshift ; 
: FLASH_LOCK@ FLASH_CR @ %1  31 lshift and 31 rshift ; 

FLASH_OPTCR (read-write)
$00000014 CONSTANT RESET_FLASH_OPTCR 
 %1  0 lshift FLASH_OPTCR bis!        \ FLASH_OPTLOCK	Bit 0	 Width 1
 %1  1 lshift FLASH_OPTCR bis!        \ FLASH_OPTSTRT	Bit 1	 Width 1
 %xx  2 lshift FLASH_OPTCR bis!        \ FLASH_BOR_LEV	Bit 2	 Width 2
 %1  5 lshift FLASH_OPTCR bis!        \ FLASH_WDG_SW	Bit 5	 Width 1
 %1  6 lshift FLASH_OPTCR bis!        \ FLASH_nRST_STOP	Bit 6	 Width 1
 %1  7 lshift FLASH_OPTCR bis!        \ FLASH_nRST_STDBY	Bit 7	 Width 1
 %xxxxxxxx  8 lshift FLASH_OPTCR bis!        \ FLASH_RDP	Bit 8	 Width 8
 %xxxxxxxxxxxx  16 lshift FLASH_OPTCR bis!        \ FLASH_nWRP	Bit 16	 Width 12
\ FLASH_OPTCR Register BitField Fetch Words  
: FLASH_OPTLOCK@ FLASH_OPTCR @ %1  0 lshift and 0 rshift ; 
: FLASH_OPTSTRT@ FLASH_OPTCR @ %1  1 lshift and 1 rshift ; 
: FLASH_BOR_LEV@ FLASH_OPTCR @ %11  2 lshift and 2 rshift ; 
: FLASH_WDG_SW@ FLASH_OPTCR @ %1  5 lshift and 5 rshift ; 
: FLASH_nRST_STOP@ FLASH_OPTCR @ %1  6 lshift and 6 rshift ; 
: FLASH_nRST_STDBY@ FLASH_OPTCR @ %1  7 lshift and 7 rshift ; 
: FLASH_RDP@ FLASH_OPTCR @ %11111111  8 lshift and 8 rshift ; 
: FLASH_nWRP@ FLASH_OPTCR @ %11111111111  16 lshift and 16 rshift ; 

                    
################################### EXTI ###################################
EXTI_IMR (read-write)
$00000000 CONSTANT RESET_EXTI_IMR 
 %1  0 lshift EXTI_IMR bis!        \ EXTI_MR0	Bit 0	 Width 1
 %1  1 lshift EXTI_IMR bis!        \ EXTI_MR1	Bit 1	 Width 1
 %1  2 lshift EXTI_IMR bis!        \ EXTI_MR2	Bit 2	 Width 1
 %1  3 lshift EXTI_IMR bis!        \ EXTI_MR3	Bit 3	 Width 1
 %1  4 lshift EXTI_IMR bis!        \ EXTI_MR4	Bit 4	 Width 1
 %1  5 lshift EXTI_IMR bis!        \ EXTI_MR5	Bit 5	 Width 1
 %1  6 lshift EXTI_IMR bis!        \ EXTI_MR6	Bit 6	 Width 1
 %1  7 lshift EXTI_IMR bis!        \ EXTI_MR7	Bit 7	 Width 1
 %1  8 lshift EXTI_IMR bis!        \ EXTI_MR8	Bit 8	 Width 1
 %1  9 lshift EXTI_IMR bis!        \ EXTI_MR9	Bit 9	 Width 1
 %1  10 lshift EXTI_IMR bis!        \ EXTI_MR10	Bit 10	 Width 1
 %1  11 lshift EXTI_IMR bis!        \ EXTI_MR11	Bit 11	 Width 1
 %1  12 lshift EXTI_IMR bis!        \ EXTI_MR12	Bit 12	 Width 1
 %1  13 lshift EXTI_IMR bis!        \ EXTI_MR13	Bit 13	 Width 1
 %1  14 lshift EXTI_IMR bis!        \ EXTI_MR14	Bit 14	 Width 1
 %1  15 lshift EXTI_IMR bis!        \ EXTI_MR15	Bit 15	 Width 1
 %1  16 lshift EXTI_IMR bis!        \ EXTI_MR16	Bit 16	 Width 1
 %1  17 lshift EXTI_IMR bis!        \ EXTI_MR17	Bit 17	 Width 1
 %1  18 lshift EXTI_IMR bis!        \ EXTI_MR18	Bit 18	 Width 1
 %1  19 lshift EXTI_IMR bis!        \ EXTI_MR19	Bit 19	 Width 1
 %1  20 lshift EXTI_IMR bis!        \ EXTI_MR20	Bit 20	 Width 1
 %1  21 lshift EXTI_IMR bis!        \ EXTI_MR21	Bit 21	 Width 1
 %1  22 lshift EXTI_IMR bis!        \ EXTI_MR22	Bit 22	 Width 1
\ EXTI_IMR Register BitField Fetch Words  
: EXTI_MR0@ EXTI_IMR @ %1  0 lshift and 0 rshift ; 
: EXTI_MR1@ EXTI_IMR @ %1  1 lshift and 1 rshift ; 
: EXTI_MR2@ EXTI_IMR @ %1  2 lshift and 2 rshift ; 
: EXTI_MR3@ EXTI_IMR @ %1  3 lshift and 3 rshift ; 
: EXTI_MR4@ EXTI_IMR @ %1  4 lshift and 4 rshift ; 
: EXTI_MR5@ EXTI_IMR @ %1  5 lshift and 5 rshift ; 
: EXTI_MR6@ EXTI_IMR @ %1  6 lshift and 6 rshift ; 
: EXTI_MR7@ EXTI_IMR @ %1  7 lshift and 7 rshift ; 
: EXTI_MR8@ EXTI_IMR @ %1  8 lshift and 8 rshift ; 
: EXTI_MR9@ EXTI_IMR @ %1  9 lshift and 9 rshift ; 
: EXTI_MR10@ EXTI_IMR @ %1  10 lshift and 10 rshift ; 
: EXTI_MR11@ EXTI_IMR @ %1  11 lshift and 11 rshift ; 
: EXTI_MR12@ EXTI_IMR @ %1  12 lshift and 12 rshift ; 
: EXTI_MR13@ EXTI_IMR @ %1  13 lshift and 13 rshift ; 
: EXTI_MR14@ EXTI_IMR @ %1  14 lshift and 14 rshift ; 
: EXTI_MR15@ EXTI_IMR @ %1  15 lshift and 15 rshift ; 
: EXTI_MR16@ EXTI_IMR @ %1  16 lshift and 16 rshift ; 
: EXTI_MR17@ EXTI_IMR @ %1  17 lshift and 17 rshift ; 
: EXTI_MR18@ EXTI_IMR @ %1  18 lshift and 18 rshift ; 
: EXTI_MR19@ EXTI_IMR @ %1  19 lshift and 19 rshift ; 
: EXTI_MR20@ EXTI_IMR @ %1  20 lshift and 20 rshift ; 
: EXTI_MR21@ EXTI_IMR @ %1  21 lshift and 21 rshift ; 
: EXTI_MR22@ EXTI_IMR @ %1  22 lshift and 22 rshift ; 

EXTI_EMR (read-write)
$00000000 CONSTANT RESET_EXTI_EMR 
 %1  0 lshift EXTI_EMR bis!        \ EXTI_MR0	Bit 0	 Width 1
 %1  1 lshift EXTI_EMR bis!        \ EXTI_MR1	Bit 1	 Width 1
 %1  2 lshift EXTI_EMR bis!        \ EXTI_MR2	Bit 2	 Width 1
 %1  3 lshift EXTI_EMR bis!        \ EXTI_MR3	Bit 3	 Width 1
 %1  4 lshift EXTI_EMR bis!        \ EXTI_MR4	Bit 4	 Width 1
 %1  5 lshift EXTI_EMR bis!        \ EXTI_MR5	Bit 5	 Width 1
 %1  6 lshift EXTI_EMR bis!        \ EXTI_MR6	Bit 6	 Width 1
 %1  7 lshift EXTI_EMR bis!        \ EXTI_MR7	Bit 7	 Width 1
 %1  8 lshift EXTI_EMR bis!        \ EXTI_MR8	Bit 8	 Width 1
 %1  9 lshift EXTI_EMR bis!        \ EXTI_MR9	Bit 9	 Width 1
 %1  10 lshift EXTI_EMR bis!        \ EXTI_MR10	Bit 10	 Width 1
 %1  11 lshift EXTI_EMR bis!        \ EXTI_MR11	Bit 11	 Width 1
 %1  12 lshift EXTI_EMR bis!        \ EXTI_MR12	Bit 12	 Width 1
 %1  13 lshift EXTI_EMR bis!        \ EXTI_MR13	Bit 13	 Width 1
 %1  14 lshift EXTI_EMR bis!        \ EXTI_MR14	Bit 14	 Width 1
 %1  15 lshift EXTI_EMR bis!        \ EXTI_MR15	Bit 15	 Width 1
 %1  16 lshift EXTI_EMR bis!        \ EXTI_MR16	Bit 16	 Width 1
 %1  17 lshift EXTI_EMR bis!        \ EXTI_MR17	Bit 17	 Width 1
 %1  18 lshift EXTI_EMR bis!        \ EXTI_MR18	Bit 18	 Width 1
 %1  19 lshift EXTI_EMR bis!        \ EXTI_MR19	Bit 19	 Width 1
 %1  20 lshift EXTI_EMR bis!        \ EXTI_MR20	Bit 20	 Width 1
 %1  21 lshift EXTI_EMR bis!        \ EXTI_MR21	Bit 21	 Width 1
 %1  22 lshift EXTI_EMR bis!        \ EXTI_MR22	Bit 22	 Width 1
\ EXTI_EMR Register BitField Fetch Words  
: EXTI_MR0@ EXTI_EMR @ %1  0 lshift and 0 rshift ; 
: EXTI_MR1@ EXTI_EMR @ %1  1 lshift and 1 rshift ; 
: EXTI_MR2@ EXTI_EMR @ %1  2 lshift and 2 rshift ; 
: EXTI_MR3@ EXTI_EMR @ %1  3 lshift and 3 rshift ; 
: EXTI_MR4@ EXTI_EMR @ %1  4 lshift and 4 rshift ; 
: EXTI_MR5@ EXTI_EMR @ %1  5 lshift and 5 rshift ; 
: EXTI_MR6@ EXTI_EMR @ %1  6 lshift and 6 rshift ; 
: EXTI_MR7@ EXTI_EMR @ %1  7 lshift and 7 rshift ; 
: EXTI_MR8@ EXTI_EMR @ %1  8 lshift and 8 rshift ; 
: EXTI_MR9@ EXTI_EMR @ %1  9 lshift and 9 rshift ; 
: EXTI_MR10@ EXTI_EMR @ %1  10 lshift and 10 rshift ; 
: EXTI_MR11@ EXTI_EMR @ %1  11 lshift and 11 rshift ; 
: EXTI_MR12@ EXTI_EMR @ %1  12 lshift and 12 rshift ; 
: EXTI_MR13@ EXTI_EMR @ %1  13 lshift and 13 rshift ; 
: EXTI_MR14@ EXTI_EMR @ %1  14 lshift and 14 rshift ; 
: EXTI_MR15@ EXTI_EMR @ %1  15 lshift and 15 rshift ; 
: EXTI_MR16@ EXTI_EMR @ %1  16 lshift and 16 rshift ; 
: EXTI_MR17@ EXTI_EMR @ %1  17 lshift and 17 rshift ; 
: EXTI_MR18@ EXTI_EMR @ %1  18 lshift and 18 rshift ; 
: EXTI_MR19@ EXTI_EMR @ %1  19 lshift and 19 rshift ; 
: EXTI_MR20@ EXTI_EMR @ %1  20 lshift and 20 rshift ; 
: EXTI_MR21@ EXTI_EMR @ %1  21 lshift and 21 rshift ; 
: EXTI_MR22@ EXTI_EMR @ %1  22 lshift and 22 rshift ; 

EXTI_RTSR (read-write)
$00000000 CONSTANT RESET_EXTI_RTSR 
 %1  0 lshift EXTI_RTSR bis!        \ EXTI_TR0	Bit 0	 Width 1
 %1  1 lshift EXTI_RTSR bis!        \ EXTI_TR1	Bit 1	 Width 1
 %1  2 lshift EXTI_RTSR bis!        \ EXTI_TR2	Bit 2	 Width 1
 %1  3 lshift EXTI_RTSR bis!        \ EXTI_TR3	Bit 3	 Width 1
 %1  4 lshift EXTI_RTSR bis!        \ EXTI_TR4	Bit 4	 Width 1
 %1  5 lshift EXTI_RTSR bis!        \ EXTI_TR5	Bit 5	 Width 1
 %1  6 lshift EXTI_RTSR bis!        \ EXTI_TR6	Bit 6	 Width 1
 %1  7 lshift EXTI_RTSR bis!        \ EXTI_TR7	Bit 7	 Width 1
 %1  8 lshift EXTI_RTSR bis!        \ EXTI_TR8	Bit 8	 Width 1
 %1  9 lshift EXTI_RTSR bis!        \ EXTI_TR9	Bit 9	 Width 1
 %1  10 lshift EXTI_RTSR bis!        \ EXTI_TR10	Bit 10	 Width 1
 %1  11 lshift EXTI_RTSR bis!        \ EXTI_TR11	Bit 11	 Width 1
 %1  12 lshift EXTI_RTSR bis!        \ EXTI_TR12	Bit 12	 Width 1
 %1  13 lshift EXTI_RTSR bis!        \ EXTI_TR13	Bit 13	 Width 1
 %1  14 lshift EXTI_RTSR bis!        \ EXTI_TR14	Bit 14	 Width 1
 %1  15 lshift EXTI_RTSR bis!        \ EXTI_TR15	Bit 15	 Width 1
 %1  16 lshift EXTI_RTSR bis!        \ EXTI_TR16	Bit 16	 Width 1
 %1  17 lshift EXTI_RTSR bis!        \ EXTI_TR17	Bit 17	 Width 1
 %1  18 lshift EXTI_RTSR bis!        \ EXTI_TR18	Bit 18	 Width 1
 %1  19 lshift EXTI_RTSR bis!        \ EXTI_TR19	Bit 19	 Width 1
 %1  20 lshift EXTI_RTSR bis!        \ EXTI_TR20	Bit 20	 Width 1
 %1  21 lshift EXTI_RTSR bis!        \ EXTI_TR21	Bit 21	 Width 1
 %1  22 lshift EXTI_RTSR bis!        \ EXTI_TR22	Bit 22	 Width 1
\ EXTI_RTSR Register BitField Fetch Words  
: EXTI_TR0@ EXTI_RTSR @ %1  0 lshift and 0 rshift ; 
: EXTI_TR1@ EXTI_RTSR @ %1  1 lshift and 1 rshift ; 
: EXTI_TR2@ EXTI_RTSR @ %1  2 lshift and 2 rshift ; 
: EXTI_TR3@ EXTI_RTSR @ %1  3 lshift and 3 rshift ; 
: EXTI_TR4@ EXTI_RTSR @ %1  4 lshift and 4 rshift ; 
: EXTI_TR5@ EXTI_RTSR @ %1  5 lshift and 5 rshift ; 
: EXTI_TR6@ EXTI_RTSR @ %1  6 lshift and 6 rshift ; 
: EXTI_TR7@ EXTI_RTSR @ %1  7 lshift and 7 rshift ; 
: EXTI_TR8@ EXTI_RTSR @ %1  8 lshift and 8 rshift ; 
: EXTI_TR9@ EXTI_RTSR @ %1  9 lshift and 9 rshift ; 
: EXTI_TR10@ EXTI_RTSR @ %1  10 lshift and 10 rshift ; 
: EXTI_TR11@ EXTI_RTSR @ %1  11 lshift and 11 rshift ; 
: EXTI_TR12@ EXTI_RTSR @ %1  12 lshift and 12 rshift ; 
: EXTI_TR13@ EXTI_RTSR @ %1  13 lshift and 13 rshift ; 
: EXTI_TR14@ EXTI_RTSR @ %1  14 lshift and 14 rshift ; 
: EXTI_TR15@ EXTI_RTSR @ %1  15 lshift and 15 rshift ; 
: EXTI_TR16@ EXTI_RTSR @ %1  16 lshift and 16 rshift ; 
: EXTI_TR17@ EXTI_RTSR @ %1  17 lshift and 17 rshift ; 
: EXTI_TR18@ EXTI_RTSR @ %1  18 lshift and 18 rshift ; 
: EXTI_TR19@ EXTI_RTSR @ %1  19 lshift and 19 rshift ; 
: EXTI_TR20@ EXTI_RTSR @ %1  20 lshift and 20 rshift ; 
: EXTI_TR21@ EXTI_RTSR @ %1  21 lshift and 21 rshift ; 
: EXTI_TR22@ EXTI_RTSR @ %1  22 lshift and 22 rshift ; 

EXTI_FTSR (read-write)
$00000000 CONSTANT RESET_EXTI_FTSR 
 %1  0 lshift EXTI_FTSR bis!        \ EXTI_TR0	Bit 0	 Width 1
 %1  1 lshift EXTI_FTSR bis!        \ EXTI_TR1	Bit 1	 Width 1
 %1  2 lshift EXTI_FTSR bis!        \ EXTI_TR2	Bit 2	 Width 1
 %1  3 lshift EXTI_FTSR bis!        \ EXTI_TR3	Bit 3	 Width 1
 %1  4 lshift EXTI_FTSR bis!        \ EXTI_TR4	Bit 4	 Width 1
 %1  5 lshift EXTI_FTSR bis!        \ EXTI_TR5	Bit 5	 Width 1
 %1  6 lshift EXTI_FTSR bis!        \ EXTI_TR6	Bit 6	 Width 1
 %1  7 lshift EXTI_FTSR bis!        \ EXTI_TR7	Bit 7	 Width 1
 %1  8 lshift EXTI_FTSR bis!        \ EXTI_TR8	Bit 8	 Width 1
 %1  9 lshift EXTI_FTSR bis!        \ EXTI_TR9	Bit 9	 Width 1
 %1  10 lshift EXTI_FTSR bis!        \ EXTI_TR10	Bit 10	 Width 1
 %1  11 lshift EXTI_FTSR bis!        \ EXTI_TR11	Bit 11	 Width 1
 %1  12 lshift EXTI_FTSR bis!        \ EXTI_TR12	Bit 12	 Width 1
 %1  13 lshift EXTI_FTSR bis!        \ EXTI_TR13	Bit 13	 Width 1
 %1  14 lshift EXTI_FTSR bis!        \ EXTI_TR14	Bit 14	 Width 1
 %1  15 lshift EXTI_FTSR bis!        \ EXTI_TR15	Bit 15	 Width 1
 %1  16 lshift EXTI_FTSR bis!        \ EXTI_TR16	Bit 16	 Width 1
 %1  17 lshift EXTI_FTSR bis!        \ EXTI_TR17	Bit 17	 Width 1
 %1  18 lshift EXTI_FTSR bis!        \ EXTI_TR18	Bit 18	 Width 1
 %1  19 lshift EXTI_FTSR bis!        \ EXTI_TR19	Bit 19	 Width 1
 %1  20 lshift EXTI_FTSR bis!        \ EXTI_TR20	Bit 20	 Width 1
 %1  21 lshift EXTI_FTSR bis!        \ EXTI_TR21	Bit 21	 Width 1
 %1  22 lshift EXTI_FTSR bis!        \ EXTI_TR22	Bit 22	 Width 1
\ EXTI_FTSR Register BitField Fetch Words  
: EXTI_TR0@ EXTI_FTSR @ %1  0 lshift and 0 rshift ; 
: EXTI_TR1@ EXTI_FTSR @ %1  1 lshift and 1 rshift ; 
: EXTI_TR2@ EXTI_FTSR @ %1  2 lshift and 2 rshift ; 
: EXTI_TR3@ EXTI_FTSR @ %1  3 lshift and 3 rshift ; 
: EXTI_TR4@ EXTI_FTSR @ %1  4 lshift and 4 rshift ; 
: EXTI_TR5@ EXTI_FTSR @ %1  5 lshift and 5 rshift ; 
: EXTI_TR6@ EXTI_FTSR @ %1  6 lshift and 6 rshift ; 
: EXTI_TR7@ EXTI_FTSR @ %1  7 lshift and 7 rshift ; 
: EXTI_TR8@ EXTI_FTSR @ %1  8 lshift and 8 rshift ; 
: EXTI_TR9@ EXTI_FTSR @ %1  9 lshift and 9 rshift ; 
: EXTI_TR10@ EXTI_FTSR @ %1  10 lshift and 10 rshift ; 
: EXTI_TR11@ EXTI_FTSR @ %1  11 lshift and 11 rshift ; 
: EXTI_TR12@ EXTI_FTSR @ %1  12 lshift and 12 rshift ; 
: EXTI_TR13@ EXTI_FTSR @ %1  13 lshift and 13 rshift ; 
: EXTI_TR14@ EXTI_FTSR @ %1  14 lshift and 14 rshift ; 
: EXTI_TR15@ EXTI_FTSR @ %1  15 lshift and 15 rshift ; 
: EXTI_TR16@ EXTI_FTSR @ %1  16 lshift and 16 rshift ; 
: EXTI_TR17@ EXTI_FTSR @ %1  17 lshift and 17 rshift ; 
: EXTI_TR18@ EXTI_FTSR @ %1  18 lshift and 18 rshift ; 
: EXTI_TR19@ EXTI_FTSR @ %1  19 lshift and 19 rshift ; 
: EXTI_TR20@ EXTI_FTSR @ %1  20 lshift and 20 rshift ; 
: EXTI_TR21@ EXTI_FTSR @ %1  21 lshift and 21 rshift ; 
: EXTI_TR22@ EXTI_FTSR @ %1  22 lshift and 22 rshift ; 

EXTI_SWIER (read-write)
$00000000 CONSTANT RESET_EXTI_SWIER 
 %1  0 lshift EXTI_SWIER bis!        \ EXTI_SWIER0	Bit 0	 Width 1
 %1  1 lshift EXTI_SWIER bis!        \ EXTI_SWIER1	Bit 1	 Width 1
 %1  2 lshift EXTI_SWIER bis!        \ EXTI_SWIER2	Bit 2	 Width 1
 %1  3 lshift EXTI_SWIER bis!        \ EXTI_SWIER3	Bit 3	 Width 1
 %1  4 lshift EXTI_SWIER bis!        \ EXTI_SWIER4	Bit 4	 Width 1
 %1  5 lshift EXTI_SWIER bis!        \ EXTI_SWIER5	Bit 5	 Width 1
 %1  6 lshift EXTI_SWIER bis!        \ EXTI_SWIER6	Bit 6	 Width 1
 %1  7 lshift EXTI_SWIER bis!        \ EXTI_SWIER7	Bit 7	 Width 1
 %1  8 lshift EXTI_SWIER bis!        \ EXTI_SWIER8	Bit 8	 Width 1
 %1  9 lshift EXTI_SWIER bis!        \ EXTI_SWIER9	Bit 9	 Width 1
 %1  10 lshift EXTI_SWIER bis!        \ EXTI_SWIER10	Bit 10	 Width 1
 %1  11 lshift EXTI_SWIER bis!        \ EXTI_SWIER11	Bit 11	 Width 1
 %1  12 lshift EXTI_SWIER bis!        \ EXTI_SWIER12	Bit 12	 Width 1
 %1  13 lshift EXTI_SWIER bis!        \ EXTI_SWIER13	Bit 13	 Width 1
 %1  14 lshift EXTI_SWIER bis!        \ EXTI_SWIER14	Bit 14	 Width 1
 %1  15 lshift EXTI_SWIER bis!        \ EXTI_SWIER15	Bit 15	 Width 1
 %1  16 lshift EXTI_SWIER bis!        \ EXTI_SWIER16	Bit 16	 Width 1
 %1  17 lshift EXTI_SWIER bis!        \ EXTI_SWIER17	Bit 17	 Width 1
 %1  18 lshift EXTI_SWIER bis!        \ EXTI_SWIER18	Bit 18	 Width 1
 %1  19 lshift EXTI_SWIER bis!        \ EXTI_SWIER19	Bit 19	 Width 1
 %1  20 lshift EXTI_SWIER bis!        \ EXTI_SWIER20	Bit 20	 Width 1
 %1  21 lshift EXTI_SWIER bis!        \ EXTI_SWIER21	Bit 21	 Width 1
 %1  22 lshift EXTI_SWIER bis!        \ EXTI_SWIER22	Bit 22	 Width 1
\ EXTI_SWIER Register BitField Fetch Words  
: EXTI_SWIER0@ EXTI_SWIER @ %1  0 lshift and 0 rshift ; 
: EXTI_SWIER1@ EXTI_SWIER @ %1  1 lshift and 1 rshift ; 
: EXTI_SWIER2@ EXTI_SWIER @ %1  2 lshift and 2 rshift ; 
: EXTI_SWIER3@ EXTI_SWIER @ %1  3 lshift and 3 rshift ; 
: EXTI_SWIER4@ EXTI_SWIER @ %1  4 lshift and 4 rshift ; 
: EXTI_SWIER5@ EXTI_SWIER @ %1  5 lshift and 5 rshift ; 
: EXTI_SWIER6@ EXTI_SWIER @ %1  6 lshift and 6 rshift ; 
: EXTI_SWIER7@ EXTI_SWIER @ %1  7 lshift and 7 rshift ; 
: EXTI_SWIER8@ EXTI_SWIER @ %1  8 lshift and 8 rshift ; 
: EXTI_SWIER9@ EXTI_SWIER @ %1  9 lshift and 9 rshift ; 
: EXTI_SWIER10@ EXTI_SWIER @ %1  10 lshift and 10 rshift ; 
: EXTI_SWIER11@ EXTI_SWIER @ %1  11 lshift and 11 rshift ; 
: EXTI_SWIER12@ EXTI_SWIER @ %1  12 lshift and 12 rshift ; 
: EXTI_SWIER13@ EXTI_SWIER @ %1  13 lshift and 13 rshift ; 
: EXTI_SWIER14@ EXTI_SWIER @ %1  14 lshift and 14 rshift ; 
: EXTI_SWIER15@ EXTI_SWIER @ %1  15 lshift and 15 rshift ; 
: EXTI_SWIER16@ EXTI_SWIER @ %1  16 lshift and 16 rshift ; 
: EXTI_SWIER17@ EXTI_SWIER @ %1  17 lshift and 17 rshift ; 
: EXTI_SWIER18@ EXTI_SWIER @ %1  18 lshift and 18 rshift ; 
: EXTI_SWIER19@ EXTI_SWIER @ %1  19 lshift and 19 rshift ; 
: EXTI_SWIER20@ EXTI_SWIER @ %1  20 lshift and 20 rshift ; 
: EXTI_SWIER21@ EXTI_SWIER @ %1  21 lshift and 21 rshift ; 
: EXTI_SWIER22@ EXTI_SWIER @ %1  22 lshift and 22 rshift ; 

EXTI_PR (read-write)
$00000000 CONSTANT RESET_EXTI_PR 
 %1  0 lshift EXTI_PR bis!        \ EXTI_PR0	Bit 0	 Width 1
 %1  1 lshift EXTI_PR bis!        \ EXTI_PR1	Bit 1	 Width 1
 %1  2 lshift EXTI_PR bis!        \ EXTI_PR2	Bit 2	 Width 1
 %1  3 lshift EXTI_PR bis!        \ EXTI_PR3	Bit 3	 Width 1
 %1  4 lshift EXTI_PR bis!        \ EXTI_PR4	Bit 4	 Width 1
 %1  5 lshift EXTI_PR bis!        \ EXTI_PR5	Bit 5	 Width 1
 %1  6 lshift EXTI_PR bis!        \ EXTI_PR6	Bit 6	 Width 1
 %1  7 lshift EXTI_PR bis!        \ EXTI_PR7	Bit 7	 Width 1
 %1  8 lshift EXTI_PR bis!        \ EXTI_PR8	Bit 8	 Width 1
 %1  9 lshift EXTI_PR bis!        \ EXTI_PR9	Bit 9	 Width 1
 %1  10 lshift EXTI_PR bis!        \ EXTI_PR10	Bit 10	 Width 1
 %1  11 lshift EXTI_PR bis!        \ EXTI_PR11	Bit 11	 Width 1
 %1  12 lshift EXTI_PR bis!        \ EXTI_PR12	Bit 12	 Width 1
 %1  13 lshift EXTI_PR bis!        \ EXTI_PR13	Bit 13	 Width 1
 %1  14 lshift EXTI_PR bis!        \ EXTI_PR14	Bit 14	 Width 1
 %1  15 lshift EXTI_PR bis!        \ EXTI_PR15	Bit 15	 Width 1
 %1  16 lshift EXTI_PR bis!        \ EXTI_PR16	Bit 16	 Width 1
 %1  17 lshift EXTI_PR bis!        \ EXTI_PR17	Bit 17	 Width 1
 %1  18 lshift EXTI_PR bis!        \ EXTI_PR18	Bit 18	 Width 1
 %1  19 lshift EXTI_PR bis!        \ EXTI_PR19	Bit 19	 Width 1
 %1  20 lshift EXTI_PR bis!        \ EXTI_PR20	Bit 20	 Width 1
 %1  21 lshift EXTI_PR bis!        \ EXTI_PR21	Bit 21	 Width 1
 %1  22 lshift EXTI_PR bis!        \ EXTI_PR22	Bit 22	 Width 1
\ EXTI_PR Register BitField Fetch Words  
: EXTI_PR0@ EXTI_PR @ %1  0 lshift and 0 rshift ; 
: EXTI_PR1@ EXTI_PR @ %1  1 lshift and 1 rshift ; 
: EXTI_PR2@ EXTI_PR @ %1  2 lshift and 2 rshift ; 
: EXTI_PR3@ EXTI_PR @ %1  3 lshift and 3 rshift ; 
: EXTI_PR4@ EXTI_PR @ %1  4 lshift and 4 rshift ; 
: EXTI_PR5@ EXTI_PR @ %1  5 lshift and 5 rshift ; 
: EXTI_PR6@ EXTI_PR @ %1  6 lshift and 6 rshift ; 
: EXTI_PR7@ EXTI_PR @ %1  7 lshift and 7 rshift ; 
: EXTI_PR8@ EXTI_PR @ %1  8 lshift and 8 rshift ; 
: EXTI_PR9@ EXTI_PR @ %1  9 lshift and 9 rshift ; 
: EXTI_PR10@ EXTI_PR @ %1  10 lshift and 10 rshift ; 
: EXTI_PR11@ EXTI_PR @ %1  11 lshift and 11 rshift ; 
: EXTI_PR12@ EXTI_PR @ %1  12 lshift and 12 rshift ; 
: EXTI_PR13@ EXTI_PR @ %1  13 lshift and 13 rshift ; 
: EXTI_PR14@ EXTI_PR @ %1  14 lshift and 14 rshift ; 
: EXTI_PR15@ EXTI_PR @ %1  15 lshift and 15 rshift ; 
: EXTI_PR16@ EXTI_PR @ %1  16 lshift and 16 rshift ; 
: EXTI_PR17@ EXTI_PR @ %1  17 lshift and 17 rshift ; 
: EXTI_PR18@ EXTI_PR @ %1  18 lshift and 18 rshift ; 
: EXTI_PR19@ EXTI_PR @ %1  19 lshift and 19 rshift ; 
: EXTI_PR20@ EXTI_PR @ %1  20 lshift and 20 rshift ; 
: EXTI_PR21@ EXTI_PR @ %1  21 lshift and 21 rshift ; 
: EXTI_PR22@ EXTI_PR @ %1  22 lshift and 22 rshift ; 

                    
################################### OTG_HS_GLOBAL ###################################
OTG_HS_GLOBAL_OTG_HS_GOTGCTL ()
$00000800 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GOTGCTL 
 %1  0 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_SRQSCS	Bit 0	 Width 1
 %1  1 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_SRQ	Bit 1	 Width 1
 %1  8 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_HNGSCS	Bit 8	 Width 1
 %1  9 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_HNPRQ	Bit 9	 Width 1
 %1  10 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_HSHNPEN	Bit 10	 Width 1
 %1  11 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_DHNPEN	Bit 11	 Width 1
 %1  16 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_CIDSTS	Bit 16	 Width 1
 %1  17 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_DBCT	Bit 17	 Width 1
 %1  18 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_ASVLD	Bit 18	 Width 1
 %1  19 lshift OTG_HS_GLOBAL_OTG_HS_GOTGCTL bis!        \ OTG_HS_GLOBAL_BSVLD	Bit 19	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GOTGCTL Register BitField Fetch Words  
: OTG_HS_GLOBAL_SRQSCS@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_SRQ@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  1 lshift and 1 rshift ; 
: OTG_HS_GLOBAL_HNGSCS@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  8 lshift and 8 rshift ; 
: OTG_HS_GLOBAL_HNPRQ@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  9 lshift and 9 rshift ; 
: OTG_HS_GLOBAL_HSHNPEN@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  10 lshift and 10 rshift ; 
: OTG_HS_GLOBAL_DHNPEN@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  11 lshift and 11 rshift ; 
: OTG_HS_GLOBAL_CIDSTS@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  16 lshift and 16 rshift ; 
: OTG_HS_GLOBAL_DBCT@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  17 lshift and 17 rshift ; 
: OTG_HS_GLOBAL_ASVLD@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  18 lshift and 18 rshift ; 
: OTG_HS_GLOBAL_BSVLD@ OTG_HS_GLOBAL_OTG_HS_GOTGCTL @ %1  19 lshift and 19 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GOTGINT (read-write)
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GOTGINT 
 %1  2 lshift OTG_HS_GLOBAL_OTG_HS_GOTGINT bis!        \ OTG_HS_GLOBAL_SEDET	Bit 2	 Width 1
 %1  8 lshift OTG_HS_GLOBAL_OTG_HS_GOTGINT bis!        \ OTG_HS_GLOBAL_SRSSCHG	Bit 8	 Width 1
 %1  9 lshift OTG_HS_GLOBAL_OTG_HS_GOTGINT bis!        \ OTG_HS_GLOBAL_HNSSCHG	Bit 9	 Width 1
 %1  17 lshift OTG_HS_GLOBAL_OTG_HS_GOTGINT bis!        \ OTG_HS_GLOBAL_HNGDET	Bit 17	 Width 1
 %1  18 lshift OTG_HS_GLOBAL_OTG_HS_GOTGINT bis!        \ OTG_HS_GLOBAL_ADTOCHG	Bit 18	 Width 1
 %1  19 lshift OTG_HS_GLOBAL_OTG_HS_GOTGINT bis!        \ OTG_HS_GLOBAL_DBCDNE	Bit 19	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GOTGINT Register BitField Fetch Words  
: OTG_HS_GLOBAL_SEDET@ OTG_HS_GLOBAL_OTG_HS_GOTGINT @ %1  2 lshift and 2 rshift ; 
: OTG_HS_GLOBAL_SRSSCHG@ OTG_HS_GLOBAL_OTG_HS_GOTGINT @ %1  8 lshift and 8 rshift ; 
: OTG_HS_GLOBAL_HNSSCHG@ OTG_HS_GLOBAL_OTG_HS_GOTGINT @ %1  9 lshift and 9 rshift ; 
: OTG_HS_GLOBAL_HNGDET@ OTG_HS_GLOBAL_OTG_HS_GOTGINT @ %1  17 lshift and 17 rshift ; 
: OTG_HS_GLOBAL_ADTOCHG@ OTG_HS_GLOBAL_OTG_HS_GOTGINT @ %1  18 lshift and 18 rshift ; 
: OTG_HS_GLOBAL_DBCDNE@ OTG_HS_GLOBAL_OTG_HS_GOTGINT @ %1  19 lshift and 19 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GAHBCFG (read-write)
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GAHBCFG 
 %1  0 lshift OTG_HS_GLOBAL_OTG_HS_GAHBCFG bis!        \ OTG_HS_GLOBAL_GINT	Bit 0	 Width 1
 %xxxx  1 lshift OTG_HS_GLOBAL_OTG_HS_GAHBCFG bis!        \ OTG_HS_GLOBAL_HBSTLEN	Bit 1	 Width 4
 %1  5 lshift OTG_HS_GLOBAL_OTG_HS_GAHBCFG bis!        \ OTG_HS_GLOBAL_DMAEN	Bit 5	 Width 1
 %1  7 lshift OTG_HS_GLOBAL_OTG_HS_GAHBCFG bis!        \ OTG_HS_GLOBAL_TXFELVL	Bit 7	 Width 1
 %1  8 lshift OTG_HS_GLOBAL_OTG_HS_GAHBCFG bis!        \ OTG_HS_GLOBAL_PTXFELVL	Bit 8	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GAHBCFG Register BitField Fetch Words  
: OTG_HS_GLOBAL_GINT@ OTG_HS_GLOBAL_OTG_HS_GAHBCFG @ %1  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_HBSTLEN@ OTG_HS_GLOBAL_OTG_HS_GAHBCFG @ %1111  1 lshift and 1 rshift ; 
: OTG_HS_GLOBAL_DMAEN@ OTG_HS_GLOBAL_OTG_HS_GAHBCFG @ %1  5 lshift and 5 rshift ; 
: OTG_HS_GLOBAL_TXFELVL@ OTG_HS_GLOBAL_OTG_HS_GAHBCFG @ %1  7 lshift and 7 rshift ; 
: OTG_HS_GLOBAL_PTXFELVL@ OTG_HS_GLOBAL_OTG_HS_GAHBCFG @ %1  8 lshift and 8 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GUSBCFG ()
$00000A00 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GUSBCFG 
 %xxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_TOCAL	Bit 0	 Width 3
 %1  6 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_PHYSEL	Bit 6	 Width 1
 %1  8 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_SRPCAP	Bit 8	 Width 1
 %1  9 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_HNPCAP	Bit 9	 Width 1
 %xxxx  10 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_TRDT	Bit 10	 Width 4
 %1  15 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_PHYLPCS	Bit 15	 Width 1
 %1  17 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_ULPIFSLS	Bit 17	 Width 1
 %1  18 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_ULPIAR	Bit 18	 Width 1
 %1  19 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_ULPICSM	Bit 19	 Width 1
 %1  20 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_ULPIEVBUSD	Bit 20	 Width 1
 %1  21 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_ULPIEVBUSI	Bit 21	 Width 1
 %1  22 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_TSDPS	Bit 22	 Width 1
 %1  23 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_PCCI	Bit 23	 Width 1
 %1  24 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_PTCI	Bit 24	 Width 1
 %1  25 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_ULPIIPD	Bit 25	 Width 1
 %1  29 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_FHMOD	Bit 29	 Width 1
 %1  30 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_FDMOD	Bit 30	 Width 1
 %1  31 lshift OTG_HS_GLOBAL_OTG_HS_GUSBCFG bis!        \ OTG_HS_GLOBAL_CTXPKT	Bit 31	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GUSBCFG Register BitField Fetch Words  
: OTG_HS_GLOBAL_TOCAL@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_PHYSEL@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  6 lshift and 6 rshift ; 
: OTG_HS_GLOBAL_SRPCAP@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  8 lshift and 8 rshift ; 
: OTG_HS_GLOBAL_HNPCAP@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  9 lshift and 9 rshift ; 
: OTG_HS_GLOBAL_TRDT@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1111  10 lshift and 10 rshift ; 
: OTG_HS_GLOBAL_PHYLPCS@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  15 lshift and 15 rshift ; 
: OTG_HS_GLOBAL_ULPIFSLS@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  17 lshift and 17 rshift ; 
: OTG_HS_GLOBAL_ULPIAR@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  18 lshift and 18 rshift ; 
: OTG_HS_GLOBAL_ULPICSM@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  19 lshift and 19 rshift ; 
: OTG_HS_GLOBAL_ULPIEVBUSD@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  20 lshift and 20 rshift ; 
: OTG_HS_GLOBAL_ULPIEVBUSI@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  21 lshift and 21 rshift ; 
: OTG_HS_GLOBAL_TSDPS@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  22 lshift and 22 rshift ; 
: OTG_HS_GLOBAL_PCCI@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  23 lshift and 23 rshift ; 
: OTG_HS_GLOBAL_PTCI@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  24 lshift and 24 rshift ; 
: OTG_HS_GLOBAL_ULPIIPD@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  25 lshift and 25 rshift ; 
: OTG_HS_GLOBAL_FHMOD@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  29 lshift and 29 rshift ; 
: OTG_HS_GLOBAL_FDMOD@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  30 lshift and 30 rshift ; 
: OTG_HS_GLOBAL_CTXPKT@ OTG_HS_GLOBAL_OTG_HS_GUSBCFG @ %1  31 lshift and 31 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GRSTCTL ()
$20000000 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GRSTCTL 
 %1  0 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_CSRST	Bit 0	 Width 1
 %1  1 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_HSRST	Bit 1	 Width 1
 %1  2 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_FCRST	Bit 2	 Width 1
 %1  4 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_RXFFLSH	Bit 4	 Width 1
 %1  5 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_TXFFLSH	Bit 5	 Width 1
 %xxxxx  6 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_TXFNUM	Bit 6	 Width 5
 %1  30 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_DMAREQ	Bit 30	 Width 1
 %1  31 lshift OTG_HS_GLOBAL_OTG_HS_GRSTCTL bis!        \ OTG_HS_GLOBAL_AHBIDL	Bit 31	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GRSTCTL Register BitField Fetch Words  
: OTG_HS_GLOBAL_CSRST@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %1  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_HSRST@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %1  1 lshift and 1 rshift ; 
: OTG_HS_GLOBAL_FCRST@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %1  2 lshift and 2 rshift ; 
: OTG_HS_GLOBAL_RXFFLSH@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %1  4 lshift and 4 rshift ; 
: OTG_HS_GLOBAL_TXFFLSH@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %1  5 lshift and 5 rshift ; 
: OTG_HS_GLOBAL_TXFNUM@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %11111  6 lshift and 6 rshift ; 
: OTG_HS_GLOBAL_DMAREQ@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %1  30 lshift and 30 rshift ; 
: OTG_HS_GLOBAL_AHBIDL@ OTG_HS_GLOBAL_OTG_HS_GRSTCTL @ %1  31 lshift and 31 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GINTSTS ()
$04000020 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GINTSTS 
 %1  0 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_CMOD	Bit 0	 Width 1
 %1  1 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_MMIS	Bit 1	 Width 1
 %1  2 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_OTGINT	Bit 2	 Width 1
 %1  3 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_SOF	Bit 3	 Width 1
 %1  4 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_RXFLVL	Bit 4	 Width 1
 %1  5 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_NPTXFE	Bit 5	 Width 1
 %1  6 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_GINAKEFF	Bit 6	 Width 1
 %1  7 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_BOUTNAKEFF	Bit 7	 Width 1
 %1  10 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_ESUSP	Bit 10	 Width 1
 %1  11 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_USBSUSP	Bit 11	 Width 1
 %1  12 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_USBRST	Bit 12	 Width 1
 %1  13 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_ENUMDNE	Bit 13	 Width 1
 %1  14 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_ISOODRP	Bit 14	 Width 1
 %1  15 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_EOPF	Bit 15	 Width 1
 %1  18 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_IEPINT	Bit 18	 Width 1
 %1  19 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_OEPINT	Bit 19	 Width 1
 %1  20 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_IISOIXFR	Bit 20	 Width 1
 %1  21 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_PXFR_INCOMPISOOUT	Bit 21	 Width 1
 %1  22 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_DATAFSUSP	Bit 22	 Width 1
 %1  24 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_HPRTINT	Bit 24	 Width 1
 %1  25 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_HCINT	Bit 25	 Width 1
 %1  26 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_PTXFE	Bit 26	 Width 1
 %1  28 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_CIDSCHG	Bit 28	 Width 1
 %1  29 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_DISCINT	Bit 29	 Width 1
 %1  30 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_SRQINT	Bit 30	 Width 1
 %1  31 lshift OTG_HS_GLOBAL_OTG_HS_GINTSTS bis!        \ OTG_HS_GLOBAL_WKUINT	Bit 31	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GINTSTS Register BitField Fetch Words  
: OTG_HS_GLOBAL_CMOD@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_MMIS@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  1 lshift and 1 rshift ; 
: OTG_HS_GLOBAL_OTGINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  2 lshift and 2 rshift ; 
: OTG_HS_GLOBAL_SOF@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  3 lshift and 3 rshift ; 
: OTG_HS_GLOBAL_RXFLVL@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  4 lshift and 4 rshift ; 
: OTG_HS_GLOBAL_NPTXFE@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  5 lshift and 5 rshift ; 
: OTG_HS_GLOBAL_GINAKEFF@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  6 lshift and 6 rshift ; 
: OTG_HS_GLOBAL_BOUTNAKEFF@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  7 lshift and 7 rshift ; 
: OTG_HS_GLOBAL_ESUSP@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  10 lshift and 10 rshift ; 
: OTG_HS_GLOBAL_USBSUSP@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  11 lshift and 11 rshift ; 
: OTG_HS_GLOBAL_USBRST@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  12 lshift and 12 rshift ; 
: OTG_HS_GLOBAL_ENUMDNE@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  13 lshift and 13 rshift ; 
: OTG_HS_GLOBAL_ISOODRP@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  14 lshift and 14 rshift ; 
: OTG_HS_GLOBAL_EOPF@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  15 lshift and 15 rshift ; 
: OTG_HS_GLOBAL_IEPINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  18 lshift and 18 rshift ; 
: OTG_HS_GLOBAL_OEPINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  19 lshift and 19 rshift ; 
: OTG_HS_GLOBAL_IISOIXFR@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  20 lshift and 20 rshift ; 
: OTG_HS_GLOBAL_PXFR_INCOMPISOOUT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  21 lshift and 21 rshift ; 
: OTG_HS_GLOBAL_DATAFSUSP@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  22 lshift and 22 rshift ; 
: OTG_HS_GLOBAL_HPRTINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  24 lshift and 24 rshift ; 
: OTG_HS_GLOBAL_HCINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  25 lshift and 25 rshift ; 
: OTG_HS_GLOBAL_PTXFE@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  26 lshift and 26 rshift ; 
: OTG_HS_GLOBAL_CIDSCHG@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  28 lshift and 28 rshift ; 
: OTG_HS_GLOBAL_DISCINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  29 lshift and 29 rshift ; 
: OTG_HS_GLOBAL_SRQINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  30 lshift and 30 rshift ; 
: OTG_HS_GLOBAL_WKUINT@ OTG_HS_GLOBAL_OTG_HS_GINTSTS @ %1  31 lshift and 31 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GINTMSK ()
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GINTMSK 
 %1  1 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_MMISM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_OTGINT	Bit 2	 Width 1
 %1  3 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_SOFM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_RXFLVLM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_NPTXFEM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_GINAKEFFM	Bit 6	 Width 1
 %1  7 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_GONAKEFFM	Bit 7	 Width 1
 %1  10 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_ESUSPM	Bit 10	 Width 1
 %1  11 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_USBSUSPM	Bit 11	 Width 1
 %1  12 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_USBRST	Bit 12	 Width 1
 %1  13 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_ENUMDNEM	Bit 13	 Width 1
 %1  14 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_ISOODRPM	Bit 14	 Width 1
 %1  15 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_EOPFM	Bit 15	 Width 1
 %1  17 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_EPMISM	Bit 17	 Width 1
 %1  18 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_IEPINT	Bit 18	 Width 1
 %1  19 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_OEPINT	Bit 19	 Width 1
 %1  20 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_IISOIXFRM	Bit 20	 Width 1
 %1  21 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_PXFRM_IISOOXFRM	Bit 21	 Width 1
 %1  22 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_FSUSPM	Bit 22	 Width 1
 %1  24 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_PRTIM	Bit 24	 Width 1
 %1  25 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_HCIM	Bit 25	 Width 1
 %1  26 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_PTXFEM	Bit 26	 Width 1
 %1  28 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_CIDSCHGM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_DISCINT	Bit 29	 Width 1
 %1  30 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_SRQIM	Bit 30	 Width 1
 %1  31 lshift OTG_HS_GLOBAL_OTG_HS_GINTMSK bis!        \ OTG_HS_GLOBAL_WUIM	Bit 31	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GINTMSK Register BitField Fetch Words  
: OTG_HS_GLOBAL_MMISM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  1 lshift and 1 rshift ; 
: OTG_HS_GLOBAL_OTGINT@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  2 lshift and 2 rshift ; 
: OTG_HS_GLOBAL_SOFM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  3 lshift and 3 rshift ; 
: OTG_HS_GLOBAL_RXFLVLM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  4 lshift and 4 rshift ; 
: OTG_HS_GLOBAL_NPTXFEM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  5 lshift and 5 rshift ; 
: OTG_HS_GLOBAL_GINAKEFFM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  6 lshift and 6 rshift ; 
: OTG_HS_GLOBAL_GONAKEFFM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  7 lshift and 7 rshift ; 
: OTG_HS_GLOBAL_ESUSPM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  10 lshift and 10 rshift ; 
: OTG_HS_GLOBAL_USBSUSPM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  11 lshift and 11 rshift ; 
: OTG_HS_GLOBAL_USBRST@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  12 lshift and 12 rshift ; 
: OTG_HS_GLOBAL_ENUMDNEM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  13 lshift and 13 rshift ; 
: OTG_HS_GLOBAL_ISOODRPM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  14 lshift and 14 rshift ; 
: OTG_HS_GLOBAL_EOPFM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  15 lshift and 15 rshift ; 
: OTG_HS_GLOBAL_EPMISM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  17 lshift and 17 rshift ; 
: OTG_HS_GLOBAL_IEPINT@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  18 lshift and 18 rshift ; 
: OTG_HS_GLOBAL_OEPINT@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  19 lshift and 19 rshift ; 
: OTG_HS_GLOBAL_IISOIXFRM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  20 lshift and 20 rshift ; 
: OTG_HS_GLOBAL_PXFRM_IISOOXFRM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  21 lshift and 21 rshift ; 
: OTG_HS_GLOBAL_FSUSPM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  22 lshift and 22 rshift ; 
: OTG_HS_GLOBAL_PRTIM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  24 lshift and 24 rshift ; 
: OTG_HS_GLOBAL_HCIM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  25 lshift and 25 rshift ; 
: OTG_HS_GLOBAL_PTXFEM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  26 lshift and 26 rshift ; 
: OTG_HS_GLOBAL_CIDSCHGM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  28 lshift and 28 rshift ; 
: OTG_HS_GLOBAL_DISCINT@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  29 lshift and 29 rshift ; 
: OTG_HS_GLOBAL_SRQIM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  30 lshift and 30 rshift ; 
: OTG_HS_GLOBAL_WUIM@ OTG_HS_GLOBAL_OTG_HS_GINTMSK @ %1  31 lshift and 31 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host (read-only)
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host 
 %xxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host bis!        \ OTG_HS_GLOBAL_CHNUM	Bit 0	 Width 4
 % 4 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host bis!        \ OTG_HS_GLOBAL_BCNT	Bit 4	 Width 11
 %xx  15 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host bis!        \ OTG_HS_GLOBAL_DPID	Bit 15	 Width 2
 %xxxx  17 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host bis!        \ OTG_HS_GLOBAL_PKTSTS	Bit 17	 Width 4
\ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host Register BitField Fetch Words  
: OTG_HS_GLOBAL_CHNUM@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host @ %1111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_BCNT@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host @ % 4 lshift and 4 rshift ; 
: OTG_HS_GLOBAL_DPID@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host @ %11  15 lshift and 15 rshift ; 
: OTG_HS_GLOBAL_PKTSTS@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Host @ %1111  17 lshift and 17 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host (read-only)
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host 
 %xxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host bis!        \ OTG_HS_GLOBAL_CHNUM	Bit 0	 Width 4
 % 4 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host bis!        \ OTG_HS_GLOBAL_BCNT	Bit 4	 Width 11
 %xx  15 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host bis!        \ OTG_HS_GLOBAL_DPID	Bit 15	 Width 2
 %xxxx  17 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host bis!        \ OTG_HS_GLOBAL_PKTSTS	Bit 17	 Width 4
\ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host Register BitField Fetch Words  
: OTG_HS_GLOBAL_CHNUM@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host @ %1111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_BCNT@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host @ % 4 lshift and 4 rshift ; 
: OTG_HS_GLOBAL_DPID@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host @ %11  15 lshift and 15 rshift ; 
: OTG_HS_GLOBAL_PKTSTS@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Host @ %1111  17 lshift and 17 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GRXFSIZ (read-write)
$00000200 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GRXFSIZ 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GRXFSIZ bis!        \ OTG_HS_GLOBAL_RXFD	Bit 0	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_GRXFSIZ Register BitField Fetch Words  
: OTG_HS_GLOBAL_RXFD@ OTG_HS_GLOBAL_OTG_HS_GRXFSIZ @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GNPTXFSIZ_Host (read-write)
$00000200 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GNPTXFSIZ_Host 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GNPTXFSIZ_Host bis!        \ OTG_HS_GLOBAL_NPTXFSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_GNPTXFSIZ_Host bis!        \ OTG_HS_GLOBAL_NPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_GNPTXFSIZ_Host Register BitField Fetch Words  
: OTG_HS_GLOBAL_NPTXFSA@ OTG_HS_GLOBAL_OTG_HS_GNPTXFSIZ_Host @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_NPTXFD@ OTG_HS_GLOBAL_OTG_HS_GNPTXFSIZ_Host @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_TX0FSIZ_Peripheral (read-write)
$00000200 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_TX0FSIZ_Peripheral 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_TX0FSIZ_Peripheral bis!        \ OTG_HS_GLOBAL_TX0FSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_TX0FSIZ_Peripheral bis!        \ OTG_HS_GLOBAL_TX0FD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_TX0FSIZ_Peripheral Register BitField Fetch Words  
: OTG_HS_GLOBAL_TX0FSA@ OTG_HS_GLOBAL_OTG_HS_TX0FSIZ_Peripheral @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_TX0FD@ OTG_HS_GLOBAL_OTG_HS_TX0FSIZ_Peripheral @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GNPTXSTS (read-only)
$00080200 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GNPTXSTS 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GNPTXSTS bis!        \ OTG_HS_GLOBAL_NPTXFSAV	Bit 0	 Width 16
 %xxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_GNPTXSTS bis!        \ OTG_HS_GLOBAL_NPTQXSAV	Bit 16	 Width 8
 %xxxxxxx  24 lshift OTG_HS_GLOBAL_OTG_HS_GNPTXSTS bis!        \ OTG_HS_GLOBAL_NPTXQTOP	Bit 24	 Width 7
\ OTG_HS_GLOBAL_OTG_HS_GNPTXSTS Register BitField Fetch Words  
: OTG_HS_GLOBAL_NPTXFSAV@ OTG_HS_GLOBAL_OTG_HS_GNPTXSTS @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_NPTQXSAV@ OTG_HS_GLOBAL_OTG_HS_GNPTXSTS @ %11111111  16 lshift and 16 rshift ; 
: OTG_HS_GLOBAL_NPTXQTOP@ OTG_HS_GLOBAL_OTG_HS_GNPTXSTS @ %1111111  24 lshift and 24 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GCCFG (read-write)
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GCCFG 
 %1  16 lshift OTG_HS_GLOBAL_OTG_HS_GCCFG bis!        \ OTG_HS_GLOBAL_PWRDWN	Bit 16	 Width 1
 %1  17 lshift OTG_HS_GLOBAL_OTG_HS_GCCFG bis!        \ OTG_HS_GLOBAL_I2CPADEN	Bit 17	 Width 1
 %1  18 lshift OTG_HS_GLOBAL_OTG_HS_GCCFG bis!        \ OTG_HS_GLOBAL_VBUSASEN	Bit 18	 Width 1
 %1  19 lshift OTG_HS_GLOBAL_OTG_HS_GCCFG bis!        \ OTG_HS_GLOBAL_VBUSBSEN	Bit 19	 Width 1
 %1  20 lshift OTG_HS_GLOBAL_OTG_HS_GCCFG bis!        \ OTG_HS_GLOBAL_SOFOUTEN	Bit 20	 Width 1
 %1  21 lshift OTG_HS_GLOBAL_OTG_HS_GCCFG bis!        \ OTG_HS_GLOBAL_NOVBUSSENS	Bit 21	 Width 1
\ OTG_HS_GLOBAL_OTG_HS_GCCFG Register BitField Fetch Words  
: OTG_HS_GLOBAL_PWRDWN@ OTG_HS_GLOBAL_OTG_HS_GCCFG @ %1  16 lshift and 16 rshift ; 
: OTG_HS_GLOBAL_I2CPADEN@ OTG_HS_GLOBAL_OTG_HS_GCCFG @ %1  17 lshift and 17 rshift ; 
: OTG_HS_GLOBAL_VBUSASEN@ OTG_HS_GLOBAL_OTG_HS_GCCFG @ %1  18 lshift and 18 rshift ; 
: OTG_HS_GLOBAL_VBUSBSEN@ OTG_HS_GLOBAL_OTG_HS_GCCFG @ %1  19 lshift and 19 rshift ; 
: OTG_HS_GLOBAL_SOFOUTEN@ OTG_HS_GLOBAL_OTG_HS_GCCFG @ %1  20 lshift and 20 rshift ; 
: OTG_HS_GLOBAL_NOVBUSSENS@ OTG_HS_GLOBAL_OTG_HS_GCCFG @ %1  21 lshift and 21 rshift ; 

OTG_HS_GLOBAL_OTG_HS_CID (read-write)
$00001200 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_CID 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_CID bis!        \ OTG_HS_GLOBAL_PRODUCT_ID	Bit 0	 Width 32
\ OTG_HS_GLOBAL_OTG_HS_CID Register BitField Fetch Words  
: OTG_HS_GLOBAL_PRODUCT_ID@ OTG_HS_GLOBAL_OTG_HS_CID @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ (read-write)
$02000600 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ bis!        \ OTG_HS_GLOBAL_PTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ bis!        \ OTG_HS_GLOBAL_PTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ Register BitField Fetch Words  
: OTG_HS_GLOBAL_PTXSA@ OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_PTXFD@ OTG_HS_GLOBAL_OTG_HS_HPTXFSIZ @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_DIEPTXF1 (read-write)
$02000400 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_DIEPTXF1 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF1 bis!        \ OTG_HS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF1 bis!        \ OTG_HS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_DIEPTXF1 Register BitField Fetch Words  
: OTG_HS_GLOBAL_INEPTXSA@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF1 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_INEPTXFD@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF1 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_DIEPTXF2 (read-write)
$02000400 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_DIEPTXF2 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF2 bis!        \ OTG_HS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF2 bis!        \ OTG_HS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_DIEPTXF2 Register BitField Fetch Words  
: OTG_HS_GLOBAL_INEPTXSA@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF2 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_INEPTXFD@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF2 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_DIEPTXF3 (read-write)
$02000400 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_DIEPTXF3 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF3 bis!        \ OTG_HS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF3 bis!        \ OTG_HS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_DIEPTXF3 Register BitField Fetch Words  
: OTG_HS_GLOBAL_INEPTXSA@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF3 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_INEPTXFD@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF3 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_DIEPTXF4 (read-write)
$02000400 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_DIEPTXF4 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF4 bis!        \ OTG_HS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF4 bis!        \ OTG_HS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_DIEPTXF4 Register BitField Fetch Words  
: OTG_HS_GLOBAL_INEPTXSA@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF4 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_INEPTXFD@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF4 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_DIEPTXF5 (read-write)
$02000400 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_DIEPTXF5 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF5 bis!        \ OTG_HS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF5 bis!        \ OTG_HS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_DIEPTXF5 Register BitField Fetch Words  
: OTG_HS_GLOBAL_INEPTXSA@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF5 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_INEPTXFD@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF5 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_DIEPTXF6 (read-write)
$02000400 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_DIEPTXF6 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF6 bis!        \ OTG_HS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF6 bis!        \ OTG_HS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_DIEPTXF6 Register BitField Fetch Words  
: OTG_HS_GLOBAL_INEPTXSA@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF6 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_INEPTXFD@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF6 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_DIEPTXF7 (read-write)
$02000400 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_DIEPTXF7 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF7 bis!        \ OTG_HS_GLOBAL_INEPTXSA	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_GLOBAL_OTG_HS_DIEPTXF7 bis!        \ OTG_HS_GLOBAL_INEPTXFD	Bit 16	 Width 16
\ OTG_HS_GLOBAL_OTG_HS_DIEPTXF7 Register BitField Fetch Words  
: OTG_HS_GLOBAL_INEPTXSA@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF7 @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_INEPTXFD@ OTG_HS_GLOBAL_OTG_HS_DIEPTXF7 @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral (read-only)
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral 
 %xxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral bis!        \ OTG_HS_GLOBAL_EPNUM	Bit 0	 Width 4
 % 4 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral bis!        \ OTG_HS_GLOBAL_BCNT	Bit 4	 Width 11
 %xx  15 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral bis!        \ OTG_HS_GLOBAL_DPID	Bit 15	 Width 2
 %xxxx  17 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral bis!        \ OTG_HS_GLOBAL_PKTSTS	Bit 17	 Width 4
 %xxxx  21 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral bis!        \ OTG_HS_GLOBAL_FRMNUM	Bit 21	 Width 4
\ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral Register BitField Fetch Words  
: OTG_HS_GLOBAL_EPNUM@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral @ %1111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_BCNT@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral @ % 4 lshift and 4 rshift ; 
: OTG_HS_GLOBAL_DPID@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral @ %11  15 lshift and 15 rshift ; 
: OTG_HS_GLOBAL_PKTSTS@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral @ %1111  17 lshift and 17 rshift ; 
: OTG_HS_GLOBAL_FRMNUM@ OTG_HS_GLOBAL_OTG_HS_GRXSTSR_Peripheral @ %1111  21 lshift and 21 rshift ; 

OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral (read-only)
$0 CONSTANT RESET_OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral 
 %xxxx  0 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral bis!        \ OTG_HS_GLOBAL_EPNUM	Bit 0	 Width 4
 % 4 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral bis!        \ OTG_HS_GLOBAL_BCNT	Bit 4	 Width 11
 %xx  15 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral bis!        \ OTG_HS_GLOBAL_DPID	Bit 15	 Width 2
 %xxxx  17 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral bis!        \ OTG_HS_GLOBAL_PKTSTS	Bit 17	 Width 4
 %xxxx  21 lshift OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral bis!        \ OTG_HS_GLOBAL_FRMNUM	Bit 21	 Width 4
\ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral Register BitField Fetch Words  
: OTG_HS_GLOBAL_EPNUM@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral @ %1111  0 lshift and 0 rshift ; 
: OTG_HS_GLOBAL_BCNT@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral @ % 4 lshift and 4 rshift ; 
: OTG_HS_GLOBAL_DPID@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral @ %11  15 lshift and 15 rshift ; 
: OTG_HS_GLOBAL_PKTSTS@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral @ %1111  17 lshift and 17 rshift ; 
: OTG_HS_GLOBAL_FRMNUM@ OTG_HS_GLOBAL_OTG_HS_GRXSTSP_Peripheral @ %1111  21 lshift and 21 rshift ; 

                    
################################### OTG_HS_HOST ###################################
OTG_HS_HOST_OTG_HS_HCFG ()
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCFG 
 %xx  0 lshift OTG_HS_HOST_OTG_HS_HCFG bis!        \ OTG_HS_HOST_FSLSPCS	Bit 0	 Width 2
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCFG bis!        \ OTG_HS_HOST_FSLSS	Bit 2	 Width 1
\ OTG_HS_HOST_OTG_HS_HCFG Register BitField Fetch Words  
: OTG_HS_HOST_FSLSPCS@ OTG_HS_HOST_OTG_HS_HCFG @ %11  0 lshift and 0 rshift ; 
: OTG_HS_HOST_FSLSS@ OTG_HS_HOST_OTG_HS_HCFG @ %1  2 lshift and 2 rshift ; 

OTG_HS_HOST_OTG_HS_HFIR (read-write)
$0000EA60 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HFIR 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HFIR bis!        \ OTG_HS_HOST_FRIVL	Bit 0	 Width 16
\ OTG_HS_HOST_OTG_HS_HFIR Register BitField Fetch Words  
: OTG_HS_HOST_FRIVL@ OTG_HS_HOST_OTG_HS_HFIR @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HFNUM (read-only)
$00003FFF CONSTANT RESET_OTG_HS_HOST_OTG_HS_HFNUM 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HFNUM bis!        \ OTG_HS_HOST_FRNUM	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_HOST_OTG_HS_HFNUM bis!        \ OTG_HS_HOST_FTREM	Bit 16	 Width 16
\ OTG_HS_HOST_OTG_HS_HFNUM Register BitField Fetch Words  
: OTG_HS_HOST_FRNUM@ OTG_HS_HOST_OTG_HS_HFNUM @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_FTREM@ OTG_HS_HOST_OTG_HS_HFNUM @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_HOST_OTG_HS_HPTXSTS ()
$00080100 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HPTXSTS 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HPTXSTS bis!        \ OTG_HS_HOST_PTXFSAVL	Bit 0	 Width 16
 %xxxxxxxx  16 lshift OTG_HS_HOST_OTG_HS_HPTXSTS bis!        \ OTG_HS_HOST_PTXQSAV	Bit 16	 Width 8
 %xxxxxxxx  24 lshift OTG_HS_HOST_OTG_HS_HPTXSTS bis!        \ OTG_HS_HOST_PTXQTOP	Bit 24	 Width 8
\ OTG_HS_HOST_OTG_HS_HPTXSTS Register BitField Fetch Words  
: OTG_HS_HOST_PTXFSAVL@ OTG_HS_HOST_OTG_HS_HPTXSTS @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_PTXQSAV@ OTG_HS_HOST_OTG_HS_HPTXSTS @ %11111111  16 lshift and 16 rshift ; 
: OTG_HS_HOST_PTXQTOP@ OTG_HS_HOST_OTG_HS_HPTXSTS @ %11111111  24 lshift and 24 rshift ; 

OTG_HS_HOST_OTG_HS_HAINT (read-only)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HAINT 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HAINT bis!        \ OTG_HS_HOST_HAINT	Bit 0	 Width 16
\ OTG_HS_HOST_OTG_HS_HAINT Register BitField Fetch Words  
: OTG_HS_HOST_HAINT@ OTG_HS_HOST_OTG_HS_HAINT @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HAINTMSK (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HAINTMSK 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HAINTMSK bis!        \ OTG_HS_HOST_HAINTM	Bit 0	 Width 16
\ OTG_HS_HOST_OTG_HS_HAINTMSK Register BitField Fetch Words  
: OTG_HS_HOST_HAINTM@ OTG_HS_HOST_OTG_HS_HAINTMSK @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HPRT ()
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HPRT 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PCSTS	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PCDET	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PENA	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PENCHNG	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_POCA	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_POCCHNG	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PRES	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PSUSP	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PRST	Bit 8	 Width 1
 %xx  10 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PLSTS	Bit 10	 Width 2
 %1  12 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PPWR	Bit 12	 Width 1
 %xxxx  13 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PTCTL	Bit 13	 Width 4
 %xx  17 lshift OTG_HS_HOST_OTG_HS_HPRT bis!        \ OTG_HS_HOST_PSPD	Bit 17	 Width 2
\ OTG_HS_HOST_OTG_HS_HPRT Register BitField Fetch Words  
: OTG_HS_HOST_PCSTS@ OTG_HS_HOST_OTG_HS_HPRT @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_PCDET@ OTG_HS_HOST_OTG_HS_HPRT @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_PENA@ OTG_HS_HOST_OTG_HS_HPRT @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_PENCHNG@ OTG_HS_HOST_OTG_HS_HPRT @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_POCA@ OTG_HS_HOST_OTG_HS_HPRT @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_POCCHNG@ OTG_HS_HOST_OTG_HS_HPRT @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_PRES@ OTG_HS_HOST_OTG_HS_HPRT @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_PSUSP@ OTG_HS_HOST_OTG_HS_HPRT @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_PRST@ OTG_HS_HOST_OTG_HS_HPRT @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_PLSTS@ OTG_HS_HOST_OTG_HS_HPRT @ %11  10 lshift and 10 rshift ; 
: OTG_HS_HOST_PPWR@ OTG_HS_HOST_OTG_HS_HPRT @ %1  12 lshift and 12 rshift ; 
: OTG_HS_HOST_PTCTL@ OTG_HS_HOST_OTG_HS_HPRT @ %1111  13 lshift and 13 rshift ; 
: OTG_HS_HOST_PSPD@ OTG_HS_HOST_OTG_HS_HPRT @ %11  17 lshift and 17 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR0 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR0 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR0 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR0 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR0 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR1 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR1 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR1 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR1 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR1 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR2 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR2 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR2 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR2 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR2 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR3 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR3 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR3 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR3 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR3 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR4 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR4 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR4 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR4 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR4 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR5 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR5 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR5 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR5 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR5 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR6 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR6 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR6 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR6 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR6 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR7 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR7 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR7 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR7 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR7 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR8 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR8 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR8 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR8 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR8 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR9 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR9 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR9 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR9 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR9 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR10 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR10 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR10 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR10 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR10 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCCHAR11 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCCHAR11 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_MPSIZ	Bit 0	 Width 11
 %xxxx  11 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_EPNUM	Bit 11	 Width 4
 %1  15 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_EPDIR	Bit 15	 Width 1
 %1  17 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_LSDEV	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_EPTYP	Bit 18	 Width 2
 %xx  20 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_MC	Bit 20	 Width 2
 %xxxxxxx  22 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_DAD	Bit 22	 Width 7
 %1  29 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_ODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_CHDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCCHAR11 bis!        \ OTG_HS_HOST_CHENA	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCCHAR11 Register BitField Fetch Words  
: OTG_HS_HOST_MPSIZ@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_EPNUM@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %1111  11 lshift and 11 rshift ; 
: OTG_HS_HOST_EPDIR@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_HOST_LSDEV@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_HOST_EPTYP@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_HOST_MC@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %11  20 lshift and 20 rshift ; 
: OTG_HS_HOST_DAD@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %1111111  22 lshift and 22 rshift ; 
: OTG_HS_HOST_ODDFRM@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_HOST_CHDIS@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_HOST_CHENA@ OTG_HS_HOST_OTG_HS_HCCHAR11 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT0 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT0 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT0 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT0 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT0 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT0 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT0 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT0 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT0 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT0 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT0 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT0 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT0 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT1 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT1 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT1 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT1 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT1 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT1 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT1 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT1 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT1 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT1 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT1 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT1 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT1 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT2 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT2 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT2 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT2 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT2 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT2 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT2 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT2 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT2 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT2 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT2 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT2 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT2 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT3 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT3 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT3 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT3 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT3 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT3 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT3 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT3 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT3 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT3 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT3 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT3 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT3 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT4 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT4 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT4 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT4 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT4 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT4 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT4 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT4 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT4 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT4 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT4 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT4 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT4 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT5 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT5 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT5 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT5 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT5 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT5 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT5 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT5 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT5 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT5 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT5 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT5 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT5 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT6 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT6 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT6 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT6 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT6 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT6 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT6 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT6 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT6 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT6 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT6 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT6 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT6 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT7 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT7 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT7 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT7 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT7 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT7 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT7 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT7 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT7 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT7 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT7 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT7 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT7 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT8 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT8 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT8 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT8 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT8 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT8 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT8 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT8 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT8 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT8 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT8 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT8 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT8 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT9 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT9 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT9 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT9 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT9 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT9 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT9 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT9 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT9 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT9 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT9 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT9 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT9 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT10 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT10 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT10 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT10 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT10 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT10 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT10 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT10 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT10 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT10 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT10 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT10 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT10 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCSPLT11 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCSPLT11 
 %xxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCSPLT11 bis!        \ OTG_HS_HOST_PRTADDR	Bit 0	 Width 7
 %xxxxxxx  7 lshift OTG_HS_HOST_OTG_HS_HCSPLT11 bis!        \ OTG_HS_HOST_HUBADDR	Bit 7	 Width 7
 %xx  14 lshift OTG_HS_HOST_OTG_HS_HCSPLT11 bis!        \ OTG_HS_HOST_XACTPOS	Bit 14	 Width 2
 %1  16 lshift OTG_HS_HOST_OTG_HS_HCSPLT11 bis!        \ OTG_HS_HOST_COMPLSPLT	Bit 16	 Width 1
 %1  31 lshift OTG_HS_HOST_OTG_HS_HCSPLT11 bis!        \ OTG_HS_HOST_SPLITEN	Bit 31	 Width 1
\ OTG_HS_HOST_OTG_HS_HCSPLT11 Register BitField Fetch Words  
: OTG_HS_HOST_PRTADDR@ OTG_HS_HOST_OTG_HS_HCSPLT11 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_HOST_HUBADDR@ OTG_HS_HOST_OTG_HS_HCSPLT11 @ %1111111  7 lshift and 7 rshift ; 
: OTG_HS_HOST_XACTPOS@ OTG_HS_HOST_OTG_HS_HCSPLT11 @ %11  14 lshift and 14 rshift ; 
: OTG_HS_HOST_COMPLSPLT@ OTG_HS_HOST_OTG_HS_HCSPLT11 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_HOST_SPLITEN@ OTG_HS_HOST_OTG_HS_HCSPLT11 @ %1  31 lshift and 31 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT0 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT0 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT0 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT0 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT0 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT1 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT1 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT1 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT1 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT1 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT2 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT2 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT2 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT2 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT2 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT3 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT3 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT3 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT3 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT3 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT4 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT4 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT4 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT4 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT4 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT5 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT5 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT5 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT5 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT5 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT6 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT6 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT6 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT6 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT6 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT7 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT7 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT7 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT7 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT7 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT8 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT8 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT8 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT8 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT8 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT9 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT9 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT9 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT9 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT9 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT10 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT10 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT10 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT10 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT10 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINT11 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINT11 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_CHH	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_STALL	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_NAK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_ACK	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_TXERR	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_BBERR	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_FRMOR	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINT11 bis!        \ OTG_HS_HOST_DTERR	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINT11 Register BitField Fetch Words  
: OTG_HS_HOST_XFRC@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHH@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALL@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAK@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACK@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERR@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERR@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMOR@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERR@ OTG_HS_HOST_OTG_HS_HCINT11 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK0 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK0 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK0 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK0 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK0 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK1 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK1 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK1 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK1 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK1 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK2 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK2 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK2 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK2 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK2 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK3 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK3 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK3 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK3 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK3 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK4 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK4 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK4 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK4 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK4 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK5 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK5 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK5 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK5 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK5 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK6 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK6 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK6 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK6 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK6 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK7 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK7 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK7 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK7 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK7 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK8 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK8 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK8 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK8 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK8 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK9 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK9 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK9 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK9 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK9 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK10 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK10 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK10 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK10 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK10 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCINTMSK11 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCINTMSK11 
 %1  0 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_CHHM	Bit 1	 Width 1
 %1  2 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_AHBERR	Bit 2	 Width 1
 %1  3 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_STALLM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_NAKM	Bit 4	 Width 1
 %1  5 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_ACKM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_NYET	Bit 6	 Width 1
 %1  7 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_TXERRM	Bit 7	 Width 1
 %1  8 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_BBERRM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_FRMORM	Bit 9	 Width 1
 %1  10 lshift OTG_HS_HOST_OTG_HS_HCINTMSK11 bis!        \ OTG_HS_HOST_DTERRM	Bit 10	 Width 1
\ OTG_HS_HOST_OTG_HS_HCINTMSK11 Register BitField Fetch Words  
: OTG_HS_HOST_XFRCM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_HOST_CHHM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_HOST_AHBERR@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  2 lshift and 2 rshift ; 
: OTG_HS_HOST_STALLM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_HOST_NAKM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_HOST_ACKM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_HOST_NYET@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_HOST_TXERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_HOST_BBERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_HOST_FRMORM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_HOST_DTERRM@ OTG_HS_HOST_OTG_HS_HCINTMSK11 @ %1  10 lshift and 10 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ0 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ0 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ0 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ0 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ0 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ0 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ0 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ0 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ0 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ1 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ1 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ1 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ1 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ1 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ1 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ1 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ1 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ1 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ2 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ2 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ2 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ2 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ2 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ2 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ2 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ2 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ2 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ3 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ3 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ3 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ3 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ3 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ3 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ3 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ3 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ3 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ4 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ4 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ4 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ4 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ4 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ4 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ4 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ4 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ4 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ5 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ5 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ5 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ5 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ5 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ5 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ5 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ5 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ5 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ6 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ6 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ6 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ6 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ6 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ6 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ6 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ6 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ6 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ7 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ7 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ7 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ7 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ7 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ7 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ7 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ7 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ7 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ8 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ8 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ8 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ8 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ8 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ8 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ8 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ8 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ8 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ9 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ9 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ9 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ9 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ9 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ9 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ9 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ9 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ9 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ10 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ10 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ10 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ10 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ10 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ10 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ10 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ10 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ10 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCTSIZ11 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCTSIZ11 
 % 0 lshift OTG_HS_HOST_OTG_HS_HCTSIZ11 bis!        \ OTG_HS_HOST_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_HOST_OTG_HS_HCTSIZ11 bis!        \ OTG_HS_HOST_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_HOST_OTG_HS_HCTSIZ11 bis!        \ OTG_HS_HOST_DPID	Bit 29	 Width 2
\ OTG_HS_HOST_OTG_HS_HCTSIZ11 Register BitField Fetch Words  
: OTG_HS_HOST_XFRSIZ@ OTG_HS_HOST_OTG_HS_HCTSIZ11 @ % 0 lshift and 0 rshift ; 
: OTG_HS_HOST_PKTCNT@ OTG_HS_HOST_OTG_HS_HCTSIZ11 @ % 19 lshift and 19 rshift ; 
: OTG_HS_HOST_DPID@ OTG_HS_HOST_OTG_HS_HCTSIZ11 @ %11  29 lshift and 29 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA0 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA0 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA0 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA0 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA0 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA1 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA1 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA1 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA2 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA2 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA2 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA3 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA3 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA3 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA3 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA3 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA4 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA4 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA4 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA4 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA4 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA5 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA5 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA5 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA5 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA5 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA6 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA6 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA6 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA6 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA6 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA7 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA7 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA7 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA7 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA7 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA8 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA8 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA8 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA8 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA8 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA9 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA9 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA9 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA9 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA9 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA10 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA10 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA10 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA10 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA10 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_HOST_OTG_HS_HCDMA11 (read-write)
$0 CONSTANT RESET_OTG_HS_HOST_OTG_HS_HCDMA11 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_HOST_OTG_HS_HCDMA11 bis!        \ OTG_HS_HOST_DMAADDR	Bit 0	 Width 32
\ OTG_HS_HOST_OTG_HS_HCDMA11 Register BitField Fetch Words  
: OTG_HS_HOST_DMAADDR@ OTG_HS_HOST_OTG_HS_HCDMA11 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

                    
################################### OTG_HS_DEVICE ###################################
OTG_HS_DEVICE_OTG_HS_DCFG (read-write)
$02200000 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DCFG 
 %xx  0 lshift OTG_HS_DEVICE_OTG_HS_DCFG bis!        \ OTG_HS_DEVICE_DSPD	Bit 0	 Width 2
 %1  2 lshift OTG_HS_DEVICE_OTG_HS_DCFG bis!        \ OTG_HS_DEVICE_NZLSOHSK	Bit 2	 Width 1
 %xxxxxxx  4 lshift OTG_HS_DEVICE_OTG_HS_DCFG bis!        \ OTG_HS_DEVICE_DAD	Bit 4	 Width 7
 %xx  11 lshift OTG_HS_DEVICE_OTG_HS_DCFG bis!        \ OTG_HS_DEVICE_PFIVL	Bit 11	 Width 2
 %xx  24 lshift OTG_HS_DEVICE_OTG_HS_DCFG bis!        \ OTG_HS_DEVICE_PERSCHIVL	Bit 24	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DCFG Register BitField Fetch Words  
: OTG_HS_DEVICE_DSPD@ OTG_HS_DEVICE_OTG_HS_DCFG @ %11  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_NZLSOHSK@ OTG_HS_DEVICE_OTG_HS_DCFG @ %1  2 lshift and 2 rshift ; 
: OTG_HS_DEVICE_DAD@ OTG_HS_DEVICE_OTG_HS_DCFG @ %1111111  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_PFIVL@ OTG_HS_DEVICE_OTG_HS_DCFG @ %11  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_PERSCHIVL@ OTG_HS_DEVICE_OTG_HS_DCFG @ %11  24 lshift and 24 rshift ; 

OTG_HS_DEVICE_OTG_HS_DCTL ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DCTL 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_RWUSIG	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_SDIS	Bit 1	 Width 1
 %1  2 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_GINSTS	Bit 2	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_GONSTS	Bit 3	 Width 1
 %xxx  4 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_TCTL	Bit 4	 Width 3
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_SGINAK	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_CGINAK	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_SGONAK	Bit 9	 Width 1
 %1  10 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_CGONAK	Bit 10	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DCTL bis!        \ OTG_HS_DEVICE_POPRGDNE	Bit 11	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DCTL Register BitField Fetch Words  
: OTG_HS_DEVICE_RWUSIG@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_SDIS@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_GINSTS@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  2 lshift and 2 rshift ; 
: OTG_HS_DEVICE_GONSTS@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_TCTL@ OTG_HS_DEVICE_OTG_HS_DCTL @ %111  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_SGINAK@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_CGINAK@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_SGONAK@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_CGONAK@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  10 lshift and 10 rshift ; 
: OTG_HS_DEVICE_POPRGDNE@ OTG_HS_DEVICE_OTG_HS_DCTL @ %1  11 lshift and 11 rshift ; 

OTG_HS_DEVICE_OTG_HS_DSTS (read-only)
$00000010 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DSTS 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DSTS bis!        \ OTG_HS_DEVICE_SUSPSTS	Bit 0	 Width 1
 %xx  1 lshift OTG_HS_DEVICE_OTG_HS_DSTS bis!        \ OTG_HS_DEVICE_ENUMSPD	Bit 1	 Width 2
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DSTS bis!        \ OTG_HS_DEVICE_EERR	Bit 3	 Width 1
 %xxxxxxxxxxxxxx  8 lshift OTG_HS_DEVICE_OTG_HS_DSTS bis!        \ OTG_HS_DEVICE_FNSOF	Bit 8	 Width 14
\ OTG_HS_DEVICE_OTG_HS_DSTS Register BitField Fetch Words  
: OTG_HS_DEVICE_SUSPSTS@ OTG_HS_DEVICE_OTG_HS_DSTS @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_ENUMSPD@ OTG_HS_DEVICE_OTG_HS_DSTS @ %11  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_EERR@ OTG_HS_DEVICE_OTG_HS_DSTS @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_FNSOF@ OTG_HS_DEVICE_OTG_HS_DSTS @ %11111111111111  8 lshift and 8 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPMSK (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPMSK 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_EPDM	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_TOM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_ITTXFEMSK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_INEPNMM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_INEPNEM	Bit 6	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_TXFURM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPMSK bis!        \ OTG_HS_DEVICE_BIM	Bit 9	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPMSK Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRCM@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDM@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOM@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFEMSK@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNMM@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  5 lshift and 5 rshift ; 
: OTG_HS_DEVICE_INEPNEM@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFURM@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BIM@ OTG_HS_DEVICE_OTG_HS_DIEPMSK @ %1  9 lshift and 9 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPMSK (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPMSK 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPMSK bis!        \ OTG_HS_DEVICE_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPMSK bis!        \ OTG_HS_DEVICE_EPDM	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPMSK bis!        \ OTG_HS_DEVICE_STUPM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPMSK bis!        \ OTG_HS_DEVICE_OTEPDM	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPMSK bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DOEPMSK bis!        \ OTG_HS_DEVICE_OPEM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DOEPMSK bis!        \ OTG_HS_DEVICE_BOIM	Bit 9	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPMSK Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRCM@ OTG_HS_DEVICE_OTG_HS_DOEPMSK @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDM@ OTG_HS_DEVICE_OTG_HS_DOEPMSK @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUPM@ OTG_HS_DEVICE_OTG_HS_DOEPMSK @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDM@ OTG_HS_DEVICE_OTG_HS_DOEPMSK @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPMSK @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_OPEM@ OTG_HS_DEVICE_OTG_HS_DOEPMSK @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BOIM@ OTG_HS_DEVICE_OTG_HS_DOEPMSK @ %1  9 lshift and 9 rshift ; 

OTG_HS_DEVICE_OTG_HS_DAINT (read-only)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DAINT 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DAINT bis!        \ OTG_HS_DEVICE_IEPINT	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_DEVICE_OTG_HS_DAINT bis!        \ OTG_HS_DEVICE_OEPINT	Bit 16	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DAINT Register BitField Fetch Words  
: OTG_HS_DEVICE_IEPINT@ OTG_HS_DEVICE_OTG_HS_DAINT @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_OEPINT@ OTG_HS_DEVICE_OTG_HS_DAINT @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_DEVICE_OTG_HS_DAINTMSK (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DAINTMSK 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DAINTMSK bis!        \ OTG_HS_DEVICE_IEPM	Bit 0	 Width 16
 %xxxxxxxxxxxxxxxx  16 lshift OTG_HS_DEVICE_OTG_HS_DAINTMSK bis!        \ OTG_HS_DEVICE_OEPM	Bit 16	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DAINTMSK Register BitField Fetch Words  
: OTG_HS_DEVICE_IEPM@ OTG_HS_DEVICE_OTG_HS_DAINTMSK @ %1111111111111111  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_OEPM@ OTG_HS_DEVICE_OTG_HS_DAINTMSK @ %1111111111111111  16 lshift and 16 rshift ; 

OTG_HS_DEVICE_OTG_HS_DVBUSDIS (read-write)
$000017D7 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DVBUSDIS 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DVBUSDIS bis!        \ OTG_HS_DEVICE_VBUSDT	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DVBUSDIS Register BitField Fetch Words  
: OTG_HS_DEVICE_VBUSDT@ OTG_HS_DEVICE_OTG_HS_DVBUSDIS @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DVBUSPULSE (read-write)
$000005B8 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DVBUSPULSE 
 %xxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DVBUSPULSE bis!        \ OTG_HS_DEVICE_DVBUSP	Bit 0	 Width 12
\ OTG_HS_DEVICE_OTG_HS_DVBUSPULSE Register BitField Fetch Words  
: OTG_HS_DEVICE_DVBUSP@ OTG_HS_DEVICE_OTG_HS_DVBUSPULSE @ %11111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DTHRCTL (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DTHRCTL 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DTHRCTL bis!        \ OTG_HS_DEVICE_NONISOTHREN	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DTHRCTL bis!        \ OTG_HS_DEVICE_ISOTHREN	Bit 1	 Width 1
 %xxxxxxxxx  2 lshift OTG_HS_DEVICE_OTG_HS_DTHRCTL bis!        \ OTG_HS_DEVICE_TXTHRLEN	Bit 2	 Width 9
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DTHRCTL bis!        \ OTG_HS_DEVICE_RXTHREN	Bit 16	 Width 1
 %xxxxxxxxx  17 lshift OTG_HS_DEVICE_OTG_HS_DTHRCTL bis!        \ OTG_HS_DEVICE_RXTHRLEN	Bit 17	 Width 9
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DTHRCTL bis!        \ OTG_HS_DEVICE_ARPEN	Bit 27	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DTHRCTL Register BitField Fetch Words  
: OTG_HS_DEVICE_NONISOTHREN@ OTG_HS_DEVICE_OTG_HS_DTHRCTL @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_ISOTHREN@ OTG_HS_DEVICE_OTG_HS_DTHRCTL @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TXTHRLEN@ OTG_HS_DEVICE_OTG_HS_DTHRCTL @ %111111111  2 lshift and 2 rshift ; 
: OTG_HS_DEVICE_RXTHREN@ OTG_HS_DEVICE_OTG_HS_DTHRCTL @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_RXTHRLEN@ OTG_HS_DEVICE_OTG_HS_DTHRCTL @ %111111111  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_ARPEN@ OTG_HS_DEVICE_OTG_HS_DTHRCTL @ %1  27 lshift and 27 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPEMPMSK (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPEMPMSK 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPEMPMSK bis!        \ OTG_HS_DEVICE_INEPTXFEM	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DIEPEMPMSK Register BitField Fetch Words  
: OTG_HS_DEVICE_INEPTXFEM@ OTG_HS_DEVICE_OTG_HS_DIEPEMPMSK @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DEACHINT (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DEACHINT 
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DEACHINT bis!        \ OTG_HS_DEVICE_IEP1INT	Bit 1	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DEACHINT bis!        \ OTG_HS_DEVICE_OEP1INT	Bit 17	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DEACHINT Register BitField Fetch Words  
: OTG_HS_DEVICE_IEP1INT@ OTG_HS_DEVICE_OTG_HS_DEACHINT @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_OEP1INT@ OTG_HS_DEVICE_OTG_HS_DEACHINT @ %1  17 lshift and 17 rshift ; 

OTG_HS_DEVICE_OTG_HS_DEACHINTMSK (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DEACHINTMSK 
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DEACHINTMSK bis!        \ OTG_HS_DEVICE_IEP1INTM	Bit 1	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DEACHINTMSK bis!        \ OTG_HS_DEVICE_OEP1INTM	Bit 17	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DEACHINTMSK Register BitField Fetch Words  
: OTG_HS_DEVICE_IEP1INTM@ OTG_HS_DEVICE_OTG_HS_DEACHINTMSK @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_OEP1INTM@ OTG_HS_DEVICE_OTG_HS_DEACHINTMSK @ %1  17 lshift and 17 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_EPDM	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_TOM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_ITTXFEMSK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_INEPNMM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_INEPNEM	Bit 6	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_TXFURM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_BIM	Bit 9	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 bis!        \ OTG_HS_DEVICE_NAKM	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRCM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFEMSK@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNMM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_DEVICE_INEPNEM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFURM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BIM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_NAKM@ OTG_HS_DEVICE_OTG_HS_DIEPEACHMSK1 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_XFRCM	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_EPDM	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_TOM	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_ITTXFEMSK	Bit 4	 Width 1
 %1  5 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_INEPNMM	Bit 5	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_INEPNEM	Bit 6	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_TXFURM	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_BIM	Bit 9	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_BERRM	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_NAKM	Bit 13	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 bis!        \ OTG_HS_DEVICE_NYETM	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRCM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFEMSK@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNMM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  5 lshift and 5 rshift ; 
: OTG_HS_DEVICE_INEPNEM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFURM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BIM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_BERRM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAKM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  13 lshift and 13 rshift ; 
: OTG_HS_DEVICE_NYETM@ OTG_HS_DEVICE_OTG_HS_DOEPEACHMSK1 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL0 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL0 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL0 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL0 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL1 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL1 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL1 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL1 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL2 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL2 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL2 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL2 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL3 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL3 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL3 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL3 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL4 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL4 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL4 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL4 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL5 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL5 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL5 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL5 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL6 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL6 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL6 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL6 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPCTL7 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPCTL7 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %xxxx  22 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_TXFNUM	Bit 22	 Width 4
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DIEPCTL7 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_TXFNUM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1111  22 lshift and 22 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DIEPCTL7 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT0 ()
$00000080 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT0 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT0 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT0 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT0 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT1 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT1 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT1 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT1 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT1 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT2 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT2 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT2 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT2 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT2 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT3 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT3 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT3 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT3 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT3 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT4 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT4 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT4 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT4 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT4 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT5 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT5 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT5 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT5 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT5 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT6 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT6 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT6 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT6 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT6 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPINT7 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPINT7 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_TOC	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_ITTXFE	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_INEPNE	Bit 6	 Width 1
 %1  7 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_TXFE	Bit 7	 Width 1
 %1  8 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_TXFIFOUDRN	Bit 8	 Width 1
 %1  9 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_BNA	Bit 9	 Width 1
 %1  11 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_PKTDRPSTS	Bit 11	 Width 1
 %1  12 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_BERR	Bit 12	 Width 1
 %1  13 lshift OTG_HS_DEVICE_OTG_HS_DIEPINT7 bis!        \ OTG_HS_DEVICE_NAK	Bit 13	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DIEPINT7 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_TOC@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_ITTXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_INEPNE@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_TXFE@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  7 lshift and 7 rshift ; 
: OTG_HS_DEVICE_TXFIFOUDRN@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  8 lshift and 8 rshift ; 
: OTG_HS_DEVICE_BNA@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  9 lshift and 9 rshift ; 
: OTG_HS_DEVICE_PKTDRPSTS@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  11 lshift and 11 rshift ; 
: OTG_HS_DEVICE_BERR@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  12 lshift and 12 rshift ; 
: OTG_HS_DEVICE_NAK@ OTG_HS_DEVICE_OTG_HS_DIEPINT7 @ %1  13 lshift and 13 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0 
 %xxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 7
 %xx  19 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ0 @ %11  19 lshift and 19 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPDMA1 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPDMA1 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPDMA1 bis!        \ OTG_HS_DEVICE_DMAADDR	Bit 0	 Width 32
\ OTG_HS_DEVICE_OTG_HS_DIEPDMA1 Register BitField Fetch Words  
: OTG_HS_DEVICE_DMAADDR@ OTG_HS_DEVICE_OTG_HS_DIEPDMA1 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPDMA2 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPDMA2 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPDMA2 bis!        \ OTG_HS_DEVICE_DMAADDR	Bit 0	 Width 32
\ OTG_HS_DEVICE_OTG_HS_DIEPDMA2 Register BitField Fetch Words  
: OTG_HS_DEVICE_DMAADDR@ OTG_HS_DEVICE_OTG_HS_DIEPDMA2 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPDMA3 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPDMA3 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPDMA3 bis!        \ OTG_HS_DEVICE_DMAADDR	Bit 0	 Width 32
\ OTG_HS_DEVICE_OTG_HS_DIEPDMA3 Register BitField Fetch Words  
: OTG_HS_DEVICE_DMAADDR@ OTG_HS_DEVICE_OTG_HS_DIEPDMA3 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPDMA4 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPDMA4 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPDMA4 bis!        \ OTG_HS_DEVICE_DMAADDR	Bit 0	 Width 32
\ OTG_HS_DEVICE_OTG_HS_DIEPDMA4 Register BitField Fetch Words  
: OTG_HS_DEVICE_DMAADDR@ OTG_HS_DEVICE_OTG_HS_DIEPDMA4 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPDMA5 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPDMA5 
 %xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DIEPDMA5 bis!        \ OTG_HS_DEVICE_DMAADDR	Bit 0	 Width 32
\ OTG_HS_DEVICE_OTG_HS_DIEPDMA5 Register BitField Fetch Words  
: OTG_HS_DEVICE_DMAADDR@ OTG_HS_DEVICE_OTG_HS_DIEPDMA5 @ %11111111111111111111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DTXFSTS0 (read-only)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DTXFSTS0 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DTXFSTS0 bis!        \ OTG_HS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DTXFSTS0 Register BitField Fetch Words  
: OTG_HS_DEVICE_INEPTFSAV@ OTG_HS_DEVICE_OTG_HS_DTXFSTS0 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DTXFSTS1 (read-only)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DTXFSTS1 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DTXFSTS1 bis!        \ OTG_HS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DTXFSTS1 Register BitField Fetch Words  
: OTG_HS_DEVICE_INEPTFSAV@ OTG_HS_DEVICE_OTG_HS_DTXFSTS1 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DTXFSTS2 (read-only)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DTXFSTS2 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DTXFSTS2 bis!        \ OTG_HS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DTXFSTS2 Register BitField Fetch Words  
: OTG_HS_DEVICE_INEPTFSAV@ OTG_HS_DEVICE_OTG_HS_DTXFSTS2 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DTXFSTS3 (read-only)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DTXFSTS3 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DTXFSTS3 bis!        \ OTG_HS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DTXFSTS3 Register BitField Fetch Words  
: OTG_HS_DEVICE_INEPTFSAV@ OTG_HS_DEVICE_OTG_HS_DTXFSTS3 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DTXFSTS4 (read-only)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DTXFSTS4 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DTXFSTS4 bis!        \ OTG_HS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DTXFSTS4 Register BitField Fetch Words  
: OTG_HS_DEVICE_INEPTFSAV@ OTG_HS_DEVICE_OTG_HS_DTXFSTS4 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DTXFSTS5 (read-only)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DTXFSTS5 
 %xxxxxxxxxxxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DTXFSTS5 bis!        \ OTG_HS_DEVICE_INEPTFSAV	Bit 0	 Width 16
\ OTG_HS_DEVICE_OTG_HS_DTXFSTS5 Register BitField Fetch Words  
: OTG_HS_DEVICE_INEPTFSAV@ OTG_HS_DEVICE_OTG_HS_DTXFSTS5 @ %1111111111111111  0 lshift and 0 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 bis!        \ OTG_HS_DEVICE_MCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_MCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ1 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 bis!        \ OTG_HS_DEVICE_MCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_MCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ2 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 bis!        \ OTG_HS_DEVICE_MCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_MCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ3 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 bis!        \ OTG_HS_DEVICE_MCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_MCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ4 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 bis!        \ OTG_HS_DEVICE_MCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_MCNT@ OTG_HS_DEVICE_OTG_HS_DIEPTSIZ5 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPCTL0 ()
$00008000 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPCTL0 
 %xx  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 2
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  20 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_SNPM	Bit 20	 Width 1
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL0 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %11  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_SNPM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  20 lshift and 20 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DOEPCTL0 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPCTL1 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPCTL1 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  20 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_SNPM	Bit 20	 Width 1
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL1 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_SNPM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  20 lshift and 20 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DOEPCTL1 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPCTL2 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPCTL2 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  20 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_SNPM	Bit 20	 Width 1
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL2 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_SNPM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  20 lshift and 20 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DOEPCTL2 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPCTL3 ()
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPCTL3 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_MPSIZ	Bit 0	 Width 11
 %1  15 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_USBAEP	Bit 15	 Width 1
 %1  16 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_EONUM_DPID	Bit 16	 Width 1
 %1  17 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_NAKSTS	Bit 17	 Width 1
 %xx  18 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_EPTYP	Bit 18	 Width 2
 %1  20 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_SNPM	Bit 20	 Width 1
 %1  21 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_Stall	Bit 21	 Width 1
 %1  26 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_CNAK	Bit 26	 Width 1
 %1  27 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_SNAK	Bit 27	 Width 1
 %1  28 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_SD0PID_SEVNFRM	Bit 28	 Width 1
 %1  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_SODDFRM	Bit 29	 Width 1
 %1  30 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_EPDIS	Bit 30	 Width 1
 %1  31 lshift OTG_HS_DEVICE_OTG_HS_DOEPCTL3 bis!        \ OTG_HS_DEVICE_EPENA	Bit 31	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 Register BitField Fetch Words  
: OTG_HS_DEVICE_MPSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_USBAEP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  15 lshift and 15 rshift ; 
: OTG_HS_DEVICE_EONUM_DPID@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  16 lshift and 16 rshift ; 
: OTG_HS_DEVICE_NAKSTS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  17 lshift and 17 rshift ; 
: OTG_HS_DEVICE_EPTYP@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %11  18 lshift and 18 rshift ; 
: OTG_HS_DEVICE_SNPM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  20 lshift and 20 rshift ; 
: OTG_HS_DEVICE_Stall@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  21 lshift and 21 rshift ; 
: OTG_HS_DEVICE_CNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  26 lshift and 26 rshift ; 
: OTG_HS_DEVICE_SNAK@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  27 lshift and 27 rshift ; 
: OTG_HS_DEVICE_SD0PID_SEVNFRM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  28 lshift and 28 rshift ; 
: OTG_HS_DEVICE_SODDFRM@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  29 lshift and 29 rshift ; 
: OTG_HS_DEVICE_EPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  30 lshift and 30 rshift ; 
: OTG_HS_DEVICE_EPENA@ OTG_HS_DEVICE_OTG_HS_DOEPCTL3 @ %1  31 lshift and 31 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT0 (read-write)
$00000080 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT0 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT0 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT0 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT0 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT0 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT0 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT0 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT0 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT0 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT0 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT0 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT0 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT0 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT0 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT1 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT1 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT1 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT1 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT1 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT1 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT1 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT1 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT1 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT1 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT1 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT1 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT1 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT1 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT1 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT2 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT2 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT2 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT2 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT2 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT2 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT2 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT2 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT2 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT2 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT2 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT2 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT2 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT2 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT2 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT3 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT3 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT3 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT3 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT3 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT3 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT3 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT3 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT3 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT3 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT3 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT3 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT3 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT3 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT3 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT4 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT4 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT4 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT4 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT4 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT4 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT4 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT4 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT4 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT4 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT4 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT4 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT4 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT4 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT4 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT5 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT5 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT5 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT5 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT5 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT5 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT5 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT5 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT5 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT5 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT5 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT5 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT5 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT5 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT5 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT6 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT6 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT6 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT6 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT6 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT6 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT6 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT6 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT6 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT6 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT6 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT6 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT6 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT6 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT6 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPINT7 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPINT7 
 %1  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT7 bis!        \ OTG_HS_DEVICE_XFRC	Bit 0	 Width 1
 %1  1 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT7 bis!        \ OTG_HS_DEVICE_EPDISD	Bit 1	 Width 1
 %1  3 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT7 bis!        \ OTG_HS_DEVICE_STUP	Bit 3	 Width 1
 %1  4 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT7 bis!        \ OTG_HS_DEVICE_OTEPDIS	Bit 4	 Width 1
 %1  6 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT7 bis!        \ OTG_HS_DEVICE_B2BSTUP	Bit 6	 Width 1
 %1  14 lshift OTG_HS_DEVICE_OTG_HS_DOEPINT7 bis!        \ OTG_HS_DEVICE_NYET	Bit 14	 Width 1
\ OTG_HS_DEVICE_OTG_HS_DOEPINT7 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRC@ OTG_HS_DEVICE_OTG_HS_DOEPINT7 @ %1  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_EPDISD@ OTG_HS_DEVICE_OTG_HS_DOEPINT7 @ %1  1 lshift and 1 rshift ; 
: OTG_HS_DEVICE_STUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT7 @ %1  3 lshift and 3 rshift ; 
: OTG_HS_DEVICE_OTEPDIS@ OTG_HS_DEVICE_OTG_HS_DOEPINT7 @ %1  4 lshift and 4 rshift ; 
: OTG_HS_DEVICE_B2BSTUP@ OTG_HS_DEVICE_OTG_HS_DOEPINT7 @ %1  6 lshift and 6 rshift ; 
: OTG_HS_DEVICE_NYET@ OTG_HS_DEVICE_OTG_HS_DOEPINT7 @ %1  14 lshift and 14 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 
 %xxxxxxx  0 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 7
 %1  19 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 1
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 bis!        \ OTG_HS_DEVICE_STUPCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 @ %1111111  0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 @ %1  19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_STUPCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ0 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 bis!        \ OTG_HS_DEVICE_RXDPID_STUPCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_RXDPID_STUPCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ1 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 bis!        \ OTG_HS_DEVICE_RXDPID_STUPCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_RXDPID_STUPCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ2 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 bis!        \ OTG_HS_DEVICE_RXDPID_STUPCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_RXDPID_STUPCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ3 @ %11  29 lshift and 29 rshift ; 

OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 (read-write)
$0 CONSTANT RESET_OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 
 % 0 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 bis!        \ OTG_HS_DEVICE_XFRSIZ	Bit 0	 Width 19
 % 19 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 bis!        \ OTG_HS_DEVICE_PKTCNT	Bit 19	 Width 10
 %xx  29 lshift OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 bis!        \ OTG_HS_DEVICE_RXDPID_STUPCNT	Bit 29	 Width 2
\ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 Register BitField Fetch Words  
: OTG_HS_DEVICE_XFRSIZ@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 @ % 0 lshift and 0 rshift ; 
: OTG_HS_DEVICE_PKTCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 @ % 19 lshift and 19 rshift ; 
: OTG_HS_DEVICE_RXDPID_STUPCNT@ OTG_HS_DEVICE_OTG_HS_DOEPTSIZ4 @ %11  29 lshift and 29 rshift ; 

                    
################################### OTG_HS_PWRCLK ###################################
OTG_HS_PWRCLK_OTG_HS_PCGCR (read-write)
$0 CONSTANT RESET_OTG_HS_PWRCLK_OTG_HS_PCGCR 
 %1  0 lshift OTG_HS_PWRCLK_OTG_HS_PCGCR bis!        \ OTG_HS_PWRCLK_STPPCLK	Bit 0	 Width 1
 %1  1 lshift OTG_HS_PWRCLK_OTG_HS_PCGCR bis!        \ OTG_HS_PWRCLK_GATEHCLK	Bit 1	 Width 1
 %1  4 lshift OTG_HS_PWRCLK_OTG_HS_PCGCR bis!        \ OTG_HS_PWRCLK_PHYSUSP	Bit 4	 Width 1
\ OTG_HS_PWRCLK_OTG_HS_PCGCR Register BitField Fetch Words  
: OTG_HS_PWRCLK_STPPCLK@ OTG_HS_PWRCLK_OTG_HS_PCGCR @ %1  0 lshift and 0 rshift ; 
: OTG_HS_PWRCLK_GATEHCLK@ OTG_HS_PWRCLK_OTG_HS_PCGCR @ %1  1 lshift and 1 rshift ; 
: OTG_HS_PWRCLK_PHYSUSP@ OTG_HS_PWRCLK_OTG_HS_PCGCR @ %1  4 lshift and 4 rshift ; 

                    
